{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { inject, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, Directive } from '@angular/core';\nimport { tuiCreateToken, tuiProvideOptions, tuiWithStyles } from '@taiga-ui/cdk/utils/miscellaneous';\nimport { toSignal } from '@angular/core/rxjs-interop';\nimport { ResizeObserverService } from '@ng-web-apis/resize-observer';\nimport { tuiZonefull, tuiWatch } from '@taiga-ui/cdk/observables';\nimport { tuiInjectElement } from '@taiga-ui/cdk/utils/dom';\nimport { BehaviorSubject, combineLatest, map, distinctUntilChanged, of, delay } from 'rxjs';\nconst _c0 = [\"tuiProgressBar\", \"\"];\nconst _c1 = [\"tuiProgressLabel\", \"\"];\nconst _c2 = [[[\"progress\"]], [[\"tui-progress-circle\"]], \"*\"];\nconst _c3 = [\"progress\", \"tui-progress-circle\", \"*\"];\nconst TUI_PROGRESS_DEFAULT_OPTIONS = {\n  color: null,\n  size: 'm'\n};\nconst TUI_PROGRESS_OPTIONS = tuiCreateToken(TUI_PROGRESS_DEFAULT_OPTIONS);\nfunction tuiProgressOptionsProvider(options) {\n  return tuiProvideOptions(TUI_PROGRESS_OPTIONS, options, TUI_PROGRESS_DEFAULT_OPTIONS);\n}\nclass TuiProgressBar {\n  constructor() {\n    this.options = inject(TUI_PROGRESS_OPTIONS);\n    this.color = this.options.color;\n    this.size = this.options.size;\n  }\n  static {\n    this.ɵfac = function TuiProgressBar_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiProgressBar)();\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: TuiProgressBar,\n      selectors: [[\"progress\", \"tuiProgressBar\", \"\"]],\n      hostVars: 3,\n      hostBindings: function TuiProgressBar_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"data-size\", ctx.size);\n          i0.ɵɵstyleProp(\"--tui-progress-color\", ctx.color);\n        }\n      },\n      inputs: {\n        color: \"color\",\n        size: \"size\"\n      },\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      attrs: _c0,\n      decls: 0,\n      vars: 0,\n      template: function TuiProgressBar_Template(rf, ctx) {},\n      styles: [\"@keyframes tuiIndeterminateAnimation{50%{background-position:left}}[tuiProgressBar]{-webkit-appearance:none;appearance:none;border:none;--t-height: .75rem;display:block;inline-size:100%;block-size:var(--t-height);color:var(--tui-background-accent-1);background:var(--tui-background-neutral-1);clip-path:inset(0 .5px round var(--tui-radius-m));overflow:hidden;border-radius:1rem;flex-shrink:0}[tuiProgressBar]::-webkit-progress-value{-webkit-transition:width var(--tui-duration) linear;transition:width var(--tui-duration) linear}[tuiProgressBar]::-webkit-progress-value{background:var(--tui-progress-color, currentColor);border-radius:inherit}[tuiProgressBar]::-moz-progress-bar{background:var(--tui-progress-color, currentColor);border-radius:inherit}[tuiProgressBar][data-size=xxs]{--t-height: .125rem}[tuiProgressBar][data-size=xs]{--t-height: .25rem}[tuiProgressBar][data-size=s]{--t-height: .5rem}[tuiProgressBar][data-size=l]{--t-height: 1rem}[tuiProgressBar][data-size=xl]{--t-height: 1.25rem}[tuiProgressBar][data-size=xxl]{--t-height: 1.5rem}[tuiProgressBar]:indeterminate{background:linear-gradient(to right,var(--tui-background-neutral-1) 0 45%,var(--tui-progress-color, currentColor) 45% 55%,var(--tui-background-neutral-1) 55% 100%) right;background-size:225%;animation:tuiIndeterminateAnimation 3s infinite ease-in-out}[tuiProgressBar]:indeterminate::-webkit-progress-value{background:transparent}[tuiProgressBar]:indeterminate::-moz-progress-bar{background:transparent}[tuiProgressBar]::-webkit-progress-inner-element{border-radius:inherit}[tuiProgressBar]::-webkit-progress-bar{background:transparent;border-radius:inherit}label[tuiProgressLabel] [tuiProgressBar]:not(:first-child){position:absolute;top:0;left:0;inline-size:100%;block-size:100%;background:transparent}\\n\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiProgressBar, [{\n    type: Component,\n    args: [{\n      standalone: true,\n      selector: 'progress[tuiProgressBar]',\n      template: '',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        '[style.--tui-progress-color]': 'color',\n        '[attr.data-size]': 'size'\n      },\n      styles: [\"@keyframes tuiIndeterminateAnimation{50%{background-position:left}}[tuiProgressBar]{-webkit-appearance:none;appearance:none;border:none;--t-height: .75rem;display:block;inline-size:100%;block-size:var(--t-height);color:var(--tui-background-accent-1);background:var(--tui-background-neutral-1);clip-path:inset(0 .5px round var(--tui-radius-m));overflow:hidden;border-radius:1rem;flex-shrink:0}[tuiProgressBar]::-webkit-progress-value{-webkit-transition:width var(--tui-duration) linear;transition:width var(--tui-duration) linear}[tuiProgressBar]::-webkit-progress-value{background:var(--tui-progress-color, currentColor);border-radius:inherit}[tuiProgressBar]::-moz-progress-bar{background:var(--tui-progress-color, currentColor);border-radius:inherit}[tuiProgressBar][data-size=xxs]{--t-height: .125rem}[tuiProgressBar][data-size=xs]{--t-height: .25rem}[tuiProgressBar][data-size=s]{--t-height: .5rem}[tuiProgressBar][data-size=l]{--t-height: 1rem}[tuiProgressBar][data-size=xl]{--t-height: 1.25rem}[tuiProgressBar][data-size=xxl]{--t-height: 1.5rem}[tuiProgressBar]:indeterminate{background:linear-gradient(to right,var(--tui-background-neutral-1) 0 45%,var(--tui-progress-color, currentColor) 45% 55%,var(--tui-background-neutral-1) 55% 100%) right;background-size:225%;animation:tuiIndeterminateAnimation 3s infinite ease-in-out}[tuiProgressBar]:indeterminate::-webkit-progress-value{background:transparent}[tuiProgressBar]:indeterminate::-moz-progress-bar{background:transparent}[tuiProgressBar]::-webkit-progress-inner-element{border-radius:inherit}[tuiProgressBar]::-webkit-progress-bar{background:transparent;border-radius:inherit}label[tuiProgressLabel] [tuiProgressBar]:not(:first-child){position:absolute;top:0;left:0;inline-size:100%;block-size:100%;background:transparent}\\n\"]\n    }]\n  }], null, {\n    color: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }]\n  });\n})();\nclass TuiProgressColorSegments {\n  constructor() {\n    this.colors$ = new BehaviorSubject([]);\n    this.el = tuiInjectElement();\n    this.color = toSignal(combineLatest([this.colors$, inject(ResizeObserverService, {\n      self: true\n    }).pipe(map(() => this.el.offsetWidth), distinctUntilChanged())]).pipe(map(([colors, width]) => {\n      const segmentWidth = Math.ceil(width / colors.length);\n      const colorsString = colors.reduce((acc, color, i) => `${acc}, ${color} ${i * segmentWidth}px ${(i + 1) * segmentWidth}px`, '');\n      return `linear-gradient(to right ${colorsString})`;\n    }), tuiZonefull(), tuiWatch()));\n  }\n  set colors(colors) {\n    this.colors$.next(colors);\n  }\n  static {\n    this.ɵfac = function TuiProgressColorSegments_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiProgressColorSegments)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: TuiProgressColorSegments,\n      selectors: [[\"progress\", \"tuiProgressBar\", \"\", \"tuiProgressColorSegments\", \"\"]],\n      hostVars: 2,\n      hostBindings: function TuiProgressColorSegments_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵstyleProp(\"--tui-progress-color\", ctx.color());\n        }\n      },\n      inputs: {\n        colors: [0, \"tuiProgressColorSegments\", \"colors\"]\n      },\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([ResizeObserverService])]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiProgressColorSegments, [{\n    type: Directive,\n    args: [{\n      standalone: true,\n      selector: 'progress[tuiProgressBar][tuiProgressColorSegments]',\n      providers: [ResizeObserverService],\n      host: {\n        '[style.--tui-progress-color]': 'color()'\n      }\n    }]\n  }], null, {\n    colors: [{\n      type: Input,\n      args: ['tuiProgressColorSegments']\n    }]\n  });\n})();\nclass TuiProgressCircle {\n  constructor() {\n    this.options = inject(TUI_PROGRESS_OPTIONS);\n    this.animationDelay = toSignal(of(true).pipe(delay(0)));\n    this.value = 0;\n    this.max = 1;\n    this.color = this.options.color;\n    this.size = this.options.size;\n  }\n  get progressRatio() {\n    const ratio = this.value / this.max;\n    return Number.isFinite(ratio) ? ratio : 0;\n  }\n  static {\n    this.ɵfac = function TuiProgressCircle_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiProgressCircle)();\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: TuiProgressCircle,\n      selectors: [[\"tui-progress-circle\"]],\n      hostVars: 5,\n      hostBindings: function TuiProgressCircle_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"data-size\", ctx.size);\n          i0.ɵɵstyleProp(\"--tui-progress-color\", ctx.color)(\"--t-progress-ratio\", ctx.progressRatio);\n        }\n      },\n      inputs: {\n        value: \"value\",\n        max: \"max\",\n        color: \"color\",\n        size: \"size\"\n      },\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 4,\n      vars: 4,\n      consts: [[1, \"t-hidden-progress\", 3, \"max\", \"value\"], [\"aria-hidden\", \"true\", \"height\", \"100%\", \"width\", \"100%\", 1, \"t-svg\"], [\"cx\", \"50%\", \"cy\", \"50%\", 1, \"t-track\"], [\"cx\", \"50%\", \"cy\", \"50%\", 1, \"t-progress\"]],\n      template: function TuiProgressCircle_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelement(0, \"progress\", 0);\n          i0.ɵɵnamespaceSVG();\n          i0.ɵɵelementStart(1, \"svg\", 1);\n          i0.ɵɵelement(2, \"circle\", 2)(3, \"circle\", 3);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"max\", ctx.max)(\"value\", ctx.value);\n          i0.ɵɵadvance(3);\n          i0.ɵɵclassProp(\"t-progress_filled\", ctx.animationDelay());\n        }\n      },\n      styles: [\"[_nghost-%COMP%]{--t-track-stroke: var(--tui-thickness, .375em);--t-progress-stroke: var(--tui-thickness, .375em);position:relative;display:block;color:var(--tui-background-accent-1);transform:rotate(-90deg);transform-origin:center;font-size:1rem;inline-size:var(--t-diameter);block-size:var(--t-diameter);border-radius:100%;-webkit-mask:radial-gradient(closest-side,transparent calc(100% - var(--t-track-stroke)),#000 calc(100% - var(--t-track-stroke) + .5px));mask:radial-gradient(closest-side,transparent calc(100% - var(--t-track-stroke)),#000 calc(100% - var(--t-track-stroke) + .5px))}[data-size=xxs][_nghost-%COMP%]{--t-diameter: 2em}[data-size=xs][_nghost-%COMP%]{--t-diameter: 2.5em}[data-size=s][_nghost-%COMP%]{--t-diameter: 3.5em}[data-size=m][_nghost-%COMP%]{--t-diameter: 4em}[data-size=l][_nghost-%COMP%]{--t-diameter: 5em}[data-size=xl][_nghost-%COMP%]{--t-diameter: 6em}[data-size=xxl][_nghost-%COMP%]{--t-diameter: 8em}.t-track[_ngcontent-%COMP%]{fill:transparent;stroke:var(--tui-background-neutral-1);stroke-width:var(--t-track-stroke);r:calc((var(--t-diameter) - var(--t-track-stroke)) / 2)}.t-progress[_ngcontent-%COMP%]{fill:transparent;stroke:var(--tui-progress-color, currentColor);stroke-linecap:round;stroke-width:var(--t-progress-stroke);stroke-dasharray:calc(2 * 3.14159265 * calc((var(--t-diameter) - var(--t-progress-stroke)) / 2));stroke-dashoffset:calc(2 * 3.14159265 * calc((var(--t-diameter) - var(--t-progress-stroke)) / 2));r:calc((var(--t-diameter) - var(--t-progress-stroke)) / 2)}.t-progress_filled[_ngcontent-%COMP%]{transition:stroke-dashoffset var(--tui-duration) linear;stroke-dashoffset:calc(calc(2 * 3.14159265 * calc((var(--t-diameter) - var(--t-progress-stroke)) / 2)) - var(--t-progress-ratio) * calc(2 * 3.14159265 * calc((var(--t-diameter) - var(--t-progress-stroke)) / 2)))}.t-hidden-progress[_ngcontent-%COMP%]{position:absolute;clip:rect(1px,1px,1px,1px);clip-path:inset(50%);block-size:1px;inline-size:1px;margin:-1px;overflow:hidden;padding:0}.t-svg[_ngcontent-%COMP%]{overflow:unset}\"],\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiProgressCircle, [{\n    type: Component,\n    args: [{\n      standalone: true,\n      selector: 'tui-progress-circle',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        '[attr.data-size]': 'size',\n        '[style.--tui-progress-color]': 'color',\n        '[style.--t-progress-ratio]': 'progressRatio'\n      },\n      template: \"<progress\\n    class=\\\"t-hidden-progress\\\"\\n    [max]=\\\"max\\\"\\n    [value]=\\\"value\\\"\\n></progress>\\n\\n<svg\\n    aria-hidden=\\\"true\\\"\\n    height=\\\"100%\\\"\\n    width=\\\"100%\\\"\\n    class=\\\"t-svg\\\"\\n>\\n    <circle\\n        cx=\\\"50%\\\"\\n        cy=\\\"50%\\\"\\n        class=\\\"t-track\\\"\\n    />\\n\\n    <circle\\n        cx=\\\"50%\\\"\\n        cy=\\\"50%\\\"\\n        class=\\\"t-progress\\\"\\n        [class.t-progress_filled]=\\\"animationDelay()\\\"\\n    />\\n</svg>\\n\",\n      styles: [\":host{--t-track-stroke: var(--tui-thickness, .375em);--t-progress-stroke: var(--tui-thickness, .375em);position:relative;display:block;color:var(--tui-background-accent-1);transform:rotate(-90deg);transform-origin:center;font-size:1rem;inline-size:var(--t-diameter);block-size:var(--t-diameter);border-radius:100%;-webkit-mask:radial-gradient(closest-side,transparent calc(100% - var(--t-track-stroke)),#000 calc(100% - var(--t-track-stroke) + .5px));mask:radial-gradient(closest-side,transparent calc(100% - var(--t-track-stroke)),#000 calc(100% - var(--t-track-stroke) + .5px))}:host[data-size=xxs]{--t-diameter: 2em}:host[data-size=xs]{--t-diameter: 2.5em}:host[data-size=s]{--t-diameter: 3.5em}:host[data-size=m]{--t-diameter: 4em}:host[data-size=l]{--t-diameter: 5em}:host[data-size=xl]{--t-diameter: 6em}:host[data-size=xxl]{--t-diameter: 8em}.t-track{fill:transparent;stroke:var(--tui-background-neutral-1);stroke-width:var(--t-track-stroke);r:calc((var(--t-diameter) - var(--t-track-stroke)) / 2)}.t-progress{fill:transparent;stroke:var(--tui-progress-color, currentColor);stroke-linecap:round;stroke-width:var(--t-progress-stroke);stroke-dasharray:calc(2 * 3.14159265 * calc((var(--t-diameter) - var(--t-progress-stroke)) / 2));stroke-dashoffset:calc(2 * 3.14159265 * calc((var(--t-diameter) - var(--t-progress-stroke)) / 2));r:calc((var(--t-diameter) - var(--t-progress-stroke)) / 2)}.t-progress_filled{transition:stroke-dashoffset var(--tui-duration) linear;stroke-dashoffset:calc(calc(2 * 3.14159265 * calc((var(--t-diameter) - var(--t-progress-stroke)) / 2)) - var(--t-progress-ratio) * calc(2 * 3.14159265 * calc((var(--t-diameter) - var(--t-progress-stroke)) / 2)))}.t-hidden-progress{position:absolute;clip:rect(1px,1px,1px,1px);clip-path:inset(50%);block-size:1px;inline-size:1px;margin:-1px;overflow:hidden;padding:0}.t-svg{overflow:unset}\\n\"]\n    }]\n  }], null, {\n    value: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    color: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }]\n  });\n})();\nclass TuiProgressLabel {\n  static {\n    this.ɵfac = function TuiProgressLabel_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiProgressLabel)();\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: TuiProgressLabel,\n      selectors: [[\"label\", \"tuiProgressLabel\", \"\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      attrs: _c1,\n      ngContentSelectors: _c3,\n      decls: 4,\n      vars: 0,\n      consts: [[1, \"t-label\"]],\n      template: function TuiProgressLabel_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef(_c2);\n          i0.ɵɵprojection(0);\n          i0.ɵɵprojection(1, 1);\n          i0.ɵɵelementStart(2, \"span\", 0);\n          i0.ɵɵprojection(3, 2);\n          i0.ɵɵelementEnd();\n        }\n      },\n      styles: [\"[_nghost-%COMP%]{position:relative;display:inline-block;color:var(--tui-text-primary)}.t-label[_ngcontent-%COMP%]{position:absolute;top:0;left:0;inline-size:100%;block-size:100%;display:flex;font:var(--tui-font-text-s);flex-direction:column;justify-content:center;align-items:center}\"],\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiProgressLabel, [{\n    type: Component,\n    args: [{\n      standalone: true,\n      selector: 'label[tuiProgressLabel]',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<ng-content select=\\\"progress\\\" />\\n<ng-content select=\\\"tui-progress-circle\\\" />\\n<span class=\\\"t-label\\\">\\n    <ng-content />\\n</span>\\n\",\n      styles: [\":host{position:relative;display:inline-block;color:var(--tui-text-primary)}.t-label{position:absolute;top:0;left:0;inline-size:100%;block-size:100%;display:flex;font:var(--tui-font-text-s);flex-direction:column;justify-content:center;align-items:center}\\n\"]\n    }]\n  }], null, null);\n})();\nclass TuiProgressSegmentedStyles {\n  static {\n    this.ɵfac = function TuiProgressSegmentedStyles_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiProgressSegmentedStyles)();\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: TuiProgressSegmentedStyles,\n      selectors: [[\"ng-component\"]],\n      hostAttrs: [1, \"tui-progress-segmented\"],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 0,\n      vars: 0,\n      template: function TuiProgressSegmentedStyles_Template(rf, ctx) {},\n      styles: [\"[tuiProgressBar]._segmented{--tui-segment-gap: .5rem;-webkit-mask-image:radial-gradient(circle closest-side at calc(var(--t-height) / 2) center,#999 0 99%,transparent calc(99% + .6px) 100%),radial-gradient(circle closest-side at calc(100% - calc(var(--t-height) / 2) - var(--tui-segment-gap)) center,#999 0 99%,transparent calc(99% + .6px) 100%),linear-gradient(to right,transparent 0 calc(var(--t-height) / 2),#999 calc(var(--t-height) / 2) calc(100% - calc(var(--t-height) / 2) - var(--tui-segment-gap)),transparent calc(100% - calc(var(--t-height) / 2) - var(--tui-segment-gap)));mask-image:radial-gradient(circle closest-side at calc(var(--t-height) / 2) center,#999 0 99%,transparent calc(99% + .6px) 100%),radial-gradient(circle closest-side at calc(100% - calc(var(--t-height) / 2) - var(--tui-segment-gap)) center,#999 0 99%,transparent calc(99% + .6px) 100%),linear-gradient(to right,transparent 0 calc(var(--t-height) / 2),#999 calc(var(--t-height) / 2) calc(100% - calc(var(--t-height) / 2) - var(--tui-segment-gap)),transparent calc(100% - calc(var(--t-height) / 2) - var(--tui-segment-gap)));-webkit-mask-size:calc(100% * var(--t-segment-width) + var(--tui-segment-gap) * var(--t-segment-width));mask-size:calc(100% * var(--t-segment-width) + var(--tui-segment-gap) * var(--t-segment-width))}\\n\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiProgressSegmentedStyles, [{\n    type: Component,\n    args: [{\n      standalone: true,\n      template: '',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        class: 'tui-progress-segmented'\n      },\n      styles: [\"[tuiProgressBar]._segmented{--tui-segment-gap: .5rem;-webkit-mask-image:radial-gradient(circle closest-side at calc(var(--t-height) / 2) center,#999 0 99%,transparent calc(99% + .6px) 100%),radial-gradient(circle closest-side at calc(100% - calc(var(--t-height) / 2) - var(--tui-segment-gap)) center,#999 0 99%,transparent calc(99% + .6px) 100%),linear-gradient(to right,transparent 0 calc(var(--t-height) / 2),#999 calc(var(--t-height) / 2) calc(100% - calc(var(--t-height) / 2) - var(--tui-segment-gap)),transparent calc(100% - calc(var(--t-height) / 2) - var(--tui-segment-gap)));mask-image:radial-gradient(circle closest-side at calc(var(--t-height) / 2) center,#999 0 99%,transparent calc(99% + .6px) 100%),radial-gradient(circle closest-side at calc(100% - calc(var(--t-height) / 2) - var(--tui-segment-gap)) center,#999 0 99%,transparent calc(99% + .6px) 100%),linear-gradient(to right,transparent 0 calc(var(--t-height) / 2),#999 calc(var(--t-height) / 2) calc(100% - calc(var(--t-height) / 2) - var(--tui-segment-gap)),transparent calc(100% - calc(var(--t-height) / 2) - var(--tui-segment-gap)));-webkit-mask-size:calc(100% * var(--t-segment-width) + var(--tui-segment-gap) * var(--t-segment-width));mask-size:calc(100% * var(--t-segment-width) + var(--tui-segment-gap) * var(--t-segment-width))}\\n\"]\n    }]\n  }], null, null);\n})();\nclass TuiProgressSegmented {\n  constructor() {\n    this.nothing = tuiWithStyles(TuiProgressSegmentedStyles);\n    this.segments = 1;\n  }\n  static {\n    this.ɵfac = function TuiProgressSegmented_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiProgressSegmented)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: TuiProgressSegmented,\n      selectors: [[\"\", \"tuiProgressBar\", \"\", \"segments\", \"\"]],\n      hostAttrs: [1, \"_segmented\"],\n      hostVars: 2,\n      hostBindings: function TuiProgressSegmented_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵstyleProp(\"--t-segment-width\", 1 / ctx.segments);\n        }\n      },\n      inputs: {\n        segments: \"segments\"\n      },\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiProgressSegmented, [{\n    type: Directive,\n    args: [{\n      standalone: true,\n      selector: '[tuiProgressBar][segments]',\n      host: {\n        class: '_segmented',\n        '[style.--t-segment-width]': '1 / segments'\n      }\n    }]\n  }], null, {\n    segments: [{\n      type: Input\n    }]\n  });\n})();\nconst TuiProgress = [TuiProgressBar, TuiProgressCircle, TuiProgressColorSegments, TuiProgressLabel, TuiProgressSegmented];\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TUI_PROGRESS_DEFAULT_OPTIONS, TUI_PROGRESS_OPTIONS, TuiProgress, TuiProgressBar, TuiProgressCircle, TuiProgressColorSegments, TuiProgressLabel, TuiProgressSegmented, tuiProgressOptionsProvider };","map":{"version":3,"names":["i0","inject","Component","ViewEncapsulation","ChangeDetectionStrategy","Input","Directive","tuiCreateToken","tuiProvideOptions","tuiWithStyles","toSignal","ResizeObserverService","tuiZonefull","tuiWatch","tuiInjectElement","BehaviorSubject","combineLatest","map","distinctUntilChanged","of","delay","_c0","_c1","_c2","_c3","TUI_PROGRESS_DEFAULT_OPTIONS","color","size","TUI_PROGRESS_OPTIONS","tuiProgressOptionsProvider","options","TuiProgressBar","constructor","ɵfac","TuiProgressBar_Factory","__ngFactoryType__","ɵcmp","ɵɵdefineComponent","type","selectors","hostVars","hostBindings","TuiProgressBar_HostBindings","rf","ctx","ɵɵattribute","ɵɵstyleProp","inputs","standalone","features","ɵɵStandaloneFeature","attrs","decls","vars","template","TuiProgressBar_Template","styles","encapsulation","changeDetection","ngDevMode","ɵsetClassMetadata","args","selector","None","OnPush","host","TuiProgressColorSegments","colors$","el","self","pipe","offsetWidth","colors","width","segmentWidth","Math","ceil","length","colorsString","reduce","acc","i","next","TuiProgressColorSegments_Factory","ɵdir","ɵɵdefineDirective","TuiProgressColorSegments_HostBindings","ɵɵProvidersFeature","providers","TuiProgressCircle","animationDelay","value","max","progressRatio","ratio","Number","isFinite","TuiProgressCircle_Factory","TuiProgressCircle_HostBindings","consts","TuiProgressCircle_Template","ɵɵelement","ɵɵnamespaceSVG","ɵɵelementStart","ɵɵelementEnd","ɵɵproperty","ɵɵadvance","ɵɵclassProp","TuiProgressLabel","TuiProgressLabel_Factory","ngContentSelectors","TuiProgressLabel_Template","ɵɵprojectionDef","ɵɵprojection","TuiProgressSegmentedStyles","TuiProgressSegmentedStyles_Factory","hostAttrs","TuiProgressSegmentedStyles_Template","class","TuiProgressSegmented","nothing","segments","TuiProgressSegmented_Factory","TuiProgressSegmented_HostBindings","TuiProgress"],"sources":["C:/Users/Asus-PC/Downloads/WebLibraryNew/WebLibrary/WebLibraryApp/Frontend/node_modules/@taiga-ui/kit/fesm2022/taiga-ui-kit-components-progress.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { inject, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, Directive } from '@angular/core';\nimport { tuiCreateToken, tuiProvideOptions, tuiWithStyles } from '@taiga-ui/cdk/utils/miscellaneous';\nimport { toSignal } from '@angular/core/rxjs-interop';\nimport { ResizeObserverService } from '@ng-web-apis/resize-observer';\nimport { tuiZonefull, tuiWatch } from '@taiga-ui/cdk/observables';\nimport { tuiInjectElement } from '@taiga-ui/cdk/utils/dom';\nimport { BehaviorSubject, combineLatest, map, distinctUntilChanged, of, delay } from 'rxjs';\n\nconst TUI_PROGRESS_DEFAULT_OPTIONS = {\n    color: null,\n    size: 'm',\n};\nconst TUI_PROGRESS_OPTIONS = tuiCreateToken(TUI_PROGRESS_DEFAULT_OPTIONS);\nfunction tuiProgressOptionsProvider(options) {\n    return tuiProvideOptions(TUI_PROGRESS_OPTIONS, options, TUI_PROGRESS_DEFAULT_OPTIONS);\n}\n\nclass TuiProgressBar {\n    constructor() {\n        this.options = inject(TUI_PROGRESS_OPTIONS);\n        this.color = this.options.color;\n        this.size = this.options.size;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiProgressBar, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiProgressBar, isStandalone: true, selector: \"progress[tuiProgressBar]\", inputs: { color: \"color\", size: \"size\" }, host: { properties: { \"style.--tui-progress-color\": \"color\", \"attr.data-size\": \"size\" } }, ngImport: i0, template: '', isInline: true, styles: [\"@keyframes tuiIndeterminateAnimation{50%{background-position:left}}[tuiProgressBar]{-webkit-appearance:none;appearance:none;border:none;--t-height: .75rem;display:block;inline-size:100%;block-size:var(--t-height);color:var(--tui-background-accent-1);background:var(--tui-background-neutral-1);clip-path:inset(0 .5px round var(--tui-radius-m));overflow:hidden;border-radius:1rem;flex-shrink:0}[tuiProgressBar]::-webkit-progress-value{-webkit-transition:width var(--tui-duration) linear;transition:width var(--tui-duration) linear}[tuiProgressBar]::-webkit-progress-value{background:var(--tui-progress-color, currentColor);border-radius:inherit}[tuiProgressBar]::-moz-progress-bar{background:var(--tui-progress-color, currentColor);border-radius:inherit}[tuiProgressBar][data-size=xxs]{--t-height: .125rem}[tuiProgressBar][data-size=xs]{--t-height: .25rem}[tuiProgressBar][data-size=s]{--t-height: .5rem}[tuiProgressBar][data-size=l]{--t-height: 1rem}[tuiProgressBar][data-size=xl]{--t-height: 1.25rem}[tuiProgressBar][data-size=xxl]{--t-height: 1.5rem}[tuiProgressBar]:indeterminate{background:linear-gradient(to right,var(--tui-background-neutral-1) 0 45%,var(--tui-progress-color, currentColor) 45% 55%,var(--tui-background-neutral-1) 55% 100%) right;background-size:225%;animation:tuiIndeterminateAnimation 3s infinite ease-in-out}[tuiProgressBar]:indeterminate::-webkit-progress-value{background:transparent}[tuiProgressBar]:indeterminate::-moz-progress-bar{background:transparent}[tuiProgressBar]::-webkit-progress-inner-element{border-radius:inherit}[tuiProgressBar]::-webkit-progress-bar{background:transparent;border-radius:inherit}label[tuiProgressLabel] [tuiProgressBar]:not(:first-child){position:absolute;top:0;left:0;inline-size:100%;block-size:100%;background:transparent}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiProgressBar, decorators: [{\n            type: Component,\n            args: [{ standalone: true, selector: 'progress[tuiProgressBar]', template: '', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: {\n                        '[style.--tui-progress-color]': 'color',\n                        '[attr.data-size]': 'size',\n                    }, styles: [\"@keyframes tuiIndeterminateAnimation{50%{background-position:left}}[tuiProgressBar]{-webkit-appearance:none;appearance:none;border:none;--t-height: .75rem;display:block;inline-size:100%;block-size:var(--t-height);color:var(--tui-background-accent-1);background:var(--tui-background-neutral-1);clip-path:inset(0 .5px round var(--tui-radius-m));overflow:hidden;border-radius:1rem;flex-shrink:0}[tuiProgressBar]::-webkit-progress-value{-webkit-transition:width var(--tui-duration) linear;transition:width var(--tui-duration) linear}[tuiProgressBar]::-webkit-progress-value{background:var(--tui-progress-color, currentColor);border-radius:inherit}[tuiProgressBar]::-moz-progress-bar{background:var(--tui-progress-color, currentColor);border-radius:inherit}[tuiProgressBar][data-size=xxs]{--t-height: .125rem}[tuiProgressBar][data-size=xs]{--t-height: .25rem}[tuiProgressBar][data-size=s]{--t-height: .5rem}[tuiProgressBar][data-size=l]{--t-height: 1rem}[tuiProgressBar][data-size=xl]{--t-height: 1.25rem}[tuiProgressBar][data-size=xxl]{--t-height: 1.5rem}[tuiProgressBar]:indeterminate{background:linear-gradient(to right,var(--tui-background-neutral-1) 0 45%,var(--tui-progress-color, currentColor) 45% 55%,var(--tui-background-neutral-1) 55% 100%) right;background-size:225%;animation:tuiIndeterminateAnimation 3s infinite ease-in-out}[tuiProgressBar]:indeterminate::-webkit-progress-value{background:transparent}[tuiProgressBar]:indeterminate::-moz-progress-bar{background:transparent}[tuiProgressBar]::-webkit-progress-inner-element{border-radius:inherit}[tuiProgressBar]::-webkit-progress-bar{background:transparent;border-radius:inherit}label[tuiProgressLabel] [tuiProgressBar]:not(:first-child){position:absolute;top:0;left:0;inline-size:100%;block-size:100%;background:transparent}\\n\"] }]\n        }], propDecorators: { color: [{\n                type: Input\n            }], size: [{\n                type: Input\n            }] } });\n\nclass TuiProgressColorSegments {\n    constructor() {\n        this.colors$ = new BehaviorSubject([]);\n        this.el = tuiInjectElement();\n        this.color = toSignal(combineLatest([\n            this.colors$,\n            inject(ResizeObserverService, { self: true }).pipe(map(() => this.el.offsetWidth), distinctUntilChanged()),\n        ]).pipe(map(([colors, width]) => {\n            const segmentWidth = Math.ceil(width / colors.length);\n            const colorsString = colors.reduce((acc, color, i) => `${acc}, ${color} ${i * segmentWidth}px ${(i + 1) * segmentWidth}px`, '');\n            return `linear-gradient(to right ${colorsString})`;\n        }), tuiZonefull(), tuiWatch()));\n    }\n    set colors(colors) {\n        this.colors$.next(colors);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiProgressColorSegments, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiProgressColorSegments, isStandalone: true, selector: \"progress[tuiProgressBar][tuiProgressColorSegments]\", inputs: { colors: [\"tuiProgressColorSegments\", \"colors\"] }, host: { properties: { \"style.--tui-progress-color\": \"color()\" } }, providers: [ResizeObserverService], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiProgressColorSegments, decorators: [{\n            type: Directive,\n            args: [{\n                    standalone: true,\n                    selector: 'progress[tuiProgressBar][tuiProgressColorSegments]',\n                    providers: [ResizeObserverService],\n                    host: { '[style.--tui-progress-color]': 'color()' },\n                }]\n        }], propDecorators: { colors: [{\n                type: Input,\n                args: ['tuiProgressColorSegments']\n            }] } });\n\nclass TuiProgressCircle {\n    constructor() {\n        this.options = inject(TUI_PROGRESS_OPTIONS);\n        this.animationDelay = toSignal(of(true).pipe(delay(0)));\n        this.value = 0;\n        this.max = 1;\n        this.color = this.options.color;\n        this.size = this.options.size;\n    }\n    get progressRatio() {\n        const ratio = this.value / this.max;\n        return Number.isFinite(ratio) ? ratio : 0;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiProgressCircle, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiProgressCircle, isStandalone: true, selector: \"tui-progress-circle\", inputs: { value: \"value\", max: \"max\", color: \"color\", size: \"size\" }, host: { properties: { \"attr.data-size\": \"size\", \"style.--tui-progress-color\": \"color\", \"style.--t-progress-ratio\": \"progressRatio\" } }, ngImport: i0, template: \"<progress\\n    class=\\\"t-hidden-progress\\\"\\n    [max]=\\\"max\\\"\\n    [value]=\\\"value\\\"\\n></progress>\\n\\n<svg\\n    aria-hidden=\\\"true\\\"\\n    height=\\\"100%\\\"\\n    width=\\\"100%\\\"\\n    class=\\\"t-svg\\\"\\n>\\n    <circle\\n        cx=\\\"50%\\\"\\n        cy=\\\"50%\\\"\\n        class=\\\"t-track\\\"\\n    />\\n\\n    <circle\\n        cx=\\\"50%\\\"\\n        cy=\\\"50%\\\"\\n        class=\\\"t-progress\\\"\\n        [class.t-progress_filled]=\\\"animationDelay()\\\"\\n    />\\n</svg>\\n\", styles: [\":host{--t-track-stroke: var(--tui-thickness, .375em);--t-progress-stroke: var(--tui-thickness, .375em);position:relative;display:block;color:var(--tui-background-accent-1);transform:rotate(-90deg);transform-origin:center;font-size:1rem;inline-size:var(--t-diameter);block-size:var(--t-diameter);border-radius:100%;-webkit-mask:radial-gradient(closest-side,transparent calc(100% - var(--t-track-stroke)),#000 calc(100% - var(--t-track-stroke) + .5px));mask:radial-gradient(closest-side,transparent calc(100% - var(--t-track-stroke)),#000 calc(100% - var(--t-track-stroke) + .5px))}:host[data-size=xxs]{--t-diameter: 2em}:host[data-size=xs]{--t-diameter: 2.5em}:host[data-size=s]{--t-diameter: 3.5em}:host[data-size=m]{--t-diameter: 4em}:host[data-size=l]{--t-diameter: 5em}:host[data-size=xl]{--t-diameter: 6em}:host[data-size=xxl]{--t-diameter: 8em}.t-track{fill:transparent;stroke:var(--tui-background-neutral-1);stroke-width:var(--t-track-stroke);r:calc((var(--t-diameter) - var(--t-track-stroke)) / 2)}.t-progress{fill:transparent;stroke:var(--tui-progress-color, currentColor);stroke-linecap:round;stroke-width:var(--t-progress-stroke);stroke-dasharray:calc(2 * 3.14159265 * calc((var(--t-diameter) - var(--t-progress-stroke)) / 2));stroke-dashoffset:calc(2 * 3.14159265 * calc((var(--t-diameter) - var(--t-progress-stroke)) / 2));r:calc((var(--t-diameter) - var(--t-progress-stroke)) / 2)}.t-progress_filled{transition:stroke-dashoffset var(--tui-duration) linear;stroke-dashoffset:calc(calc(2 * 3.14159265 * calc((var(--t-diameter) - var(--t-progress-stroke)) / 2)) - var(--t-progress-ratio) * calc(2 * 3.14159265 * calc((var(--t-diameter) - var(--t-progress-stroke)) / 2)))}.t-hidden-progress{position:absolute;clip:rect(1px,1px,1px,1px);clip-path:inset(50%);block-size:1px;inline-size:1px;margin:-1px;overflow:hidden;padding:0}.t-svg{overflow:unset}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiProgressCircle, decorators: [{\n            type: Component,\n            args: [{ standalone: true, selector: 'tui-progress-circle', changeDetection: ChangeDetectionStrategy.OnPush, host: {\n                        '[attr.data-size]': 'size',\n                        '[style.--tui-progress-color]': 'color',\n                        '[style.--t-progress-ratio]': 'progressRatio',\n                    }, template: \"<progress\\n    class=\\\"t-hidden-progress\\\"\\n    [max]=\\\"max\\\"\\n    [value]=\\\"value\\\"\\n></progress>\\n\\n<svg\\n    aria-hidden=\\\"true\\\"\\n    height=\\\"100%\\\"\\n    width=\\\"100%\\\"\\n    class=\\\"t-svg\\\"\\n>\\n    <circle\\n        cx=\\\"50%\\\"\\n        cy=\\\"50%\\\"\\n        class=\\\"t-track\\\"\\n    />\\n\\n    <circle\\n        cx=\\\"50%\\\"\\n        cy=\\\"50%\\\"\\n        class=\\\"t-progress\\\"\\n        [class.t-progress_filled]=\\\"animationDelay()\\\"\\n    />\\n</svg>\\n\", styles: [\":host{--t-track-stroke: var(--tui-thickness, .375em);--t-progress-stroke: var(--tui-thickness, .375em);position:relative;display:block;color:var(--tui-background-accent-1);transform:rotate(-90deg);transform-origin:center;font-size:1rem;inline-size:var(--t-diameter);block-size:var(--t-diameter);border-radius:100%;-webkit-mask:radial-gradient(closest-side,transparent calc(100% - var(--t-track-stroke)),#000 calc(100% - var(--t-track-stroke) + .5px));mask:radial-gradient(closest-side,transparent calc(100% - var(--t-track-stroke)),#000 calc(100% - var(--t-track-stroke) + .5px))}:host[data-size=xxs]{--t-diameter: 2em}:host[data-size=xs]{--t-diameter: 2.5em}:host[data-size=s]{--t-diameter: 3.5em}:host[data-size=m]{--t-diameter: 4em}:host[data-size=l]{--t-diameter: 5em}:host[data-size=xl]{--t-diameter: 6em}:host[data-size=xxl]{--t-diameter: 8em}.t-track{fill:transparent;stroke:var(--tui-background-neutral-1);stroke-width:var(--t-track-stroke);r:calc((var(--t-diameter) - var(--t-track-stroke)) / 2)}.t-progress{fill:transparent;stroke:var(--tui-progress-color, currentColor);stroke-linecap:round;stroke-width:var(--t-progress-stroke);stroke-dasharray:calc(2 * 3.14159265 * calc((var(--t-diameter) - var(--t-progress-stroke)) / 2));stroke-dashoffset:calc(2 * 3.14159265 * calc((var(--t-diameter) - var(--t-progress-stroke)) / 2));r:calc((var(--t-diameter) - var(--t-progress-stroke)) / 2)}.t-progress_filled{transition:stroke-dashoffset var(--tui-duration) linear;stroke-dashoffset:calc(calc(2 * 3.14159265 * calc((var(--t-diameter) - var(--t-progress-stroke)) / 2)) - var(--t-progress-ratio) * calc(2 * 3.14159265 * calc((var(--t-diameter) - var(--t-progress-stroke)) / 2)))}.t-hidden-progress{position:absolute;clip:rect(1px,1px,1px,1px);clip-path:inset(50%);block-size:1px;inline-size:1px;margin:-1px;overflow:hidden;padding:0}.t-svg{overflow:unset}\\n\"] }]\n        }], propDecorators: { value: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], size: [{\n                type: Input\n            }] } });\n\nclass TuiProgressLabel {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiProgressLabel, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiProgressLabel, isStandalone: true, selector: \"label[tuiProgressLabel]\", ngImport: i0, template: \"<ng-content select=\\\"progress\\\" />\\n<ng-content select=\\\"tui-progress-circle\\\" />\\n<span class=\\\"t-label\\\">\\n    <ng-content />\\n</span>\\n\", styles: [\":host{position:relative;display:inline-block;color:var(--tui-text-primary)}.t-label{position:absolute;top:0;left:0;inline-size:100%;block-size:100%;display:flex;font:var(--tui-font-text-s);flex-direction:column;justify-content:center;align-items:center}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiProgressLabel, decorators: [{\n            type: Component,\n            args: [{ standalone: true, selector: 'label[tuiProgressLabel]', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-content select=\\\"progress\\\" />\\n<ng-content select=\\\"tui-progress-circle\\\" />\\n<span class=\\\"t-label\\\">\\n    <ng-content />\\n</span>\\n\", styles: [\":host{position:relative;display:inline-block;color:var(--tui-text-primary)}.t-label{position:absolute;top:0;left:0;inline-size:100%;block-size:100%;display:flex;font:var(--tui-font-text-s);flex-direction:column;justify-content:center;align-items:center}\\n\"] }]\n        }] });\n\nclass TuiProgressSegmentedStyles {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiProgressSegmentedStyles, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiProgressSegmentedStyles, isStandalone: true, selector: \"ng-component\", host: { classAttribute: \"tui-progress-segmented\" }, ngImport: i0, template: '', isInline: true, styles: [\"[tuiProgressBar]._segmented{--tui-segment-gap: .5rem;-webkit-mask-image:radial-gradient(circle closest-side at calc(var(--t-height) / 2) center,#999 0 99%,transparent calc(99% + .6px) 100%),radial-gradient(circle closest-side at calc(100% - calc(var(--t-height) / 2) - var(--tui-segment-gap)) center,#999 0 99%,transparent calc(99% + .6px) 100%),linear-gradient(to right,transparent 0 calc(var(--t-height) / 2),#999 calc(var(--t-height) / 2) calc(100% - calc(var(--t-height) / 2) - var(--tui-segment-gap)),transparent calc(100% - calc(var(--t-height) / 2) - var(--tui-segment-gap)));mask-image:radial-gradient(circle closest-side at calc(var(--t-height) / 2) center,#999 0 99%,transparent calc(99% + .6px) 100%),radial-gradient(circle closest-side at calc(100% - calc(var(--t-height) / 2) - var(--tui-segment-gap)) center,#999 0 99%,transparent calc(99% + .6px) 100%),linear-gradient(to right,transparent 0 calc(var(--t-height) / 2),#999 calc(var(--t-height) / 2) calc(100% - calc(var(--t-height) / 2) - var(--tui-segment-gap)),transparent calc(100% - calc(var(--t-height) / 2) - var(--tui-segment-gap)));-webkit-mask-size:calc(100% * var(--t-segment-width) + var(--tui-segment-gap) * var(--t-segment-width));mask-size:calc(100% * var(--t-segment-width) + var(--tui-segment-gap) * var(--t-segment-width))}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiProgressSegmentedStyles, decorators: [{\n            type: Component,\n            args: [{ standalone: true, template: '', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: { class: 'tui-progress-segmented' }, styles: [\"[tuiProgressBar]._segmented{--tui-segment-gap: .5rem;-webkit-mask-image:radial-gradient(circle closest-side at calc(var(--t-height) / 2) center,#999 0 99%,transparent calc(99% + .6px) 100%),radial-gradient(circle closest-side at calc(100% - calc(var(--t-height) / 2) - var(--tui-segment-gap)) center,#999 0 99%,transparent calc(99% + .6px) 100%),linear-gradient(to right,transparent 0 calc(var(--t-height) / 2),#999 calc(var(--t-height) / 2) calc(100% - calc(var(--t-height) / 2) - var(--tui-segment-gap)),transparent calc(100% - calc(var(--t-height) / 2) - var(--tui-segment-gap)));mask-image:radial-gradient(circle closest-side at calc(var(--t-height) / 2) center,#999 0 99%,transparent calc(99% + .6px) 100%),radial-gradient(circle closest-side at calc(100% - calc(var(--t-height) / 2) - var(--tui-segment-gap)) center,#999 0 99%,transparent calc(99% + .6px) 100%),linear-gradient(to right,transparent 0 calc(var(--t-height) / 2),#999 calc(var(--t-height) / 2) calc(100% - calc(var(--t-height) / 2) - var(--tui-segment-gap)),transparent calc(100% - calc(var(--t-height) / 2) - var(--tui-segment-gap)));-webkit-mask-size:calc(100% * var(--t-segment-width) + var(--tui-segment-gap) * var(--t-segment-width));mask-size:calc(100% * var(--t-segment-width) + var(--tui-segment-gap) * var(--t-segment-width))}\\n\"] }]\n        }] });\nclass TuiProgressSegmented {\n    constructor() {\n        this.nothing = tuiWithStyles(TuiProgressSegmentedStyles);\n        this.segments = 1;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiProgressSegmented, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiProgressSegmented, isStandalone: true, selector: \"[tuiProgressBar][segments]\", inputs: { segments: \"segments\" }, host: { properties: { \"style.--t-segment-width\": \"1 / segments\" }, classAttribute: \"_segmented\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiProgressSegmented, decorators: [{\n            type: Directive,\n            args: [{\n                    standalone: true,\n                    selector: '[tuiProgressBar][segments]',\n                    host: {\n                        class: '_segmented',\n                        '[style.--t-segment-width]': '1 / segments',\n                    },\n                }]\n        }], propDecorators: { segments: [{\n                type: Input\n            }] } });\n\nconst TuiProgress = [\n    TuiProgressBar,\n    TuiProgressCircle,\n    TuiProgressColorSegments,\n    TuiProgressLabel,\n    TuiProgressSegmented,\n];\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TUI_PROGRESS_DEFAULT_OPTIONS, TUI_PROGRESS_OPTIONS, TuiProgress, TuiProgressBar, TuiProgressCircle, TuiProgressColorSegments, TuiProgressLabel, TuiProgressSegmented, tuiProgressOptionsProvider };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}