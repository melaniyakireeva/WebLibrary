{"ast":null,"code":"import { AsyncPipe, NgIf } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { inject, Injectable, Directive, Input, Component, ChangeDetectionStrategy, ElementRef, DestroyRef } from '@angular/core';\nimport { WA_ANIMATION_FRAME } from '@ng-web-apis/common';\nimport { tuiTypedFromEvent, tuiZonefree, tuiZonefreeScheduler, tuiScrollFrom, tuiZoneOptimized } from '@taiga-ui/cdk/observables';\nimport { tuiFadeIn } from '@taiga-ui/core/animations';\nimport { TUI_SCROLL_REF, TUI_ANIMATIONS_SPEED } from '@taiga-ui/core/tokens';\nimport { tuiToAnimationOptions } from '@taiga-ui/core/utils';\nimport { Observable, merge, filter, map, switchMap, takeUntil, throttleTime, startWith, distinctUntilChanged, timer } from 'rxjs';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { tuiInjectElement, tuiGetElementOffset } from '@taiga-ui/cdk/utils/dom';\nimport { tuiCreateOptions } from '@taiga-ui/cdk/utils/di';\nimport { TUI_IS_IOS } from '@taiga-ui/cdk/tokens';\nimport { tuiProvide } from '@taiga-ui/cdk/utils/miscellaneous';\nfunction TuiScrollControls_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction TuiScrollControls_ng_template_1_ng_container_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵlistener(\"mousedown.capture.prevent\", function TuiScrollControls_ng_template_1_ng_container_0_div_1_Template_div_mousedown_capture_prevent_0_listener() {\n      i0.ɵɵrestoreView(_r1);\n      return i0.ɵɵresetView(0);\n    });\n    i0.ɵɵelement(1, \"div\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const bars_r2 = i0.ɵɵnextContext().ngIf;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassProp(\"t-bar_has-horizontal\", bars_r2[1]);\n    i0.ɵɵproperty(\"@tuiFadeIn\", ctx_r2.options);\n  }\n}\nfunction TuiScrollControls_ng_template_1_ng_container_0_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵlistener(\"mousedown.capture.prevent\", function TuiScrollControls_ng_template_1_ng_container_0_div_2_Template_div_mousedown_capture_prevent_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      return i0.ɵɵresetView(0);\n    });\n    i0.ɵɵelement(1, \"div\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const bars_r2 = i0.ɵɵnextContext().ngIf;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassProp(\"t-bar_has-vertical\", bars_r2[0]);\n    i0.ɵɵproperty(\"@tuiFadeIn\", ctx_r2.options);\n  }\n}\nfunction TuiScrollControls_ng_template_1_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TuiScrollControls_ng_template_1_ng_container_0_div_1_Template, 2, 3, \"div\", 3)(2, TuiScrollControls_ng_template_1_ng_container_0_div_2_Template, 2, 3, \"div\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const bars_r2 = ctx.ngIf;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", bars_r2[0]);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", bars_r2[1]);\n  }\n}\nfunction TuiScrollControls_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TuiScrollControls_ng_template_1_ng_container_0_Template, 3, 2, \"ng-container\", 2);\n    i0.ɵɵpipe(1, \"async\");\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(1, 1, ctx_r2.refresh$));\n  }\n}\nconst _c0 = [\"*\"];\nfunction TuiScrollbar_tui_scroll_controls_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tui-scroll-controls\", 2);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"t-hover-mode\", ctx_r0.options.mode === \"hover\");\n  }\n}\nclass TuiScrollbarService extends Observable {\n  constructor() {\n    super(subscriber => this.scroll$.subscribe(subscriber));\n    this.el = tuiInjectElement();\n    this.element = inject(TUI_SCROLL_REF).nativeElement;\n    this.scroll$ = merge(tuiTypedFromEvent(this.el.parentElement, 'mousedown').pipe(filter(({\n      target\n    }) => target !== this.el), map(event => this.getScrolled(event, 0.5, 0.5))), tuiTypedFromEvent(this.el, 'mousedown').pipe(tuiZonefree(), switchMap(event => {\n      const {\n        ownerDocument\n      } = this.el;\n      const rect = this.el.getBoundingClientRect();\n      const vertical = getOffsetVertical(event, rect);\n      const horizontal = getOffsetHorizontal(event, rect);\n      return tuiTypedFromEvent(ownerDocument, 'mousemove').pipe(map(event => this.getScrolled(event, vertical, horizontal)), takeUntil(tuiTypedFromEvent(ownerDocument, 'mouseup')));\n    })));\n  }\n  getScrolled({\n    clientY,\n    clientX\n  }, offsetY, offsetX) {\n    const {\n      offsetHeight,\n      offsetWidth\n    } = this.el;\n    const {\n      top,\n      left,\n      width,\n      height\n    } = this.el.parentElement.getBoundingClientRect();\n    const maxTop = this.element.scrollHeight - height;\n    const maxLeft = this.element.scrollWidth - width;\n    const scrolledTop = (clientY - top - offsetHeight * offsetY) / (height - offsetHeight);\n    const scrolledLeft = (clientX - left - offsetWidth * offsetX) / (width - offsetWidth);\n    return [maxTop * scrolledTop, maxLeft * scrolledLeft];\n  }\n  static {\n    this.ɵfac = function TuiScrollbarService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiScrollbarService)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: TuiScrollbarService,\n      factory: TuiScrollbarService.ɵfac\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiScrollbarService, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\nfunction getOffsetVertical({\n  clientY\n}, {\n  top,\n  height\n}) {\n  return (clientY - top) / height;\n}\nfunction getOffsetHorizontal({\n  clientX\n}, {\n  left,\n  width\n}) {\n  return (clientX - left) / width;\n}\nconst MIN_WIDTH = 24;\nclass TuiScrollbarDirective {\n  constructor() {\n    this.el = inject(TUI_SCROLL_REF).nativeElement;\n    this.style = tuiInjectElement().style;\n    this.scrollSub = inject(TuiScrollbarService).pipe(takeUntilDestroyed()).subscribe(([top, left]) => {\n      this.el.style.scrollBehavior = 'auto';\n      if (this.tuiScrollbar === 'horizontal') {\n        this.el.scrollLeft = left;\n      } else {\n        this.el.scrollTop = top;\n      }\n      this.el.style.scrollBehavior = '';\n    });\n    this.styleSub = merge(inject(WA_ANIMATION_FRAME).pipe(throttleTime(100, tuiZonefreeScheduler())), tuiScrollFrom(this.el)).pipe(tuiZonefree(), takeUntilDestroyed()).subscribe(() => {\n      const dimension = {\n        scrollTop: this.el.scrollTop,\n        scrollHeight: this.el.scrollHeight,\n        clientHeight: this.el.clientHeight,\n        scrollLeft: this.el.scrollLeft,\n        scrollWidth: this.el.scrollWidth,\n        clientWidth: this.el.clientWidth\n      };\n      const thumb = `${this.getThumb(dimension) * 100}%`;\n      const view = `${this.getView(dimension) * 100}%`;\n      if (this.tuiScrollbar === 'vertical') {\n        this.style.top = thumb;\n        this.style.height = view;\n      } else {\n        this.style.left = thumb;\n        this.style.width = view;\n      }\n    });\n    this.tuiScrollbar = 'vertical';\n  }\n  getScrolled(dimension) {\n    return this.tuiScrollbar === 'vertical' ? dimension.scrollTop / (dimension.scrollHeight - dimension.clientHeight) : dimension.scrollLeft / (dimension.scrollWidth - dimension.clientWidth);\n  }\n  getCompensation(dimension) {\n    if (dimension.clientHeight * dimension.clientHeight / dimension.scrollHeight > MIN_WIDTH && this.tuiScrollbar === 'vertical' || dimension.clientWidth * dimension.clientWidth / dimension.scrollWidth > MIN_WIDTH && this.tuiScrollbar === 'horizontal') {\n      return 0;\n    }\n    return this.tuiScrollbar === 'vertical' ? MIN_WIDTH / dimension.clientHeight : MIN_WIDTH / dimension.clientWidth;\n  }\n  getThumb(dimension) {\n    const compensation = this.getCompensation(dimension) || this.getView(dimension);\n    return this.getScrolled(dimension) * (1 - compensation);\n  }\n  getView(dimension) {\n    return this.tuiScrollbar === 'vertical' ? Math.ceil(dimension.clientHeight / dimension.scrollHeight * 100) / 100 : Math.ceil(dimension.clientWidth / dimension.scrollWidth * 100) / 100;\n  }\n  static {\n    this.ɵfac = function TuiScrollbarDirective_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiScrollbarDirective)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: TuiScrollbarDirective,\n      selectors: [[\"\", \"tuiScrollbar\", \"\"]],\n      inputs: {\n        tuiScrollbar: \"tuiScrollbar\"\n      },\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([TuiScrollbarService])]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiScrollbarDirective, [{\n    type: Directive,\n    args: [{\n      standalone: true,\n      selector: '[tuiScrollbar]',\n      providers: [TuiScrollbarService]\n    }]\n  }], null, {\n    tuiScrollbar: [{\n      type: Input\n    }]\n  });\n})();\nconst TUI_DEFAULT_SCROLLBAR_OPTIONS = {\n  mode: 'always'\n};\nconst [TUI_SCROLLBAR_OPTIONS, tuiScrollbarOptionsProvider] = tuiCreateOptions(TUI_DEFAULT_SCROLLBAR_OPTIONS);\nclass TuiScrollControls {\n  constructor() {\n    this.scrollRef = inject(TUI_SCROLL_REF).nativeElement;\n    this.nativeScrollbar = inject(TUI_SCROLLBAR_OPTIONS).mode === 'native';\n    this.options = tuiToAnimationOptions(inject(TUI_ANIMATIONS_SPEED));\n    this.refresh$ = inject(WA_ANIMATION_FRAME).pipe(throttleTime(300, tuiZonefreeScheduler()), map(() => this.scrollbars), startWith([false, false]), distinctUntilChanged((a, b) => a[0] === b[0] && a[1] === b[1]), tuiZoneOptimized());\n  }\n  get scrollbars() {\n    const {\n      clientHeight,\n      scrollHeight,\n      clientWidth,\n      scrollWidth\n    } = this.scrollRef;\n    return [Math.ceil(clientHeight / scrollHeight * 100) < 100, Math.ceil(clientWidth / scrollWidth * 100) < 100];\n  }\n  static {\n    this.ɵfac = function TuiScrollControls_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiScrollControls)();\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: TuiScrollControls,\n      selectors: [[\"tui-scroll-controls\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 3,\n      vars: 2,\n      consts: [[\"custom\", \"\"], [4, \"ngIf\", \"ngIfElse\"], [4, \"ngIf\"], [\"class\", \"t-bar t-bar_vertical\", 3, \"t-bar_has-horizontal\", \"mousedown.capture.prevent\", 4, \"ngIf\"], [\"class\", \"t-bar t-bar_horizontal\", 3, \"t-bar_has-vertical\", \"mousedown.capture.prevent\", 4, \"ngIf\"], [1, \"t-bar\", \"t-bar_vertical\", 3, \"mousedown.capture.prevent\"], [\"tuiScrollbar\", \"vertical\", 1, \"t-thumb\"], [1, \"t-bar\", \"t-bar_horizontal\", 3, \"mousedown.capture.prevent\"], [\"tuiScrollbar\", \"horizontal\", 1, \"t-thumb\"]],\n      template: function TuiScrollControls_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, TuiScrollControls_ng_container_0_Template, 1, 0, \"ng-container\", 1)(1, TuiScrollControls_ng_template_1_Template, 2, 3, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n        }\n        if (rf & 2) {\n          const custom_r5 = i0.ɵɵreference(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.nativeScrollbar)(\"ngIfElse\", custom_r5);\n        }\n      },\n      dependencies: [AsyncPipe, NgIf, TuiScrollbarDirective],\n      styles: [\"[_nghost-%COMP%]{position:sticky;top:0;left:0;z-index:1;min-inline-size:calc(100% - 1px);min-block-size:calc(100% - 1px);max-inline-size:calc(100% - 1px);max-block-size:calc(100% - 1px);float:inline-start;margin-inline-end:calc(-100% + 1px);pointer-events:none}.t-bar[_ngcontent-%COMP%]{position:absolute;right:0;bottom:0;pointer-events:auto}.t-bar_vertical[_ngcontent-%COMP%]{top:0;inline-size:.875rem}.t-bar_horizontal[_ngcontent-%COMP%]{left:0;block-size:.875rem}.t-bar_has-horizontal[_ngcontent-%COMP%]{bottom:.5rem}.t-bar_has-vertical[_ngcontent-%COMP%]{right:.5rem}.t-thumb[_ngcontent-%COMP%]{transition-property:all;transition-duration:.15s;transition-timing-function:ease-in-out;position:absolute;border-radius:6.25rem;border:.25rem solid transparent;cursor:pointer;pointer-events:auto;-webkit-user-select:none;user-select:none;background:currentColor;background-clip:content-box;box-sizing:border-box;transition-property:width,height,opacity;opacity:.2}.t-thumb[_ngcontent-%COMP%]:hover{opacity:.24}.t-thumb[_ngcontent-%COMP%]:active{opacity:.48}.t-bar_vertical[_ngcontent-%COMP%]   .t-thumb[_ngcontent-%COMP%]{right:0;inline-size:.75rem;min-block-size:1.25rem}.t-bar_vertical[_ngcontent-%COMP%]:hover   .t-thumb[_ngcontent-%COMP%], .t-bar_vertical[_ngcontent-%COMP%]   .t-thumb[_ngcontent-%COMP%]:active{inline-size:.875rem}.t-bar_horizontal[_ngcontent-%COMP%]   .t-thumb[_ngcontent-%COMP%]{bottom:0;block-size:.75rem;min-inline-size:1.25rem}.t-bar_horizontal[_ngcontent-%COMP%]:hover   .t-thumb[_ngcontent-%COMP%], .t-bar_horizontal[_ngcontent-%COMP%]   .t-thumb[_ngcontent-%COMP%]:active{block-size:.875rem}\"],\n      data: {\n        animation: [tuiFadeIn]\n      },\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiScrollControls, [{\n    type: Component,\n    args: [{\n      standalone: true,\n      selector: 'tui-scroll-controls',\n      imports: [AsyncPipe, NgIf, TuiScrollbarDirective],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [tuiFadeIn],\n      template: \"<ng-container *ngIf=\\\"nativeScrollbar; else custom\\\" />\\n<ng-template #custom>\\n    <ng-container *ngIf=\\\"refresh$ | async as bars\\\">\\n        <div\\n            *ngIf=\\\"bars[0]\\\"\\n            class=\\\"t-bar t-bar_vertical\\\"\\n            [@tuiFadeIn]=\\\"options\\\"\\n            [class.t-bar_has-horizontal]=\\\"bars[1]\\\"\\n            (mousedown.capture.prevent)=\\\"(0)\\\"\\n        >\\n            <div\\n                tuiScrollbar=\\\"vertical\\\"\\n                class=\\\"t-thumb\\\"\\n            ></div>\\n        </div>\\n        <div\\n            *ngIf=\\\"bars[1]\\\"\\n            class=\\\"t-bar t-bar_horizontal\\\"\\n            [@tuiFadeIn]=\\\"options\\\"\\n            [class.t-bar_has-vertical]=\\\"bars[0]\\\"\\n            (mousedown.capture.prevent)=\\\"(0)\\\"\\n        >\\n            <div\\n                tuiScrollbar=\\\"horizontal\\\"\\n                class=\\\"t-thumb\\\"\\n            ></div>\\n        </div>\\n    </ng-container>\\n</ng-template>\\n\",\n      styles: [\":host{position:sticky;top:0;left:0;z-index:1;min-inline-size:calc(100% - 1px);min-block-size:calc(100% - 1px);max-inline-size:calc(100% - 1px);max-block-size:calc(100% - 1px);float:inline-start;margin-inline-end:calc(-100% + 1px);pointer-events:none}.t-bar{position:absolute;right:0;bottom:0;pointer-events:auto}.t-bar_vertical{top:0;inline-size:.875rem}.t-bar_horizontal{left:0;block-size:.875rem}.t-bar_has-horizontal{bottom:.5rem}.t-bar_has-vertical{right:.5rem}.t-thumb{transition-property:all;transition-duration:.15s;transition-timing-function:ease-in-out;position:absolute;border-radius:6.25rem;border:.25rem solid transparent;cursor:pointer;pointer-events:auto;-webkit-user-select:none;user-select:none;background:currentColor;background-clip:content-box;box-sizing:border-box;transition-property:width,height,opacity;opacity:.2}.t-thumb:hover{opacity:.24}.t-thumb:active{opacity:.48}.t-bar_vertical .t-thumb{right:0;inline-size:.75rem;min-block-size:1.25rem}.t-bar_vertical:hover .t-thumb,.t-bar_vertical .t-thumb:active{inline-size:.875rem}.t-bar_horizontal .t-thumb{bottom:0;block-size:.75rem;min-inline-size:1.25rem}.t-bar_horizontal:hover .t-thumb,.t-bar_horizontal .t-thumb:active{block-size:.875rem}\\n\"]\n    }]\n  }], null, null);\n})();\n\n/**\n * An event for scrolling an element into view within {@link TuiScrollbar}.\n */\nconst TUI_SCROLL_INTO_VIEW = 'tui-scroll-into-view';\n/**\n * An event to notify {@link TuiScrollbar} that\n * it should control a nested element.\n */\nconst TUI_SCROLLABLE = 'tui-scrollable';\nclass TuiScrollbar {\n  constructor() {\n    this.el = tuiInjectElement();\n    this.options = inject(TUI_SCROLLBAR_OPTIONS);\n    this.isIOS = inject(TUI_IS_IOS);\n    this.browserScrollRef = new ElementRef(this.el);\n    /**\n     * @deprecated: use tuiScrollbarOptionsProvider({ mode: 'hidden' })\n     */\n    this.hidden = this.options.mode === 'hidden';\n  }\n  get delegated() {\n    return this.scrollRef !== this.el || this.options.mode === 'native';\n  }\n  get scrollRef() {\n    return this.browserScrollRef.nativeElement;\n  }\n  set scrollRef(element) {\n    this.browserScrollRef.nativeElement = element;\n  }\n  scrollIntoView(detail) {\n    if (this.delegated) {\n      return;\n    }\n    const {\n      offsetHeight,\n      offsetWidth\n    } = detail;\n    const {\n      offsetTop,\n      offsetLeft\n    } = tuiGetElementOffset(this.scrollRef, detail);\n    const scrollTop = offsetTop + offsetHeight / 2 - this.scrollRef.clientHeight / 2;\n    const scrollLeft = offsetLeft + offsetWidth / 2 - this.scrollRef.clientWidth / 2;\n    this.scrollRef.scrollTo?.(scrollLeft, scrollTop);\n  }\n  static {\n    this.ɵfac = function TuiScrollbar_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiScrollbar)();\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: TuiScrollbar,\n      selectors: [[\"tui-scrollbar\"]],\n      hostVars: 2,\n      hostBindings: function TuiScrollbar_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"tui-scrollable.stop\", function TuiScrollbar_tui_scrollable_stop_HostBindingHandler($event) {\n            return ctx.scrollRef = $event.detail;\n          })(\"tui-scroll-into-view.stop\", function TuiScrollbar_tui_scroll_into_view_stop_HostBindingHandler($event) {\n            return ctx.scrollIntoView($event.detail);\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"_native-hidden\", ctx.options.mode !== \"native\" && (!ctx.isIOS || ctx.hidden));\n        }\n      },\n      inputs: {\n        hidden: \"hidden\"\n      },\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([{\n        provide: TUI_SCROLL_REF,\n        useFactory: () => inject(TuiScrollbar).browserScrollRef\n      }]), i0.ɵɵStandaloneFeature],\n      ngContentSelectors: _c0,\n      decls: 3,\n      vars: 3,\n      consts: [[\"class\", \"t-bars\", 3, \"t-hover-mode\", 4, \"ngIf\"], [1, \"t-content\"], [1, \"t-bars\"]],\n      template: function TuiScrollbar_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵtemplate(0, TuiScrollbar_tui_scroll_controls_0_Template, 1, 2, \"tui-scroll-controls\", 0);\n          i0.ɵɵelementStart(1, \"div\", 1);\n          i0.ɵɵprojection(2);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngIf\", !ctx.hidden && !ctx.isIOS && ctx.options.mode !== \"native\");\n          i0.ɵɵadvance();\n          i0.ɵɵclassProp(\"t-content_delegated\", ctx.delegated);\n        }\n      },\n      dependencies: [NgIf, TuiScrollControls],\n      styles: [\"[_nghost-%COMP%]{position:relative;display:flex;isolation:isolate;overflow:auto}._native-hidden[_nghost-%COMP%]{scrollbar-width:none;-ms-overflow-style:none}._native-hidden[_nghost-%COMP%]::-webkit-scrollbar, ._native-hidden[_nghost-%COMP%]::-webkit-scrollbar-thumb{display:none}[_nghost-%COMP%]   .t-hover-mode[_ngcontent-%COMP%]:not(:active){transition-property:opacity;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;opacity:0}[_nghost-%COMP%]:hover   .t-hover-mode[_ngcontent-%COMP%]{transition-property:opacity;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;opacity:1}.t-content[_ngcontent-%COMP%]{isolation:isolate;flex:1;flex-basis:auto;inline-size:100%;block-size:-webkit-max-content;block-size:max-content}.t-content_delegated[_ngcontent-%COMP%]{block-size:100%}.t-bars[_ngcontent-%COMP%]{color:var(--tui-text-primary)}\"],\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiScrollbar, [{\n    type: Component,\n    args: [{\n      standalone: true,\n      selector: 'tui-scrollbar',\n      imports: [NgIf, TuiScrollControls],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: TUI_SCROLL_REF,\n        useFactory: () => inject(TuiScrollbar).browserScrollRef\n      }],\n      host: {\n        '[class._native-hidden]': 'options.mode !== \"native\" && (!isIOS || hidden)',\n        [`(${TUI_SCROLLABLE}.stop)`]: 'scrollRef = $event.detail',\n        [`(${TUI_SCROLL_INTO_VIEW}.stop)`]: 'scrollIntoView($event.detail)'\n      },\n      template: \"<tui-scroll-controls\\n    *ngIf=\\\"!hidden && !isIOS && options.mode !== 'native'\\\"\\n    class=\\\"t-bars\\\"\\n    [class.t-hover-mode]=\\\"options.mode === 'hover'\\\"\\n/>\\n<div\\n    class=\\\"t-content\\\"\\n    [class.t-content_delegated]=\\\"delegated\\\"\\n>\\n    <ng-content />\\n</div>\\n\",\n      styles: [\":host{position:relative;display:flex;isolation:isolate;overflow:auto}:host._native-hidden{scrollbar-width:none;-ms-overflow-style:none}:host._native-hidden::-webkit-scrollbar,:host._native-hidden::-webkit-scrollbar-thumb{display:none}:host .t-hover-mode:not(:active){transition-property:opacity;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;opacity:0}:host:hover .t-hover-mode{transition-property:opacity;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;opacity:1}.t-content{isolation:isolate;flex:1;flex-basis:auto;inline-size:100%;block-size:-webkit-max-content;block-size:max-content}.t-content_delegated{block-size:100%}.t-bars{color:var(--tui-text-primary)}\\n\"]\n    }]\n  }], null, {\n    hidden: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * Directive scrolls element into view inside tui-scrollbar\n */\nclass TuiScrollIntoView {\n  constructor() {\n    this.el = tuiInjectElement();\n    this.destroyRef = inject(DestroyRef);\n  }\n  set tuiScrollIntoView(scroll) {\n    if (!scroll) {\n      return;\n    }\n    // Timeout is necessary in order to give element render cycle to get into its final spot\n    // (for example if it is inside dropdown box which has to be positioned first)\n    timer(0).pipe(takeUntilDestroyed(this.destroyRef)).subscribe(() => {\n      this.el.dispatchEvent(new CustomEvent(TUI_SCROLL_INTO_VIEW, {\n        bubbles: true,\n        detail: this.el\n      }));\n    });\n  }\n  static {\n    this.ɵfac = function TuiScrollIntoView_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiScrollIntoView)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: TuiScrollIntoView,\n      selectors: [[\"\", \"tuiScrollIntoView\", \"\"]],\n      inputs: {\n        tuiScrollIntoView: \"tuiScrollIntoView\"\n      },\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiScrollIntoView, [{\n    type: Directive,\n    args: [{\n      standalone: true,\n      selector: '[tuiScrollIntoView]'\n    }]\n  }], null, {\n    tuiScrollIntoView: [{\n      type: Input\n    }]\n  });\n})();\nconst SCROLL_REF_SELECTOR = '[tuiScrollRef]';\nclass TuiScrollRef {\n  static {\n    this.ɵfac = function TuiScrollRef_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiScrollRef)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: TuiScrollRef,\n      selectors: [[\"\", \"tuiScrollRef\", \"\"]],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([tuiProvide(TUI_SCROLL_REF, ElementRef)])]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiScrollRef, [{\n    type: Directive,\n    args: [{\n      standalone: true,\n      selector: SCROLL_REF_SELECTOR,\n      providers: [tuiProvide(TUI_SCROLL_REF, ElementRef)]\n    }]\n  }], null, null);\n})();\nclass TuiScrollable {\n  constructor() {\n    this.el = tuiInjectElement();\n  }\n  ngOnInit() {\n    this.el.dispatchEvent(new CustomEvent(TUI_SCROLLABLE, {\n      bubbles: true,\n      detail: this.el\n    }));\n  }\n  static {\n    this.ɵfac = function TuiScrollable_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiScrollable)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: TuiScrollable,\n      selectors: [[\"\", \"tuiScrollable\", \"\"]],\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiScrollable, [{\n    type: Directive,\n    args: [{\n      standalone: true,\n      selector: '[tuiScrollable]'\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { SCROLL_REF_SELECTOR, TUI_DEFAULT_SCROLLBAR_OPTIONS, TUI_SCROLLABLE, TUI_SCROLLBAR_OPTIONS, TUI_SCROLL_INTO_VIEW, TuiScrollControls, TuiScrollIntoView, TuiScrollRef, TuiScrollable, TuiScrollbar, TuiScrollbarDirective, TuiScrollbarService, tuiScrollbarOptionsProvider };","map":{"version":3,"names":["AsyncPipe","NgIf","i0","inject","Injectable","Directive","Input","Component","ChangeDetectionStrategy","ElementRef","DestroyRef","WA_ANIMATION_FRAME","tuiTypedFromEvent","tuiZonefree","tuiZonefreeScheduler","tuiScrollFrom","tuiZoneOptimized","tuiFadeIn","TUI_SCROLL_REF","TUI_ANIMATIONS_SPEED","tuiToAnimationOptions","Observable","merge","filter","map","switchMap","takeUntil","throttleTime","startWith","distinctUntilChanged","timer","takeUntilDestroyed","tuiInjectElement","tuiGetElementOffset","tuiCreateOptions","TUI_IS_IOS","tuiProvide","TuiScrollControls_ng_container_0_Template","rf","ctx","ɵɵelementContainer","TuiScrollControls_ng_template_1_ng_container_0_div_1_Template","_r1","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","TuiScrollControls_ng_template_1_ng_container_0_div_1_Template_div_mousedown_capture_prevent_0_listener","ɵɵrestoreView","ɵɵresetView","ɵɵelement","ɵɵelementEnd","bars_r2","ɵɵnextContext","ngIf","ctx_r2","ɵɵclassProp","ɵɵproperty","options","TuiScrollControls_ng_template_1_ng_container_0_div_2_Template","_r4","TuiScrollControls_ng_template_1_ng_container_0_div_2_Template_div_mousedown_capture_prevent_0_listener","TuiScrollControls_ng_template_1_ng_container_0_Template","ɵɵelementContainerStart","ɵɵtemplate","ɵɵelementContainerEnd","ɵɵadvance","TuiScrollControls_ng_template_1_Template","ɵɵpipe","ɵɵpipeBind1","refresh$","_c0","TuiScrollbar_tui_scroll_controls_0_Template","ctx_r0","mode","TuiScrollbarService","constructor","subscriber","scroll$","subscribe","el","element","nativeElement","parentElement","pipe","target","event","getScrolled","ownerDocument","rect","getBoundingClientRect","vertical","getOffsetVertical","horizontal","getOffsetHorizontal","clientY","clientX","offsetY","offsetX","offsetHeight","offsetWidth","top","left","width","height","maxTop","scrollHeight","maxLeft","scrollWidth","scrolledTop","scrolledLeft","ɵfac","TuiScrollbarService_Factory","__ngFactoryType__","ɵprov","ɵɵdefineInjectable","token","factory","ngDevMode","ɵsetClassMetadata","type","MIN_WIDTH","TuiScrollbarDirective","style","scrollSub","scrollBehavior","tuiScrollbar","scrollLeft","scrollTop","styleSub","dimension","clientHeight","clientWidth","thumb","getThumb","view","getView","getCompensation","compensation","Math","ceil","TuiScrollbarDirective_Factory","ɵdir","ɵɵdefineDirective","selectors","inputs","standalone","features","ɵɵProvidersFeature","args","selector","providers","TUI_DEFAULT_SCROLLBAR_OPTIONS","TUI_SCROLLBAR_OPTIONS","tuiScrollbarOptionsProvider","TuiScrollControls","scrollRef","nativeScrollbar","scrollbars","a","b","TuiScrollControls_Factory","ɵcmp","ɵɵdefineComponent","ɵɵStandaloneFeature","decls","vars","consts","template","TuiScrollControls_Template","ɵɵtemplateRefExtractor","custom_r5","ɵɵreference","dependencies","styles","data","animation","changeDetection","imports","OnPush","animations","TUI_SCROLL_INTO_VIEW","TUI_SCROLLABLE","TuiScrollbar","isIOS","browserScrollRef","hidden","delegated","scrollIntoView","detail","offsetTop","offsetLeft","scrollTo","TuiScrollbar_Factory","hostVars","hostBindings","TuiScrollbar_HostBindings","TuiScrollbar_tui_scrollable_stop_HostBindingHandler","$event","TuiScrollbar_tui_scroll_into_view_stop_HostBindingHandler","provide","useFactory","ngContentSelectors","TuiScrollbar_Template","ɵɵprojectionDef","ɵɵprojection","host","TuiScrollIntoView","destroyRef","tuiScrollIntoView","scroll","dispatchEvent","CustomEvent","bubbles","TuiScrollIntoView_Factory","SCROLL_REF_SELECTOR","TuiScrollRef","TuiScrollRef_Factory","TuiScrollable","ngOnInit","TuiScrollable_Factory"],"sources":["C:/Users/Asus-PC/Downloads/WebLibraryNew/WebLibrary/WebLibraryApp/Frontend/node_modules/@taiga-ui/core/fesm2022/taiga-ui-core-components-scrollbar.mjs"],"sourcesContent":["import { AsyncPipe, NgIf } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { inject, Injectable, Directive, Input, Component, ChangeDetectionStrategy, ElementRef, DestroyRef } from '@angular/core';\nimport { WA_ANIMATION_FRAME } from '@ng-web-apis/common';\nimport { tuiTypedFromEvent, tuiZonefree, tuiZonefreeScheduler, tuiScrollFrom, tuiZoneOptimized } from '@taiga-ui/cdk/observables';\nimport { tuiFadeIn } from '@taiga-ui/core/animations';\nimport { TUI_SCROLL_REF, TUI_ANIMATIONS_SPEED } from '@taiga-ui/core/tokens';\nimport { tuiToAnimationOptions } from '@taiga-ui/core/utils';\nimport { Observable, merge, filter, map, switchMap, takeUntil, throttleTime, startWith, distinctUntilChanged, timer } from 'rxjs';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { tuiInjectElement, tuiGetElementOffset } from '@taiga-ui/cdk/utils/dom';\nimport { tuiCreateOptions } from '@taiga-ui/cdk/utils/di';\nimport { TUI_IS_IOS } from '@taiga-ui/cdk/tokens';\nimport { tuiProvide } from '@taiga-ui/cdk/utils/miscellaneous';\n\nclass TuiScrollbarService extends Observable {\n    constructor() {\n        super((subscriber) => this.scroll$.subscribe(subscriber));\n        this.el = tuiInjectElement();\n        this.element = inject(TUI_SCROLL_REF).nativeElement;\n        this.scroll$ = merge(tuiTypedFromEvent(this.el.parentElement, 'mousedown').pipe(filter(({ target }) => target !== this.el), map((event) => this.getScrolled(event, 0.5, 0.5))), tuiTypedFromEvent(this.el, 'mousedown').pipe(tuiZonefree(), switchMap((event) => {\n            const { ownerDocument } = this.el;\n            const rect = this.el.getBoundingClientRect();\n            const vertical = getOffsetVertical(event, rect);\n            const horizontal = getOffsetHorizontal(event, rect);\n            return tuiTypedFromEvent(ownerDocument, 'mousemove').pipe(map((event) => this.getScrolled(event, vertical, horizontal)), takeUntil(tuiTypedFromEvent(ownerDocument, 'mouseup')));\n        })));\n    }\n    getScrolled({ clientY, clientX }, offsetY, offsetX) {\n        const { offsetHeight, offsetWidth } = this.el;\n        const { top, left, width, height } = this.el.parentElement.getBoundingClientRect();\n        const maxTop = this.element.scrollHeight - height;\n        const maxLeft = this.element.scrollWidth - width;\n        const scrolledTop = (clientY - top - offsetHeight * offsetY) / (height - offsetHeight);\n        const scrolledLeft = (clientX - left - offsetWidth * offsetX) / (width - offsetWidth);\n        return [maxTop * scrolledTop, maxLeft * scrolledLeft];\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiScrollbarService, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiScrollbarService }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiScrollbarService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return []; } });\nfunction getOffsetVertical({ clientY }, { top, height }) {\n    return (clientY - top) / height;\n}\nfunction getOffsetHorizontal({ clientX }, { left, width }) {\n    return (clientX - left) / width;\n}\n\nconst MIN_WIDTH = 24;\nclass TuiScrollbarDirective {\n    constructor() {\n        this.el = inject(TUI_SCROLL_REF).nativeElement;\n        this.style = tuiInjectElement().style;\n        this.scrollSub = inject(TuiScrollbarService)\n            .pipe(takeUntilDestroyed())\n            .subscribe(([top, left]) => {\n            this.el.style.scrollBehavior = 'auto';\n            if (this.tuiScrollbar === 'horizontal') {\n                this.el.scrollLeft = left;\n            }\n            else {\n                this.el.scrollTop = top;\n            }\n            this.el.style.scrollBehavior = '';\n        });\n        this.styleSub = merge(inject(WA_ANIMATION_FRAME).pipe(throttleTime(100, tuiZonefreeScheduler())), tuiScrollFrom(this.el))\n            .pipe(tuiZonefree(), takeUntilDestroyed())\n            .subscribe(() => {\n            const dimension = {\n                scrollTop: this.el.scrollTop,\n                scrollHeight: this.el.scrollHeight,\n                clientHeight: this.el.clientHeight,\n                scrollLeft: this.el.scrollLeft,\n                scrollWidth: this.el.scrollWidth,\n                clientWidth: this.el.clientWidth,\n            };\n            const thumb = `${this.getThumb(dimension) * 100}%`;\n            const view = `${this.getView(dimension) * 100}%`;\n            if (this.tuiScrollbar === 'vertical') {\n                this.style.top = thumb;\n                this.style.height = view;\n            }\n            else {\n                this.style.left = thumb;\n                this.style.width = view;\n            }\n        });\n        this.tuiScrollbar = 'vertical';\n    }\n    getScrolled(dimension) {\n        return this.tuiScrollbar === 'vertical'\n            ? dimension.scrollTop / (dimension.scrollHeight - dimension.clientHeight)\n            : dimension.scrollLeft / (dimension.scrollWidth - dimension.clientWidth);\n    }\n    getCompensation(dimension) {\n        if (((dimension.clientHeight * dimension.clientHeight) / dimension.scrollHeight >\n            MIN_WIDTH &&\n            this.tuiScrollbar === 'vertical') ||\n            ((dimension.clientWidth * dimension.clientWidth) / dimension.scrollWidth >\n                MIN_WIDTH &&\n                this.tuiScrollbar === 'horizontal')) {\n            return 0;\n        }\n        return this.tuiScrollbar === 'vertical'\n            ? MIN_WIDTH / dimension.clientHeight\n            : MIN_WIDTH / dimension.clientWidth;\n    }\n    getThumb(dimension) {\n        const compensation = this.getCompensation(dimension) || this.getView(dimension);\n        return this.getScrolled(dimension) * (1 - compensation);\n    }\n    getView(dimension) {\n        return this.tuiScrollbar === 'vertical'\n            ? Math.ceil((dimension.clientHeight / dimension.scrollHeight) * 100) / 100\n            : Math.ceil((dimension.clientWidth / dimension.scrollWidth) * 100) / 100;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiScrollbarDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiScrollbarDirective, isStandalone: true, selector: \"[tuiScrollbar]\", inputs: { tuiScrollbar: \"tuiScrollbar\" }, providers: [TuiScrollbarService], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiScrollbarDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    standalone: true,\n                    selector: '[tuiScrollbar]',\n                    providers: [TuiScrollbarService],\n                }]\n        }], propDecorators: { tuiScrollbar: [{\n                type: Input\n            }] } });\n\nconst TUI_DEFAULT_SCROLLBAR_OPTIONS = {\n    mode: 'always',\n};\nconst [TUI_SCROLLBAR_OPTIONS, tuiScrollbarOptionsProvider] = tuiCreateOptions(TUI_DEFAULT_SCROLLBAR_OPTIONS);\n\nclass TuiScrollControls {\n    constructor() {\n        this.scrollRef = inject(TUI_SCROLL_REF).nativeElement;\n        this.nativeScrollbar = inject(TUI_SCROLLBAR_OPTIONS).mode === 'native';\n        this.options = tuiToAnimationOptions(inject(TUI_ANIMATIONS_SPEED));\n        this.refresh$ = inject(WA_ANIMATION_FRAME).pipe(throttleTime(300, tuiZonefreeScheduler()), map(() => this.scrollbars), startWith([false, false]), distinctUntilChanged((a, b) => a[0] === b[0] && a[1] === b[1]), tuiZoneOptimized());\n    }\n    get scrollbars() {\n        const { clientHeight, scrollHeight, clientWidth, scrollWidth } = this.scrollRef;\n        return [\n            Math.ceil((clientHeight / scrollHeight) * 100) < 100,\n            Math.ceil((clientWidth / scrollWidth) * 100) < 100,\n        ];\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiScrollControls, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiScrollControls, isStandalone: true, selector: \"tui-scroll-controls\", ngImport: i0, template: \"<ng-container *ngIf=\\\"nativeScrollbar; else custom\\\" />\\n<ng-template #custom>\\n    <ng-container *ngIf=\\\"refresh$ | async as bars\\\">\\n        <div\\n            *ngIf=\\\"bars[0]\\\"\\n            class=\\\"t-bar t-bar_vertical\\\"\\n            [@tuiFadeIn]=\\\"options\\\"\\n            [class.t-bar_has-horizontal]=\\\"bars[1]\\\"\\n            (mousedown.capture.prevent)=\\\"(0)\\\"\\n        >\\n            <div\\n                tuiScrollbar=\\\"vertical\\\"\\n                class=\\\"t-thumb\\\"\\n            ></div>\\n        </div>\\n        <div\\n            *ngIf=\\\"bars[1]\\\"\\n            class=\\\"t-bar t-bar_horizontal\\\"\\n            [@tuiFadeIn]=\\\"options\\\"\\n            [class.t-bar_has-vertical]=\\\"bars[0]\\\"\\n            (mousedown.capture.prevent)=\\\"(0)\\\"\\n        >\\n            <div\\n                tuiScrollbar=\\\"horizontal\\\"\\n                class=\\\"t-thumb\\\"\\n            ></div>\\n        </div>\\n    </ng-container>\\n</ng-template>\\n\", styles: [\":host{position:sticky;top:0;left:0;z-index:1;min-inline-size:calc(100% - 1px);min-block-size:calc(100% - 1px);max-inline-size:calc(100% - 1px);max-block-size:calc(100% - 1px);float:inline-start;margin-inline-end:calc(-100% + 1px);pointer-events:none}.t-bar{position:absolute;right:0;bottom:0;pointer-events:auto}.t-bar_vertical{top:0;inline-size:.875rem}.t-bar_horizontal{left:0;block-size:.875rem}.t-bar_has-horizontal{bottom:.5rem}.t-bar_has-vertical{right:.5rem}.t-thumb{transition-property:all;transition-duration:.15s;transition-timing-function:ease-in-out;position:absolute;border-radius:6.25rem;border:.25rem solid transparent;cursor:pointer;pointer-events:auto;-webkit-user-select:none;user-select:none;background:currentColor;background-clip:content-box;box-sizing:border-box;transition-property:width,height,opacity;opacity:.2}.t-thumb:hover{opacity:.24}.t-thumb:active{opacity:.48}.t-bar_vertical .t-thumb{right:0;inline-size:.75rem;min-block-size:1.25rem}.t-bar_vertical:hover .t-thumb,.t-bar_vertical .t-thumb:active{inline-size:.875rem}.t-bar_horizontal .t-thumb{bottom:0;block-size:.75rem;min-inline-size:1.25rem}.t-bar_horizontal:hover .t-thumb,.t-bar_horizontal .t-thumb:active{block-size:.875rem}\\n\"], dependencies: [{ kind: \"pipe\", type: AsyncPipe, name: \"async\" }, { kind: \"directive\", type: NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: TuiScrollbarDirective, selector: \"[tuiScrollbar]\", inputs: [\"tuiScrollbar\"] }], animations: [tuiFadeIn], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiScrollControls, decorators: [{\n            type: Component,\n            args: [{ standalone: true, selector: 'tui-scroll-controls', imports: [AsyncPipe, NgIf, TuiScrollbarDirective], changeDetection: ChangeDetectionStrategy.OnPush, animations: [tuiFadeIn], template: \"<ng-container *ngIf=\\\"nativeScrollbar; else custom\\\" />\\n<ng-template #custom>\\n    <ng-container *ngIf=\\\"refresh$ | async as bars\\\">\\n        <div\\n            *ngIf=\\\"bars[0]\\\"\\n            class=\\\"t-bar t-bar_vertical\\\"\\n            [@tuiFadeIn]=\\\"options\\\"\\n            [class.t-bar_has-horizontal]=\\\"bars[1]\\\"\\n            (mousedown.capture.prevent)=\\\"(0)\\\"\\n        >\\n            <div\\n                tuiScrollbar=\\\"vertical\\\"\\n                class=\\\"t-thumb\\\"\\n            ></div>\\n        </div>\\n        <div\\n            *ngIf=\\\"bars[1]\\\"\\n            class=\\\"t-bar t-bar_horizontal\\\"\\n            [@tuiFadeIn]=\\\"options\\\"\\n            [class.t-bar_has-vertical]=\\\"bars[0]\\\"\\n            (mousedown.capture.prevent)=\\\"(0)\\\"\\n        >\\n            <div\\n                tuiScrollbar=\\\"horizontal\\\"\\n                class=\\\"t-thumb\\\"\\n            ></div>\\n        </div>\\n    </ng-container>\\n</ng-template>\\n\", styles: [\":host{position:sticky;top:0;left:0;z-index:1;min-inline-size:calc(100% - 1px);min-block-size:calc(100% - 1px);max-inline-size:calc(100% - 1px);max-block-size:calc(100% - 1px);float:inline-start;margin-inline-end:calc(-100% + 1px);pointer-events:none}.t-bar{position:absolute;right:0;bottom:0;pointer-events:auto}.t-bar_vertical{top:0;inline-size:.875rem}.t-bar_horizontal{left:0;block-size:.875rem}.t-bar_has-horizontal{bottom:.5rem}.t-bar_has-vertical{right:.5rem}.t-thumb{transition-property:all;transition-duration:.15s;transition-timing-function:ease-in-out;position:absolute;border-radius:6.25rem;border:.25rem solid transparent;cursor:pointer;pointer-events:auto;-webkit-user-select:none;user-select:none;background:currentColor;background-clip:content-box;box-sizing:border-box;transition-property:width,height,opacity;opacity:.2}.t-thumb:hover{opacity:.24}.t-thumb:active{opacity:.48}.t-bar_vertical .t-thumb{right:0;inline-size:.75rem;min-block-size:1.25rem}.t-bar_vertical:hover .t-thumb,.t-bar_vertical .t-thumb:active{inline-size:.875rem}.t-bar_horizontal .t-thumb{bottom:0;block-size:.75rem;min-inline-size:1.25rem}.t-bar_horizontal:hover .t-thumb,.t-bar_horizontal .t-thumb:active{block-size:.875rem}\\n\"] }]\n        }] });\n\n/**\n * An event for scrolling an element into view within {@link TuiScrollbar}.\n */\nconst TUI_SCROLL_INTO_VIEW = 'tui-scroll-into-view';\n/**\n * An event to notify {@link TuiScrollbar} that\n * it should control a nested element.\n */\nconst TUI_SCROLLABLE = 'tui-scrollable';\nclass TuiScrollbar {\n    constructor() {\n        this.el = tuiInjectElement();\n        this.options = inject(TUI_SCROLLBAR_OPTIONS);\n        this.isIOS = inject(TUI_IS_IOS);\n        this.browserScrollRef = new ElementRef(this.el);\n        /**\n         * @deprecated: use tuiScrollbarOptionsProvider({ mode: 'hidden' })\n         */\n        this.hidden = this.options.mode === 'hidden';\n    }\n    get delegated() {\n        return this.scrollRef !== this.el || this.options.mode === 'native';\n    }\n    get scrollRef() {\n        return this.browserScrollRef.nativeElement;\n    }\n    set scrollRef(element) {\n        this.browserScrollRef.nativeElement = element;\n    }\n    scrollIntoView(detail) {\n        if (this.delegated) {\n            return;\n        }\n        const { offsetHeight, offsetWidth } = detail;\n        const { offsetTop, offsetLeft } = tuiGetElementOffset(this.scrollRef, detail);\n        const scrollTop = offsetTop + offsetHeight / 2 - this.scrollRef.clientHeight / 2;\n        const scrollLeft = offsetLeft + offsetWidth / 2 - this.scrollRef.clientWidth / 2;\n        this.scrollRef.scrollTo?.(scrollLeft, scrollTop);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiScrollbar, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiScrollbar, isStandalone: true, selector: \"tui-scrollbar\", inputs: { hidden: \"hidden\" }, host: { listeners: { \"tui-scrollable.stop\": \"scrollRef = $event.detail\", \"tui-scroll-into-view.stop\": \"scrollIntoView($event.detail)\" }, properties: { \"class._native-hidden\": \"options.mode !== \\\"native\\\" && (!isIOS || hidden)\" } }, providers: [\n            {\n                provide: TUI_SCROLL_REF,\n                useFactory: () => inject(TuiScrollbar).browserScrollRef,\n            },\n        ], ngImport: i0, template: \"<tui-scroll-controls\\n    *ngIf=\\\"!hidden && !isIOS && options.mode !== 'native'\\\"\\n    class=\\\"t-bars\\\"\\n    [class.t-hover-mode]=\\\"options.mode === 'hover'\\\"\\n/>\\n<div\\n    class=\\\"t-content\\\"\\n    [class.t-content_delegated]=\\\"delegated\\\"\\n>\\n    <ng-content />\\n</div>\\n\", styles: [\":host{position:relative;display:flex;isolation:isolate;overflow:auto}:host._native-hidden{scrollbar-width:none;-ms-overflow-style:none}:host._native-hidden::-webkit-scrollbar,:host._native-hidden::-webkit-scrollbar-thumb{display:none}:host .t-hover-mode:not(:active){transition-property:opacity;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;opacity:0}:host:hover .t-hover-mode{transition-property:opacity;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;opacity:1}.t-content{isolation:isolate;flex:1;flex-basis:auto;inline-size:100%;block-size:-webkit-max-content;block-size:max-content}.t-content_delegated{block-size:100%}.t-bars{color:var(--tui-text-primary)}\\n\"], dependencies: [{ kind: \"directive\", type: NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: TuiScrollControls, selector: \"tui-scroll-controls\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiScrollbar, decorators: [{\n            type: Component,\n            args: [{ standalone: true, selector: 'tui-scrollbar', imports: [NgIf, TuiScrollControls], changeDetection: ChangeDetectionStrategy.OnPush, providers: [\n                        {\n                            provide: TUI_SCROLL_REF,\n                            useFactory: () => inject(TuiScrollbar).browserScrollRef,\n                        },\n                    ], host: {\n                        '[class._native-hidden]': 'options.mode !== \"native\" && (!isIOS || hidden)',\n                        [`(${TUI_SCROLLABLE}.stop)`]: 'scrollRef = $event.detail',\n                        [`(${TUI_SCROLL_INTO_VIEW}.stop)`]: 'scrollIntoView($event.detail)',\n                    }, template: \"<tui-scroll-controls\\n    *ngIf=\\\"!hidden && !isIOS && options.mode !== 'native'\\\"\\n    class=\\\"t-bars\\\"\\n    [class.t-hover-mode]=\\\"options.mode === 'hover'\\\"\\n/>\\n<div\\n    class=\\\"t-content\\\"\\n    [class.t-content_delegated]=\\\"delegated\\\"\\n>\\n    <ng-content />\\n</div>\\n\", styles: [\":host{position:relative;display:flex;isolation:isolate;overflow:auto}:host._native-hidden{scrollbar-width:none;-ms-overflow-style:none}:host._native-hidden::-webkit-scrollbar,:host._native-hidden::-webkit-scrollbar-thumb{display:none}:host .t-hover-mode:not(:active){transition-property:opacity;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;opacity:0}:host:hover .t-hover-mode{transition-property:opacity;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;opacity:1}.t-content{isolation:isolate;flex:1;flex-basis:auto;inline-size:100%;block-size:-webkit-max-content;block-size:max-content}.t-content_delegated{block-size:100%}.t-bars{color:var(--tui-text-primary)}\\n\"] }]\n        }], propDecorators: { hidden: [{\n                type: Input\n            }] } });\n\n/**\n * Directive scrolls element into view inside tui-scrollbar\n */\nclass TuiScrollIntoView {\n    constructor() {\n        this.el = tuiInjectElement();\n        this.destroyRef = inject(DestroyRef);\n    }\n    set tuiScrollIntoView(scroll) {\n        if (!scroll) {\n            return;\n        }\n        // Timeout is necessary in order to give element render cycle to get into its final spot\n        // (for example if it is inside dropdown box which has to be positioned first)\n        timer(0)\n            .pipe(takeUntilDestroyed(this.destroyRef))\n            .subscribe(() => {\n            this.el.dispatchEvent(new CustomEvent(TUI_SCROLL_INTO_VIEW, {\n                bubbles: true,\n                detail: this.el,\n            }));\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiScrollIntoView, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiScrollIntoView, isStandalone: true, selector: \"[tuiScrollIntoView]\", inputs: { tuiScrollIntoView: \"tuiScrollIntoView\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiScrollIntoView, decorators: [{\n            type: Directive,\n            args: [{\n                    standalone: true,\n                    selector: '[tuiScrollIntoView]',\n                }]\n        }], propDecorators: { tuiScrollIntoView: [{\n                type: Input\n            }] } });\n\nconst SCROLL_REF_SELECTOR = '[tuiScrollRef]';\nclass TuiScrollRef {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiScrollRef, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiScrollRef, isStandalone: true, selector: \"[tuiScrollRef]\", providers: [tuiProvide(TUI_SCROLL_REF, ElementRef)], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiScrollRef, decorators: [{\n            type: Directive,\n            args: [{\n                    standalone: true,\n                    selector: SCROLL_REF_SELECTOR,\n                    providers: [tuiProvide(TUI_SCROLL_REF, ElementRef)],\n                }]\n        }] });\n\nclass TuiScrollable {\n    constructor() {\n        this.el = tuiInjectElement();\n    }\n    ngOnInit() {\n        this.el.dispatchEvent(new CustomEvent(TUI_SCROLLABLE, {\n            bubbles: true,\n            detail: this.el,\n        }));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiScrollable, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiScrollable, isStandalone: true, selector: \"[tuiScrollable]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiScrollable, decorators: [{\n            type: Directive,\n            args: [{\n                    standalone: true,\n                    selector: '[tuiScrollable]',\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { SCROLL_REF_SELECTOR, TUI_DEFAULT_SCROLLBAR_OPTIONS, TUI_SCROLLABLE, TUI_SCROLLBAR_OPTIONS, TUI_SCROLL_INTO_VIEW, TuiScrollControls, TuiScrollIntoView, TuiScrollRef, TuiScrollable, TuiScrollbar, TuiScrollbarDirective, TuiScrollbarService, tuiScrollbarOptionsProvider };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}