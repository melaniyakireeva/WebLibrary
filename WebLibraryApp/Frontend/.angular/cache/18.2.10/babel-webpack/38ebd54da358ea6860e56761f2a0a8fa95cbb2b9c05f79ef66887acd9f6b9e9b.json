{"ast":null,"code":"import { __decorate } from 'tslib';\nimport { AsyncPipe, NgForOf, NgIf } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { inject, Renderer2, DestroyRef, NgZone, ElementRef, Directive, ContentChildren, forwardRef, Input, signal, computed, Component, ChangeDetectionStrategy, ViewChildren } from '@angular/core';\nimport { takeUntilDestroyed, toSignal } from '@angular/core/rxjs-interop';\nimport { ResizeObserverService } from '@ng-web-apis/resize-observer';\nimport { tuiDraw } from '@taiga-ui/addon-charts/utils';\nimport { EMPTY_QUERY } from '@taiga-ui/cdk/constants';\nimport { TuiLet } from '@taiga-ui/cdk/directives/let';\nimport { tuiZonefree, tuiQueryListChanges, tuiZoneOptimized } from '@taiga-ui/cdk/observables';\nimport { tuiInjectId } from '@taiga-ui/cdk/services';\nimport { tuiCreateToken, tuiProvideOptions, tuiPure, tuiIsPresent } from '@taiga-ui/cdk/utils/miscellaneous';\nimport * as i1 from '@taiga-ui/core/directives/hint';\nimport { TuiHintOptionsDirective, TuiHintHover, tuiHintOptionsProvider, TuiHint } from '@taiga-ui/core/directives/hint';\nimport { combineLatest, filter, map, startWith, switchMap, distinctUntilChanged, Subject } from 'rxjs';\nimport { TuiHoveredService } from '@taiga-ui/cdk/directives/hovered';\nconst _c0 = (a0, a1) => ({\n  $implicit: a0,\n  index: a1\n});\nfunction TuiLineChart_ng_container_0_ng_container_8_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 10);\n  }\n  if (rf & 2) {\n    const point_r1 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵstyleProp(\"bottom\", ctx_r1.getBottom(point_r1[1]), \"%\")(\"left\", ctx_r1.getLeft(point_r1[0]), \"%\");\n  }\n}\nfunction TuiLineChart_ng_container_0_ng_container_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TuiLineChart_ng_container_0_ng_container_8_div_1_Template, 1, 4, \"div\", 9);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.value);\n  }\n}\nfunction TuiLineChart_ng_container_0_ng_container_9_ng_container_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵpipe(1, \"async\");\n    i0.ɵɵlistener(\"mouseenter\", function TuiLineChart_ng_container_0_ng_container_9_ng_container_1_div_1_Template_div_mouseenter_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const index_r4 = i0.ɵɵnextContext().index;\n      const ctx_r1 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r1.onMouseEnter(index_r4));\n    });\n    i0.ɵɵelement(2, \"div\", 15)(3, \"div\", 16, 0);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const hintHost_r5 = i0.ɵɵreference(4);\n    const ctx_r5 = i0.ɵɵnextContext();\n    const point_r7 = ctx_r5.$implicit;\n    const index_r4 = ctx_r5.index;\n    const hovered_r8 = i0.ɵɵnextContext(2).tuiLet;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"left\", ctx_r1.getLeft(ctx_r1.getX(index_r4)), \"%\")(\"width\", ctx_r1.getWidth(index_r4), \"%\");\n    i0.ɵɵclassProp(\"t-column_hint_hovered\", i0.ɵɵpipeBind1(1, 20, ctx_r1.drivers.get(index_r4)))(\"t-column_hovered\", hovered_r8 === index_r4);\n    i0.ɵɵproperty(\"tuiHint\", (ctx_r1.hintDirective == null ? null : ctx_r1.hintDirective.hint) || ctx_r1.hintContent)(\"tuiHintContext\", i0.ɵɵpureFunction2(22, _c0, ctx_r1.getImplicit(point_r7), index_r4))(\"tuiHintDescribe\", ctx_r1.isFocusable ? ctx_r1.getHintId(index_r4) : null)(\"tuiHintHost\", hintHost_r5);\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleProp(\"left\", ctx_r1.getOffset(index_r4), \"%\");\n    i0.ɵɵadvance();\n    i0.ɵɵstyleProp(\"bottom\", ctx_r1.getBottom(point_r7[1]), \"%\")(\"left\", ctx_r1.getOffset(index_r4), \"%\");\n    i0.ɵɵproperty(\"id\", ctx_r1.getHintId(index_r4))(\"tabIndex\", ctx_r1.isFocusable ? 0 : -1);\n  }\n}\nfunction TuiLineChart_ng_container_0_ng_container_9_ng_container_1_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 17);\n  }\n  if (rf & 2) {\n    const point_r7 = i0.ɵɵnextContext().$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵstyleProp(\"bottom\", ctx_r1.getBottom(point_r7[1]), \"%\");\n  }\n}\nfunction TuiLineChart_ng_container_0_ng_container_9_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TuiLineChart_ng_container_0_ng_container_9_ng_container_1_div_1_Template, 5, 25, \"div\", 12)(2, TuiLineChart_ng_container_0_ng_container_9_ng_container_1_div_2_Template, 1, 2, \"div\", 13);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.value.length > 1 || ctx_r1.dots);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.isFocusable);\n  }\n}\nfunction TuiLineChart_ng_container_0_ng_container_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TuiLineChart_ng_container_0_ng_container_9_ng_container_1_Template, 3, 2, \"ng-container\", 11);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.value);\n  }\n}\nfunction TuiLineChart_ng_container_0_ng_container_10_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const point_r9 = i0.ɵɵnextContext().ngIf;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleProp(\"left\", ctx_r1.getLeft(point_r9[0]), \"%\");\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.xStringify(point_r9[0]), \" \");\n  }\n}\nfunction TuiLineChart_ng_container_0_ng_container_10_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const point_r9 = i0.ɵɵnextContext().ngIf;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleProp(\"bottom\", ctx_r1.getBottom(point_r9[1]), \"%\");\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.yStringify(point_r9[1]), \" \");\n  }\n}\nfunction TuiLineChart_ng_container_0_ng_container_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TuiLineChart_ng_container_0_ng_container_10_div_1_Template, 2, 3, \"div\", 18)(2, TuiLineChart_ng_container_0_ng_container_10_div_2_Template, 2, 3, \"div\", 19);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.xStringify);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.yStringify);\n  }\n}\nfunction TuiLineChart_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(1, \"svg\", 2)(2, \"defs\")(3, \"linearGradient\", 3);\n    i0.ɵɵelement(4, \"stop\", 4)(5, \"stop\", 5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(6, \"path\", 6)(7, \"path\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(8, TuiLineChart_ng_container_0_ng_container_8_Template, 2, 1, \"ng-container\", 8)(9, TuiLineChart_ng_container_0_ng_container_9_Template, 2, 1, \"ng-container\", 8)(10, TuiLineChart_ng_container_0_ng_container_10_Template, 3, 2, \"ng-container\", 8);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const hovered_r8 = ctx.tuiLet;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵattribute(\"viewBox\", ctx_r1.viewBox());\n    i0.ɵɵadvance(2);\n    i0.ɵɵattribute(\"id\", ctx_r1.fillId);\n    i0.ɵɵadvance(3);\n    i0.ɵɵattribute(\"d\", ctx_r1.fillD)(\"fill\", ctx_r1.fill);\n    i0.ɵɵadvance();\n    i0.ɵɵattribute(\"d\", ctx_r1.d);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.dots);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.hasHints);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.getHovered(hovered_r8));\n  }\n}\nconst TUI_LINE_CHART_DEFAULT_OPTIONS = {\n  dots: false,\n  filled: false,\n  smoothingFactor: 0\n};\nconst TUI_LINE_CHART_OPTIONS = tuiCreateToken(TUI_LINE_CHART_DEFAULT_OPTIONS);\nfunction tuiLineChartOptionsProvider(options) {\n  return tuiProvideOptions(TUI_LINE_CHART_OPTIONS, options, TUI_LINE_CHART_DEFAULT_OPTIONS);\n}\nclass TuiLineChartHint {\n  constructor() {\n    this.charts = EMPTY_QUERY;\n    this.chartsRef = EMPTY_QUERY;\n    this.renderer = inject(Renderer2);\n    this.destroyRef = inject(DestroyRef);\n    this.zone = inject(NgZone);\n    this.hovered$ = inject(TuiHoveredService);\n  }\n  ngAfterViewInit() {\n    combineLatest([tuiLineChartDrivers(this.charts), this.hovered$]).pipe(filter(result => !result.some(Boolean)), tuiZonefree(this.zone), takeUntilDestroyed(this.destroyRef)).subscribe(() => {\n      this.charts.forEach(chart => chart.onHovered(NaN));\n    });\n  }\n  // _chart is required by TuiLineDaysChartComponent that impersonates this directive\n  getContext(index, _chart) {\n    return this.computeContext(...this.charts.map(({\n      value\n    }) => value))[index] || [];\n  }\n  // _chart is required by TuiLineDaysChartComponent that impersonates this directive\n  raise(index, _chart) {\n    const current = this.charts.map(chart => chart.value[index] ?? [0, 0]);\n    const sorted = [...current].sort((a, b) => a[1] - b[1]);\n    this.charts.forEach(chart => chart.onHovered(index));\n    this.chartsRef.forEach(({\n      nativeElement\n    }, index) => this.renderer.setStyle(nativeElement, 'z-index', sorted.indexOf(current[index] ?? [0, 0])));\n  }\n  computeContext(...values) {\n    return (values[0] || []).map((_, index) => values.map(value => value[index] ?? [0, 0]));\n  }\n  static {\n    this.ɵfac = function TuiLineChartHint_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiLineChartHint)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: TuiLineChartHint,\n      selectors: [[\"\", \"tuiLineChartHint\", \"\"]],\n      contentQueries: function TuiLineChartHint_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, TuiLineChart, 4);\n          i0.ɵɵcontentQuery(dirIndex, TuiLineChart, 4, ElementRef);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.charts = _t);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.chartsRef = _t);\n        }\n      },\n      inputs: {\n        hint: [0, \"tuiLineChartHint\", \"hint\"]\n      },\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([TuiHoveredService])]\n    });\n  }\n}\n__decorate([tuiPure], TuiLineChartHint.prototype, \"computeContext\", null);\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiLineChartHint, [{\n    type: Directive,\n    args: [{\n      standalone: true,\n      selector: '[tuiLineChartHint]',\n      providers: [TuiHoveredService]\n    }]\n  }], null, {\n    charts: [{\n      type: ContentChildren,\n      args: [forwardRef(() => TuiLineChart)]\n    }],\n    chartsRef: [{\n      type: ContentChildren,\n      args: [forwardRef(() => TuiLineChart), {\n        read: ElementRef\n      }]\n    }],\n    hint: [{\n      type: Input,\n      args: ['tuiLineChartHint']\n    }],\n    computeContext: []\n  });\n})();\nfunction tuiLineChartDrivers(charts) {\n  return combineLatest(charts.map(({\n    drivers\n  }) => tuiQueryListChanges(drivers).pipe(map(drivers => drivers.map(driver => driver.pipe(startWith(false))))))).pipe(map(all => all.reduce((acc, drivers) => acc.concat(drivers), [])), switchMap(drivers => combineLatest(drivers)), map(values => values.some(Boolean)), distinctUntilChanged());\n}\nclass TuiLineChart {\n  constructor() {\n    this.zone = inject(NgZone);\n    this.options = inject(TUI_LINE_CHART_OPTIONS);\n    this.hover$ = new Subject();\n    this.autoId = tuiInjectId();\n    this.resize = toSignal(inject(ResizeObserverService, {\n      self: true\n    }).pipe(map(([e]) => e?.contentRect.height || 0)), {\n      initialValue: 0\n    });\n    this.box = signal('');\n    this.hintDirective = inject(TuiLineChartHint, {\n      optional: true\n    });\n    this.hintOptions = inject(TuiHintOptionsDirective, {\n      optional: true\n    });\n    this.viewBox = computed(() => {\n      const offset = this.height / this.resize();\n      const [x = 0, y = 0, width = 0, height = 0] = this.box().split(' ').map(Number);\n      return `${x} ${y - offset} ${width} ${height + 2 * offset}`;\n    });\n    this.drivers = EMPTY_QUERY;\n    this.x = 0;\n    this.y = 0;\n    this.width = 0;\n    this.height = 0;\n    this.smoothingFactor = this.options.smoothingFactor;\n    this.xStringify = null;\n    this.yStringify = null;\n    this.filled = this.options.filled;\n    this.dots = this.options.dots;\n    this.value = [];\n  }\n  set valueSetter(value) {\n    this.value = value.filter(item => !item.some(Number.isNaN));\n  }\n  ngOnChanges() {\n    this.box.set(`${this.x} ${this.y} ${this.width} ${this.height}`);\n  }\n  onHovered(index) {\n    this.hover$.next(index);\n  }\n  get hovered$() {\n    return this.hover$.pipe(distinctUntilChanged(), tuiZoneOptimized(this.zone));\n  }\n  get hintContent() {\n    return this.hintOptions?.content || '';\n  }\n  get fillId() {\n    return `tui-line-chart-${this.autoId}`;\n  }\n  get fill() {\n    return this.filled ? `url(#${this.fillId})` : 'none';\n  }\n  get d() {\n    return this.getD(this.value, this.smoothingFactor);\n  }\n  get fillD() {\n    return this.value.length ? `${this.d}V ${this.y} H ${this.value[0]?.[0]} V ${this.value[0]?.[1]}` : this.d;\n  }\n  get isFocusable() {\n    return !this.hintDirective && this.hasHints;\n  }\n  get hasHints() {\n    return !!this.xStringify || !!this.yStringify || !!this.hintDirective?.hint || !!this.hintContent;\n  }\n  onMouseLeave() {\n    if (!this.hintDirective) {\n      this.onHovered(NaN);\n    }\n  }\n  getX(index) {\n    if (this.isSinglePoint) {\n      return (this.value[0]?.[0] || 0) / 2;\n    }\n    return index ? ((this.value[index - 1]?.[0] || 0) + (this.value[index]?.[0] || 0)) / 2 : 2 * (this.value[0]?.[0] || 0) - this.getX(1);\n  }\n  getWidth(index) {\n    return 100 * this.computeWidth(index) / this.width;\n  }\n  getHintId(index) {\n    return `${this.autoId}_${index}`;\n  }\n  getImplicit($implicit) {\n    return this.hintDirective?.getContext(this.value.indexOf($implicit), this) ?? $implicit;\n  }\n  getHovered(hovered) {\n    // This checks for NaN and null too since async pipe returns null before first item\n    return tuiIsPresent(hovered) && Number.isInteger(hovered) ? this.value[hovered] ?? null : null;\n  }\n  getBottom(y) {\n    return 100 * (y - this.y) / this.height;\n  }\n  getLeft(x) {\n    return 100 * (x - this.x) / this.width;\n  }\n  getOffset(x) {\n    return 100 * ((this.value[x]?.[0] || 0) - this.getX(x)) / this.computeWidth(x);\n  }\n  onMouseEnter(index) {\n    if (this.hintDirective) {\n      this.hintDirective.raise(index, this);\n    } else {\n      this.onHovered(index);\n    }\n  }\n  get isSinglePoint() {\n    return this.value.length === 1;\n  }\n  getD(value, smoothingFactor) {\n    return value.reduce((d, point, index) => index ? `${d} ${tuiDraw(value, index, smoothingFactor)}` : `M ${point}`, '');\n  }\n  computeWidth(index) {\n    return index === this.value.length - 1 ? 2 * ((this.value[index]?.[0] || 0) - this.getX(index)) : this.getX(index + 1) - this.getX(index);\n  }\n  static {\n    this.ɵfac = function TuiLineChart_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiLineChart)();\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: TuiLineChart,\n      selectors: [[\"tui-line-chart\"]],\n      viewQuery: function TuiLineChart_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(TuiHintHover, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.drivers = _t);\n        }\n      },\n      hostBindings: function TuiLineChart_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"mouseleave\", function TuiLineChart_mouseleave_HostBindingHandler() {\n            return ctx.onMouseLeave();\n          });\n        }\n      },\n      inputs: {\n        x: \"x\",\n        y: \"y\",\n        width: \"width\",\n        height: \"height\",\n        smoothingFactor: \"smoothingFactor\",\n        xStringify: \"xStringify\",\n        yStringify: \"yStringify\",\n        filled: \"filled\",\n        dots: \"dots\",\n        valueSetter: [0, \"value\", \"valueSetter\"]\n      },\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([ResizeObserverService], [tuiHintOptionsProvider({\n        direction: 'top',\n        hideDelay: 0\n      })]), i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n      decls: 2,\n      vars: 3,\n      consts: [[\"hintHost\", \"\"], [4, \"tuiLet\"], [\"focusable\", \"false\", \"height\", \"100%\", \"preserveAspectRatio\", \"none\", \"width\", \"100%\", \"xmlns\", \"http://www.w3.org/2000/svg\", 1, \"t-svg\"], [\"x1\", \"0\", \"x2\", \"0\", \"y1\", \"1\", \"y2\", \"0\"], [\"offset\", \"0%\", \"stop-color\", \"currentColor\", \"stop-opacity\", \"0.5\"], [\"offset\", \"100%\", \"stop-color\", \"currentColor\", \"stop-opacity\", \"0\"], [\"stroke\", \"none\"], [\"fill\", \"none\", \"stroke\", \"currentColor\", \"stroke-width\", \"2\", \"vector-effect\", \"non-scaling-stroke\"], [4, \"ngIf\"], [\"class\", \"t-dot\", 3, \"bottom\", \"left\", 4, \"ngFor\", \"ngForOf\"], [1, \"t-dot\"], [4, \"ngFor\", \"ngForOf\"], [\"class\", \"t-column\", 3, \"t-column_hint_hovered\", \"t-column_hovered\", \"left\", \"width\", \"tuiHint\", \"tuiHintContext\", \"tuiHintDescribe\", \"tuiHintHost\", \"mouseenter\", 4, \"ngIf\"], [\"class\", \"t-line t-line_horizontal\", 3, \"bottom\", 4, \"ngIf\"], [1, \"t-column\", 3, \"mouseenter\", \"tuiHint\", \"tuiHintContext\", \"tuiHintDescribe\", \"tuiHintHost\"], [1, \"t-line\", \"t-line_vertical\"], [1, \"t-host\", 3, \"id\", \"tabIndex\"], [1, \"t-line\", \"t-line_horizontal\"], [\"class\", \"t-hint t-hint_x\", 3, \"left\", 4, \"ngIf\"], [\"class\", \"t-hint t-hint_y\", 3, \"bottom\", 4, \"ngIf\"], [1, \"t-hint\", \"t-hint_x\"], [1, \"t-hint\", \"t-hint_y\"]],\n      template: function TuiLineChart_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, TuiLineChart_ng_container_0_Template, 11, 8, \"ng-container\", 1);\n          i0.ɵɵpipe(1, \"async\");\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"tuiLet\", i0.ɵɵpipeBind1(1, 1, ctx.hovered$));\n        }\n      },\n      dependencies: [AsyncPipe, NgForOf, NgIf, i1.TuiHintDirective, i1.TuiHintDescribe, i1.TuiHintHost, TuiLet],\n      styles: [\"[_nghost-%COMP%]{display:flex;inline-size:100%;block-size:100%;pointer-events:none}.t-svg[_ngcontent-%COMP%]{block-size:calc(100% + 1px);transform:scaleY(-1);margin:-.03125rem 0}.t-column[_ngcontent-%COMP%]{position:absolute;top:0;block-size:100%;pointer-events:auto}.t-dot[_ngcontent-%COMP%]{position:absolute;inline-size:.375rem;block-size:.375rem;border-radius:100%;background:currentColor;margin:-.1875rem;box-shadow:0 0 0 2px #fff}.t-host[_ngcontent-%COMP%]{position:absolute;left:50%;inline-size:.5rem;block-size:.5rem;border-radius:100%;opacity:0;background:#fff;margin:-.25rem;box-shadow:0 0 0 2px currentColor,0 .0625rem .1875rem .125rem #0000001a;outline:none;pointer-events:none}.t-host[_ngcontent-%COMP%]:focus, .t-column_hovered[_ngcontent-%COMP%]   .t-host[_ngcontent-%COMP%], .t-column[_ngcontent-%COMP%]:hover   .t-host[_ngcontent-%COMP%], .t-column_hint_hovered[_ngcontent-%COMP%]   .t-host[_ngcontent-%COMP%]{opacity:1}.t-line[_ngcontent-%COMP%]{position:absolute;opacity:0;background:var(--tui-border-normal)}.t-line_vertical[_ngcontent-%COMP%]{top:0;bottom:0;left:50%;inline-size:1px}.t-line_horizontal[_ngcontent-%COMP%]{z-index:-1;inline-size:100%;block-size:1px}[style^=\\\"z-index: 0\\\"][_nghost-%COMP%]   .t-column_hovered[_ngcontent-%COMP%]   .t-line[_ngcontent-%COMP%], [_nghost-%COMP%]:not([style])   .t-column[_ngcontent-%COMP%]:hover   .t-line[_ngcontent-%COMP%], [_nghost-%COMP%]:not([style])   .t-column_hint_hovered[_ngcontent-%COMP%]   .t-line[_ngcontent-%COMP%], [style^=\\\"z-index: 0\\\"][_nghost-%COMP%]   .t-column_hovered[_ngcontent-%COMP%] + .t-line[_ngcontent-%COMP%], [_nghost-%COMP%]:not([style])   .t-column[_ngcontent-%COMP%]:hover + .t-line[_ngcontent-%COMP%], [_nghost-%COMP%]:not([style])   .t-column_hint_hovered[_ngcontent-%COMP%] + .t-line[_ngcontent-%COMP%]{opacity:1}.t-hint[_ngcontent-%COMP%]{position:absolute;box-shadow:var(--tui-shadow-small);font:var(--tui-font-text-xs);block-size:1.25rem;line-height:1.25rem;margin-bottom:-.625rem;padding:0 .375rem;white-space:nowrap;color:var(--tui-text-primary);background:var(--tui-background-base);transform:translate3d(-50%,0,0)}.t-hint_x[_ngcontent-%COMP%]{bottom:0}.t-hint_y[_ngcontent-%COMP%]{left:0}\"],\n      changeDetection: 0\n    });\n  }\n}\n__decorate([tuiPure], TuiLineChart.prototype, \"hovered$\", null);\n__decorate([tuiPure], TuiLineChart.prototype, \"getD\", null);\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiLineChart, [{\n    type: Component,\n    args: [{\n      standalone: true,\n      selector: 'tui-line-chart',\n      imports: [AsyncPipe, NgForOf, NgIf, TuiHint, TuiLet],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [ResizeObserverService],\n      viewProviders: [tuiHintOptionsProvider({\n        direction: 'top',\n        hideDelay: 0\n      })],\n      host: {\n        '(mouseleave)': 'onMouseLeave()'\n      },\n      template: \"<ng-container *tuiLet=\\\"hovered$ | async as hovered\\\">\\n    <svg\\n        focusable=\\\"false\\\"\\n        height=\\\"100%\\\"\\n        preserveAspectRatio=\\\"none\\\"\\n        width=\\\"100%\\\"\\n        xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n        class=\\\"t-svg\\\"\\n        [attr.viewBox]=\\\"viewBox()\\\"\\n    >\\n        <defs>\\n            <linearGradient\\n                x1=\\\"0\\\"\\n                x2=\\\"0\\\"\\n                y1=\\\"1\\\"\\n                y2=\\\"0\\\"\\n                [attr.id]=\\\"fillId\\\"\\n            >\\n                <stop\\n                    offset=\\\"0%\\\"\\n                    stop-color=\\\"currentColor\\\"\\n                    stop-opacity=\\\"0.5\\\"\\n                />\\n                <stop\\n                    offset=\\\"100%\\\"\\n                    stop-color=\\\"currentColor\\\"\\n                    stop-opacity=\\\"0\\\"\\n                />\\n            </linearGradient>\\n        </defs>\\n        <path\\n            stroke=\\\"none\\\"\\n            [attr.d]=\\\"fillD\\\"\\n            [attr.fill]=\\\"fill\\\"\\n        />\\n        <path\\n            fill=\\\"none\\\"\\n            stroke=\\\"currentColor\\\"\\n            stroke-width=\\\"2\\\"\\n            vector-effect=\\\"non-scaling-stroke\\\"\\n            [attr.d]=\\\"d\\\"\\n        />\\n    </svg>\\n    <ng-container *ngIf=\\\"dots\\\">\\n        <div\\n            *ngFor=\\\"let point of value\\\"\\n            class=\\\"t-dot\\\"\\n            [style.bottom.%]=\\\"getBottom(point[1])\\\"\\n            [style.left.%]=\\\"getLeft(point[0])\\\"\\n        ></div>\\n    </ng-container>\\n    <ng-container *ngIf=\\\"hasHints\\\">\\n        <ng-container *ngFor=\\\"let point of value; let index = index\\\">\\n            <!-- TODO: Fix hint type -->\\n            <div\\n                *ngIf=\\\"value.length > 1 || dots\\\"\\n                class=\\\"t-column\\\"\\n                [class.t-column_hint_hovered]=\\\"drivers.get(index) | async\\\"\\n                [class.t-column_hovered]=\\\"hovered === index\\\"\\n                [style.left.%]=\\\"getLeft(getX(index))\\\"\\n                [style.width.%]=\\\"getWidth(index)\\\"\\n                [tuiHint]=\\\"$any(hintDirective?.hint || hintContent)\\\"\\n                [tuiHintContext]=\\\"{$implicit: getImplicit(point), index: index}\\\"\\n                [tuiHintDescribe]=\\\"isFocusable ? getHintId(index) : null\\\"\\n                [tuiHintHost]=\\\"hintHost\\\"\\n                (mouseenter)=\\\"onMouseEnter(index)\\\"\\n            >\\n                <div\\n                    class=\\\"t-line t-line_vertical\\\"\\n                    [style.left.%]=\\\"getOffset(index)\\\"\\n                ></div>\\n                <div\\n                    #hintHost\\n                    class=\\\"t-host\\\"\\n                    [id]=\\\"getHintId(index)\\\"\\n                    [style.bottom.%]=\\\"getBottom(point[1])\\\"\\n                    [style.left.%]=\\\"getOffset(index)\\\"\\n                    [tabIndex]=\\\"isFocusable ? 0 : -1\\\"\\n                ></div>\\n            </div>\\n            <div\\n                *ngIf=\\\"isFocusable\\\"\\n                class=\\\"t-line t-line_horizontal\\\"\\n                [style.bottom.%]=\\\"getBottom(point[1])\\\"\\n            ></div>\\n        </ng-container>\\n    </ng-container>\\n    <ng-container *ngIf=\\\"getHovered(hovered) as point\\\">\\n        <div\\n            *ngIf=\\\"xStringify\\\"\\n            class=\\\"t-hint t-hint_x\\\"\\n            [style.left.%]=\\\"getLeft(point[0])\\\"\\n        >\\n            {{ xStringify(point[0]) }}\\n        </div>\\n        <div\\n            *ngIf=\\\"yStringify\\\"\\n            class=\\\"t-hint t-hint_y\\\"\\n            [style.bottom.%]=\\\"getBottom(point[1])\\\"\\n        >\\n            {{ yStringify(point[1]) }}\\n        </div>\\n    </ng-container>\\n</ng-container>\\n\",\n      styles: [\":host{display:flex;inline-size:100%;block-size:100%;pointer-events:none}.t-svg{block-size:calc(100% + 1px);transform:scaleY(-1);margin:-.03125rem 0}.t-column{position:absolute;top:0;block-size:100%;pointer-events:auto}.t-dot{position:absolute;inline-size:.375rem;block-size:.375rem;border-radius:100%;background:currentColor;margin:-.1875rem;box-shadow:0 0 0 2px #fff}.t-host{position:absolute;left:50%;inline-size:.5rem;block-size:.5rem;border-radius:100%;opacity:0;background:#fff;margin:-.25rem;box-shadow:0 0 0 2px currentColor,0 .0625rem .1875rem .125rem #0000001a;outline:none;pointer-events:none}.t-host:focus,.t-column_hovered .t-host,.t-column:hover .t-host,.t-column_hint_hovered .t-host{opacity:1}.t-line{position:absolute;opacity:0;background:var(--tui-border-normal)}.t-line_vertical{top:0;bottom:0;left:50%;inline-size:1px}.t-line_horizontal{z-index:-1;inline-size:100%;block-size:1px}:host[style^=\\\"z-index: 0\\\"] .t-column_hovered .t-line,:host:not([style]) .t-column:hover .t-line,:host:not([style]) .t-column_hint_hovered .t-line,:host[style^=\\\"z-index: 0\\\"] .t-column_hovered+.t-line,:host:not([style]) .t-column:hover+.t-line,:host:not([style]) .t-column_hint_hovered+.t-line{opacity:1}.t-hint{position:absolute;box-shadow:var(--tui-shadow-small);font:var(--tui-font-text-xs);block-size:1.25rem;line-height:1.25rem;margin-bottom:-.625rem;padding:0 .375rem;white-space:nowrap;color:var(--tui-text-primary);background:var(--tui-background-base);transform:translate3d(-50%,0,0)}.t-hint_x{bottom:0}.t-hint_y{left:0}\\n\"]\n    }]\n  }], null, {\n    drivers: [{\n      type: ViewChildren,\n      args: [TuiHintHover]\n    }],\n    x: [{\n      type: Input\n    }],\n    y: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    smoothingFactor: [{\n      type: Input\n    }],\n    xStringify: [{\n      type: Input\n    }],\n    yStringify: [{\n      type: Input\n    }],\n    filled: [{\n      type: Input\n    }],\n    dots: [{\n      type: Input\n    }],\n    valueSetter: [{\n      type: Input,\n      args: ['value']\n    }],\n    hovered$: [],\n    getD: []\n  });\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TUI_LINE_CHART_DEFAULT_OPTIONS, TUI_LINE_CHART_OPTIONS, TuiLineChart, TuiLineChartHint, tuiLineChartDrivers, tuiLineChartOptionsProvider };","map":{"version":3,"names":["__decorate","AsyncPipe","NgForOf","NgIf","i0","inject","Renderer2","DestroyRef","NgZone","ElementRef","Directive","ContentChildren","forwardRef","Input","signal","computed","Component","ChangeDetectionStrategy","ViewChildren","takeUntilDestroyed","toSignal","ResizeObserverService","tuiDraw","EMPTY_QUERY","TuiLet","tuiZonefree","tuiQueryListChanges","tuiZoneOptimized","tuiInjectId","tuiCreateToken","tuiProvideOptions","tuiPure","tuiIsPresent","i1","TuiHintOptionsDirective","TuiHintHover","tuiHintOptionsProvider","TuiHint","combineLatest","filter","map","startWith","switchMap","distinctUntilChanged","Subject","TuiHoveredService","_c0","a0","a1","$implicit","index","TuiLineChart_ng_container_0_ng_container_8_div_1_Template","rf","ctx","ɵɵelement","point_r1","ctx_r1","ɵɵnextContext","ɵɵstyleProp","getBottom","getLeft","TuiLineChart_ng_container_0_ng_container_8_Template","ɵɵelementContainerStart","ɵɵtemplate","ɵɵelementContainerEnd","ɵɵadvance","ɵɵproperty","value","TuiLineChart_ng_container_0_ng_container_9_ng_container_1_div_1_Template","_r3","ɵɵgetCurrentView","ɵɵelementStart","ɵɵpipe","ɵɵlistener","TuiLineChart_ng_container_0_ng_container_9_ng_container_1_div_1_Template_div_mouseenter_0_listener","ɵɵrestoreView","index_r4","ɵɵresetView","onMouseEnter","ɵɵelementEnd","hintHost_r5","ɵɵreference","ctx_r5","point_r7","hovered_r8","tuiLet","getX","getWidth","ɵɵclassProp","ɵɵpipeBind1","drivers","get","hintDirective","hint","hintContent","ɵɵpureFunction2","getImplicit","isFocusable","getHintId","getOffset","TuiLineChart_ng_container_0_ng_container_9_ng_container_1_div_2_Template","TuiLineChart_ng_container_0_ng_container_9_ng_container_1_Template","length","dots","TuiLineChart_ng_container_0_ng_container_9_Template","TuiLineChart_ng_container_0_ng_container_10_div_1_Template","ɵɵtext","point_r9","ngIf","ɵɵtextInterpolate1","xStringify","TuiLineChart_ng_container_0_ng_container_10_div_2_Template","yStringify","TuiLineChart_ng_container_0_ng_container_10_Template","TuiLineChart_ng_container_0_Template","ɵɵnamespaceSVG","ɵɵattribute","viewBox","fillId","fillD","fill","d","hasHints","getHovered","TUI_LINE_CHART_DEFAULT_OPTIONS","filled","smoothingFactor","TUI_LINE_CHART_OPTIONS","tuiLineChartOptionsProvider","options","TuiLineChartHint","constructor","charts","chartsRef","renderer","destroyRef","zone","hovered$","ngAfterViewInit","tuiLineChartDrivers","pipe","result","some","Boolean","subscribe","forEach","chart","onHovered","NaN","getContext","_chart","computeContext","raise","current","sorted","sort","a","b","nativeElement","setStyle","indexOf","values","_","ɵfac","TuiLineChartHint_Factory","__ngFactoryType__","ɵdir","ɵɵdefineDirective","type","selectors","contentQueries","TuiLineChartHint_ContentQueries","dirIndex","ɵɵcontentQuery","TuiLineChart","_t","ɵɵqueryRefresh","ɵɵloadQuery","inputs","standalone","features","ɵɵProvidersFeature","prototype","ngDevMode","ɵsetClassMetadata","args","selector","providers","read","driver","all","reduce","acc","concat","hover$","autoId","resize","self","e","contentRect","height","initialValue","box","optional","hintOptions","offset","x","y","width","split","Number","valueSetter","item","isNaN","ngOnChanges","set","next","content","getD","onMouseLeave","isSinglePoint","computeWidth","hovered","isInteger","point","TuiLineChart_Factory","ɵcmp","ɵɵdefineComponent","viewQuery","TuiLineChart_Query","ɵɵviewQuery","hostBindings","TuiLineChart_HostBindings","TuiLineChart_mouseleave_HostBindingHandler","direction","hideDelay","ɵɵNgOnChangesFeature","ɵɵStandaloneFeature","decls","vars","consts","template","TuiLineChart_Template","dependencies","TuiHintDirective","TuiHintDescribe","TuiHintHost","styles","changeDetection","imports","OnPush","viewProviders","host"],"sources":["C:/Users/Asus-PC/Downloads/WebLibraryNew/WebLibrary/WebLibraryApp/Frontend/node_modules/@taiga-ui/addon-charts/fesm2022/taiga-ui-addon-charts-components-line-chart.mjs"],"sourcesContent":["import { __decorate } from 'tslib';\nimport { AsyncPipe, NgForOf, NgIf } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { inject, Renderer2, DestroyRef, NgZone, ElementRef, Directive, ContentChildren, forwardRef, Input, signal, computed, Component, ChangeDetectionStrategy, ViewChildren } from '@angular/core';\nimport { takeUntilDestroyed, toSignal } from '@angular/core/rxjs-interop';\nimport { ResizeObserverService } from '@ng-web-apis/resize-observer';\nimport { tuiDraw } from '@taiga-ui/addon-charts/utils';\nimport { EMPTY_QUERY } from '@taiga-ui/cdk/constants';\nimport { TuiLet } from '@taiga-ui/cdk/directives/let';\nimport { tuiZonefree, tuiQueryListChanges, tuiZoneOptimized } from '@taiga-ui/cdk/observables';\nimport { tuiInjectId } from '@taiga-ui/cdk/services';\nimport { tuiCreateToken, tuiProvideOptions, tuiPure, tuiIsPresent } from '@taiga-ui/cdk/utils/miscellaneous';\nimport * as i1 from '@taiga-ui/core/directives/hint';\nimport { TuiHintOptionsDirective, TuiHintHover, tuiHintOptionsProvider, TuiHint } from '@taiga-ui/core/directives/hint';\nimport { combineLatest, filter, map, startWith, switchMap, distinctUntilChanged, Subject } from 'rxjs';\nimport { TuiHoveredService } from '@taiga-ui/cdk/directives/hovered';\n\nconst TUI_LINE_CHART_DEFAULT_OPTIONS = {\n    dots: false,\n    filled: false,\n    smoothingFactor: 0,\n};\nconst TUI_LINE_CHART_OPTIONS = tuiCreateToken(TUI_LINE_CHART_DEFAULT_OPTIONS);\nfunction tuiLineChartOptionsProvider(options) {\n    return tuiProvideOptions(TUI_LINE_CHART_OPTIONS, options, TUI_LINE_CHART_DEFAULT_OPTIONS);\n}\n\nclass TuiLineChartHint {\n    constructor() {\n        this.charts = EMPTY_QUERY;\n        this.chartsRef = EMPTY_QUERY;\n        this.renderer = inject(Renderer2);\n        this.destroyRef = inject(DestroyRef);\n        this.zone = inject(NgZone);\n        this.hovered$ = inject(TuiHoveredService);\n    }\n    ngAfterViewInit() {\n        combineLatest([tuiLineChartDrivers(this.charts), this.hovered$])\n            .pipe(filter((result) => !result.some(Boolean)), tuiZonefree(this.zone), takeUntilDestroyed(this.destroyRef))\n            .subscribe(() => {\n            this.charts.forEach((chart) => chart.onHovered(NaN));\n        });\n    }\n    // _chart is required by TuiLineDaysChartComponent that impersonates this directive\n    getContext(index, _chart) {\n        return this.computeContext(...this.charts.map(({ value }) => value))[index] || [];\n    }\n    // _chart is required by TuiLineDaysChartComponent that impersonates this directive\n    raise(index, _chart) {\n        const current = this.charts.map((chart) => chart.value[index] ?? [0, 0]);\n        const sorted = [...current].sort((a, b) => a[1] - b[1]);\n        this.charts.forEach((chart) => chart.onHovered(index));\n        this.chartsRef.forEach(({ nativeElement }, index) => this.renderer.setStyle(nativeElement, 'z-index', sorted.indexOf(current[index] ?? [0, 0])));\n    }\n    computeContext(...values) {\n        return (values[0] || []).map((_, index) => values.map((value) => value[index] ?? [0, 0]));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiLineChartHint, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiLineChartHint, isStandalone: true, selector: \"[tuiLineChartHint]\", inputs: { hint: [\"tuiLineChartHint\", \"hint\"] }, providers: [TuiHoveredService], queries: [{ propertyName: \"charts\", predicate: i0.forwardRef(function () { return TuiLineChart; }) }, { propertyName: \"chartsRef\", predicate: i0.forwardRef(function () { return TuiLineChart; }), read: ElementRef }], ngImport: i0 }); }\n}\n__decorate([\n    tuiPure\n], TuiLineChartHint.prototype, \"computeContext\", null);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiLineChartHint, decorators: [{\n            type: Directive,\n            args: [{\n                    standalone: true,\n                    selector: '[tuiLineChartHint]',\n                    providers: [TuiHoveredService],\n                }]\n        }], propDecorators: { charts: [{\n                type: ContentChildren,\n                args: [forwardRef(() => TuiLineChart)]\n            }], chartsRef: [{\n                type: ContentChildren,\n                args: [forwardRef(() => TuiLineChart), { read: ElementRef }]\n            }], hint: [{\n                type: Input,\n                args: ['tuiLineChartHint']\n            }], computeContext: [] } });\nfunction tuiLineChartDrivers(charts) {\n    return combineLatest(charts.map(({ drivers }) => tuiQueryListChanges(drivers).pipe(map((drivers) => drivers.map((driver) => driver.pipe(startWith(false))))))).pipe(map((all) => all.reduce((acc, drivers) => acc.concat(drivers), [])), switchMap((drivers) => combineLatest(drivers)), map((values) => values.some(Boolean)), distinctUntilChanged());\n}\n\nclass TuiLineChart {\n    constructor() {\n        this.zone = inject(NgZone);\n        this.options = inject(TUI_LINE_CHART_OPTIONS);\n        this.hover$ = new Subject();\n        this.autoId = tuiInjectId();\n        this.resize = toSignal(inject(ResizeObserverService, { self: true }).pipe(map(([e]) => e?.contentRect.height || 0)), { initialValue: 0 });\n        this.box = signal('');\n        this.hintDirective = inject(TuiLineChartHint, { optional: true });\n        this.hintOptions = inject(TuiHintOptionsDirective, { optional: true });\n        this.viewBox = computed(() => {\n            const offset = this.height / this.resize();\n            const [x = 0, y = 0, width = 0, height = 0] = this.box().split(' ').map(Number);\n            return `${x} ${y - offset} ${width} ${height + 2 * offset}`;\n        });\n        this.drivers = EMPTY_QUERY;\n        this.x = 0;\n        this.y = 0;\n        this.width = 0;\n        this.height = 0;\n        this.smoothingFactor = this.options.smoothingFactor;\n        this.xStringify = null;\n        this.yStringify = null;\n        this.filled = this.options.filled;\n        this.dots = this.options.dots;\n        this.value = [];\n    }\n    set valueSetter(value) {\n        this.value = value.filter((item) => !item.some(Number.isNaN));\n    }\n    ngOnChanges() {\n        this.box.set(`${this.x} ${this.y} ${this.width} ${this.height}`);\n    }\n    onHovered(index) {\n        this.hover$.next(index);\n    }\n    get hovered$() {\n        return this.hover$.pipe(distinctUntilChanged(), tuiZoneOptimized(this.zone));\n    }\n    get hintContent() {\n        return this.hintOptions?.content || '';\n    }\n    get fillId() {\n        return `tui-line-chart-${this.autoId}`;\n    }\n    get fill() {\n        return this.filled ? `url(#${this.fillId})` : 'none';\n    }\n    get d() {\n        return this.getD(this.value, this.smoothingFactor);\n    }\n    get fillD() {\n        return this.value.length\n            ? `${this.d}V ${this.y} H ${this.value[0]?.[0]} V ${this.value[0]?.[1]}`\n            : this.d;\n    }\n    get isFocusable() {\n        return !this.hintDirective && this.hasHints;\n    }\n    get hasHints() {\n        return (!!this.xStringify ||\n            !!this.yStringify ||\n            !!this.hintDirective?.hint ||\n            !!this.hintContent);\n    }\n    onMouseLeave() {\n        if (!this.hintDirective) {\n            this.onHovered(NaN);\n        }\n    }\n    getX(index) {\n        if (this.isSinglePoint) {\n            return (this.value[0]?.[0] || 0) / 2;\n        }\n        return index\n            ? ((this.value[index - 1]?.[0] || 0) + (this.value[index]?.[0] || 0)) / 2\n            : 2 * (this.value[0]?.[0] || 0) - this.getX(1);\n    }\n    getWidth(index) {\n        return (100 * this.computeWidth(index)) / this.width;\n    }\n    getHintId(index) {\n        return `${this.autoId}_${index}`;\n    }\n    getImplicit($implicit) {\n        return (this.hintDirective?.getContext(this.value.indexOf($implicit), this) ?? $implicit);\n    }\n    getHovered(hovered) {\n        // This checks for NaN and null too since async pipe returns null before first item\n        return tuiIsPresent(hovered) && Number.isInteger(hovered)\n            ? (this.value[hovered] ?? null)\n            : null;\n    }\n    getBottom(y) {\n        return (100 * (y - this.y)) / this.height;\n    }\n    getLeft(x) {\n        return (100 * (x - this.x)) / this.width;\n    }\n    getOffset(x) {\n        return (100 * ((this.value[x]?.[0] || 0) - this.getX(x))) / this.computeWidth(x);\n    }\n    onMouseEnter(index) {\n        if (this.hintDirective) {\n            this.hintDirective.raise(index, this);\n        }\n        else {\n            this.onHovered(index);\n        }\n    }\n    get isSinglePoint() {\n        return this.value.length === 1;\n    }\n    getD(value, smoothingFactor) {\n        return value.reduce((d, point, index) => index ? `${d} ${tuiDraw(value, index, smoothingFactor)}` : `M ${point}`, '');\n    }\n    computeWidth(index) {\n        return index === this.value.length - 1\n            ? 2 * ((this.value[index]?.[0] || 0) - this.getX(index))\n            : this.getX(index + 1) - this.getX(index);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiLineChart, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiLineChart, isStandalone: true, selector: \"tui-line-chart\", inputs: { x: \"x\", y: \"y\", width: \"width\", height: \"height\", smoothingFactor: \"smoothingFactor\", xStringify: \"xStringify\", yStringify: \"yStringify\", filled: \"filled\", dots: \"dots\", valueSetter: [\"value\", \"valueSetter\"] }, host: { listeners: { \"mouseleave\": \"onMouseLeave()\" } }, providers: [ResizeObserverService], viewQueries: [{ propertyName: \"drivers\", predicate: TuiHintHover, descendants: true }], usesOnChanges: true, ngImport: i0, template: \"<ng-container *tuiLet=\\\"hovered$ | async as hovered\\\">\\n    <svg\\n        focusable=\\\"false\\\"\\n        height=\\\"100%\\\"\\n        preserveAspectRatio=\\\"none\\\"\\n        width=\\\"100%\\\"\\n        xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n        class=\\\"t-svg\\\"\\n        [attr.viewBox]=\\\"viewBox()\\\"\\n    >\\n        <defs>\\n            <linearGradient\\n                x1=\\\"0\\\"\\n                x2=\\\"0\\\"\\n                y1=\\\"1\\\"\\n                y2=\\\"0\\\"\\n                [attr.id]=\\\"fillId\\\"\\n            >\\n                <stop\\n                    offset=\\\"0%\\\"\\n                    stop-color=\\\"currentColor\\\"\\n                    stop-opacity=\\\"0.5\\\"\\n                />\\n                <stop\\n                    offset=\\\"100%\\\"\\n                    stop-color=\\\"currentColor\\\"\\n                    stop-opacity=\\\"0\\\"\\n                />\\n            </linearGradient>\\n        </defs>\\n        <path\\n            stroke=\\\"none\\\"\\n            [attr.d]=\\\"fillD\\\"\\n            [attr.fill]=\\\"fill\\\"\\n        />\\n        <path\\n            fill=\\\"none\\\"\\n            stroke=\\\"currentColor\\\"\\n            stroke-width=\\\"2\\\"\\n            vector-effect=\\\"non-scaling-stroke\\\"\\n            [attr.d]=\\\"d\\\"\\n        />\\n    </svg>\\n    <ng-container *ngIf=\\\"dots\\\">\\n        <div\\n            *ngFor=\\\"let point of value\\\"\\n            class=\\\"t-dot\\\"\\n            [style.bottom.%]=\\\"getBottom(point[1])\\\"\\n            [style.left.%]=\\\"getLeft(point[0])\\\"\\n        ></div>\\n    </ng-container>\\n    <ng-container *ngIf=\\\"hasHints\\\">\\n        <ng-container *ngFor=\\\"let point of value; let index = index\\\">\\n            <!-- TODO: Fix hint type -->\\n            <div\\n                *ngIf=\\\"value.length > 1 || dots\\\"\\n                class=\\\"t-column\\\"\\n                [class.t-column_hint_hovered]=\\\"drivers.get(index) | async\\\"\\n                [class.t-column_hovered]=\\\"hovered === index\\\"\\n                [style.left.%]=\\\"getLeft(getX(index))\\\"\\n                [style.width.%]=\\\"getWidth(index)\\\"\\n                [tuiHint]=\\\"$any(hintDirective?.hint || hintContent)\\\"\\n                [tuiHintContext]=\\\"{$implicit: getImplicit(point), index: index}\\\"\\n                [tuiHintDescribe]=\\\"isFocusable ? getHintId(index) : null\\\"\\n                [tuiHintHost]=\\\"hintHost\\\"\\n                (mouseenter)=\\\"onMouseEnter(index)\\\"\\n            >\\n                <div\\n                    class=\\\"t-line t-line_vertical\\\"\\n                    [style.left.%]=\\\"getOffset(index)\\\"\\n                ></div>\\n                <div\\n                    #hintHost\\n                    class=\\\"t-host\\\"\\n                    [id]=\\\"getHintId(index)\\\"\\n                    [style.bottom.%]=\\\"getBottom(point[1])\\\"\\n                    [style.left.%]=\\\"getOffset(index)\\\"\\n                    [tabIndex]=\\\"isFocusable ? 0 : -1\\\"\\n                ></div>\\n            </div>\\n            <div\\n                *ngIf=\\\"isFocusable\\\"\\n                class=\\\"t-line t-line_horizontal\\\"\\n                [style.bottom.%]=\\\"getBottom(point[1])\\\"\\n            ></div>\\n        </ng-container>\\n    </ng-container>\\n    <ng-container *ngIf=\\\"getHovered(hovered) as point\\\">\\n        <div\\n            *ngIf=\\\"xStringify\\\"\\n            class=\\\"t-hint t-hint_x\\\"\\n            [style.left.%]=\\\"getLeft(point[0])\\\"\\n        >\\n            {{ xStringify(point[0]) }}\\n        </div>\\n        <div\\n            *ngIf=\\\"yStringify\\\"\\n            class=\\\"t-hint t-hint_y\\\"\\n            [style.bottom.%]=\\\"getBottom(point[1])\\\"\\n        >\\n            {{ yStringify(point[1]) }}\\n        </div>\\n    </ng-container>\\n</ng-container>\\n\", styles: [\":host{display:flex;inline-size:100%;block-size:100%;pointer-events:none}.t-svg{block-size:calc(100% + 1px);transform:scaleY(-1);margin:-.03125rem 0}.t-column{position:absolute;top:0;block-size:100%;pointer-events:auto}.t-dot{position:absolute;inline-size:.375rem;block-size:.375rem;border-radius:100%;background:currentColor;margin:-.1875rem;box-shadow:0 0 0 2px #fff}.t-host{position:absolute;left:50%;inline-size:.5rem;block-size:.5rem;border-radius:100%;opacity:0;background:#fff;margin:-.25rem;box-shadow:0 0 0 2px currentColor,0 .0625rem .1875rem .125rem #0000001a;outline:none;pointer-events:none}.t-host:focus,.t-column_hovered .t-host,.t-column:hover .t-host,.t-column_hint_hovered .t-host{opacity:1}.t-line{position:absolute;opacity:0;background:var(--tui-border-normal)}.t-line_vertical{top:0;bottom:0;left:50%;inline-size:1px}.t-line_horizontal{z-index:-1;inline-size:100%;block-size:1px}:host[style^=\\\"z-index: 0\\\"] .t-column_hovered .t-line,:host:not([style]) .t-column:hover .t-line,:host:not([style]) .t-column_hint_hovered .t-line,:host[style^=\\\"z-index: 0\\\"] .t-column_hovered+.t-line,:host:not([style]) .t-column:hover+.t-line,:host:not([style]) .t-column_hint_hovered+.t-line{opacity:1}.t-hint{position:absolute;box-shadow:var(--tui-shadow-small);font:var(--tui-font-text-xs);block-size:1.25rem;line-height:1.25rem;margin-bottom:-.625rem;padding:0 .375rem;white-space:nowrap;color:var(--tui-text-primary);background:var(--tui-background-base);transform:translate3d(-50%,0,0)}.t-hint_x{bottom:0}.t-hint_y{left:0}\\n\"], dependencies: [{ kind: \"pipe\", type: AsyncPipe, name: \"async\" }, { kind: \"directive\", type: NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.TuiHintDirective, selector: \"[tuiHint]:not(ng-container):not(ng-template)\", inputs: [\"tuiHintContext\", \"tuiHintAppearance\", \"tuiHint\"] }, { kind: \"directive\", type: i1.TuiHintDescribe, selector: \"[tuiHintDescribe]\", inputs: [\"tuiHintDescribe\"] }, { kind: \"directive\", type: i1.TuiHintHost, selector: \"[tuiHint][tuiHintHost]\", inputs: [\"tuiHintHost\"] }, { kind: \"directive\", type: TuiLet, selector: \"[tuiLet]\", inputs: [\"tuiLet\"] }], viewProviders: [tuiHintOptionsProvider({ direction: 'top', hideDelay: 0 })], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\n__decorate([\n    tuiPure\n], TuiLineChart.prototype, \"hovered$\", null);\n__decorate([\n    tuiPure\n], TuiLineChart.prototype, \"getD\", null);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiLineChart, decorators: [{\n            type: Component,\n            args: [{ standalone: true, selector: 'tui-line-chart', imports: [AsyncPipe, NgForOf, NgIf, TuiHint, TuiLet], changeDetection: ChangeDetectionStrategy.OnPush, providers: [ResizeObserverService], viewProviders: [tuiHintOptionsProvider({ direction: 'top', hideDelay: 0 })], host: {\n                        '(mouseleave)': 'onMouseLeave()',\n                    }, template: \"<ng-container *tuiLet=\\\"hovered$ | async as hovered\\\">\\n    <svg\\n        focusable=\\\"false\\\"\\n        height=\\\"100%\\\"\\n        preserveAspectRatio=\\\"none\\\"\\n        width=\\\"100%\\\"\\n        xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n        class=\\\"t-svg\\\"\\n        [attr.viewBox]=\\\"viewBox()\\\"\\n    >\\n        <defs>\\n            <linearGradient\\n                x1=\\\"0\\\"\\n                x2=\\\"0\\\"\\n                y1=\\\"1\\\"\\n                y2=\\\"0\\\"\\n                [attr.id]=\\\"fillId\\\"\\n            >\\n                <stop\\n                    offset=\\\"0%\\\"\\n                    stop-color=\\\"currentColor\\\"\\n                    stop-opacity=\\\"0.5\\\"\\n                />\\n                <stop\\n                    offset=\\\"100%\\\"\\n                    stop-color=\\\"currentColor\\\"\\n                    stop-opacity=\\\"0\\\"\\n                />\\n            </linearGradient>\\n        </defs>\\n        <path\\n            stroke=\\\"none\\\"\\n            [attr.d]=\\\"fillD\\\"\\n            [attr.fill]=\\\"fill\\\"\\n        />\\n        <path\\n            fill=\\\"none\\\"\\n            stroke=\\\"currentColor\\\"\\n            stroke-width=\\\"2\\\"\\n            vector-effect=\\\"non-scaling-stroke\\\"\\n            [attr.d]=\\\"d\\\"\\n        />\\n    </svg>\\n    <ng-container *ngIf=\\\"dots\\\">\\n        <div\\n            *ngFor=\\\"let point of value\\\"\\n            class=\\\"t-dot\\\"\\n            [style.bottom.%]=\\\"getBottom(point[1])\\\"\\n            [style.left.%]=\\\"getLeft(point[0])\\\"\\n        ></div>\\n    </ng-container>\\n    <ng-container *ngIf=\\\"hasHints\\\">\\n        <ng-container *ngFor=\\\"let point of value; let index = index\\\">\\n            <!-- TODO: Fix hint type -->\\n            <div\\n                *ngIf=\\\"value.length > 1 || dots\\\"\\n                class=\\\"t-column\\\"\\n                [class.t-column_hint_hovered]=\\\"drivers.get(index) | async\\\"\\n                [class.t-column_hovered]=\\\"hovered === index\\\"\\n                [style.left.%]=\\\"getLeft(getX(index))\\\"\\n                [style.width.%]=\\\"getWidth(index)\\\"\\n                [tuiHint]=\\\"$any(hintDirective?.hint || hintContent)\\\"\\n                [tuiHintContext]=\\\"{$implicit: getImplicit(point), index: index}\\\"\\n                [tuiHintDescribe]=\\\"isFocusable ? getHintId(index) : null\\\"\\n                [tuiHintHost]=\\\"hintHost\\\"\\n                (mouseenter)=\\\"onMouseEnter(index)\\\"\\n            >\\n                <div\\n                    class=\\\"t-line t-line_vertical\\\"\\n                    [style.left.%]=\\\"getOffset(index)\\\"\\n                ></div>\\n                <div\\n                    #hintHost\\n                    class=\\\"t-host\\\"\\n                    [id]=\\\"getHintId(index)\\\"\\n                    [style.bottom.%]=\\\"getBottom(point[1])\\\"\\n                    [style.left.%]=\\\"getOffset(index)\\\"\\n                    [tabIndex]=\\\"isFocusable ? 0 : -1\\\"\\n                ></div>\\n            </div>\\n            <div\\n                *ngIf=\\\"isFocusable\\\"\\n                class=\\\"t-line t-line_horizontal\\\"\\n                [style.bottom.%]=\\\"getBottom(point[1])\\\"\\n            ></div>\\n        </ng-container>\\n    </ng-container>\\n    <ng-container *ngIf=\\\"getHovered(hovered) as point\\\">\\n        <div\\n            *ngIf=\\\"xStringify\\\"\\n            class=\\\"t-hint t-hint_x\\\"\\n            [style.left.%]=\\\"getLeft(point[0])\\\"\\n        >\\n            {{ xStringify(point[0]) }}\\n        </div>\\n        <div\\n            *ngIf=\\\"yStringify\\\"\\n            class=\\\"t-hint t-hint_y\\\"\\n            [style.bottom.%]=\\\"getBottom(point[1])\\\"\\n        >\\n            {{ yStringify(point[1]) }}\\n        </div>\\n    </ng-container>\\n</ng-container>\\n\", styles: [\":host{display:flex;inline-size:100%;block-size:100%;pointer-events:none}.t-svg{block-size:calc(100% + 1px);transform:scaleY(-1);margin:-.03125rem 0}.t-column{position:absolute;top:0;block-size:100%;pointer-events:auto}.t-dot{position:absolute;inline-size:.375rem;block-size:.375rem;border-radius:100%;background:currentColor;margin:-.1875rem;box-shadow:0 0 0 2px #fff}.t-host{position:absolute;left:50%;inline-size:.5rem;block-size:.5rem;border-radius:100%;opacity:0;background:#fff;margin:-.25rem;box-shadow:0 0 0 2px currentColor,0 .0625rem .1875rem .125rem #0000001a;outline:none;pointer-events:none}.t-host:focus,.t-column_hovered .t-host,.t-column:hover .t-host,.t-column_hint_hovered .t-host{opacity:1}.t-line{position:absolute;opacity:0;background:var(--tui-border-normal)}.t-line_vertical{top:0;bottom:0;left:50%;inline-size:1px}.t-line_horizontal{z-index:-1;inline-size:100%;block-size:1px}:host[style^=\\\"z-index: 0\\\"] .t-column_hovered .t-line,:host:not([style]) .t-column:hover .t-line,:host:not([style]) .t-column_hint_hovered .t-line,:host[style^=\\\"z-index: 0\\\"] .t-column_hovered+.t-line,:host:not([style]) .t-column:hover+.t-line,:host:not([style]) .t-column_hint_hovered+.t-line{opacity:1}.t-hint{position:absolute;box-shadow:var(--tui-shadow-small);font:var(--tui-font-text-xs);block-size:1.25rem;line-height:1.25rem;margin-bottom:-.625rem;padding:0 .375rem;white-space:nowrap;color:var(--tui-text-primary);background:var(--tui-background-base);transform:translate3d(-50%,0,0)}.t-hint_x{bottom:0}.t-hint_y{left:0}\\n\"] }]\n        }], propDecorators: { drivers: [{\n                type: ViewChildren,\n                args: [TuiHintHover]\n            }], x: [{\n                type: Input\n            }], y: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], smoothingFactor: [{\n                type: Input\n            }], xStringify: [{\n                type: Input\n            }], yStringify: [{\n                type: Input\n            }], filled: [{\n                type: Input\n            }], dots: [{\n                type: Input\n            }], valueSetter: [{\n                type: Input,\n                args: ['value']\n            }], hovered$: [], getD: [] } });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TUI_LINE_CHART_DEFAULT_OPTIONS, TUI_LINE_CHART_OPTIONS, TuiLineChart, TuiLineChartHint, tuiLineChartDrivers, tuiLineChartOptionsProvider };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}