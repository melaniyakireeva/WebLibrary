{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { inject, Pipe } from '@angular/core';\nimport { TUI_COUNTRIES_MASKS } from '@taiga-ui/legacy/tokens';\nimport { tuiIsoToCountryCode } from '@taiga-ui/legacy/utils';\n\n/**\n * @deprecated: drop in v5.0\n * Use `getCountryCallingCode` from `libphonenumber-js/core` instead\n * ```ts\n * import {getCountryCallingCode} from 'libphonenumber-js/core';\n * import metadata from 'libphonenumber-js/max/metadata';\n *\n * getCountryCallingCode('US', metadata) // 1\n * getCountryCallingCode('GB', metadata) // 44\n * ```\n */\nclass TuiIsoToCountryCodePipe {\n  constructor() {\n    this.countriesMasks = inject(TUI_COUNTRIES_MASKS);\n  }\n  /**\n   * @deprecated Use `getCountryCallingCode` from `libphonenumber-js/core` instead\n   * ```ts\n   * import {getCountryCallingCode} from 'libphonenumber-js/core';\n   * import metadata from 'libphonenumber-js/max/metadata';\n   *\n   * getCountryCallingCode('US', metadata) // 1\n   * getCountryCallingCode('GB', metadata) // 44\n   * ```\n   */\n  transform(isoCode) {\n    return tuiIsoToCountryCode(this.countriesMasks, isoCode);\n  }\n  static {\n    this.ɵfac = function TuiIsoToCountryCodePipe_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiIsoToCountryCodePipe)();\n    };\n  }\n  static {\n    this.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n      name: \"tuiIsoToCountryCode\",\n      type: TuiIsoToCountryCodePipe,\n      pure: true,\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiIsoToCountryCodePipe, [{\n    type: Pipe,\n    args: [{\n      standalone: true,\n      name: 'tuiIsoToCountryCode'\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiIsoToCountryCodePipe };","map":{"version":3,"names":["i0","inject","Pipe","TUI_COUNTRIES_MASKS","tuiIsoToCountryCode","TuiIsoToCountryCodePipe","constructor","countriesMasks","transform","isoCode","ɵfac","TuiIsoToCountryCodePipe_Factory","__ngFactoryType__","ɵpipe","ɵɵdefinePipe","name","type","pure","standalone","ngDevMode","ɵsetClassMetadata","args"],"sources":["C:/Users/Asus-PC/Downloads/WebLibraryNew/WebLibrary/WebLibraryApp/Frontend/node_modules/@taiga-ui/legacy/fesm2022/taiga-ui-legacy-pipes-iso-to-country-code.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { inject, Pipe } from '@angular/core';\nimport { TUI_COUNTRIES_MASKS } from '@taiga-ui/legacy/tokens';\nimport { tuiIsoToCountryCode } from '@taiga-ui/legacy/utils';\n\n/**\n * @deprecated: drop in v5.0\n * Use `getCountryCallingCode` from `libphonenumber-js/core` instead\n * ```ts\n * import {getCountryCallingCode} from 'libphonenumber-js/core';\n * import metadata from 'libphonenumber-js/max/metadata';\n *\n * getCountryCallingCode('US', metadata) // 1\n * getCountryCallingCode('GB', metadata) // 44\n * ```\n */\nclass TuiIsoToCountryCodePipe {\n    constructor() {\n        this.countriesMasks = inject(TUI_COUNTRIES_MASKS);\n    }\n    /**\n     * @deprecated Use `getCountryCallingCode` from `libphonenumber-js/core` instead\n     * ```ts\n     * import {getCountryCallingCode} from 'libphonenumber-js/core';\n     * import metadata from 'libphonenumber-js/max/metadata';\n     *\n     * getCountryCallingCode('US', metadata) // 1\n     * getCountryCallingCode('GB', metadata) // 44\n     * ```\n     */\n    transform(isoCode) {\n        return tuiIsoToCountryCode(this.countriesMasks, isoCode);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiIsoToCountryCodePipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe }); }\n    static { this.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"14.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiIsoToCountryCodePipe, isStandalone: true, name: \"tuiIsoToCountryCode\" }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiIsoToCountryCodePipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    standalone: true,\n                    name: 'tuiIsoToCountryCode',\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiIsoToCountryCodePipe };\n"],"mappings":"AAAA,OAAO,KAAKA,EAAE,MAAM,eAAe;AACnC,SAASC,MAAM,EAAEC,IAAI,QAAQ,eAAe;AAC5C,SAASC,mBAAmB,QAAQ,yBAAyB;AAC7D,SAASC,mBAAmB,QAAQ,wBAAwB;;AAE5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,uBAAuB,CAAC;EAC1BC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,cAAc,GAAGN,MAAM,CAACE,mBAAmB,CAAC;EACrD;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIK,SAASA,CAACC,OAAO,EAAE;IACf,OAAOL,mBAAmB,CAAC,IAAI,CAACG,cAAc,EAAEE,OAAO,CAAC;EAC5D;EACA;IAAS,IAAI,CAACC,IAAI,YAAAC,gCAAAC,iBAAA;MAAA,YAAAA,iBAAA,IAAyFP,uBAAuB;IAAA,CAA8C;EAAE;EAClL;IAAS,IAAI,CAACQ,KAAK,kBAD8Eb,EAAE,CAAAc,YAAA;MAAAC,IAAA;MAAAC,IAAA,EACMX,uBAAuB;MAAAY,IAAA;MAAAC,UAAA;IAAA,EAAoD;EAAE;AAC1L;AACA;EAAA,QAAAC,SAAA,oBAAAA,SAAA,KAHqGnB,EAAE,CAAAoB,iBAAA,CAGXf,uBAAuB,EAAc,CAAC;IACtHW,IAAI,EAAEd,IAAI;IACVmB,IAAI,EAAE,CAAC;MACCH,UAAU,EAAE,IAAI;MAChBH,IAAI,EAAE;IACV,CAAC;EACT,CAAC,CAAC;AAAA;;AAEV;AACA;AACA;;AAEA,SAASV,uBAAuB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}