{"ast":null,"code":"import { TuiItem } from '@taiga-ui/cdk/directives/item';\nimport * as i0 from '@angular/core';\nimport { signal, Component, ViewEncapsulation, ChangeDetectionStrategy, inject, TemplateRef, ViewChild, computed, ElementRef, ContentChildren, Input } from '@angular/core';\nimport { tuiButtonOptionsProvider, TuiButton } from '@taiga-ui/core/components/button';\nimport * as i1$1 from '@taiga-ui/core/components/textfield';\nimport { tuiTextfieldOptionsProvider, TuiTextfieldOptionsDirective } from '@taiga-ui/core/components/textfield';\nimport { tuiBlockOptionsProvider } from '@taiga-ui/kit/components/block';\nimport { tuiSwitchOptionsProvider } from '@taiga-ui/kit/components/switch';\nimport { NgForOf, NgIf, NgTemplateOutlet } from '@angular/common';\nimport { toSignal } from '@angular/core/rxjs-interop';\nimport { NgControl } from '@angular/forms';\nimport { ResizeObserverService } from '@ng-web-apis/resize-observer';\nimport { EMPTY_QUERY } from '@taiga-ui/cdk/constants';\nimport { tuiZonefull, tuiQueryListChanges, tuiControlValue } from '@taiga-ui/cdk/observables';\nimport { tuiIsControlEmpty } from '@taiga-ui/cdk/utils/miscellaneous';\nimport { map, distinctUntilChanged, switchMap, merge } from 'rxjs';\nimport * as i1 from '@taiga-ui/core/directives/dropdown';\nimport { tuiDropdown, tuiDropdownOptionsProvider, TuiDropdownDirective, TuiWithDropdownOpen } from '@taiga-ui/core/directives/dropdown';\nimport { TUI_ICON_START } from '@taiga-ui/core/tokens';\nimport { TUI_COMMON_ICONS } from '@taiga-ui/layout/tokens';\nconst _c0 = [\"tuiSearch\", \"\"];\nconst _c1 = [\"*\"];\nconst _c2 = [\"tuiSearchFilter\", \"\"];\nfunction TuiSearchFilterComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0);\n  }\n}\nconst _c3 = [\"rem\"];\nfunction TuiSearchFiltersComponent_ng_container_0_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 5);\n  }\n  if (rf & 2) {\n    const template_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"ngTemplateOutlet\", template_r1);\n  }\n}\nfunction TuiSearchFiltersComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TuiSearchFiltersComponent_ng_container_0_ng_container_1_Template, 1, 1, \"ng-container\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const i_r2 = ctx.index;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", i_r2 < ctx_r2.overflown());\n  }\n}\nfunction TuiSearchFiltersComponent_button_3_ng_container_4_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 5);\n  }\n  if (rf & 2) {\n    const template_r5 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"ngTemplateOutlet\", template_r5);\n  }\n}\nfunction TuiSearchFiltersComponent_button_3_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TuiSearchFiltersComponent_button_3_ng_container_4_ng_container_1_Template, 1, 1, \"ng-container\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const i_r6 = ctx.index;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", i_r6 >= ctx_r2.overflown());\n  }\n}\nfunction TuiSearchFiltersComponent_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 6)(1, \"form\", 7);\n    i0.ɵɵlistener(\"reset\", function TuiSearchFiltersComponent_button_3_Template_form_reset_1_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onReset());\n    });\n    i0.ɵɵelementStart(2, \"fieldset\", 8);\n    i0.ɵɵprojection(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, TuiSearchFiltersComponent_button_3_ng_container_4_Template, 2, 1, \"ng-container\", 1);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"_active\", ctx_r2.enabled());\n    i0.ɵɵproperty(\"size\", ctx_r2.size);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", !ctx_r2.enabled());\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.templates);\n  }\n}\nclass TuiSearchComponent {\n  static {\n    this.ɵfac = function TuiSearchComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiSearchComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: TuiSearchComponent,\n      selectors: [[\"search\", \"tuiSearch\", \"\"]],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([tuiButtonOptionsProvider({\n        size: 'm'\n      }), tuiBlockOptionsProvider({\n        size: 's'\n      }), tuiSwitchOptionsProvider({\n        size: 's'\n      }), tuiTextfieldOptionsProvider({\n        size: signal('m')\n      })]), i0.ɵɵStandaloneFeature],\n      attrs: _c0,\n      ngContentSelectors: _c1,\n      decls: 1,\n      vars: 0,\n      template: function TuiSearchComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵprojection(0);\n        }\n      },\n      styles: [\"search[tuiSearch] form{display:flex;flex-direction:column;gap:.75rem}search[tuiSearch] form fieldset{display:flex;align-items:center;flex-wrap:wrap;gap:inherit;min-inline-size:0;padding:0;margin:0;border:0;color:var(--tui-text-secondary)}search[tuiSearch] form tui-items-with-more{min-inline-size:0;flex:1}search[tuiSearch] form tui-textfield{flex:1;min-inline-size:11.25rem;max-inline-size:22.5rem}search[tuiSearch] form tui-textfield:first-child{max-inline-size:unset}search[tuiSearch] form hr{inline-size:1px;block-size:1rem;background:var(--tui-border-normal)}search[tuiSearch] form tui-filter{white-space:nowrap}search[tuiSearch] form [tuiLabel]{font:inherit}\\n\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiSearchComponent, [{\n    type: Component,\n    args: [{\n      standalone: true,\n      selector: 'search[tuiSearch]',\n      template: '<ng-content/>',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [tuiButtonOptionsProvider({\n        size: 'm'\n      }), tuiBlockOptionsProvider({\n        size: 's'\n      }), tuiSwitchOptionsProvider({\n        size: 's'\n      }), tuiTextfieldOptionsProvider({\n        size: signal('m')\n      })],\n      styles: [\"search[tuiSearch] form{display:flex;flex-direction:column;gap:.75rem}search[tuiSearch] form fieldset{display:flex;align-items:center;flex-wrap:wrap;gap:inherit;min-inline-size:0;padding:0;margin:0;border:0;color:var(--tui-text-secondary)}search[tuiSearch] form tui-items-with-more{min-inline-size:0;flex:1}search[tuiSearch] form tui-textfield{flex:1;min-inline-size:11.25rem;max-inline-size:22.5rem}search[tuiSearch] form tui-textfield:first-child{max-inline-size:unset}search[tuiSearch] form hr{inline-size:1px;block-size:1rem;background:var(--tui-border-normal)}search[tuiSearch] form tui-filter{white-space:nowrap}search[tuiSearch] form [tuiLabel]{font:inherit}\\n\"]\n    }]\n  }], null, null);\n})();\nclass TuiSearchFilterComponent {\n  constructor() {\n    this.dropdown = tuiDropdown(null);\n  }\n  set template(template) {\n    this.dropdown.set(template);\n  }\n  static {\n    this.ɵfac = function TuiSearchFilterComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiSearchFilterComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: TuiSearchFilterComponent,\n      selectors: [[\"button\", \"tuiSearchFilter\", \"\"]],\n      viewQuery: function TuiSearchFilterComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(TemplateRef, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.template = _t.first);\n        }\n      },\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([tuiDropdownOptionsProvider({\n        align: 'right'\n      }), {\n        provide: TUI_ICON_START,\n        useFactory: () => inject(TUI_COMMON_ICONS).filter\n      }]), i0.ɵɵHostDirectivesFeature([i1.TuiDropdownDirective, i1.TuiWithDropdownOpen]), i0.ɵɵStandaloneFeature],\n      attrs: _c2,\n      ngContentSelectors: _c1,\n      decls: 1,\n      vars: 0,\n      template: function TuiSearchFilterComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵtemplate(0, TuiSearchFilterComponent_ng_template_0_Template, 1, 0, \"ng-template\");\n        }\n      },\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiSearchFilterComponent, [{\n    type: Component,\n    args: [{\n      standalone: true,\n      selector: 'button[tuiSearchFilter]',\n      template: '<ng-template><ng-content /></ng-template>',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [tuiDropdownOptionsProvider({\n        align: 'right'\n      }), {\n        provide: TUI_ICON_START,\n        useFactory: () => inject(TUI_COMMON_ICONS).filter\n      }],\n      hostDirectives: [TuiDropdownDirective, TuiWithDropdownOpen]\n    }]\n  }], null, {\n    template: [{\n      type: ViewChild,\n      args: [TemplateRef]\n    }]\n  });\n})();\nconst WIDTH = 12;\nclass TuiSearchFiltersComponent {\n  constructor() {\n    this.children = EMPTY_QUERY;\n    this.controls = signal([]);\n    this.templates = EMPTY_QUERY;\n    this.overflown = toSignal(inject(ResizeObserverService, {\n      self: true\n    }).pipe(map(entry => {\n      const width = entry[0]?.contentRect.width ?? 0;\n      return Math.floor((width - this.more) / WIDTH / this.unit);\n    }), distinctUntilChanged(), tuiZonefull()), {\n      initialValue: 0\n    });\n    this.enabled = computed(() => this.controls().some(({\n      control\n    }, index) => control && index >= this.overflown() && !tuiIsControlEmpty(control)));\n    this.size = 'm';\n  }\n  // TODO: Refactor to signal queries when Angular is updated\n  ngAfterContentInit() {\n    tuiQueryListChanges(this.children).pipe(switchMap(all => merge(...all.map(c => tuiControlValue(c)))), map(() => this.children.toArray())).subscribe(controls => this.controls.set(controls));\n  }\n  onReset() {\n    this.children.forEach(({\n      control\n    }, index) => {\n      if (control && index >= this.overflown()) {\n        control.setValue(null);\n      }\n    });\n  }\n  get unit() {\n    return this.rem?.nativeElement.offsetWidth || 16;\n  }\n  get more() {\n    return this.button?.nativeElement.clientWidth || 0;\n  }\n  static {\n    this.ɵfac = function TuiSearchFiltersComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiSearchFiltersComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: TuiSearchFiltersComponent,\n      selectors: [[\"tui-search-filters\"]],\n      contentQueries: function TuiSearchFiltersComponent_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, NgControl, 5);\n          i0.ɵɵcontentQuery(dirIndex, TuiItem, 5, TemplateRef);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.children = _t);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n        }\n      },\n      viewQuery: function TuiSearchFiltersComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c3, 5);\n          i0.ɵɵviewQuery(TuiButton, 5, ElementRef);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.rem = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.button = _t.first);\n        }\n      },\n      inputs: {\n        size: \"size\"\n      },\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([ResizeObserverService, tuiButtonOptionsProvider({\n        size: 'xs',\n        appearance: 'flat'\n      })]), i0.ɵɵHostDirectivesFeature([{\n        directive: i1$1.TuiTextfieldOptionsDirective,\n        inputs: [\"tuiTextfieldSize\", \"size\"]\n      }]), i0.ɵɵStandaloneFeature],\n      ngContentSelectors: _c1,\n      decls: 4,\n      vars: 2,\n      consts: [[\"rem\", \"\"], [4, \"ngFor\", \"ngForOf\"], [1, \"t-rem\"], [\"appearance\", \"secondary\", \"tuiIconButton\", \"\", \"tuiSearchFilter\", \"\", \"type\", \"button\", \"class\", \"t-button\", 3, \"_active\", \"size\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\"], [\"appearance\", \"secondary\", \"tuiIconButton\", \"\", \"tuiSearchFilter\", \"\", \"type\", \"button\", 1, \"t-button\", 3, \"size\"], [1, \"t-form\", 3, \"reset\"], [1, \"t-header\", 3, \"disabled\"]],\n      template: function TuiSearchFiltersComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵtemplate(0, TuiSearchFiltersComponent_ng_container_0_Template, 2, 1, \"ng-container\", 1);\n          i0.ɵɵelement(1, \"div\", 2, 0);\n          i0.ɵɵtemplate(3, TuiSearchFiltersComponent_button_3_Template, 5, 5, \"button\", 3);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngForOf\", ctx.templates);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.overflown() < ctx.templates.length);\n        }\n      },\n      dependencies: [NgForOf, NgIf, NgTemplateOutlet, TuiButton, TuiSearchFilterComponent],\n      styles: [\"[_nghost-%COMP%]{display:flex;flex:1;gap:inherit;justify-content:flex-end;min-inline-size:0}.t-rem[_ngcontent-%COMP%]{position:absolute;inline-size:1rem}.t-button[_ngcontent-%COMP%]{overflow:visible}.t-button._active[_ngcontent-%COMP%]:after{content:\\\"\\\";position:absolute;top:.25rem;right:.25rem;display:block;inline-size:.625rem;block-size:.625rem;background:var(--tui-status-warning);transform:translate(50%,-50%);border-radius:100%;margin:0}.t-form[_ngcontent-%COMP%]{display:flex;min-inline-size:25.5rem;max-inline-size:33rem;flex-direction:column;gap:.75rem;padding:0 1.5rem 1.5rem;box-sizing:border-box}.t-header[_ngcontent-%COMP%]{display:flex;justify-content:space-between;padding:1.25rem 0;margin:0 0 .5rem;border:none;box-shadow:inset 0 -1px var(--tui-border-normal);font:var(--tui-font-text-ui-l);font-weight:700}\"],\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiSearchFiltersComponent, [{\n    type: Component,\n    args: [{\n      standalone: true,\n      selector: 'tui-search-filters',\n      imports: [NgForOf, NgIf, NgTemplateOutlet, TuiButton, TuiSearchFilterComponent],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [ResizeObserverService, tuiButtonOptionsProvider({\n        size: 'xs',\n        appearance: 'flat'\n      })],\n      hostDirectives: [{\n        directive: TuiTextfieldOptionsDirective,\n        inputs: ['tuiTextfieldSize: size']\n      }],\n      template: \"<ng-container *ngFor=\\\"let template of templates; let i = index\\\">\\n    <ng-container\\n        *ngIf=\\\"i < overflown()\\\"\\n        [ngTemplateOutlet]=\\\"template\\\"\\n    />\\n</ng-container>\\n<div\\n    #rem\\n    class=\\\"t-rem\\\"\\n></div>\\n<button\\n    *ngIf=\\\"overflown() < templates.length\\\"\\n    appearance=\\\"secondary\\\"\\n    tuiIconButton\\n    tuiSearchFilter\\n    type=\\\"button\\\"\\n    class=\\\"t-button\\\"\\n    [class._active]=\\\"enabled()\\\"\\n    [size]=\\\"size\\\"\\n>\\n    <form\\n        class=\\\"t-form\\\"\\n        (reset)=\\\"onReset()\\\"\\n    >\\n        <fieldset\\n            class=\\\"t-header\\\"\\n            [disabled]=\\\"!enabled()\\\"\\n        >\\n            <ng-content />\\n        </fieldset>\\n        <ng-container *ngFor=\\\"let template of templates; let i = index\\\">\\n            <ng-container\\n                *ngIf=\\\"i >= overflown()\\\"\\n                [ngTemplateOutlet]=\\\"template\\\"\\n            />\\n        </ng-container>\\n    </form>\\n</button>\\n\",\n      styles: [\":host{display:flex;flex:1;gap:inherit;justify-content:flex-end;min-inline-size:0}.t-rem{position:absolute;inline-size:1rem}.t-button{overflow:visible}.t-button._active:after{content:\\\"\\\";position:absolute;top:.25rem;right:.25rem;display:block;inline-size:.625rem;block-size:.625rem;background:var(--tui-status-warning);transform:translate(50%,-50%);border-radius:100%;margin:0}.t-form{display:flex;min-inline-size:25.5rem;max-inline-size:33rem;flex-direction:column;gap:.75rem;padding:0 1.5rem 1.5rem;box-sizing:border-box}.t-header{display:flex;justify-content:space-between;padding:1.25rem 0;margin:0 0 .5rem;border:none;box-shadow:inset 0 -1px var(--tui-border-normal);font:var(--tui-font-text-ui-l);font-weight:700}\\n\"]\n    }]\n  }], null, {\n    rem: [{\n      type: ViewChild,\n      args: ['rem']\n    }],\n    button: [{\n      type: ViewChild,\n      args: [TuiButton, {\n        read: ElementRef\n      }]\n    }],\n    children: [{\n      type: ContentChildren,\n      args: [NgControl, {\n        descendants: true\n      }]\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [TuiItem, {\n        descendants: true,\n        read: TemplateRef\n      }]\n    }],\n    size: [{\n      type: Input\n    }]\n  });\n})();\nconst TuiSearch = [TuiSearchComponent, TuiSearchFiltersComponent, TuiItem];\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiSearch, TuiSearchComponent, TuiSearchFiltersComponent };","map":{"version":3,"names":["TuiItem","i0","signal","Component","ViewEncapsulation","ChangeDetectionStrategy","inject","TemplateRef","ViewChild","computed","ElementRef","ContentChildren","Input","tuiButtonOptionsProvider","TuiButton","i1$1","tuiTextfieldOptionsProvider","TuiTextfieldOptionsDirective","tuiBlockOptionsProvider","tuiSwitchOptionsProvider","NgForOf","NgIf","NgTemplateOutlet","toSignal","NgControl","ResizeObserverService","EMPTY_QUERY","tuiZonefull","tuiQueryListChanges","tuiControlValue","tuiIsControlEmpty","map","distinctUntilChanged","switchMap","merge","i1","tuiDropdown","tuiDropdownOptionsProvider","TuiDropdownDirective","TuiWithDropdownOpen","TUI_ICON_START","TUI_COMMON_ICONS","_c0","_c1","_c2","TuiSearchFilterComponent_ng_template_0_Template","rf","ctx","ɵɵprojection","_c3","TuiSearchFiltersComponent_ng_container_0_ng_container_1_Template","ɵɵelementContainer","template_r1","ɵɵnextContext","$implicit","ɵɵproperty","TuiSearchFiltersComponent_ng_container_0_Template","ɵɵelementContainerStart","ɵɵtemplate","ɵɵelementContainerEnd","i_r2","index","ctx_r2","ɵɵadvance","overflown","TuiSearchFiltersComponent_button_3_ng_container_4_ng_container_1_Template","template_r5","TuiSearchFiltersComponent_button_3_ng_container_4_Template","i_r6","TuiSearchFiltersComponent_button_3_Template","_r4","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","TuiSearchFiltersComponent_button_3_Template_form_reset_1_listener","ɵɵrestoreView","ɵɵresetView","onReset","ɵɵelementEnd","ɵɵclassProp","enabled","size","templates","TuiSearchComponent","ɵfac","TuiSearchComponent_Factory","__ngFactoryType__","ɵcmp","ɵɵdefineComponent","type","selectors","standalone","features","ɵɵProvidersFeature","ɵɵStandaloneFeature","attrs","ngContentSelectors","decls","vars","template","TuiSearchComponent_Template","ɵɵprojectionDef","styles","encapsulation","changeDetection","ngDevMode","ɵsetClassMetadata","args","selector","None","OnPush","providers","TuiSearchFilterComponent","constructor","dropdown","set","TuiSearchFilterComponent_Factory","viewQuery","TuiSearchFilterComponent_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","align","provide","useFactory","filter","ɵɵHostDirectivesFeature","TuiSearchFilterComponent_Template","hostDirectives","WIDTH","TuiSearchFiltersComponent","children","controls","self","pipe","entry","width","contentRect","Math","floor","more","unit","initialValue","some","control","ngAfterContentInit","all","c","toArray","subscribe","forEach","setValue","rem","nativeElement","offsetWidth","button","clientWidth","TuiSearchFiltersComponent_Factory","contentQueries","TuiSearchFiltersComponent_ContentQueries","dirIndex","ɵɵcontentQuery","TuiSearchFiltersComponent_Query","inputs","appearance","directive","consts","TuiSearchFiltersComponent_Template","ɵɵelement","length","dependencies","imports","read","descendants","TuiSearch"],"sources":["C:/Users/Asus-PC/Downloads/WebLibraryNew/WebLibrary/WebLibraryApp/Frontend/node_modules/@taiga-ui/layout/fesm2022/taiga-ui-layout-components-search.mjs"],"sourcesContent":["import { TuiItem } from '@taiga-ui/cdk/directives/item';\nimport * as i0 from '@angular/core';\nimport { signal, Component, ViewEncapsulation, ChangeDetectionStrategy, inject, TemplateRef, ViewChild, computed, ElementRef, ContentChildren, Input } from '@angular/core';\nimport { tuiButtonOptionsProvider, TuiButton } from '@taiga-ui/core/components/button';\nimport * as i1$1 from '@taiga-ui/core/components/textfield';\nimport { tuiTextfieldOptionsProvider, TuiTextfieldOptionsDirective } from '@taiga-ui/core/components/textfield';\nimport { tuiBlockOptionsProvider } from '@taiga-ui/kit/components/block';\nimport { tuiSwitchOptionsProvider } from '@taiga-ui/kit/components/switch';\nimport { NgForOf, NgIf, NgTemplateOutlet } from '@angular/common';\nimport { toSignal } from '@angular/core/rxjs-interop';\nimport { NgControl } from '@angular/forms';\nimport { ResizeObserverService } from '@ng-web-apis/resize-observer';\nimport { EMPTY_QUERY } from '@taiga-ui/cdk/constants';\nimport { tuiZonefull, tuiQueryListChanges, tuiControlValue } from '@taiga-ui/cdk/observables';\nimport { tuiIsControlEmpty } from '@taiga-ui/cdk/utils/miscellaneous';\nimport { map, distinctUntilChanged, switchMap, merge } from 'rxjs';\nimport * as i1 from '@taiga-ui/core/directives/dropdown';\nimport { tuiDropdown, tuiDropdownOptionsProvider, TuiDropdownDirective, TuiWithDropdownOpen } from '@taiga-ui/core/directives/dropdown';\nimport { TUI_ICON_START } from '@taiga-ui/core/tokens';\nimport { TUI_COMMON_ICONS } from '@taiga-ui/layout/tokens';\n\nclass TuiSearchComponent {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiSearchComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiSearchComponent, isStandalone: true, selector: \"search[tuiSearch]\", providers: [\n            tuiButtonOptionsProvider({ size: 'm' }),\n            tuiBlockOptionsProvider({ size: 's' }),\n            tuiSwitchOptionsProvider({ size: 's' }),\n            tuiTextfieldOptionsProvider({ size: signal('m') }),\n        ], ngImport: i0, template: '<ng-content/>', isInline: true, styles: [\"search[tuiSearch] form{display:flex;flex-direction:column;gap:.75rem}search[tuiSearch] form fieldset{display:flex;align-items:center;flex-wrap:wrap;gap:inherit;min-inline-size:0;padding:0;margin:0;border:0;color:var(--tui-text-secondary)}search[tuiSearch] form tui-items-with-more{min-inline-size:0;flex:1}search[tuiSearch] form tui-textfield{flex:1;min-inline-size:11.25rem;max-inline-size:22.5rem}search[tuiSearch] form tui-textfield:first-child{max-inline-size:unset}search[tuiSearch] form hr{inline-size:1px;block-size:1rem;background:var(--tui-border-normal)}search[tuiSearch] form tui-filter{white-space:nowrap}search[tuiSearch] form [tuiLabel]{font:inherit}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiSearchComponent, decorators: [{\n            type: Component,\n            args: [{ standalone: true, selector: 'search[tuiSearch]', template: '<ng-content/>', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [\n                        tuiButtonOptionsProvider({ size: 'm' }),\n                        tuiBlockOptionsProvider({ size: 's' }),\n                        tuiSwitchOptionsProvider({ size: 's' }),\n                        tuiTextfieldOptionsProvider({ size: signal('m') }),\n                    ], styles: [\"search[tuiSearch] form{display:flex;flex-direction:column;gap:.75rem}search[tuiSearch] form fieldset{display:flex;align-items:center;flex-wrap:wrap;gap:inherit;min-inline-size:0;padding:0;margin:0;border:0;color:var(--tui-text-secondary)}search[tuiSearch] form tui-items-with-more{min-inline-size:0;flex:1}search[tuiSearch] form tui-textfield{flex:1;min-inline-size:11.25rem;max-inline-size:22.5rem}search[tuiSearch] form tui-textfield:first-child{max-inline-size:unset}search[tuiSearch] form hr{inline-size:1px;block-size:1rem;background:var(--tui-border-normal)}search[tuiSearch] form tui-filter{white-space:nowrap}search[tuiSearch] form [tuiLabel]{font:inherit}\\n\"] }]\n        }] });\n\nclass TuiSearchFilterComponent {\n    constructor() {\n        this.dropdown = tuiDropdown(null);\n    }\n    set template(template) {\n        this.dropdown.set(template);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiSearchFilterComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiSearchFilterComponent, isStandalone: true, selector: \"button[tuiSearchFilter]\", providers: [\n            tuiDropdownOptionsProvider({ align: 'right' }),\n            {\n                provide: TUI_ICON_START,\n                useFactory: () => inject(TUI_COMMON_ICONS).filter,\n            },\n        ], viewQueries: [{ propertyName: \"template\", first: true, predicate: TemplateRef, descendants: true }], hostDirectives: [{ directive: i1.TuiDropdownDirective }, { directive: i1.TuiWithDropdownOpen }], ngImport: i0, template: '<ng-template><ng-content /></ng-template>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiSearchFilterComponent, decorators: [{\n            type: Component,\n            args: [{\n                    standalone: true,\n                    selector: 'button[tuiSearchFilter]',\n                    template: '<ng-template><ng-content /></ng-template>',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    providers: [\n                        tuiDropdownOptionsProvider({ align: 'right' }),\n                        {\n                            provide: TUI_ICON_START,\n                            useFactory: () => inject(TUI_COMMON_ICONS).filter,\n                        },\n                    ],\n                    hostDirectives: [TuiDropdownDirective, TuiWithDropdownOpen],\n                }]\n        }], propDecorators: { template: [{\n                type: ViewChild,\n                args: [TemplateRef]\n            }] } });\n\nconst WIDTH = 12;\nclass TuiSearchFiltersComponent {\n    constructor() {\n        this.children = EMPTY_QUERY;\n        this.controls = signal([]);\n        this.templates = EMPTY_QUERY;\n        this.overflown = toSignal(inject(ResizeObserverService, { self: true }).pipe(map((entry) => {\n            const width = entry[0]?.contentRect.width ?? 0;\n            return Math.floor((width - this.more) / WIDTH / this.unit);\n        }), distinctUntilChanged(), tuiZonefull()), { initialValue: 0 });\n        this.enabled = computed(() => this.controls().some(({ control }, index) => control && index >= this.overflown() && !tuiIsControlEmpty(control)));\n        this.size = 'm';\n    }\n    // TODO: Refactor to signal queries when Angular is updated\n    ngAfterContentInit() {\n        tuiQueryListChanges(this.children)\n            .pipe(switchMap((all) => merge(...all.map((c) => tuiControlValue(c)))), map(() => this.children.toArray()))\n            .subscribe((controls) => this.controls.set(controls));\n    }\n    onReset() {\n        this.children.forEach(({ control }, index) => {\n            if (control && index >= this.overflown()) {\n                control.setValue(null);\n            }\n        });\n    }\n    get unit() {\n        return this.rem?.nativeElement.offsetWidth || 16;\n    }\n    get more() {\n        return this.button?.nativeElement.clientWidth || 0;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiSearchFiltersComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiSearchFiltersComponent, isStandalone: true, selector: \"tui-search-filters\", inputs: { size: \"size\" }, providers: [\n            ResizeObserverService,\n            tuiButtonOptionsProvider({ size: 'xs', appearance: 'flat' }),\n        ], queries: [{ propertyName: \"children\", predicate: NgControl, descendants: true }, { propertyName: \"templates\", predicate: TuiItem, descendants: true, read: TemplateRef }], viewQueries: [{ propertyName: \"rem\", first: true, predicate: [\"rem\"], descendants: true }, { propertyName: \"button\", first: true, predicate: TuiButton, descendants: true, read: ElementRef }], hostDirectives: [{ directive: i1$1.TuiTextfieldOptionsDirective, inputs: [\"tuiTextfieldSize\", \"size\"] }], ngImport: i0, template: \"<ng-container *ngFor=\\\"let template of templates; let i = index\\\">\\n    <ng-container\\n        *ngIf=\\\"i < overflown()\\\"\\n        [ngTemplateOutlet]=\\\"template\\\"\\n    />\\n</ng-container>\\n<div\\n    #rem\\n    class=\\\"t-rem\\\"\\n></div>\\n<button\\n    *ngIf=\\\"overflown() < templates.length\\\"\\n    appearance=\\\"secondary\\\"\\n    tuiIconButton\\n    tuiSearchFilter\\n    type=\\\"button\\\"\\n    class=\\\"t-button\\\"\\n    [class._active]=\\\"enabled()\\\"\\n    [size]=\\\"size\\\"\\n>\\n    <form\\n        class=\\\"t-form\\\"\\n        (reset)=\\\"onReset()\\\"\\n    >\\n        <fieldset\\n            class=\\\"t-header\\\"\\n            [disabled]=\\\"!enabled()\\\"\\n        >\\n            <ng-content />\\n        </fieldset>\\n        <ng-container *ngFor=\\\"let template of templates; let i = index\\\">\\n            <ng-container\\n                *ngIf=\\\"i >= overflown()\\\"\\n                [ngTemplateOutlet]=\\\"template\\\"\\n            />\\n        </ng-container>\\n    </form>\\n</button>\\n\", styles: [\":host{display:flex;flex:1;gap:inherit;justify-content:flex-end;min-inline-size:0}.t-rem{position:absolute;inline-size:1rem}.t-button{overflow:visible}.t-button._active:after{content:\\\"\\\";position:absolute;top:.25rem;right:.25rem;display:block;inline-size:.625rem;block-size:.625rem;background:var(--tui-status-warning);transform:translate(50%,-50%);border-radius:100%;margin:0}.t-form{display:flex;min-inline-size:25.5rem;max-inline-size:33rem;flex-direction:column;gap:.75rem;padding:0 1.5rem 1.5rem;box-sizing:border-box}.t-header{display:flex;justify-content:space-between;padding:1.25rem 0;margin:0 0 .5rem;border:none;box-shadow:inset 0 -1px var(--tui-border-normal);font:var(--tui-font-text-ui-l);font-weight:700}\\n\"], dependencies: [{ kind: \"directive\", type: NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: TuiButton, selector: \"a[tuiButton],button[tuiButton],a[tuiIconButton],button[tuiIconButton]\", inputs: [\"size\"] }, { kind: \"component\", type: TuiSearchFilterComponent, selector: \"button[tuiSearchFilter]\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiSearchFiltersComponent, decorators: [{\n            type: Component,\n            args: [{ standalone: true, selector: 'tui-search-filters', imports: [NgForOf, NgIf, NgTemplateOutlet, TuiButton, TuiSearchFilterComponent], changeDetection: ChangeDetectionStrategy.OnPush, providers: [\n                        ResizeObserverService,\n                        tuiButtonOptionsProvider({ size: 'xs', appearance: 'flat' }),\n                    ], hostDirectives: [\n                        {\n                            directive: TuiTextfieldOptionsDirective,\n                            inputs: ['tuiTextfieldSize: size'],\n                        },\n                    ], template: \"<ng-container *ngFor=\\\"let template of templates; let i = index\\\">\\n    <ng-container\\n        *ngIf=\\\"i < overflown()\\\"\\n        [ngTemplateOutlet]=\\\"template\\\"\\n    />\\n</ng-container>\\n<div\\n    #rem\\n    class=\\\"t-rem\\\"\\n></div>\\n<button\\n    *ngIf=\\\"overflown() < templates.length\\\"\\n    appearance=\\\"secondary\\\"\\n    tuiIconButton\\n    tuiSearchFilter\\n    type=\\\"button\\\"\\n    class=\\\"t-button\\\"\\n    [class._active]=\\\"enabled()\\\"\\n    [size]=\\\"size\\\"\\n>\\n    <form\\n        class=\\\"t-form\\\"\\n        (reset)=\\\"onReset()\\\"\\n    >\\n        <fieldset\\n            class=\\\"t-header\\\"\\n            [disabled]=\\\"!enabled()\\\"\\n        >\\n            <ng-content />\\n        </fieldset>\\n        <ng-container *ngFor=\\\"let template of templates; let i = index\\\">\\n            <ng-container\\n                *ngIf=\\\"i >= overflown()\\\"\\n                [ngTemplateOutlet]=\\\"template\\\"\\n            />\\n        </ng-container>\\n    </form>\\n</button>\\n\", styles: [\":host{display:flex;flex:1;gap:inherit;justify-content:flex-end;min-inline-size:0}.t-rem{position:absolute;inline-size:1rem}.t-button{overflow:visible}.t-button._active:after{content:\\\"\\\";position:absolute;top:.25rem;right:.25rem;display:block;inline-size:.625rem;block-size:.625rem;background:var(--tui-status-warning);transform:translate(50%,-50%);border-radius:100%;margin:0}.t-form{display:flex;min-inline-size:25.5rem;max-inline-size:33rem;flex-direction:column;gap:.75rem;padding:0 1.5rem 1.5rem;box-sizing:border-box}.t-header{display:flex;justify-content:space-between;padding:1.25rem 0;margin:0 0 .5rem;border:none;box-shadow:inset 0 -1px var(--tui-border-normal);font:var(--tui-font-text-ui-l);font-weight:700}\\n\"] }]\n        }], propDecorators: { rem: [{\n                type: ViewChild,\n                args: ['rem']\n            }], button: [{\n                type: ViewChild,\n                args: [TuiButton, { read: ElementRef }]\n            }], children: [{\n                type: ContentChildren,\n                args: [NgControl, { descendants: true }]\n            }], templates: [{\n                type: ContentChildren,\n                args: [TuiItem, { descendants: true, read: TemplateRef }]\n            }], size: [{\n                type: Input\n            }] } });\n\nconst TuiSearch = [\n    TuiSearchComponent,\n    TuiSearchFiltersComponent,\n    TuiItem,\n];\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiSearch, TuiSearchComponent, TuiSearchFiltersComponent };\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,+BAA+B;AACvD,OAAO,KAAKC,EAAE,MAAM,eAAe;AACnC,SAASC,MAAM,EAAEC,SAAS,EAAEC,iBAAiB,EAAEC,uBAAuB,EAAEC,MAAM,EAAEC,WAAW,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,eAAe,EAAEC,KAAK,QAAQ,eAAe;AAC3K,SAASC,wBAAwB,EAAEC,SAAS,QAAQ,kCAAkC;AACtF,OAAO,KAAKC,IAAI,MAAM,qCAAqC;AAC3D,SAASC,2BAA2B,EAAEC,4BAA4B,QAAQ,qCAAqC;AAC/G,SAASC,uBAAuB,QAAQ,gCAAgC;AACxE,SAASC,wBAAwB,QAAQ,iCAAiC;AAC1E,SAASC,OAAO,EAAEC,IAAI,EAAEC,gBAAgB,QAAQ,iBAAiB;AACjE,SAASC,QAAQ,QAAQ,4BAA4B;AACrD,SAASC,SAAS,QAAQ,gBAAgB;AAC1C,SAASC,qBAAqB,QAAQ,8BAA8B;AACpE,SAASC,WAAW,QAAQ,yBAAyB;AACrD,SAASC,WAAW,EAAEC,mBAAmB,EAAEC,eAAe,QAAQ,2BAA2B;AAC7F,SAASC,iBAAiB,QAAQ,mCAAmC;AACrE,SAASC,GAAG,EAAEC,oBAAoB,EAAEC,SAAS,EAAEC,KAAK,QAAQ,MAAM;AAClE,OAAO,KAAKC,EAAE,MAAM,oCAAoC;AACxD,SAASC,WAAW,EAAEC,0BAA0B,EAAEC,oBAAoB,EAAEC,mBAAmB,QAAQ,oCAAoC;AACvI,SAASC,cAAc,QAAQ,uBAAuB;AACtD,SAASC,gBAAgB,QAAQ,yBAAyB;AAAC,MAAAC,GAAA;AAAA,MAAAC,GAAA;AAAA,MAAAC,GAAA;AAAA,SAAAC,gDAAAC,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAG0C7C,EAAE,CAAA+C,YAAA,EAgC6J,CAAC;EAAA;AAAA;AAAA,MAAAC,GAAA;AAAA,SAAAC,iEAAAJ,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAhChK7C,EAAE,CAAAkD,kBAAA,KA2F0jB,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAM,WAAA,GA3F7jBnD,EAAE,CAAAoD,aAAA,GAAAC,SAAA;IAAFrD,EAAE,CAAAsD,UAAA,qBAAAH,WA2FkjB,CAAC;EAAA;AAAA;AAAA,SAAAI,kDAAAV,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA3FrjB7C,EAAE,CAAAwD,uBAAA,EA2Fmd,CAAC;IA3FtdxD,EAAE,CAAAyD,UAAA,IAAAR,gEAAA,yBA2F0jB,CAAC;IA3F7jBjD,EAAE,CAAA0D,qBAAA;EAAA;EAAA,IAAAb,EAAA;IAAA,MAAAc,IAAA,GAAAb,GAAA,CAAAc,KAAA;IAAA,MAAAC,MAAA,GAAF7D,EAAE,CAAAoD,aAAA;IAAFpD,EAAE,CAAA8D,SAAA,CA2FugB,CAAC;IA3F1gB9D,EAAE,CAAAsD,UAAA,SAAAK,IAAA,GAAAE,MAAA,CAAAE,SAAA,EA2FugB,CAAC;EAAA;AAAA;AAAA,SAAAC,0EAAAnB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA3F1gB7C,EAAE,CAAAkD,kBAAA,KA2FmxC,CAAC;EAAA;EAAA,IAAAL,EAAA;IAAA,MAAAoB,WAAA,GA3FtxCjE,EAAE,CAAAoD,aAAA,GAAAC,SAAA;IAAFrD,EAAE,CAAAsD,UAAA,qBAAAW,WA2FmwC,CAAC;EAAA;AAAA;AAAA,SAAAC,2DAAArB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA3FtwC7C,EAAE,CAAAwD,uBAAA,EA2F2oC,CAAC;IA3F9oCxD,EAAE,CAAAyD,UAAA,IAAAO,yEAAA,yBA2FmxC,CAAC;IA3FtxChE,EAAE,CAAA0D,qBAAA;EAAA;EAAA,IAAAb,EAAA;IAAA,MAAAsB,IAAA,GAAArB,GAAA,CAAAc,KAAA;IAAA,MAAAC,MAAA,GAAF7D,EAAE,CAAAoD,aAAA;IAAFpD,EAAE,CAAA8D,SAAA,CA2FgtC,CAAC;IA3FntC9D,EAAE,CAAAsD,UAAA,SAAAa,IAAA,IAAAN,MAAA,CAAAE,SAAA,EA2FgtC,CAAC;EAAA;AAAA;AAAA,SAAAK,4CAAAvB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAwB,GAAA,GA3FntCrE,EAAE,CAAAsE,gBAAA;IAAFtE,EAAE,CAAAuE,cAAA,eA2F81B,CAAC,aAA0E,CAAC;IA3F56BvE,EAAE,CAAAwE,UAAA,mBAAAC,kEAAA;MAAFzE,EAAE,CAAA0E,aAAA,CAAAL,GAAA;MAAA,MAAAR,MAAA,GAAF7D,EAAE,CAAAoD,aAAA;MAAA,OAAFpD,EAAE,CAAA2E,WAAA,CA2Fw5Bd,MAAA,CAAAe,OAAA,CAAQ,CAAC;IAAA,CAAC,CAAC;IA3Fr6B5E,EAAE,CAAAuE,cAAA,iBA2F8gC,CAAC;IA3FjhCvE,EAAE,CAAA+C,YAAA,EA2F0iC,CAAC;IA3F7iC/C,EAAE,CAAA6E,YAAA,CA2F+jC,CAAC;IA3FlkC7E,EAAE,CAAAyD,UAAA,IAAAS,0DAAA,yBA2F2oC,CAAC;IA3F9oClE,EAAE,CAAA6E,YAAA,CA2FyzC,CAAC,CAAU,CAAC;EAAA;EAAA,IAAAhC,EAAA;IAAA,MAAAgB,MAAA,GA3Fv0C7D,EAAE,CAAAoD,aAAA;IAAFpD,EAAE,CAAA8E,WAAA,YAAAjB,MAAA,CAAAkB,OAAA,EA2Fs0B,CAAC;IA3Fz0B/E,EAAE,CAAAsD,UAAA,SAAAO,MAAA,CAAAmB,IA2F21B,CAAC;IA3F91BhF,EAAE,CAAA8D,SAAA,EA2FmgC,CAAC;IA3FtgC9D,EAAE,CAAAsD,UAAA,cAAAO,MAAA,CAAAkB,OAAA,EA2FmgC,CAAC;IA3FtgC/E,EAAE,CAAA8D,SAAA,EA2F2nC,CAAC;IA3F9nC9D,EAAE,CAAAsD,UAAA,YAAAO,MAAA,CAAAoB,SA2F2nC,CAAC;EAAA;AAAA;AA5FnuC,MAAMC,kBAAkB,CAAC;EACrB;IAAS,IAAI,CAACC,IAAI,YAAAC,2BAAAC,iBAAA;MAAA,YAAAA,iBAAA,IAAyFH,kBAAkB;IAAA,CAAmD;EAAE;EAClL;IAAS,IAAI,CAACI,IAAI,kBAD+EtF,EAAE,CAAAuF,iBAAA;MAAAC,IAAA,EACJN,kBAAkB;MAAAO,SAAA;MAAAC,UAAA;MAAAC,QAAA,GADhB3F,EAAE,CAAA4F,kBAAA,CAC8E,CACzKhF,wBAAwB,CAAC;QAAEoE,IAAI,EAAE;MAAI,CAAC,CAAC,EACvC/D,uBAAuB,CAAC;QAAE+D,IAAI,EAAE;MAAI,CAAC,CAAC,EACtC9D,wBAAwB,CAAC;QAAE8D,IAAI,EAAE;MAAI,CAAC,CAAC,EACvCjE,2BAA2B,CAAC;QAAEiE,IAAI,EAAE/E,MAAM,CAAC,GAAG;MAAE,CAAC,CAAC,CACrD,GAN4FD,EAAE,CAAA6F,mBAAA;MAAAC,KAAA,EAAArD,GAAA;MAAAsD,kBAAA,EAAArD,GAAA;MAAAsD,KAAA;MAAAC,IAAA;MAAAC,QAAA,WAAAC,4BAAAtD,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UAAF7C,EAAE,CAAAoG,eAAA;UAAFpG,EAAE,CAAA+C,YAAA,EAMvD,CAAC;QAAA;MAAA;MAAAsD,MAAA;MAAAC,aAAA;MAAAC,eAAA;IAAA,EAA0xB;EAAE;AAC70B;AACA;EAAA,QAAAC,SAAA,oBAAAA,SAAA,KARqGxG,EAAE,CAAAyG,iBAAA,CAQXvB,kBAAkB,EAAc,CAAC;IACjHM,IAAI,EAAEtF,SAAS;IACfwG,IAAI,EAAE,CAAC;MAAEhB,UAAU,EAAE,IAAI;MAAEiB,QAAQ,EAAE,mBAAmB;MAAET,QAAQ,EAAE,eAAe;MAAEI,aAAa,EAAEnG,iBAAiB,CAACyG,IAAI;MAAEL,eAAe,EAAEnG,uBAAuB,CAACyG,MAAM;MAAEC,SAAS,EAAE,CAC5KlG,wBAAwB,CAAC;QAAEoE,IAAI,EAAE;MAAI,CAAC,CAAC,EACvC/D,uBAAuB,CAAC;QAAE+D,IAAI,EAAE;MAAI,CAAC,CAAC,EACtC9D,wBAAwB,CAAC;QAAE8D,IAAI,EAAE;MAAI,CAAC,CAAC,EACvCjE,2BAA2B,CAAC;QAAEiE,IAAI,EAAE/E,MAAM,CAAC,GAAG;MAAE,CAAC,CAAC,CACrD;MAAEoG,MAAM,EAAE,CAAC,4pBAA4pB;IAAE,CAAC;EACvrB,CAAC,CAAC;AAAA;AAEV,MAAMU,wBAAwB,CAAC;EAC3BC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,QAAQ,GAAG9E,WAAW,CAAC,IAAI,CAAC;EACrC;EACA,IAAI+D,QAAQA,CAACA,QAAQ,EAAE;IACnB,IAAI,CAACe,QAAQ,CAACC,GAAG,CAAChB,QAAQ,CAAC;EAC/B;EACA;IAAS,IAAI,CAACf,IAAI,YAAAgC,iCAAA9B,iBAAA;MAAA,YAAAA,iBAAA,IAAyF0B,wBAAwB;IAAA,CAAmD;EAAE;EACxL;IAAS,IAAI,CAACzB,IAAI,kBA1B+EtF,EAAE,CAAAuF,iBAAA;MAAAC,IAAA,EA0BJuB,wBAAwB;MAAAtB,SAAA;MAAA2B,SAAA,WAAAC,+BAAAxE,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UA1BtB7C,EAAE,CAAAsH,WAAA,CAgC1BhH,WAAW;QAAA;QAAA,IAAAuC,EAAA;UAAA,IAAA0E,EAAA;UAhCavH,EAAE,CAAAwH,cAAA,CAAAD,EAAA,GAAFvH,EAAE,CAAAyH,WAAA,QAAA3E,GAAA,CAAAoD,QAAA,GAAAqB,EAAA,CAAAG,KAAA;QAAA;MAAA;MAAAhC,UAAA;MAAAC,QAAA,GAAF3F,EAAE,CAAA4F,kBAAA,CA0B0F,CACrLxD,0BAA0B,CAAC;QAAEuF,KAAK,EAAE;MAAQ,CAAC,CAAC,EAC9C;QACIC,OAAO,EAAErF,cAAc;QACvBsF,UAAU,EAAEA,CAAA,KAAMxH,MAAM,CAACmC,gBAAgB,CAAC,CAACsF;MAC/C,CAAC,CACJ,GAhC4F9H,EAAE,CAAA+H,uBAAA,EAgCuC7F,EAAE,CAACG,oBAAoB,EAAiBH,EAAE,CAACI,mBAAmB,IAhCvGtC,EAAE,CAAA6F,mBAAA;MAAAC,KAAA,EAAAnD,GAAA;MAAAoD,kBAAA,EAAArD,GAAA;MAAAsD,KAAA;MAAAC,IAAA;MAAAC,QAAA,WAAA8B,kCAAAnF,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UAAF7C,EAAE,CAAAoG,eAAA;UAAFpG,EAAE,CAAAyD,UAAA,IAAAb,+CAAA,qBAgC+I,CAAC;QAAA;MAAA;MAAA0D,aAAA;MAAAC,eAAA;IAAA,EAAoG;EAAE;AAC7V;AACA;EAAA,QAAAC,SAAA,oBAAAA,SAAA,KAlCqGxG,EAAE,CAAAyG,iBAAA,CAkCXM,wBAAwB,EAAc,CAAC;IACvHvB,IAAI,EAAEtF,SAAS;IACfwG,IAAI,EAAE,CAAC;MACChB,UAAU,EAAE,IAAI;MAChBiB,QAAQ,EAAE,yBAAyB;MACnCT,QAAQ,EAAE,2CAA2C;MACrDK,eAAe,EAAEnG,uBAAuB,CAACyG,MAAM;MAC/CC,SAAS,EAAE,CACP1E,0BAA0B,CAAC;QAAEuF,KAAK,EAAE;MAAQ,CAAC,CAAC,EAC9C;QACIC,OAAO,EAAErF,cAAc;QACvBsF,UAAU,EAAEA,CAAA,KAAMxH,MAAM,CAACmC,gBAAgB,CAAC,CAACsF;MAC/C,CAAC,CACJ;MACDG,cAAc,EAAE,CAAC5F,oBAAoB,EAAEC,mBAAmB;IAC9D,CAAC;EACT,CAAC,CAAC,QAAkB;IAAE4D,QAAQ,EAAE,CAAC;MACzBV,IAAI,EAAEjF,SAAS;MACfmG,IAAI,EAAE,CAACpG,WAAW;IACtB,CAAC;EAAE,CAAC;AAAA;AAEhB,MAAM4H,KAAK,GAAG,EAAE;AAChB,MAAMC,yBAAyB,CAAC;EAC5BnB,WAAWA,CAAA,EAAG;IACV,IAAI,CAACoB,QAAQ,GAAG3G,WAAW;IAC3B,IAAI,CAAC4G,QAAQ,GAAGpI,MAAM,CAAC,EAAE,CAAC;IAC1B,IAAI,CAACgF,SAAS,GAAGxD,WAAW;IAC5B,IAAI,CAACsC,SAAS,GAAGzC,QAAQ,CAACjB,MAAM,CAACmB,qBAAqB,EAAE;MAAE8G,IAAI,EAAE;IAAK,CAAC,CAAC,CAACC,IAAI,CAACzG,GAAG,CAAE0G,KAAK,IAAK;MACxF,MAAMC,KAAK,GAAGD,KAAK,CAAC,CAAC,CAAC,EAAEE,WAAW,CAACD,KAAK,IAAI,CAAC;MAC9C,OAAOE,IAAI,CAACC,KAAK,CAAC,CAACH,KAAK,GAAG,IAAI,CAACI,IAAI,IAAIX,KAAK,GAAG,IAAI,CAACY,IAAI,CAAC;IAC9D,CAAC,CAAC,EAAE/G,oBAAoB,CAAC,CAAC,EAAEL,WAAW,CAAC,CAAC,CAAC,EAAE;MAAEqH,YAAY,EAAE;IAAE,CAAC,CAAC;IAChE,IAAI,CAAChE,OAAO,GAAGvE,QAAQ,CAAC,MAAM,IAAI,CAAC6H,QAAQ,CAAC,CAAC,CAACW,IAAI,CAAC,CAAC;MAAEC;IAAQ,CAAC,EAAErF,KAAK,KAAKqF,OAAO,IAAIrF,KAAK,IAAI,IAAI,CAACG,SAAS,CAAC,CAAC,IAAI,CAAClC,iBAAiB,CAACoH,OAAO,CAAC,CAAC,CAAC;IAChJ,IAAI,CAACjE,IAAI,GAAG,GAAG;EACnB;EACA;EACAkE,kBAAkBA,CAAA,EAAG;IACjBvH,mBAAmB,CAAC,IAAI,CAACyG,QAAQ,CAAC,CAC7BG,IAAI,CAACvG,SAAS,CAAEmH,GAAG,IAAKlH,KAAK,CAAC,GAAGkH,GAAG,CAACrH,GAAG,CAAEsH,CAAC,IAAKxH,eAAe,CAACwH,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEtH,GAAG,CAAC,MAAM,IAAI,CAACsG,QAAQ,CAACiB,OAAO,CAAC,CAAC,CAAC,CAAC,CAC1GC,SAAS,CAAEjB,QAAQ,IAAK,IAAI,CAACA,QAAQ,CAACnB,GAAG,CAACmB,QAAQ,CAAC,CAAC;EAC7D;EACAzD,OAAOA,CAAA,EAAG;IACN,IAAI,CAACwD,QAAQ,CAACmB,OAAO,CAAC,CAAC;MAAEN;IAAQ,CAAC,EAAErF,KAAK,KAAK;MAC1C,IAAIqF,OAAO,IAAIrF,KAAK,IAAI,IAAI,CAACG,SAAS,CAAC,CAAC,EAAE;QACtCkF,OAAO,CAACO,QAAQ,CAAC,IAAI,CAAC;MAC1B;IACJ,CAAC,CAAC;EACN;EACA,IAAIV,IAAIA,CAAA,EAAG;IACP,OAAO,IAAI,CAACW,GAAG,EAAEC,aAAa,CAACC,WAAW,IAAI,EAAE;EACpD;EACA,IAAId,IAAIA,CAAA,EAAG;IACP,OAAO,IAAI,CAACe,MAAM,EAAEF,aAAa,CAACG,WAAW,IAAI,CAAC;EACtD;EACA;IAAS,IAAI,CAAC1E,IAAI,YAAA2E,kCAAAzE,iBAAA;MAAA,YAAAA,iBAAA,IAAyF8C,yBAAyB;IAAA,CAAmD;EAAE;EACzL;IAAS,IAAI,CAAC7C,IAAI,kBAxF+EtF,EAAE,CAAAuF,iBAAA;MAAAC,IAAA,EAwFJ2C,yBAAyB;MAAA1C,SAAA;MAAAsE,cAAA,WAAAC,yCAAAnH,EAAA,EAAAC,GAAA,EAAAmH,QAAA;QAAA,IAAApH,EAAA;UAxFvB7C,EAAE,CAAAkK,cAAA,CAAAD,QAAA,EA2F3C1I,SAAS;UA3FgCvB,EAAE,CAAAkK,cAAA,CAAAD,QAAA,EA2F6BlK,OAAO,KAA2BO,WAAW;QAAA;QAAA,IAAAuC,EAAA;UAAA,IAAA0E,EAAA;UA3F5EvH,EAAE,CAAAwH,cAAA,CAAAD,EAAA,GAAFvH,EAAE,CAAAyH,WAAA,QAAA3E,GAAA,CAAAsF,QAAA,GAAAb,EAAA;UAAFvH,EAAE,CAAAwH,cAAA,CAAAD,EAAA,GAAFvH,EAAE,CAAAyH,WAAA,QAAA3E,GAAA,CAAAmC,SAAA,GAAAsC,EAAA;QAAA;MAAA;MAAAH,SAAA,WAAA+C,gCAAAtH,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UAAF7C,EAAE,CAAAsH,WAAA,CAAAtE,GAAA;UAAFhD,EAAE,CAAAsH,WAAA,CA2F4NzG,SAAS,KAA2BJ,UAAU;QAAA;QAAA,IAAAoC,EAAA;UAAA,IAAA0E,EAAA;UA3F5QvH,EAAE,CAAAwH,cAAA,CAAAD,EAAA,GAAFvH,EAAE,CAAAyH,WAAA,QAAA3E,GAAA,CAAA2G,GAAA,GAAAlC,EAAA,CAAAG,KAAA;UAAF1H,EAAE,CAAAwH,cAAA,CAAAD,EAAA,GAAFvH,EAAE,CAAAyH,WAAA,QAAA3E,GAAA,CAAA8G,MAAA,GAAArC,EAAA,CAAAG,KAAA;QAAA;MAAA;MAAA0C,MAAA;QAAApF,IAAA;MAAA;MAAAU,UAAA;MAAAC,QAAA,GAAF3F,EAAE,CAAA4F,kBAAA,CAwFgH,CAC3MpE,qBAAqB,EACrBZ,wBAAwB,CAAC;QAAEoE,IAAI,EAAE,IAAI;QAAEqF,UAAU,EAAE;MAAO,CAAC,CAAC,CAC/D,GA3F4FrK,EAAE,CAAA+H,uBAAA;QAAAuC,SAAA,EA2F6SxJ,IAAI,CAACE,4BAA4B;QAAAoJ,MAAA;MAAA,KA3FhVpK,EAAE,CAAA6F,mBAAA;MAAAE,kBAAA,EAAArD,GAAA;MAAAsD,KAAA;MAAAC,IAAA;MAAAsE,MAAA;MAAArE,QAAA,WAAAsE,mCAAA3H,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UAAF7C,EAAE,CAAAoG,eAAA;UAAFpG,EAAE,CAAAyD,UAAA,IAAAF,iDAAA,yBA2Fmd,CAAC;UA3FtdvD,EAAE,CAAAyK,SAAA,eA2FynB,CAAC;UA3F5nBzK,EAAE,CAAAyD,UAAA,IAAAW,2CAAA,mBA2F81B,CAAC;QAAA;QAAA,IAAAvB,EAAA;UA3Fj2B7C,EAAE,CAAAsD,UAAA,YAAAR,GAAA,CAAAmC,SA2Fmc,CAAC;UA3FtcjF,EAAE,CAAA8D,SAAA,EA2F8qB,CAAC;UA3FjrB9D,EAAE,CAAAsD,UAAA,SAAAR,GAAA,CAAAiB,SAAA,KAAAjB,GAAA,CAAAmC,SAAA,CAAAyF,MA2F8qB,CAAC;QAAA;MAAA;MAAAC,YAAA,GAAo6CxJ,OAAO,EAAmHC,IAAI,EAA6FC,gBAAgB,EAAoJR,SAAS,EAAoIkG,wBAAwB;MAAAV,MAAA;MAAAE,eAAA;IAAA,EAA+F;EAAE;AAC/zF;AACA;EAAA,QAAAC,SAAA,oBAAAA,SAAA,KA7FqGxG,EAAE,CAAAyG,iBAAA,CA6FX0B,yBAAyB,EAAc,CAAC;IACxH3C,IAAI,EAAEtF,SAAS;IACfwG,IAAI,EAAE,CAAC;MAAEhB,UAAU,EAAE,IAAI;MAAEiB,QAAQ,EAAE,oBAAoB;MAAEiE,OAAO,EAAE,CAACzJ,OAAO,EAAEC,IAAI,EAAEC,gBAAgB,EAAER,SAAS,EAAEkG,wBAAwB,CAAC;MAAER,eAAe,EAAEnG,uBAAuB,CAACyG,MAAM;MAAEC,SAAS,EAAE,CAC5LtF,qBAAqB,EACrBZ,wBAAwB,CAAC;QAAEoE,IAAI,EAAE,IAAI;QAAEqF,UAAU,EAAE;MAAO,CAAC,CAAC,CAC/D;MAAEpC,cAAc,EAAE,CACf;QACIqC,SAAS,EAAEtJ,4BAA4B;QACvCoJ,MAAM,EAAE,CAAC,wBAAwB;MACrC,CAAC,CACJ;MAAElE,QAAQ,EAAE,u7BAAu7B;MAAEG,MAAM,EAAE,CAAC,mtBAAmtB;IAAE,CAAC;EACjrD,CAAC,CAAC,QAAkB;IAAEoD,GAAG,EAAE,CAAC;MACpBjE,IAAI,EAAEjF,SAAS;MACfmG,IAAI,EAAE,CAAC,KAAK;IAChB,CAAC,CAAC;IAAEkD,MAAM,EAAE,CAAC;MACTpE,IAAI,EAAEjF,SAAS;MACfmG,IAAI,EAAE,CAAC7F,SAAS,EAAE;QAAEgK,IAAI,EAAEpK;MAAW,CAAC;IAC1C,CAAC,CAAC;IAAE2H,QAAQ,EAAE,CAAC;MACX5C,IAAI,EAAE9E,eAAe;MACrBgG,IAAI,EAAE,CAACnF,SAAS,EAAE;QAAEuJ,WAAW,EAAE;MAAK,CAAC;IAC3C,CAAC,CAAC;IAAE7F,SAAS,EAAE,CAAC;MACZO,IAAI,EAAE9E,eAAe;MACrBgG,IAAI,EAAE,CAAC3G,OAAO,EAAE;QAAE+K,WAAW,EAAE,IAAI;QAAED,IAAI,EAAEvK;MAAY,CAAC;IAC5D,CAAC,CAAC;IAAE0E,IAAI,EAAE,CAAC;MACPQ,IAAI,EAAE7E;IACV,CAAC;EAAE,CAAC;AAAA;AAEhB,MAAMoK,SAAS,GAAG,CACd7F,kBAAkB,EAClBiD,yBAAyB,EACzBpI,OAAO,CACV;;AAED;AACA;AACA;;AAEA,SAASgL,SAAS,EAAE7F,kBAAkB,EAAEiD,yBAAyB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}