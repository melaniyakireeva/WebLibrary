{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { InjectionToken, inject, ElementRef, EventEmitter, Directive, Input, Output, Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nconst SafeObserver = typeof MutationObserver !== 'undefined' ? MutationObserver : class {\n  observe() {}\n  disconnect() {}\n  takeRecords() {\n    return [];\n  }\n};\nconst WA_MUTATION_OBSERVER_INIT = new InjectionToken('[WA_MUTATION_OBSERVER_INIT]');\n/**\n * @deprecated: drop in v5.0, use {@link WA_MUTATION_OBSERVER_INIT}\n */\nconst MUTATION_OBSERVER_INIT = WA_MUTATION_OBSERVER_INIT;\nfunction booleanAttribute(element, attribute) {\n  return element.getAttribute(attribute) !== null || undefined;\n}\nfunction mutationObserverInitFactory() {\n  const {\n    nativeElement\n  } = inject(ElementRef);\n  const attributeFilter = nativeElement.getAttribute('attributeFilter');\n  return {\n    attributeFilter: attributeFilter?.split(',').map(attr => attr.trim()),\n    attributeOldValue: booleanAttribute(nativeElement, 'attributeOldValue'),\n    attributes: booleanAttribute(nativeElement, 'attributes'),\n    characterData: booleanAttribute(nativeElement, 'characterData'),\n    characterDataOldValue: booleanAttribute(nativeElement, 'characterDataOldValue'),\n    childList: booleanAttribute(nativeElement, 'childList'),\n    subtree: booleanAttribute(nativeElement, 'subtree')\n  };\n}\nclass WaMutationObserver extends SafeObserver {\n  nativeElement = inject(ElementRef).nativeElement;\n  config = inject(MUTATION_OBSERVER_INIT);\n  attributeFilter = '';\n  attributeOldValue = '';\n  attributes = '';\n  characterData = '';\n  characterDataOldValue = '';\n  childList = '';\n  subtree = '';\n  waMutationObserver = new EventEmitter();\n  constructor() {\n    super(records => {\n      this.waMutationObserver.emit(records);\n    });\n    this.observe(this.nativeElement, this.config);\n  }\n  ngOnDestroy() {\n    this.disconnect();\n  }\n  static ɵfac = function WaMutationObserver_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || WaMutationObserver)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: WaMutationObserver,\n    selectors: [[\"\", \"waMutationObserver\", \"\"]],\n    inputs: {\n      attributeFilter: \"attributeFilter\",\n      attributeOldValue: \"attributeOldValue\",\n      attributes: \"attributes\",\n      characterData: \"characterData\",\n      characterDataOldValue: \"characterDataOldValue\",\n      childList: \"childList\",\n      subtree: \"subtree\"\n    },\n    outputs: {\n      waMutationObserver: \"waMutationObserver\"\n    },\n    exportAs: [\"MutationObserver\"],\n    standalone: true,\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MUTATION_OBSERVER_INIT,\n      useFactory: mutationObserverInitFactory\n    }]), i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(WaMutationObserver, [{\n    type: Directive,\n    args: [{\n      standalone: true,\n      selector: '[waMutationObserver]',\n      providers: [{\n        provide: MUTATION_OBSERVER_INIT,\n        useFactory: mutationObserverInitFactory\n      }],\n      exportAs: 'MutationObserver'\n    }]\n  }], function () {\n    return [];\n  }, {\n    attributeFilter: [{\n      type: Input\n    }],\n    attributeOldValue: [{\n      type: Input\n    }],\n    attributes: [{\n      type: Input\n    }],\n    characterData: [{\n      type: Input\n    }],\n    characterDataOldValue: [{\n      type: Input\n    }],\n    childList: [{\n      type: Input\n    }],\n    subtree: [{\n      type: Input\n    }],\n    waMutationObserver: [{\n      type: Output\n    }]\n  });\n})();\n/**\n * @deprecated: use {@link WaMutationObserver}\n */\nconst MutationObserverDirective = WaMutationObserver;\nclass MutationObserverService extends Observable {\n  constructor() {\n    const nativeElement = inject(ElementRef).nativeElement;\n    const config = inject(MUTATION_OBSERVER_INIT);\n    super(subscriber => {\n      const observer = new SafeObserver(records => {\n        subscriber.next(records);\n      });\n      observer.observe(nativeElement, config);\n      return () => {\n        observer.disconnect();\n      };\n    });\n  }\n  static ɵfac = function MutationObserverService_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MutationObserverService)();\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: MutationObserverService,\n    factory: MutationObserverService.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MutationObserverService, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MUTATION_OBSERVER_INIT, MutationObserverDirective, MutationObserverService, WA_MUTATION_OBSERVER_INIT, WaMutationObserver };","map":{"version":3,"names":["i0","InjectionToken","inject","ElementRef","EventEmitter","Directive","Input","Output","Injectable","Observable","SafeObserver","MutationObserver","observe","disconnect","takeRecords","WA_MUTATION_OBSERVER_INIT","MUTATION_OBSERVER_INIT","booleanAttribute","element","attribute","getAttribute","undefined","mutationObserverInitFactory","nativeElement","attributeFilter","split","map","attr","trim","attributeOldValue","attributes","characterData","characterDataOldValue","childList","subtree","WaMutationObserver","config","waMutationObserver","constructor","records","emit","ngOnDestroy","ɵfac","WaMutationObserver_Factory","__ngFactoryType__","ɵdir","ɵɵdefineDirective","type","selectors","inputs","outputs","exportAs","standalone","features","ɵɵProvidersFeature","provide","useFactory","ɵɵInheritDefinitionFeature","ngDevMode","ɵsetClassMetadata","args","selector","providers","MutationObserverDirective","MutationObserverService","subscriber","observer","next","MutationObserverService_Factory","ɵprov","ɵɵdefineInjectable","token","factory"],"sources":["C:/Users/Asus-PC/Downloads/WebLibraryNew/WebLibrary/WebLibraryApp/Frontend/node_modules/@ng-web-apis/mutation-observer/fesm2022/ng-web-apis-mutation-observer.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, inject, ElementRef, EventEmitter, Directive, Input, Output, Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nconst SafeObserver = typeof MutationObserver !== 'undefined'\n    ? MutationObserver\n    : class {\n        observe() { }\n        disconnect() { }\n        takeRecords() {\n            return [];\n        }\n    };\n\nconst WA_MUTATION_OBSERVER_INIT = new InjectionToken('[WA_MUTATION_OBSERVER_INIT]');\n/**\n * @deprecated: drop in v5.0, use {@link WA_MUTATION_OBSERVER_INIT}\n */\nconst MUTATION_OBSERVER_INIT = WA_MUTATION_OBSERVER_INIT;\n\nfunction booleanAttribute(element, attribute) {\n    return element.getAttribute(attribute) !== null || undefined;\n}\n\nfunction mutationObserverInitFactory() {\n    const { nativeElement } = inject(ElementRef);\n    const attributeFilter = nativeElement.getAttribute('attributeFilter');\n    return {\n        attributeFilter: attributeFilter?.split(',').map((attr) => attr.trim()),\n        attributeOldValue: booleanAttribute(nativeElement, 'attributeOldValue'),\n        attributes: booleanAttribute(nativeElement, 'attributes'),\n        characterData: booleanAttribute(nativeElement, 'characterData'),\n        characterDataOldValue: booleanAttribute(nativeElement, 'characterDataOldValue'),\n        childList: booleanAttribute(nativeElement, 'childList'),\n        subtree: booleanAttribute(nativeElement, 'subtree'),\n    };\n}\n\nclass WaMutationObserver extends SafeObserver {\n    nativeElement = inject(ElementRef).nativeElement;\n    config = inject(MUTATION_OBSERVER_INIT);\n    attributeFilter = '';\n    attributeOldValue = '';\n    attributes = '';\n    characterData = '';\n    characterDataOldValue = '';\n    childList = '';\n    subtree = '';\n    waMutationObserver = new EventEmitter();\n    constructor() {\n        super((records) => {\n            this.waMutationObserver.emit(records);\n        });\n        this.observe(this.nativeElement, this.config);\n    }\n    ngOnDestroy() {\n        this.disconnect();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: WaMutationObserver, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.12\", type: WaMutationObserver, isStandalone: true, selector: \"[waMutationObserver]\", inputs: { attributeFilter: \"attributeFilter\", attributeOldValue: \"attributeOldValue\", attributes: \"attributes\", characterData: \"characterData\", characterDataOldValue: \"characterDataOldValue\", childList: \"childList\", subtree: \"subtree\" }, outputs: { waMutationObserver: \"waMutationObserver\" }, providers: [\n            {\n                provide: MUTATION_OBSERVER_INIT,\n                useFactory: mutationObserverInitFactory,\n            },\n        ], exportAs: [\"MutationObserver\"], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: WaMutationObserver, decorators: [{\n            type: Directive,\n            args: [{\n                    standalone: true,\n                    selector: '[waMutationObserver]',\n                    providers: [\n                        {\n                            provide: MUTATION_OBSERVER_INIT,\n                            useFactory: mutationObserverInitFactory,\n                        },\n                    ],\n                    exportAs: 'MutationObserver',\n                }]\n        }], ctorParameters: function () { return []; }, propDecorators: { attributeFilter: [{\n                type: Input\n            }], attributeOldValue: [{\n                type: Input\n            }], attributes: [{\n                type: Input\n            }], characterData: [{\n                type: Input\n            }], characterDataOldValue: [{\n                type: Input\n            }], childList: [{\n                type: Input\n            }], subtree: [{\n                type: Input\n            }], waMutationObserver: [{\n                type: Output\n            }] } });\n/**\n * @deprecated: use {@link WaMutationObserver}\n */\nconst MutationObserverDirective = WaMutationObserver;\n\nclass MutationObserverService extends Observable {\n    constructor() {\n        const nativeElement = inject(ElementRef).nativeElement;\n        const config = inject(MUTATION_OBSERVER_INIT);\n        super((subscriber) => {\n            const observer = new SafeObserver((records) => {\n                subscriber.next(records);\n            });\n            observer.observe(nativeElement, config);\n            return () => {\n                observer.disconnect();\n            };\n        });\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: MutationObserverService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: MutationObserverService });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: MutationObserverService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return []; } });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MUTATION_OBSERVER_INIT, MutationObserverDirective, MutationObserverService, WA_MUTATION_OBSERVER_INIT, WaMutationObserver };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}