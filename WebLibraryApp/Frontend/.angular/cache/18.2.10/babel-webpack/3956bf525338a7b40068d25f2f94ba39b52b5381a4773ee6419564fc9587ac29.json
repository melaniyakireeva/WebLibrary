{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { InjectionToken, inject, Injector, TemplateRef, ChangeDetectorRef, Directive, ViewContainerRef, INJECTOR, Input } from '@angular/core';\n\n/**\n * Use this token to access context within your components when\n * instantiating them through {@link PolymorpheusOutlet}\n */\nconst POLYMORPHEUS_CONTEXT = new InjectionToken('');\nfunction injectContext(options = {}) {\n  return inject(POLYMORPHEUS_CONTEXT, options);\n}\n\n/**\n * Wrapper class for a component that will be used as content for {@link PolymorpheusOutlet}\n *\n * @param component — an Angular component to be dynamically created\n * @param injector — optional {@link Injector} for lazy loaded module case\n */\nclass PolymorpheusComponent {\n  constructor(component, i) {\n    this.component = component;\n    this.i = i;\n  }\n  createInjector(injector, useValue) {\n    return Injector.create({\n      parent: this.i || injector,\n      providers: [{\n        provide: POLYMORPHEUS_CONTEXT,\n        useValue\n      }]\n    });\n  }\n}\nclass PolymorpheusContext {\n  constructor($implicit) {\n    this.$implicit = $implicit;\n  }\n  get polymorpheusOutlet() {\n    return this.$implicit;\n  }\n}\n/**\n * @deprecated: use {@link PolymorpheusContext} instead\n * Primitive types used as content by {@link PolymorpheusOutlet}\n */\nclass PrimitiveContext extends PolymorpheusContext {}\n\n/**\n * ng-template wrapper directive also stores {@link ChangeDetectorRef} to properly handle change detection.\n */\nclass PolymorpheusTemplate {\n  constructor(template = inject(TemplateRef, {\n    self: true\n  }), cdr = inject(ChangeDetectorRef)) {\n    this.template = template;\n    this.cdr = cdr;\n    this.polymorpheus = '';\n  }\n  static ngTemplateContextGuard(_dir, _ctx) {\n    return true;\n  }\n  check() {\n    this.cdr.markForCheck();\n  }\n  /** @nocollapse */\n  static {\n    this.ɵfac = function PolymorpheusTemplate_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || PolymorpheusTemplate)(i0.ɵɵdirectiveInject(i0.TemplateRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: PolymorpheusTemplate,\n      selectors: [[\"ng-template\", \"polymorpheus\", \"\"]],\n      inputs: {\n        polymorpheus: \"polymorpheus\"\n      },\n      exportAs: [\"polymorpheus\"],\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PolymorpheusTemplate, [{\n    type: Directive,\n    args: [{\n      standalone: true,\n      selector: 'ng-template[polymorpheus]',\n      inputs: ['polymorpheus'],\n      exportAs: 'polymorpheus'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, null);\n})();\nclass PolymorpheusOutlet {\n  constructor() {\n    this.vcr = inject(ViewContainerRef);\n    this.i = inject(INJECTOR);\n    this.t = inject(TemplateRef);\n    this.content = '';\n  }\n  static ngTemplateContextGuard(_dir, _ctx) {\n    return true;\n  }\n  ngOnChanges({\n    content\n  }) {\n    const context = this.getContext();\n    this.c?.injector.get(ChangeDetectorRef).markForCheck();\n    if (!content) {\n      return;\n    }\n    this.vcr.clear();\n    const proxy = context && new Proxy(context, {\n      get: (_, key) => this.getContext()?.[key]\n    });\n    if (isComponent(this.content)) {\n      this.process(this.content, proxy);\n    } else if ((context instanceof PolymorpheusContext && context.$implicit) != null) {\n      this.vcr.createEmbeddedView(this.template, proxy, {\n        injector: this.i\n      });\n    }\n  }\n  ngDoCheck() {\n    if (isDirective(this.content)) {\n      this.content.check();\n    }\n  }\n  get template() {\n    if (isDirective(this.content)) {\n      return this.content.template;\n    }\n    return this.content instanceof TemplateRef ? this.content : this.t;\n  }\n  getContext() {\n    if (isTemplate(this.content) || isComponent(this.content)) {\n      return this.context;\n    }\n    return new PolymorpheusContext(this.context && typeof this.content === 'function' ? this.content(this.context) : this.content);\n  }\n  process(content, proxy) {\n    const injector = content.createInjector(this.i, proxy);\n    this.c = this.vcr.createComponent(content.component, {\n      injector\n    });\n  }\n  /** @nocollapse */\n  static {\n    this.ɵfac = function PolymorpheusOutlet_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || PolymorpheusOutlet)();\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: PolymorpheusOutlet,\n      selectors: [[\"\", \"polymorpheusOutlet\", \"\"]],\n      inputs: {\n        content: [0, \"polymorpheusOutlet\", \"content\"],\n        context: [0, \"polymorpheusOutletContext\", \"context\"]\n      },\n      standalone: true,\n      features: [i0.ɵɵNgOnChangesFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PolymorpheusOutlet, [{\n    type: Directive,\n    args: [{\n      standalone: true,\n      selector: '[polymorpheusOutlet]'\n    }]\n  }], null, {\n    content: [{\n      type: Input,\n      args: ['polymorpheusOutlet']\n    }],\n    context: [{\n      type: Input,\n      args: ['polymorpheusOutletContext']\n    }]\n  });\n})();\nfunction isDirective(content) {\n  return content instanceof PolymorpheusTemplate;\n}\nfunction isComponent(content) {\n  return content instanceof PolymorpheusComponent;\n}\nfunction isTemplate(content) {\n  return isDirective(content) || content instanceof TemplateRef;\n}\n\n/**\n * Public API Surface of ng-polymorpheus\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { POLYMORPHEUS_CONTEXT, PolymorpheusComponent, PolymorpheusOutlet, PolymorpheusTemplate, injectContext };","map":{"version":3,"names":["i0","InjectionToken","inject","Injector","TemplateRef","ChangeDetectorRef","Directive","ViewContainerRef","INJECTOR","Input","POLYMORPHEUS_CONTEXT","injectContext","options","PolymorpheusComponent","constructor","component","i","createInjector","injector","useValue","create","parent","providers","provide","PolymorpheusContext","$implicit","polymorpheusOutlet","PrimitiveContext","PolymorpheusTemplate","template","self","cdr","polymorpheus","ngTemplateContextGuard","_dir","_ctx","check","markForCheck","ɵfac","PolymorpheusTemplate_Factory","__ngFactoryType__","ɵɵdirectiveInject","ɵdir","ɵɵdefineDirective","type","selectors","inputs","exportAs","standalone","ngDevMode","ɵsetClassMetadata","args","selector","PolymorpheusOutlet","vcr","t","content","ngOnChanges","context","getContext","c","get","clear","proxy","Proxy","_","key","isComponent","process","createEmbeddedView","ngDoCheck","isDirective","isTemplate","createComponent","PolymorpheusOutlet_Factory","features","ɵɵNgOnChangesFeature"],"sources":["C:/Users/Asus-PC/Downloads/WebLibraryNew/WebLibrary/WebLibraryApp/Frontend/node_modules/@taiga-ui/polymorpheus/fesm2022/taiga-ui-polymorpheus.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, inject, Injector, TemplateRef, ChangeDetectorRef, Directive, ViewContainerRef, INJECTOR, Input } from '@angular/core';\n\n/**\n * Use this token to access context within your components when\n * instantiating them through {@link PolymorpheusOutlet}\n */\nconst POLYMORPHEUS_CONTEXT = new InjectionToken('');\nfunction injectContext(options = {}) {\n    return inject(POLYMORPHEUS_CONTEXT, options);\n}\n\n/**\n * Wrapper class for a component that will be used as content for {@link PolymorpheusOutlet}\n *\n * @param component — an Angular component to be dynamically created\n * @param injector — optional {@link Injector} for lazy loaded module case\n */\nclass PolymorpheusComponent {\n    constructor(component, i) {\n        this.component = component;\n        this.i = i;\n    }\n    createInjector(injector, useValue) {\n        return Injector.create({\n            parent: this.i || injector,\n            providers: [\n                {\n                    provide: POLYMORPHEUS_CONTEXT,\n                    useValue,\n                },\n            ],\n        });\n    }\n}\n\nclass PolymorpheusContext {\n    constructor($implicit) {\n        this.$implicit = $implicit;\n    }\n    get polymorpheusOutlet() {\n        return this.$implicit;\n    }\n}\n/**\n * @deprecated: use {@link PolymorpheusContext} instead\n * Primitive types used as content by {@link PolymorpheusOutlet}\n */\nclass PrimitiveContext extends PolymorpheusContext {\n}\n\n/**\n * ng-template wrapper directive also stores {@link ChangeDetectorRef} to properly handle change detection.\n */\nclass PolymorpheusTemplate {\n    constructor(template = inject((TemplateRef), { self: true }), cdr = inject(ChangeDetectorRef)) {\n        this.template = template;\n        this.cdr = cdr;\n        this.polymorpheus = '';\n    }\n    static ngTemplateContextGuard(_dir, _ctx) {\n        return true;\n    }\n    check() {\n        this.cdr.markForCheck();\n    }\n    /** @nocollapse */ static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: PolymorpheusTemplate, deps: [{ token: i0.TemplateRef }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    /** @nocollapse */ static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.12\", type: PolymorpheusTemplate, isStandalone: true, selector: \"ng-template[polymorpheus]\", inputs: { polymorpheus: \"polymorpheus\" }, exportAs: [\"polymorpheus\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: PolymorpheusTemplate, decorators: [{\n            type: Directive,\n            args: [{\n                    standalone: true,\n                    selector: 'ng-template[polymorpheus]',\n                    inputs: ['polymorpheus'],\n                    exportAs: 'polymorpheus',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }, { type: i0.ChangeDetectorRef }]; } });\n\nclass PolymorpheusOutlet {\n    constructor() {\n        this.vcr = inject(ViewContainerRef);\n        this.i = inject(INJECTOR);\n        this.t = inject(TemplateRef);\n        this.content = '';\n    }\n    static ngTemplateContextGuard(_dir, _ctx) {\n        return true;\n    }\n    ngOnChanges({ content }) {\n        const context = this.getContext();\n        this.c?.injector.get(ChangeDetectorRef).markForCheck();\n        if (!content) {\n            return;\n        }\n        this.vcr.clear();\n        const proxy = context &&\n            new Proxy(context, {\n                get: (_, key) => this.getContext()?.[key],\n            });\n        if (isComponent(this.content)) {\n            this.process(this.content, proxy);\n        }\n        else if ((context instanceof PolymorpheusContext && context.$implicit) != null) {\n            this.vcr.createEmbeddedView(this.template, proxy, { injector: this.i });\n        }\n    }\n    ngDoCheck() {\n        if (isDirective(this.content)) {\n            this.content.check();\n        }\n    }\n    get template() {\n        if (isDirective(this.content)) {\n            return this.content.template;\n        }\n        return this.content instanceof TemplateRef ? this.content : this.t;\n    }\n    getContext() {\n        if (isTemplate(this.content) || isComponent(this.content)) {\n            return this.context;\n        }\n        return new PolymorpheusContext(this.context && typeof this.content === 'function'\n            ? this.content(this.context)\n            : this.content);\n    }\n    process(content, proxy) {\n        const injector = content.createInjector(this.i, proxy);\n        this.c = this.vcr.createComponent(content.component, { injector });\n    }\n    /** @nocollapse */ static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: PolymorpheusOutlet, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    /** @nocollapse */ static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.12\", type: PolymorpheusOutlet, isStandalone: true, selector: \"[polymorpheusOutlet]\", inputs: { content: [\"polymorpheusOutlet\", \"content\"], context: [\"polymorpheusOutletContext\", \"context\"] }, usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: PolymorpheusOutlet, decorators: [{\n            type: Directive,\n            args: [{\n                    standalone: true,\n                    selector: '[polymorpheusOutlet]',\n                }]\n        }], propDecorators: { content: [{\n                type: Input,\n                args: ['polymorpheusOutlet']\n            }], context: [{\n                type: Input,\n                args: ['polymorpheusOutletContext']\n            }] } });\nfunction isDirective(content) {\n    return content instanceof PolymorpheusTemplate;\n}\nfunction isComponent(content) {\n    return content instanceof PolymorpheusComponent;\n}\nfunction isTemplate(content) {\n    return isDirective(content) || content instanceof TemplateRef;\n}\n\n/**\n * Public API Surface of ng-polymorpheus\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { POLYMORPHEUS_CONTEXT, PolymorpheusComponent, PolymorpheusOutlet, PolymorpheusTemplate, injectContext };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}