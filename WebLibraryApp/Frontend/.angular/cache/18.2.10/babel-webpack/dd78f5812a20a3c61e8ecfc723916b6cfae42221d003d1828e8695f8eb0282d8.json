{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Directive, Input } from '@angular/core';\nimport { Validators, NG_VALIDATORS } from '@angular/forms';\nimport { EMPTY_FUNCTION } from '@taiga-ui/cdk/constants';\nimport { tuiProvide } from '@taiga-ui/cdk/utils';\nclass TuiValidator {\n  constructor() {\n    this.onChange = EMPTY_FUNCTION;\n    this.tuiValidator = Validators.nullValidator;\n  }\n  validate(control) {\n    return this.tuiValidator(control);\n  }\n  registerOnValidatorChange(onChange) {\n    this.onChange = onChange;\n  }\n  ngOnChanges() {\n    this.onChange();\n  }\n  ngOnDestroy() {\n    this.tuiValidator = Validators.nullValidator;\n    this.onChange();\n  }\n  static {\n    this.ɵfac = function TuiValidator_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiValidator)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: TuiValidator,\n      selectors: [[\"\", \"tuiValidator\", \"\"]],\n      inputs: {\n        tuiValidator: \"tuiValidator\"\n      },\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([tuiProvide(NG_VALIDATORS, TuiValidator, true)]), i0.ɵɵNgOnChangesFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiValidator, [{\n    type: Directive,\n    args: [{\n      standalone: true,\n      selector: '[tuiValidator]',\n      providers: [tuiProvide(NG_VALIDATORS, TuiValidator, true)]\n    }]\n  }], null, {\n    tuiValidator: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiValidator };","map":{"version":3,"names":["i0","Directive","Input","Validators","NG_VALIDATORS","EMPTY_FUNCTION","tuiProvide","TuiValidator","constructor","onChange","tuiValidator","nullValidator","validate","control","registerOnValidatorChange","ngOnChanges","ngOnDestroy","ɵfac","TuiValidator_Factory","__ngFactoryType__","ɵdir","ɵɵdefineDirective","type","selectors","inputs","standalone","features","ɵɵProvidersFeature","ɵɵNgOnChangesFeature","ngDevMode","ɵsetClassMetadata","args","selector","providers"],"sources":["C:/Users/Asus-PC/Downloads/WebLibraryNew/WebLibrary/WebLibraryApp/Frontend/node_modules/@taiga-ui/cdk/fesm2022/taiga-ui-cdk-directives-validator.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Directive, Input } from '@angular/core';\nimport { Validators, NG_VALIDATORS } from '@angular/forms';\nimport { EMPTY_FUNCTION } from '@taiga-ui/cdk/constants';\nimport { tuiProvide } from '@taiga-ui/cdk/utils';\n\nclass TuiValidator {\n    constructor() {\n        this.onChange = EMPTY_FUNCTION;\n        this.tuiValidator = Validators.nullValidator;\n    }\n    validate(control) {\n        return this.tuiValidator(control);\n    }\n    registerOnValidatorChange(onChange) {\n        this.onChange = onChange;\n    }\n    ngOnChanges() {\n        this.onChange();\n    }\n    ngOnDestroy() {\n        this.tuiValidator = Validators.nullValidator;\n        this.onChange();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiValidator, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiValidator, isStandalone: true, selector: \"[tuiValidator]\", inputs: { tuiValidator: \"tuiValidator\" }, providers: [tuiProvide(NG_VALIDATORS, TuiValidator, true)], usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiValidator, decorators: [{\n            type: Directive,\n            args: [{\n                    standalone: true,\n                    selector: '[tuiValidator]',\n                    providers: [tuiProvide(NG_VALIDATORS, TuiValidator, true)],\n                }]\n        }], propDecorators: { tuiValidator: [{\n                type: Input\n            }] } });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiValidator };\n"],"mappings":"AAAA,OAAO,KAAKA,EAAE,MAAM,eAAe;AACnC,SAASC,SAAS,EAAEC,KAAK,QAAQ,eAAe;AAChD,SAASC,UAAU,EAAEC,aAAa,QAAQ,gBAAgB;AAC1D,SAASC,cAAc,QAAQ,yBAAyB;AACxD,SAASC,UAAU,QAAQ,qBAAqB;AAEhD,MAAMC,YAAY,CAAC;EACfC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,QAAQ,GAAGJ,cAAc;IAC9B,IAAI,CAACK,YAAY,GAAGP,UAAU,CAACQ,aAAa;EAChD;EACAC,QAAQA,CAACC,OAAO,EAAE;IACd,OAAO,IAAI,CAACH,YAAY,CAACG,OAAO,CAAC;EACrC;EACAC,yBAAyBA,CAACL,QAAQ,EAAE;IAChC,IAAI,CAACA,QAAQ,GAAGA,QAAQ;EAC5B;EACAM,WAAWA,CAAA,EAAG;IACV,IAAI,CAACN,QAAQ,CAAC,CAAC;EACnB;EACAO,WAAWA,CAAA,EAAG;IACV,IAAI,CAACN,YAAY,GAAGP,UAAU,CAACQ,aAAa;IAC5C,IAAI,CAACF,QAAQ,CAAC,CAAC;EACnB;EACA;IAAS,IAAI,CAACQ,IAAI,YAAAC,qBAAAC,iBAAA;MAAA,YAAAA,iBAAA,IAAyFZ,YAAY;IAAA,CAAmD;EAAE;EAC5K;IAAS,IAAI,CAACa,IAAI,kBAD+EpB,EAAE,CAAAqB,iBAAA;MAAAC,IAAA,EACJf,YAAY;MAAAgB,SAAA;MAAAC,MAAA;QAAAd,YAAA;MAAA;MAAAe,UAAA;MAAAC,QAAA,GADV1B,EAAE,CAAA2B,kBAAA,CAC+G,CAACrB,UAAU,CAACF,aAAa,EAAEG,YAAY,EAAE,IAAI,CAAC,CAAC,GADhKP,EAAE,CAAA4B,oBAAA;IAAA,EACoM;EAAE;AAC7S;AACA;EAAA,QAAAC,SAAA,oBAAAA,SAAA,KAHqG7B,EAAE,CAAA8B,iBAAA,CAGXvB,YAAY,EAAc,CAAC;IAC3Ge,IAAI,EAAErB,SAAS;IACf8B,IAAI,EAAE,CAAC;MACCN,UAAU,EAAE,IAAI;MAChBO,QAAQ,EAAE,gBAAgB;MAC1BC,SAAS,EAAE,CAAC3B,UAAU,CAACF,aAAa,EAAEG,YAAY,EAAE,IAAI,CAAC;IAC7D,CAAC;EACT,CAAC,CAAC,QAAkB;IAAEG,YAAY,EAAE,CAAC;MAC7BY,IAAI,EAAEpB;IACV,CAAC;EAAE,CAAC;AAAA;;AAEhB;AACA;AACA;;AAEA,SAASK,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}