{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, Output, inject, PLATFORM_ID, Injectable, ViewChild, Directive } from '@angular/core';\nimport { tuiInjectElement, tuiGetActualTarget, tuiIsElement } from '@taiga-ui/cdk/utils/dom';\nimport { isPlatformBrowser } from '@angular/common';\nimport { MutationObserverService, WA_MUTATION_OBSERVER_INIT } from '@ng-web-apis/mutation-observer';\nimport { ResizeObserverService } from '@ng-web-apis/resize-observer';\nimport { tuiZonefreeScheduler } from '@taiga-ui/cdk/observables';\nimport { tuiArrayShallowEquals, tuiPx } from '@taiga-ui/cdk/utils/miscellaneous';\nimport { Subject, debounce, timer, filter, map, BehaviorSubject, Subscription, combineLatest, distinctUntilChanged, startWith, debounceTime } from 'rxjs';\nimport { __decorate } from 'tslib';\nimport { shouldCall } from '@taiga-ui/event-plugins';\nconst _c0 = [\"*\"];\nconst _c1 = [\"wrapper\"];\nclass TuiTilesComponent {\n  constructor() {\n    this.el = tuiInjectElement();\n    this.el$ = new Subject();\n    this.debounce = 0;\n    this.orderChange = this.el$.pipe(debounce(() => timer(this.debounce)), filter(this.filter.bind(this)), map(element => this.reorder(element)));\n    this.element = null;\n    this.order$ = new BehaviorSubject(new Map());\n  }\n  set order(map) {\n    this.order$.next(map);\n  }\n  get order() {\n    return this.order$.value;\n  }\n  rearrange(element) {\n    this.el$.next(element);\n  }\n  filter(element) {\n    return !!this.element && !!element && this.element !== element;\n  }\n  reorder(element) {\n    const elements = Array.from(this.el.children);\n    const currentIndex = elements.indexOf(this.element || element);\n    const newIndex = elements.indexOf(element);\n    const order = this.order.size ? new Map(this.order) : new Map(elements.map((_, index) => [index, index]));\n    const dragged = order.get(currentIndex) ?? currentIndex;\n    const placement = order.get(newIndex) ?? newIndex;\n    order.set(currentIndex, placement);\n    order.set(newIndex, dragged);\n    this.order$.next(order);\n    return order;\n  }\n  static {\n    this.ɵfac = function TuiTilesComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiTilesComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: TuiTilesComponent,\n      selectors: [[\"tui-tiles\"]],\n      hostVars: 2,\n      hostBindings: function TuiTilesComponent_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"pointerleave.silent\", function TuiTilesComponent_pointerleave_silent_HostBindingHandler() {\n            return ctx.rearrange();\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"_dragged\", ctx.element);\n        }\n      },\n      inputs: {\n        debounce: \"debounce\",\n        order: \"order\"\n      },\n      outputs: {\n        orderChange: \"orderChange\"\n      },\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([ResizeObserverService, MutationObserverService, {\n        provide: WA_MUTATION_OBSERVER_INIT,\n        useValue: {\n          childList: true\n        }\n      }]), i0.ɵɵStandaloneFeature],\n      ngContentSelectors: _c0,\n      decls: 1,\n      vars: 0,\n      template: function TuiTilesComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵprojection(0);\n        }\n      },\n      styles: [\"tui-tiles{position:relative;z-index:0;display:grid;grid-auto-flow:dense;justify-items:stretch}tui-tiles._dragged tui-tile>.t-wrapper{pointer-events:none}tui-tiles._dragged tui-tile:not(._dragged)>.t-wrapper{transition-property:all;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;transition-delay:1ms}tui-tiles:not(._dragged) tui-tile._dragged>.t-wrapper{transition-property:all;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;transition-delay:1ms}tui-tile>.t-wrapper{position:absolute;top:0;left:0;inline-size:100%;block-size:100%;z-index:0;border-radius:inherit}tui-tile._dragged>.t-wrapper{z-index:1;transition:none}\\n\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiTilesComponent, [{\n    type: Component,\n    args: [{\n      standalone: true,\n      selector: 'tui-tiles',\n      template: '<ng-content></ng-content>',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [ResizeObserverService, MutationObserverService, {\n        provide: WA_MUTATION_OBSERVER_INIT,\n        useValue: {\n          childList: true\n        }\n      }],\n      host: {\n        '[class._dragged]': 'element',\n        '(pointerleave.silent)': 'rearrange()'\n      },\n      styles: [\"tui-tiles{position:relative;z-index:0;display:grid;grid-auto-flow:dense;justify-items:stretch}tui-tiles._dragged tui-tile>.t-wrapper{pointer-events:none}tui-tiles._dragged tui-tile:not(._dragged)>.t-wrapper{transition-property:all;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;transition-delay:1ms}tui-tiles:not(._dragged) tui-tile._dragged>.t-wrapper{transition-property:all;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;transition-delay:1ms}tui-tile>.t-wrapper{position:absolute;top:0;left:0;inline-size:100%;block-size:100%;z-index:0;border-radius:inherit}tui-tile._dragged>.t-wrapper{z-index:1;transition:none}\\n\"]\n    }]\n  }], null, {\n    debounce: [{\n      type: Input\n    }],\n    orderChange: [{\n      type: Output\n    }],\n    order: [{\n      type: Input\n    }]\n  });\n})();\nclass TuiTileService {\n  constructor() {\n    this.isBrowser = isPlatformBrowser(inject(PLATFORM_ID));\n    this.el = tuiInjectElement();\n    this.tiles = inject(TuiTilesComponent);\n    this.sub = new Subscription();\n    this.offset$ = new BehaviorSubject([NaN, NaN]);\n    this.position$ = combineLatest([this.offset$.pipe(distinctUntilChanged(tuiArrayShallowEquals)), inject(ResizeObserverService).pipe(startWith(null)), inject(MutationObserverService).pipe(startWith(null)), this.tiles.order$.pipe(debounceTime(0, tuiZonefreeScheduler()))]).pipe(map(([offset]) => offset));\n  }\n  init(element) {\n    if (this.isBrowser) {\n      this.sub.add(this.position$.subscribe(offset => {\n        this.setPosition(element, offset);\n        this.setRect(element, offset);\n      }));\n    } else {\n      this.el.style.setProperty('position', 'relative');\n    }\n  }\n  setOffset(offset) {\n    this.offset$.next(offset);\n  }\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n  getRect([left, top]) {\n    const elTop = Number.isNaN(top) ? this.el.offsetTop : top;\n    const elLeft = Number.isNaN(left) ? this.el.offsetLeft : left;\n    const rect = {\n      top: elTop,\n      left: elLeft,\n      width: this.el.clientWidth,\n      height: this.el.clientHeight,\n      right: NaN,\n      bottom: NaN,\n      y: elTop,\n      x: elLeft\n    };\n    return {\n      ...rect,\n      toJSON: () => JSON.stringify(rect)\n    };\n  }\n  setRect({\n    style\n  }, offset) {\n    const {\n      top,\n      left,\n      width,\n      height\n    } = this.getRect(offset);\n    style.top = tuiPx(top);\n    style.left = tuiPx(left);\n    style.width = tuiPx(width);\n    style.height = tuiPx(height);\n  }\n  setPosition(element, [left]) {\n    if (!Number.isNaN(left)) {\n      element.style.setProperty('position', 'fixed');\n      return;\n    }\n    const {\n      style\n    } = element;\n    const rect = element.getBoundingClientRect();\n    const host = this.el.getBoundingClientRect();\n    style.removeProperty('position');\n    style.top = tuiPx(rect.top - host.top + this.el.offsetTop);\n    style.left = tuiPx(rect.left - host.left + this.el.offsetLeft);\n  }\n  static {\n    this.ɵfac = function TuiTileService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiTileService)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: TuiTileService,\n      factory: TuiTileService.ɵfac\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiTileService, [{\n    type: Injectable\n  }], null, null);\n})();\nclass TuiTile {\n  constructor() {\n    this.service = inject(TuiTileService);\n    this.tiles = inject(TuiTilesComponent);\n    this.dragged = false;\n    this.width = 1;\n    this.height = 1;\n    this.element = tuiInjectElement();\n  }\n  onDrag(offset) {\n    const dragged = !Number.isNaN(offset[0]);\n    this.dragged = this.dragged || dragged;\n    this.tiles.element = dragged ? this.element : null;\n    this.service.setOffset(offset);\n  }\n  ngAfterViewInit() {\n    if (this.wrapper) {\n      this.service.init(this.wrapper.nativeElement);\n    }\n  }\n  ngOnDestroy() {\n    if (this.tiles.element === this.element) {\n      this.tiles.element = null;\n    }\n  }\n  get column() {\n    return `span var(--tui-width, ${this.width})`;\n  }\n  get row() {\n    return `span var(--tui-height, ${this.height})`;\n  }\n  onEnter() {\n    this.tiles.rearrange(this.element);\n  }\n  onTransitionEnd() {\n    this.dragged = false;\n  }\n  static {\n    this.ɵfac = function TuiTile_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiTile)();\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: TuiTile,\n      selectors: [[\"tui-tile\"]],\n      viewQuery: function TuiTile_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c1, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.wrapper = _t.first);\n        }\n      },\n      hostVars: 6,\n      hostBindings: function TuiTile_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"pointerenter\", function TuiTile_pointerenter_HostBindingHandler() {\n            return ctx.onEnter();\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵstyleProp(\"grid-column\", ctx.column)(\"grid-row\", ctx.row);\n          i0.ɵɵclassProp(\"_dragged\", ctx.dragged);\n        }\n      },\n      inputs: {\n        width: \"width\",\n        height: \"height\"\n      },\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([TuiTileService]), i0.ɵɵStandaloneFeature],\n      ngContentSelectors: _c0,\n      decls: 3,\n      vars: 0,\n      consts: [[\"wrapper\", \"\"], [1, \"t-wrapper\", 3, \"transitionend.self\"]],\n      template: function TuiTile_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵprojectionDef();\n          i0.ɵɵelementStart(0, \"div\", 1, 0);\n          i0.ɵɵlistener(\"transitionend.self\", function TuiTile_Template_div_transitionend_self_0_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.onTransitionEnd());\n          });\n          i0.ɵɵprojection(2);\n          i0.ɵɵelementEnd();\n        }\n      },\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiTile, [{\n    type: Component,\n    args: [{\n      standalone: true,\n      selector: 'tui-tile',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [TuiTileService],\n      host: {\n        '[class._dragged]': 'dragged',\n        '[style.gridColumn]': 'column',\n        '[style.gridRow]': 'row',\n        '(pointerenter)': 'onEnter()'\n      },\n      template: \"<div\\n    #wrapper\\n    class=\\\"t-wrapper\\\"\\n    (transitionend.self)=\\\"onTransitionEnd()\\\"\\n>\\n    <ng-content />\\n</div>\\n\"\n    }]\n  }], null, {\n    wrapper: [{\n      type: ViewChild,\n      args: ['wrapper']\n    }],\n    width: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }]\n  });\n})();\nfunction isInteracting(x = NaN) {\n  return !Number.isNaN(x) || !Number.isNaN(this['x']);\n}\nfunction isDragging() {\n  return !Number.isNaN(this['x']);\n}\nclass TuiTileHandle {\n  constructor() {\n    this.tile = inject(TuiTile);\n    this.x = NaN;\n    this.y = NaN;\n  }\n  onPointer(x = NaN, y = NaN) {\n    const {\n      left,\n      top\n    } = this.tile.element.getBoundingClientRect();\n    this.x = x - left;\n    this.y = y - top;\n    this.tile.onDrag([NaN, NaN]);\n  }\n  onMove(x, y) {\n    this.tile.onDrag([x - this.x, y - this.y]);\n  }\n  onStart(event) {\n    const target = tuiGetActualTarget(event);\n    const {\n      x,\n      y,\n      pointerId\n    } = event;\n    if (tuiIsElement(target)) {\n      target.releasePointerCapture(pointerId);\n    }\n    this.onPointer(x, y);\n  }\n  static {\n    this.ɵfac = function TuiTileHandle_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiTileHandle)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: TuiTileHandle,\n      selectors: [[\"\", \"tuiTileHandle\", \"\"]],\n      hostVars: 4,\n      hostBindings: function TuiTileHandle_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"pointerdown.silent\", function TuiTileHandle_pointerdown_silent_HostBindingHandler($event) {\n            return ctx.onStart($event);\n          })(\"pointerup.silent\", function TuiTileHandle_pointerup_silent_HostBindingHandler() {\n            return ctx.onPointer();\n          }, false, i0.ɵɵresolveDocument)(\"pointermove.silent\", function TuiTileHandle_pointermove_silent_HostBindingHandler($event) {\n            return ctx.onMove($event.x, $event.y);\n          }, false, i0.ɵɵresolveDocument);\n        }\n        if (rf & 2) {\n          i0.ɵɵstyleProp(\"touch-action\", \"none\")(\"user-select\", \"none\");\n        }\n      },\n      standalone: true\n    });\n  }\n}\n__decorate([shouldCall(isInteracting)], TuiTileHandle.prototype, \"onPointer\", null);\n__decorate([shouldCall(isDragging)], TuiTileHandle.prototype, \"onMove\", null);\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiTileHandle, [{\n    type: Directive,\n    args: [{\n      standalone: true,\n      selector: '[tuiTileHandle]',\n      host: {\n        '[style.touchAction]': '\"none\"',\n        '[style.userSelect]': '\"none\"',\n        '(pointerdown.silent)': 'onStart($event)',\n        '(document:pointerup.silent)': 'onPointer()',\n        '(document:pointermove.silent)': 'onMove($event.x, $event.y)'\n      }\n    }]\n  }], null, {\n    onPointer: [],\n    onMove: []\n  });\n})();\nconst TuiTiles = [TuiTilesComponent, TuiTile, TuiTileHandle];\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiTile, TuiTileHandle, TuiTileService, TuiTiles, TuiTilesComponent };","map":{"version":3,"names":["i0","Component","ViewEncapsulation","ChangeDetectionStrategy","Input","Output","inject","PLATFORM_ID","Injectable","ViewChild","Directive","tuiInjectElement","tuiGetActualTarget","tuiIsElement","isPlatformBrowser","MutationObserverService","WA_MUTATION_OBSERVER_INIT","ResizeObserverService","tuiZonefreeScheduler","tuiArrayShallowEquals","tuiPx","Subject","debounce","timer","filter","map","BehaviorSubject","Subscription","combineLatest","distinctUntilChanged","startWith","debounceTime","__decorate","shouldCall","_c0","_c1","TuiTilesComponent","constructor","el","el$","orderChange","pipe","bind","element","reorder","order$","Map","order","next","value","rearrange","elements","Array","from","children","currentIndex","indexOf","newIndex","size","_","index","dragged","get","placement","set","ɵfac","TuiTilesComponent_Factory","__ngFactoryType__","ɵcmp","ɵɵdefineComponent","type","selectors","hostVars","hostBindings","TuiTilesComponent_HostBindings","rf","ctx","ɵɵlistener","TuiTilesComponent_pointerleave_silent_HostBindingHandler","ɵɵclassProp","inputs","outputs","standalone","features","ɵɵProvidersFeature","provide","useValue","childList","ɵɵStandaloneFeature","ngContentSelectors","decls","vars","template","TuiTilesComponent_Template","ɵɵprojectionDef","ɵɵprojection","styles","encapsulation","changeDetection","ngDevMode","ɵsetClassMetadata","args","selector","None","OnPush","providers","host","TuiTileService","isBrowser","tiles","sub","offset$","NaN","position$","offset","init","add","subscribe","setPosition","setRect","style","setProperty","setOffset","ngOnDestroy","unsubscribe","getRect","left","top","elTop","Number","isNaN","offsetTop","elLeft","offsetLeft","rect","width","clientWidth","height","clientHeight","right","bottom","y","x","toJSON","JSON","stringify","getBoundingClientRect","removeProperty","TuiTileService_Factory","ɵprov","ɵɵdefineInjectable","token","factory","TuiTile","service","onDrag","ngAfterViewInit","wrapper","nativeElement","column","row","onEnter","onTransitionEnd","TuiTile_Factory","viewQuery","TuiTile_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","TuiTile_HostBindings","TuiTile_pointerenter_HostBindingHandler","ɵɵstyleProp","consts","TuiTile_Template","_r1","ɵɵgetCurrentView","ɵɵelementStart","TuiTile_Template_div_transitionend_self_0_listener","ɵɵrestoreView","ɵɵresetView","ɵɵelementEnd","isInteracting","isDragging","TuiTileHandle","tile","onPointer","onMove","onStart","event","target","pointerId","releasePointerCapture","TuiTileHandle_Factory","ɵdir","ɵɵdefineDirective","TuiTileHandle_HostBindings","TuiTileHandle_pointerdown_silent_HostBindingHandler","$event","TuiTileHandle_pointerup_silent_HostBindingHandler","ɵɵresolveDocument","TuiTileHandle_pointermove_silent_HostBindingHandler","prototype","TuiTiles"],"sources":["C:/Users/Asus-PC/Downloads/WebLibraryNew/WebLibrary/WebLibraryApp/Frontend/node_modules/@taiga-ui/kit/fesm2022/taiga-ui-kit-components-tiles.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, Output, inject, PLATFORM_ID, Injectable, ViewChild, Directive } from '@angular/core';\nimport { tuiInjectElement, tuiGetActualTarget, tuiIsElement } from '@taiga-ui/cdk/utils/dom';\nimport { isPlatformBrowser } from '@angular/common';\nimport { MutationObserverService, WA_MUTATION_OBSERVER_INIT } from '@ng-web-apis/mutation-observer';\nimport { ResizeObserverService } from '@ng-web-apis/resize-observer';\nimport { tuiZonefreeScheduler } from '@taiga-ui/cdk/observables';\nimport { tuiArrayShallowEquals, tuiPx } from '@taiga-ui/cdk/utils/miscellaneous';\nimport { Subject, debounce, timer, filter, map, BehaviorSubject, Subscription, combineLatest, distinctUntilChanged, startWith, debounceTime } from 'rxjs';\nimport { __decorate } from 'tslib';\nimport { shouldCall } from '@taiga-ui/event-plugins';\n\nclass TuiTilesComponent {\n    constructor() {\n        this.el = tuiInjectElement();\n        this.el$ = new Subject();\n        this.debounce = 0;\n        this.orderChange = this.el$.pipe(debounce(() => timer(this.debounce)), filter(this.filter.bind(this)), map((element) => this.reorder(element)));\n        this.element = null;\n        this.order$ = new BehaviorSubject(new Map());\n    }\n    set order(map) {\n        this.order$.next(map);\n    }\n    get order() {\n        return this.order$.value;\n    }\n    rearrange(element) {\n        this.el$.next(element);\n    }\n    filter(element) {\n        return !!this.element && !!element && this.element !== element;\n    }\n    reorder(element) {\n        const elements = Array.from(this.el.children);\n        const currentIndex = elements.indexOf(this.element || element);\n        const newIndex = elements.indexOf(element);\n        const order = this.order.size\n            ? new Map(this.order)\n            : new Map(elements.map((_, index) => [index, index]));\n        const dragged = order.get(currentIndex) ?? currentIndex;\n        const placement = order.get(newIndex) ?? newIndex;\n        order.set(currentIndex, placement);\n        order.set(newIndex, dragged);\n        this.order$.next(order);\n        return order;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiTilesComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiTilesComponent, isStandalone: true, selector: \"tui-tiles\", inputs: { debounce: \"debounce\", order: \"order\" }, outputs: { orderChange: \"orderChange\" }, host: { listeners: { \"pointerleave.silent\": \"rearrange()\" }, properties: { \"class._dragged\": \"element\" } }, providers: [\n            ResizeObserverService,\n            MutationObserverService,\n            {\n                provide: WA_MUTATION_OBSERVER_INIT,\n                useValue: { childList: true },\n            },\n        ], ngImport: i0, template: '<ng-content></ng-content>', isInline: true, styles: [\"tui-tiles{position:relative;z-index:0;display:grid;grid-auto-flow:dense;justify-items:stretch}tui-tiles._dragged tui-tile>.t-wrapper{pointer-events:none}tui-tiles._dragged tui-tile:not(._dragged)>.t-wrapper{transition-property:all;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;transition-delay:1ms}tui-tiles:not(._dragged) tui-tile._dragged>.t-wrapper{transition-property:all;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;transition-delay:1ms}tui-tile>.t-wrapper{position:absolute;top:0;left:0;inline-size:100%;block-size:100%;z-index:0;border-radius:inherit}tui-tile._dragged>.t-wrapper{z-index:1;transition:none}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiTilesComponent, decorators: [{\n            type: Component,\n            args: [{ standalone: true, selector: 'tui-tiles', template: '<ng-content></ng-content>', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [\n                        ResizeObserverService,\n                        MutationObserverService,\n                        {\n                            provide: WA_MUTATION_OBSERVER_INIT,\n                            useValue: { childList: true },\n                        },\n                    ], host: {\n                        '[class._dragged]': 'element',\n                        '(pointerleave.silent)': 'rearrange()',\n                    }, styles: [\"tui-tiles{position:relative;z-index:0;display:grid;grid-auto-flow:dense;justify-items:stretch}tui-tiles._dragged tui-tile>.t-wrapper{pointer-events:none}tui-tiles._dragged tui-tile:not(._dragged)>.t-wrapper{transition-property:all;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;transition-delay:1ms}tui-tiles:not(._dragged) tui-tile._dragged>.t-wrapper{transition-property:all;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;transition-delay:1ms}tui-tile>.t-wrapper{position:absolute;top:0;left:0;inline-size:100%;block-size:100%;z-index:0;border-radius:inherit}tui-tile._dragged>.t-wrapper{z-index:1;transition:none}\\n\"] }]\n        }], propDecorators: { debounce: [{\n                type: Input\n            }], orderChange: [{\n                type: Output\n            }], order: [{\n                type: Input\n            }] } });\n\nclass TuiTileService {\n    constructor() {\n        this.isBrowser = isPlatformBrowser(inject(PLATFORM_ID));\n        this.el = tuiInjectElement();\n        this.tiles = inject(TuiTilesComponent);\n        this.sub = new Subscription();\n        this.offset$ = new BehaviorSubject([NaN, NaN]);\n        this.position$ = combineLatest([\n            this.offset$.pipe(distinctUntilChanged(tuiArrayShallowEquals)),\n            inject(ResizeObserverService).pipe(startWith(null)),\n            inject(MutationObserverService).pipe(startWith(null)),\n            this.tiles.order$.pipe(debounceTime(0, tuiZonefreeScheduler())),\n        ]).pipe(map(([offset]) => offset));\n    }\n    init(element) {\n        if (this.isBrowser) {\n            this.sub.add(this.position$.subscribe((offset) => {\n                this.setPosition(element, offset);\n                this.setRect(element, offset);\n            }));\n        }\n        else {\n            this.el.style.setProperty('position', 'relative');\n        }\n    }\n    setOffset(offset) {\n        this.offset$.next(offset);\n    }\n    ngOnDestroy() {\n        this.sub.unsubscribe();\n    }\n    getRect([left, top]) {\n        const elTop = Number.isNaN(top) ? this.el.offsetTop : top;\n        const elLeft = Number.isNaN(left) ? this.el.offsetLeft : left;\n        const rect = {\n            top: elTop,\n            left: elLeft,\n            width: this.el.clientWidth,\n            height: this.el.clientHeight,\n            right: NaN,\n            bottom: NaN,\n            y: elTop,\n            x: elLeft,\n        };\n        return {\n            ...rect,\n            toJSON: () => JSON.stringify(rect),\n        };\n    }\n    setRect({ style }, offset) {\n        const { top, left, width, height } = this.getRect(offset);\n        style.top = tuiPx(top);\n        style.left = tuiPx(left);\n        style.width = tuiPx(width);\n        style.height = tuiPx(height);\n    }\n    setPosition(element, [left]) {\n        if (!Number.isNaN(left)) {\n            element.style.setProperty('position', 'fixed');\n            return;\n        }\n        const { style } = element;\n        const rect = element.getBoundingClientRect();\n        const host = this.el.getBoundingClientRect();\n        style.removeProperty('position');\n        style.top = tuiPx(rect.top - host.top + this.el.offsetTop);\n        style.left = tuiPx(rect.left - host.left + this.el.offsetLeft);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiTileService, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiTileService }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiTileService, decorators: [{\n            type: Injectable\n        }] });\n\nclass TuiTile {\n    constructor() {\n        this.service = inject(TuiTileService);\n        this.tiles = inject(TuiTilesComponent);\n        this.dragged = false;\n        this.width = 1;\n        this.height = 1;\n        this.element = tuiInjectElement();\n    }\n    onDrag(offset) {\n        const dragged = !Number.isNaN(offset[0]);\n        this.dragged = this.dragged || dragged;\n        this.tiles.element = dragged ? this.element : null;\n        this.service.setOffset(offset);\n    }\n    ngAfterViewInit() {\n        if (this.wrapper) {\n            this.service.init(this.wrapper.nativeElement);\n        }\n    }\n    ngOnDestroy() {\n        if (this.tiles.element === this.element) {\n            this.tiles.element = null;\n        }\n    }\n    get column() {\n        return `span var(--tui-width, ${this.width})`;\n    }\n    get row() {\n        return `span var(--tui-height, ${this.height})`;\n    }\n    onEnter() {\n        this.tiles.rearrange(this.element);\n    }\n    onTransitionEnd() {\n        this.dragged = false;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiTile, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiTile, isStandalone: true, selector: \"tui-tile\", inputs: { width: \"width\", height: \"height\" }, host: { listeners: { \"pointerenter\": \"onEnter()\" }, properties: { \"class._dragged\": \"dragged\", \"style.gridColumn\": \"column\", \"style.gridRow\": \"row\" } }, providers: [TuiTileService], viewQueries: [{ propertyName: \"wrapper\", first: true, predicate: [\"wrapper\"], descendants: true }], ngImport: i0, template: \"<div\\n    #wrapper\\n    class=\\\"t-wrapper\\\"\\n    (transitionend.self)=\\\"onTransitionEnd()\\\"\\n>\\n    <ng-content />\\n</div>\\n\", changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiTile, decorators: [{\n            type: Component,\n            args: [{ standalone: true, selector: 'tui-tile', changeDetection: ChangeDetectionStrategy.OnPush, providers: [TuiTileService], host: {\n                        '[class._dragged]': 'dragged',\n                        '[style.gridColumn]': 'column',\n                        '[style.gridRow]': 'row',\n                        '(pointerenter)': 'onEnter()',\n                    }, template: \"<div\\n    #wrapper\\n    class=\\\"t-wrapper\\\"\\n    (transitionend.self)=\\\"onTransitionEnd()\\\"\\n>\\n    <ng-content />\\n</div>\\n\" }]\n        }], propDecorators: { wrapper: [{\n                type: ViewChild,\n                args: ['wrapper']\n            }], width: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }] } });\n\nfunction isInteracting(x = NaN) {\n    return !Number.isNaN(x) || !Number.isNaN(this['x']);\n}\nfunction isDragging() {\n    return !Number.isNaN(this['x']);\n}\nclass TuiTileHandle {\n    constructor() {\n        this.tile = inject(TuiTile);\n        this.x = NaN;\n        this.y = NaN;\n    }\n    onPointer(x = NaN, y = NaN) {\n        const { left, top } = this.tile.element.getBoundingClientRect();\n        this.x = x - left;\n        this.y = y - top;\n        this.tile.onDrag([NaN, NaN]);\n    }\n    onMove(x, y) {\n        this.tile.onDrag([x - this.x, y - this.y]);\n    }\n    onStart(event) {\n        const target = tuiGetActualTarget(event);\n        const { x, y, pointerId } = event;\n        if (tuiIsElement(target)) {\n            target.releasePointerCapture(pointerId);\n        }\n        this.onPointer(x, y);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiTileHandle, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiTileHandle, isStandalone: true, selector: \"[tuiTileHandle]\", host: { listeners: { \"pointerdown.silent\": \"onStart($event)\", \"document:pointerup.silent\": \"onPointer()\", \"document:pointermove.silent\": \"onMove($event.x, $event.y)\" }, properties: { \"style.touchAction\": \"\\\"none\\\"\", \"style.userSelect\": \"\\\"none\\\"\" } }, ngImport: i0 }); }\n}\n__decorate([\n    shouldCall(isInteracting)\n], TuiTileHandle.prototype, \"onPointer\", null);\n__decorate([\n    shouldCall(isDragging)\n], TuiTileHandle.prototype, \"onMove\", null);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiTileHandle, decorators: [{\n            type: Directive,\n            args: [{\n                    standalone: true,\n                    selector: '[tuiTileHandle]',\n                    host: {\n                        '[style.touchAction]': '\"none\"',\n                        '[style.userSelect]': '\"none\"',\n                        '(pointerdown.silent)': 'onStart($event)',\n                        '(document:pointerup.silent)': 'onPointer()',\n                        '(document:pointermove.silent)': 'onMove($event.x, $event.y)',\n                    },\n                }]\n        }], propDecorators: { onPointer: [], onMove: [] } });\n\nconst TuiTiles = [TuiTilesComponent, TuiTile, TuiTileHandle];\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiTile, TuiTileHandle, TuiTileService, TuiTiles, TuiTilesComponent };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}