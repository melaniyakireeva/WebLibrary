{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { CONFIG } from '../../config';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nlet LlmLogicService = class LlmLogicService {\n  httpClient;\n  baseService = CONFIG.llmServer;\n  defaultOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n    })\n  };\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n  }\n  generateFilter(filterText) {\n    const apiController = `${this.baseService}/generateFilter/`;\n    return this.httpClient.post(apiController, {\n      text: filterText\n    }, this.defaultOptions);\n  }\n  static ctorParameters = () => [{\n    type: HttpClient\n  }];\n};\nLlmLogicService = __decorate([Injectable({\n  providedIn: 'root'\n})], LlmLogicService);\nexport { LlmLogicService };","map":{"version":3,"names":["Injectable","CONFIG","HttpClient","HttpHeaders","LlmLogicService","httpClient","baseService","llmServer","defaultOptions","headers","constructor","generateFilter","filterText","apiController","post","text","__decorate","providedIn"],"sources":["C:\\Users\\Asus-PC\\Downloads\\WebLibraryNew\\WebLibrary\\WebLibraryApp\\Frontend\\src\\app\\services\\llm-logic\\llm-logic.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { CONFIG } from '../../config';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LlmLogicService {\r\n  private baseService: string = CONFIG.llmServer;\r\n\r\n  private readonly defaultOptions = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n    }),\r\n  };\r\n\r\n  constructor(private httpClient: HttpClient) {}\r\n\r\n  public generateFilter(\r\n    filterText: string\r\n  ): Observable<any> {\r\n    const apiController: string = `${this.baseService}/generateFilter/`;\r\n\r\n    return this.httpClient.post(\r\n      apiController,\r\n      {text: filterText},\r\n      this.defaultOptions\r\n    );\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAC1C,SAASC,MAAM,QAAQ,cAAc;AACrC,SAASC,UAAU,EAAEC,WAAW,QAAQ,sBAAsB;AAMvD,IAAMC,eAAe,GAArB,MAAMA,eAAe;EASNC,UAAA;EARZC,WAAW,GAAWL,MAAM,CAACM,SAAS;EAE7BC,cAAc,GAAG;IAChCC,OAAO,EAAE,IAAIN,WAAW,CAAC;MACvB,cAAc,EAAE;KACjB;GACF;EAEDO,YAAoBL,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;EAAe;EAEtCM,cAAcA,CACnBC,UAAkB;IAElB,MAAMC,aAAa,GAAW,GAAG,IAAI,CAACP,WAAW,kBAAkB;IAEnE,OAAO,IAAI,CAACD,UAAU,CAACS,IAAI,CACzBD,aAAa,EACb;MAACE,IAAI,EAAEH;IAAU,CAAC,EAClB,IAAI,CAACJ,cAAc,CACpB;EACH;;;;;AArBWJ,eAAe,GAAAY,UAAA,EAH3BhB,UAAU,CAAC;EACViB,UAAU,EAAE;CACb,CAAC,C,EACWb,eAAe,CAsB3B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}