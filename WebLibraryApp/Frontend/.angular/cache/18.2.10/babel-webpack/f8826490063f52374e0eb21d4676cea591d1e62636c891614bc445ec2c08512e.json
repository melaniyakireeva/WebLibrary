{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./element-to-reference.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./element-to-reference.component.scss?ngResource\";\nimport { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { TuiButton, TuiDataList, TuiDropdown, TuiIcon, TuiSelect, TuiTextfield } from '@taiga-ui/core';\nimport { TuiTooltip } from '@taiga-ui/kit';\nimport { injectContext } from '@taiga-ui/polymorpheus';\nimport _ from 'lodash';\nimport { AsyncPipe, NgIf } from '@angular/common';\nimport { TuiAutoFocus } from '@taiga-ui/cdk';\nimport { TuiDataListWrapper, TuiSlider } from '@taiga-ui/kit';\nimport { TuiInputModule, TuiSelectModule, TuiMultiSelectModule, TuiTextfieldControllerModule } from '@taiga-ui/legacy';\nexport class ReferenceListItem {\n  modelRef;\n  constructor(reference) {\n    this.modelRef = reference;\n  }\n  toString() {\n    return `${this.modelRef.id} - ${this.modelRef.name}`;\n  }\n}\nlet ElementToReferenceComponent = class ElementToReferenceComponent {\n  ngOnInit() {\n    this.selectedReferences = this.context.data.selectedReferences ?? [];\n    this.allReferences = this.context.data.userReferences ?? [];\n  }\n  context = injectContext();\n  search = '';\n  selectedReferences = [];\n  allReferences = [];\n  submit() {\n    if (!_.isEmpty(this.selectedReferences)) {\n      this.context.completeWith({\n        selectedReferences: _.map(this.selectedReferences, x => x.modelRef.id),\n        userReferences: _.map(this.allReferences, x => x.modelRef.id)\n      });\n    }\n  }\n};\nElementToReferenceComponent = __decorate([Component({\n  selector: 'app-element-to-reference',\n  standalone: true,\n  imports: [TuiTextfield, TuiIcon, TuiTooltip, TuiButton, FormsModule, CommonModule, AsyncPipe, FormsModule, TuiAutoFocus, TuiButton, NgIf, TuiDropdown, TuiDataListWrapper, TuiDataList, TuiInputModule, TuiSelectModule, TuiSelect, TuiSlider, TuiTextfield, TuiMultiSelectModule, TuiTextfieldControllerModule],\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], ElementToReferenceComponent);\nexport { ElementToReferenceComponent };","map":{"version":3,"names":["CommonModule","Component","FormsModule","TuiButton","TuiDataList","TuiDropdown","TuiIcon","TuiSelect","TuiTextfield","TuiTooltip","injectContext","_","AsyncPipe","NgIf","TuiAutoFocus","TuiDataListWrapper","TuiSlider","TuiInputModule","TuiSelectModule","TuiMultiSelectModule","TuiTextfieldControllerModule","ReferenceListItem","modelRef","constructor","reference","toString","id","name","ElementToReferenceComponent","ngOnInit","selectedReferences","context","data","allReferences","userReferences","search","submit","isEmpty","completeWith","map","x","__decorate","selector","standalone","imports","template","__NG_CLI_RESOURCE__0"],"sources":["C:\\Users\\Asus-PC\\Downloads\\WebLibraryNew\\WebLibrary\\WebLibraryApp\\Frontend\\src\\app\\components\\element-to-reference\\element-to-reference.component.ts"],"sourcesContent":["import { CommonModule } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport {\r\n  TuiButton,\r\n  TuiDataList,\r\n  TuiDialogContext,\r\n  TuiDropdown,\r\n  TuiIcon,\r\n  TuiSelect,\r\n  TuiTextfield,\r\n} from '@taiga-ui/core';\r\nimport { TuiTooltip } from '@taiga-ui/kit';\r\nimport { injectContext } from '@taiga-ui/polymorpheus';\r\nimport _ from 'lodash';\r\nimport { ReferenceInfo, References } from '../../services/reference/reference.service';\r\nimport { AsyncPipe, formatDate, NgIf } from '@angular/common';\r\nimport type { TemplateRef } from '@angular/core';\r\nimport { TuiAutoFocus, tuiPure } from '@taiga-ui/cdk';\r\nimport { TuiDataListWrapper, TuiSlider } from '@taiga-ui/kit';\r\nimport {\r\n  TuiInputModule,\r\n  TuiSelectModule,\r\n  TuiMultiSelectModule,\r\n  TuiTextfieldControllerModule,\r\n} from '@taiga-ui/legacy';\r\n\r\nexport class ReferenceListItem {\r\n  modelRef!: ReferenceInfo;\r\n\r\n  constructor(reference: ReferenceInfo) {\r\n    this.modelRef = reference;\r\n  }\r\n\r\n  toString() {\r\n    return `${this.modelRef.id} - ${this.modelRef.name}`;\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-element-to-reference',\r\n  standalone: true,\r\n  imports: [\r\n    TuiTextfield,\r\n    TuiIcon,\r\n    TuiTooltip,\r\n    TuiButton,\r\n    FormsModule,\r\n    CommonModule,\r\n    AsyncPipe,\r\n    FormsModule,\r\n    TuiAutoFocus,\r\n    TuiButton,\r\n    NgIf,\r\n    TuiDropdown,\r\n    TuiDataListWrapper,\r\n    TuiDataList,\r\n    TuiInputModule,\r\n    TuiSelectModule,\r\n    TuiSelect,\r\n    TuiSlider,\r\n    TuiTextfield,\r\n    TuiMultiSelectModule,\r\n    TuiTextfieldControllerModule,\r\n  ],\r\n  templateUrl: './element-to-reference.component.html',\r\n  styleUrl: './element-to-reference.component.scss',\r\n})\r\nexport class ElementToReferenceComponent implements OnInit {\r\n  ngOnInit(): void {\r\n    this.selectedReferences = this.context.data.selectedReferences ?? [];\r\n    this.allReferences = this.context.data.userReferences ?? [];\r\n  }\r\n\r\n  public readonly context = injectContext<\r\n    TuiDialogContext<\r\n      {\r\n        userReferences: number[];\r\n        selectedReferences: number[];\r\n      },\r\n      {\r\n        userReferences?: ReferenceListItem[];\r\n        selectedReferences?: ReferenceListItem[];\r\n      }\r\n    >\r\n  >();\r\n\r\n  search: string = '';\r\n  selectedReferences: ReferenceListItem[] = [];\r\n  allReferences: ReferenceListItem[] = [];\r\n\r\n  protected submit(): void {\r\n    if (!_.isEmpty(this.selectedReferences)) {\r\n      this.context.completeWith({\r\n        selectedReferences: _.map(\r\n          this.selectedReferences,\r\n          (x) => x.modelRef.id\r\n        ),\r\n        userReferences: _.map(this.allReferences, (x) => x.modelRef.id),\r\n      });\r\n    }\r\n  }\r\n}\r\n"],"mappings":";;;AAAA,SAASA,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,SAAS,QAAgB,eAAe;AACjD,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SACEC,SAAS,EACTC,WAAW,EAEXC,WAAW,EACXC,OAAO,EACPC,SAAS,EACTC,YAAY,QACP,gBAAgB;AACvB,SAASC,UAAU,QAAQ,eAAe;AAC1C,SAASC,aAAa,QAAQ,wBAAwB;AACtD,OAAOC,CAAC,MAAM,QAAQ;AAEtB,SAASC,SAAS,EAAcC,IAAI,QAAQ,iBAAiB;AAE7D,SAASC,YAAY,QAAiB,eAAe;AACrD,SAASC,kBAAkB,EAAEC,SAAS,QAAQ,eAAe;AAC7D,SACEC,cAAc,EACdC,eAAe,EACfC,oBAAoB,EACpBC,4BAA4B,QACvB,kBAAkB;AAEzB,OAAM,MAAOC,iBAAiB;EAC5BC,QAAQ;EAERC,YAAYC,SAAwB;IAClC,IAAI,CAACF,QAAQ,GAAGE,SAAS;EAC3B;EAEAC,QAAQA,CAAA;IACN,OAAO,GAAG,IAAI,CAACH,QAAQ,CAACI,EAAE,MAAM,IAAI,CAACJ,QAAQ,CAACK,IAAI,EAAE;EACtD;;AAgCK,IAAMC,2BAA2B,GAAjC,MAAMA,2BAA2B;EACtCC,QAAQA,CAAA;IACN,IAAI,CAACC,kBAAkB,GAAG,IAAI,CAACC,OAAO,CAACC,IAAI,CAACF,kBAAkB,IAAI,EAAE;IACpE,IAAI,CAACG,aAAa,GAAG,IAAI,CAACF,OAAO,CAACC,IAAI,CAACE,cAAc,IAAI,EAAE;EAC7D;EAEgBH,OAAO,GAAGrB,aAAa,EAWpC;EAEHyB,MAAM,GAAW,EAAE;EACnBL,kBAAkB,GAAwB,EAAE;EAC5CG,aAAa,GAAwB,EAAE;EAE7BG,MAAMA,CAAA;IACd,IAAI,CAACzB,CAAC,CAAC0B,OAAO,CAAC,IAAI,CAACP,kBAAkB,CAAC,EAAE;MACvC,IAAI,CAACC,OAAO,CAACO,YAAY,CAAC;QACxBR,kBAAkB,EAAEnB,CAAC,CAAC4B,GAAG,CACvB,IAAI,CAACT,kBAAkB,EACtBU,CAAC,IAAKA,CAAC,CAAClB,QAAQ,CAACI,EAAE,CACrB;QACDQ,cAAc,EAAEvB,CAAC,CAAC4B,GAAG,CAAC,IAAI,CAACN,aAAa,EAAGO,CAAC,IAAKA,CAAC,CAAClB,QAAQ,CAACI,EAAE;OAC/D,CAAC;IACJ;EACF;CACD;AAlCYE,2BAA2B,GAAAa,UAAA,EA7BvCxC,SAAS,CAAC;EACTyC,QAAQ,EAAE,0BAA0B;EACpCC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE,CACPpC,YAAY,EACZF,OAAO,EACPG,UAAU,EACVN,SAAS,EACTD,WAAW,EACXF,YAAY,EACZY,SAAS,EACTV,WAAW,EACXY,YAAY,EACZX,SAAS,EACTU,IAAI,EACJR,WAAW,EACXU,kBAAkB,EAClBX,WAAW,EACXa,cAAc,EACdC,eAAe,EACfX,SAAS,EACTS,SAAS,EACTR,YAAY,EACZW,oBAAoB,EACpBC,4BAA4B,CAC7B;EACDyB,QAAA,EAAAC,oBAAoD;;CAErD,CAAC,C,EACWlB,2BAA2B,CAkCvC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}