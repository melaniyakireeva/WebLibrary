{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { inject, Injectable } from '@angular/core';\nimport { WA_WINDOW, WINDOW } from '@ng-web-apis/common';\nimport { Observable, fromEvent, startWith, map, shareReplay, merge, filter, EMPTY } from 'rxjs';\nclass ScreenOrientationService extends Observable {\n  win = inject(WA_WINDOW);\n  stream$ = (this.isModern ? fromEvent(this.win.screen.orientation, 'change').pipe(startWith(null), map(() =>\n  /**\n   * https://developer.mozilla.org/en-US/docs/Web/API/Screen/orientation\n   * The type read-only property of the ScreenOrientation interface returns the document's current orientation type,\n   * one of \"portrait-primary\", \"portrait-secondary\", \"landscape-primary\", or \"landscape-secondary\".\n   *\n   * Browser compatibility:\n   * Safari 16.4+, Chrome 38+, Firefox 43+\n   */\n  this.win.screen.orientation.type)) : fromEvent(this.win, 'orientationchange').pipe(startWith(null), map(() => {\n    /**\n     * https://developer.mozilla.org/en-US/docs/Web/API/Window/orientation\n     * Its only possible values are -90, 0, 90, and 180.\n     * Positive values are counterclockwise; negative values are clockwise.\n     */\n    const angle = parseInt(this.win.orientation, 10);\n    switch (angle) {\n      case -90:\n        return 'landscape-secondary';\n      case 180:\n        return 'portrait-secondary';\n      case 90:\n        return 'landscape-primary';\n      case 0:\n      default:\n        return 'portrait-primary';\n    }\n  }))).pipe(shareReplay({\n    bufferSize: 1,\n    refCount: true\n  }));\n  constructor() {\n    super(subscriber => this.stream$.subscribe(subscriber));\n  }\n  get isModern() {\n    return !!this.win?.screen?.orientation;\n  }\n  static ɵfac = function ScreenOrientationService_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || ScreenOrientationService)();\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: ScreenOrientationService,\n    factory: ScreenOrientationService.ɵfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ScreenOrientationService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\nclass ViewportService extends Observable {\n  visualViewport = inject(WINDOW).visualViewport;\n  stream$ = this.visualViewport ? merge(fromEvent(this.visualViewport, 'resize'), fromEvent(this.visualViewport, 'scroll'), fromEvent(this.visualViewport, 'scrollend')).pipe(startWith(null), map(() => this.visualViewport), filter(Boolean), shareReplay({\n    bufferSize: 1,\n    refCount: true\n  })) : EMPTY;\n  constructor() {\n    super(subscriber => this.stream$.subscribe(subscriber));\n  }\n  static ɵfac = function ViewportService_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || ViewportService)();\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: ViewportService,\n    factory: ViewportService.ɵfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ViewportService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ScreenOrientationService, ViewportService };","map":{"version":3,"names":["i0","inject","Injectable","WA_WINDOW","WINDOW","Observable","fromEvent","startWith","map","shareReplay","merge","filter","EMPTY","ScreenOrientationService","win","stream$","isModern","screen","orientation","pipe","type","angle","parseInt","bufferSize","refCount","constructor","subscriber","subscribe","ɵfac","ScreenOrientationService_Factory","__ngFactoryType__","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","ngDevMode","ɵsetClassMetadata","args","ViewportService","visualViewport","Boolean","ViewportService_Factory"],"sources":["C:/Users/Asus-PC/Downloads/WebLibraryNew/WebLibrary/WebLibraryApp/Frontend/node_modules/@ng-web-apis/screen-orientation/fesm2022/ng-web-apis-screen-orientation.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { inject, Injectable } from '@angular/core';\nimport { WA_WINDOW, WINDOW } from '@ng-web-apis/common';\nimport { Observable, fromEvent, startWith, map, shareReplay, merge, filter, EMPTY } from 'rxjs';\n\nclass ScreenOrientationService extends Observable {\n    win = inject(WA_WINDOW);\n    stream$ = (this.isModern\n        ? fromEvent(this.win.screen.orientation, 'change').pipe(startWith(null), map(() => \n        /**\n         * https://developer.mozilla.org/en-US/docs/Web/API/Screen/orientation\n         * The type read-only property of the ScreenOrientation interface returns the document's current orientation type,\n         * one of \"portrait-primary\", \"portrait-secondary\", \"landscape-primary\", or \"landscape-secondary\".\n         *\n         * Browser compatibility:\n         * Safari 16.4+, Chrome 38+, Firefox 43+\n         */\n        this.win.screen.orientation.type))\n        : fromEvent(this.win, 'orientationchange').pipe(startWith(null), map(() => {\n            /**\n             * https://developer.mozilla.org/en-US/docs/Web/API/Window/orientation\n             * Its only possible values are -90, 0, 90, and 180.\n             * Positive values are counterclockwise; negative values are clockwise.\n             */\n            const angle = parseInt(this.win.orientation, 10);\n            switch (angle) {\n                case -90:\n                    return 'landscape-secondary';\n                case 180:\n                    return 'portrait-secondary';\n                case 90:\n                    return 'landscape-primary';\n                case 0:\n                default:\n                    return 'portrait-primary';\n            }\n        }))).pipe(shareReplay({ bufferSize: 1, refCount: true }));\n    constructor() {\n        super((subscriber) => this.stream$.subscribe(subscriber));\n    }\n    get isModern() {\n        return !!this.win?.screen?.orientation;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: ScreenOrientationService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: ScreenOrientationService, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: ScreenOrientationService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: function () { return []; } });\n\nclass ViewportService extends Observable {\n    visualViewport = inject(WINDOW).visualViewport;\n    stream$ = this.visualViewport\n        ? merge(fromEvent(this.visualViewport, 'resize'), fromEvent(this.visualViewport, 'scroll'), fromEvent(this.visualViewport, 'scrollend')).pipe(startWith(null), map(() => this.visualViewport), filter(Boolean), shareReplay({ bufferSize: 1, refCount: true }))\n        : EMPTY;\n    constructor() {\n        super((subscriber) => this.stream$.subscribe(subscriber));\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: ViewportService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: ViewportService, providedIn: 'root' });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: ViewportService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: function () { return []; } });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ScreenOrientationService, ViewportService };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}