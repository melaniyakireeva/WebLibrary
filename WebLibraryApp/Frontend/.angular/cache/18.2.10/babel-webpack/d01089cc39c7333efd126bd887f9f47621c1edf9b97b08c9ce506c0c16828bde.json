{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { HttpCustomService } from '../http/http-service.service';\nimport { map } from 'rxjs';\nlet AuthorService = class AuthorService {\n  httpService;\n  controller = 'Author';\n  constructor(httpService) {\n    this.httpService = httpService;\n  }\n  getAuthor() {\n    const method = 'GetAllAuthors';\n    const api = `api/${this.controller}/${method}`;\n    return this.httpService.getRequest(api).pipe(map(x => {\n      return x.map(val => ({\n        id: val.id,\n        name: val.name,\n        surname: val.surname,\n        patronym: val.patronym\n      }));\n    }));\n  }\n  deleteAuthor(manufacturerId) {\n    const method = 'DeleteAuthor';\n    const api = `api/${this.controller}/${method}`;\n    return this.httpService.postRequest(api, {\n      authorId: manufacturerId\n    });\n  }\n  saveAuthor(author) {\n    const method = 'SaveAuthor';\n    const api = `api/${this.controller}/${method}`;\n    return this.httpService.postRequest(api, {\n      author: author\n    });\n  }\n  getAuthors(filter) {\n    const method = 'GetAuthorsByFilter';\n    const api = `api/${this.controller}/${method}`;\n    return this.httpService.postRequest(api, {\n      filter\n    }).pipe(map(x => {\n      let res = x;\n      return {\n        totalCount: res.totalCount,\n        items: res.items.map(x => {\n          return {\n            id: x.id,\n            name: x.name,\n            surname: x.surname,\n            patronym: x.patronym\n          };\n        })\n      };\n    }));\n  }\n  static ctorParameters = () => [{\n    type: HttpCustomService\n  }];\n};\nAuthorService = __decorate([Injectable({\n  providedIn: 'root'\n})], AuthorService);\nexport { AuthorService };","map":{"version":3,"names":["Injectable","HttpCustomService","map","AuthorService","httpService","controller","constructor","getAuthor","method","api","getRequest","pipe","x","val","id","name","surname","patronym","deleteAuthor","manufacturerId","postRequest","authorId","saveAuthor","author","getAuthors","filter","res","totalCount","items","__decorate","providedIn"],"sources":["C:\\Users\\Asus-PC\\Downloads\\WebLibraryNew\\WebLibrary\\WebLibraryApp\\Frontend\\src\\app\\services\\author\\author-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpCustomService } from '../http/http-service.service';\r\nimport { map, Observable } from 'rxjs';\r\nimport { BaseFilter } from '../filters/filters';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthorService {\r\n  private controller: string = 'Author';\r\n  constructor(private httpService: HttpCustomService) {}\r\n\r\n  public getAuthor(): Observable<any> {\r\n    const method = 'GetAllAuthors';\r\n    const api = `api/${this.controller}/${method}`;\r\n    return this.httpService.getRequest(api).pipe(\r\n      map((x) => {\r\n        return (x as any[]).map(\r\n          (val) =>\r\n            <Author>{\r\n              id: val.id,\r\n              name: val.name,\r\n              surname: val.surname,\r\n              patronym: val.patronym\r\n            }\r\n        );\r\n      })\r\n    );\r\n  }\r\n\r\n  public deleteAuthor(manufacturerId: number){\r\n    const method = 'DeleteAuthor';\r\n    const api = `api/${this.controller}/${method}`;\r\n    return this.httpService.postRequest(api, {\r\n      authorId: manufacturerId,\r\n    });\r\n  }\r\n\r\n  public saveAuthor(author: Author): Observable<any>{\r\n    const method = 'SaveAuthor';\r\n    const api = `api/${this.controller}/${method}`;\r\n    return this.httpService.postRequest(api, {author: author});\r\n  }\r\n\r\n  public getAuthors(filter: BaseFilter): Observable<AuthorsData> {\r\n    const method = 'GetAuthorsByFilter';\r\n    const api = `api/${this.controller}/${method}`;\r\n    return this.httpService.postRequest(api, {filter}).pipe(\r\n      map((x) => {\r\n        let res = x as GetManufacturersResponse;\r\n        return {\r\n          totalCount: res.totalCount,\r\n          items: res.items.map(x => {\r\n            return <Author>{\r\n              id: x.id,\r\n              name: x.name,\r\n              surname: x.surname,\r\n              patronym: x.patronym\r\n            };\r\n          })\r\n        };\r\n      })\r\n    );\r\n  }\r\n}\r\n\r\nexport interface Author {\r\n  id: number;\r\n  name: string;\r\n  surname: string;\r\n  patronym: string | null;\r\n}\r\n\r\nexport interface AuthorDto {\r\n  id: number;\r\n  name: string;\r\n  surname: string;\r\n  patronym: string | null;\r\n}\r\n\r\nexport interface GetManufacturersResponse {\r\n  items: AuthorDto[];\r\n  totalCount: number;\r\n}\r\n\r\nexport interface AuthorsData {\r\n  items: Author[];\r\n  totalCount: number;\r\n}"],"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAC1C,SAASC,iBAAiB,QAAQ,8BAA8B;AAChE,SAASC,GAAG,QAAoB,MAAM;AAM/B,IAAMC,aAAa,GAAnB,MAAMA,aAAa;EAEJC,WAAA;EADZC,UAAU,GAAW,QAAQ;EACrCC,YAAoBF,WAA8B;IAA9B,KAAAA,WAAW,GAAXA,WAAW;EAAsB;EAE9CG,SAASA,CAAA;IACd,MAAMC,MAAM,GAAG,eAAe;IAC9B,MAAMC,GAAG,GAAG,OAAO,IAAI,CAACJ,UAAU,IAAIG,MAAM,EAAE;IAC9C,OAAO,IAAI,CAACJ,WAAW,CAACM,UAAU,CAACD,GAAG,CAAC,CAACE,IAAI,CAC1CT,GAAG,CAAEU,CAAC,IAAI;MACR,OAAQA,CAAW,CAACV,GAAG,CACpBW,GAAG,KACM;QACNC,EAAE,EAAED,GAAG,CAACC,EAAE;QACVC,IAAI,EAAEF,GAAG,CAACE,IAAI;QACdC,OAAO,EAAEH,GAAG,CAACG,OAAO;QACpBC,QAAQ,EAAEJ,GAAG,CAACI;OACf,EACJ;IACH,CAAC,CAAC,CACH;EACH;EAEOC,YAAYA,CAACC,cAAsB;IACxC,MAAMX,MAAM,GAAG,cAAc;IAC7B,MAAMC,GAAG,GAAG,OAAO,IAAI,CAACJ,UAAU,IAAIG,MAAM,EAAE;IAC9C,OAAO,IAAI,CAACJ,WAAW,CAACgB,WAAW,CAACX,GAAG,EAAE;MACvCY,QAAQ,EAAEF;KACX,CAAC;EACJ;EAEOG,UAAUA,CAACC,MAAc;IAC9B,MAAMf,MAAM,GAAG,YAAY;IAC3B,MAAMC,GAAG,GAAG,OAAO,IAAI,CAACJ,UAAU,IAAIG,MAAM,EAAE;IAC9C,OAAO,IAAI,CAACJ,WAAW,CAACgB,WAAW,CAACX,GAAG,EAAE;MAACc,MAAM,EAAEA;IAAM,CAAC,CAAC;EAC5D;EAEOC,UAAUA,CAACC,MAAkB;IAClC,MAAMjB,MAAM,GAAG,oBAAoB;IACnC,MAAMC,GAAG,GAAG,OAAO,IAAI,CAACJ,UAAU,IAAIG,MAAM,EAAE;IAC9C,OAAO,IAAI,CAACJ,WAAW,CAACgB,WAAW,CAACX,GAAG,EAAE;MAACgB;IAAM,CAAC,CAAC,CAACd,IAAI,CACrDT,GAAG,CAAEU,CAAC,IAAI;MACR,IAAIc,GAAG,GAAGd,CAA6B;MACvC,OAAO;QACLe,UAAU,EAAED,GAAG,CAACC,UAAU;QAC1BC,KAAK,EAAEF,GAAG,CAACE,KAAK,CAAC1B,GAAG,CAACU,CAAC,IAAG;UACvB,OAAe;YACbE,EAAE,EAAEF,CAAC,CAACE,EAAE;YACRC,IAAI,EAAEH,CAAC,CAACG,IAAI;YACZC,OAAO,EAAEJ,CAAC,CAACI,OAAO;YAClBC,QAAQ,EAAEL,CAAC,CAACK;WACb;QACH,CAAC;OACF;IACH,CAAC,CAAC,CACH;EACH;;;;;AAvDWd,aAAa,GAAA0B,UAAA,EAHzB7B,UAAU,CAAC;EACV8B,UAAU,EAAE;CACb,CAAC,C,EACW3B,aAAa,CAwDzB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}