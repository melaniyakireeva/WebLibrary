{"ast":null,"code":"import { AsyncPipe, NgIf } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, ContentChild } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { TuiLet } from '@taiga-ui/cdk/directives/let';\nimport { tuiControlValue } from '@taiga-ui/cdk/observables';\nimport { tuiIsElement, tuiIsInput } from '@taiga-ui/cdk/utils/dom';\nimport { defer } from 'rxjs';\nconst _c0 = [[[\"input\"]], \"*\"];\nconst _c1 = [\"input\", \"*\"];\nfunction TuiInputInline_ng_container_0_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 3);\n    i0.ɵɵprojection(1, 1);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TuiInputInline_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"span\", 1);\n    i0.ɵɵtemplate(2, TuiInputInline_ng_container_0_span_2_Template, 2, 0, \"span\", 2);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const value_r1 = ctx.tuiLet;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵstyleProp(\"text-indent\", ctx_r1.indent, \"px\");\n    i0.ɵɵproperty(\"textContent\", value_r1);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !value_r1);\n  }\n}\nclass TuiInputInline {\n  constructor() {\n    this.value$ = defer(() => tuiControlValue(this.control));\n    this.indent = -1;\n  }\n  onScroll(target) {\n    if (tuiIsElement(target) && tuiIsInput(target)) {\n      this.indent = -target.scrollLeft - 1; // -1 for Safari (see styles)\n    }\n  }\n  static {\n    this.ɵfac = function TuiInputInline_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiInputInline)();\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: TuiInputInline,\n      selectors: [[\"tui-input-inline\"]],\n      contentQueries: function TuiInputInline_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, NgControl, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.control = _t.first);\n        }\n      },\n      hostBindings: function TuiInputInline_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"scroll.capture\", function TuiInputInline_scroll_capture_HostBindingHandler($event) {\n            return ctx.onScroll($event.target);\n          });\n        }\n      },\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      ngContentSelectors: _c1,\n      decls: 3,\n      vars: 3,\n      consts: [[4, \"tuiLet\"], [1, \"t-before\", 3, \"textContent\"], [\"automation-id\", \"tui-input-inline__placeholder\", \"class\", \"t-placeholder\", 4, \"ngIf\"], [\"automation-id\", \"tui-input-inline__placeholder\", 1, \"t-placeholder\"]],\n      template: function TuiInputInline_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef(_c0);\n          i0.ɵɵtemplate(0, TuiInputInline_ng_container_0_Template, 3, 4, \"ng-container\", 0);\n          i0.ɵɵpipe(1, \"async\");\n          i0.ɵɵprojection(2);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"tuiLet\", i0.ɵɵpipeBind1(1, 1, ctx.value$));\n        }\n      },\n      dependencies: [AsyncPipe, NgIf, TuiLet],\n      styles: [\"tui-input-inline{position:relative;display:inline-block;overflow:hidden;white-space:nowrap;box-sizing:border-box}tui-input-inline ::spelling-error{color:transparent}tui-input-inline>.t-before{display:block;padding-right:.02em;margin-left:1px;white-space:pre}tui-input-inline>.t-placeholder{display:inline-block;min-inline-size:1px}tui-input-inline>input{position:absolute;top:0;left:0;background-color:transparent;padding:inherit;font:inherit;-webkit-text-fill-color:transparent;box-sizing:border-box;inline-size:100%;block-size:100%;border-width:0;text-align:inherit;letter-spacing:inherit;text-indent:inherit;text-transform:inherit;outline:none}\\n\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiInputInline, [{\n    type: Component,\n    args: [{\n      standalone: true,\n      selector: 'tui-input-inline',\n      imports: [AsyncPipe, NgIf, TuiLet],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        '(scroll.capture)': 'onScroll($event.target)'\n      },\n      template: \"<ng-container *tuiLet=\\\"value$ | async as value\\\">\\n    <span\\n        class=\\\"t-before\\\"\\n        [style.text-indent.px]=\\\"indent\\\"\\n        [textContent]=\\\"value\\\"\\n    ></span>\\n\\n    <span\\n        *ngIf=\\\"!value\\\"\\n        automation-id=\\\"tui-input-inline__placeholder\\\"\\n        class=\\\"t-placeholder\\\"\\n    >\\n        <ng-content />\\n    </span>\\n</ng-container>\\n<ng-content select=\\\"input\\\" />\\n\",\n      styles: [\"tui-input-inline{position:relative;display:inline-block;overflow:hidden;white-space:nowrap;box-sizing:border-box}tui-input-inline ::spelling-error{color:transparent}tui-input-inline>.t-before{display:block;padding-right:.02em;margin-left:1px;white-space:pre}tui-input-inline>.t-placeholder{display:inline-block;min-inline-size:1px}tui-input-inline>input{position:absolute;top:0;left:0;background-color:transparent;padding:inherit;font:inherit;-webkit-text-fill-color:transparent;box-sizing:border-box;inline-size:100%;block-size:100%;border-width:0;text-align:inherit;letter-spacing:inherit;text-indent:inherit;text-transform:inherit;outline:none}\\n\"]\n    }]\n  }], null, {\n    control: [{\n      type: ContentChild,\n      args: [NgControl]\n    }]\n  });\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiInputInline };","map":{"version":3,"names":["AsyncPipe","NgIf","i0","Component","ViewEncapsulation","ChangeDetectionStrategy","ContentChild","NgControl","TuiLet","tuiControlValue","tuiIsElement","tuiIsInput","defer","_c0","_c1","TuiInputInline_ng_container_0_span_2_Template","rf","ctx","ɵɵelementStart","ɵɵprojection","ɵɵelementEnd","TuiInputInline_ng_container_0_Template","ɵɵelementContainerStart","ɵɵelement","ɵɵtemplate","ɵɵelementContainerEnd","value_r1","tuiLet","ctx_r1","ɵɵnextContext","ɵɵadvance","ɵɵstyleProp","indent","ɵɵproperty","TuiInputInline","constructor","value$","control","onScroll","target","scrollLeft","ɵfac","TuiInputInline_Factory","__ngFactoryType__","ɵcmp","ɵɵdefineComponent","type","selectors","contentQueries","TuiInputInline_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","hostBindings","TuiInputInline_HostBindings","ɵɵlistener","TuiInputInline_scroll_capture_HostBindingHandler","$event","standalone","features","ɵɵStandaloneFeature","ngContentSelectors","decls","vars","consts","template","TuiInputInline_Template","ɵɵprojectionDef","ɵɵpipe","ɵɵpipeBind1","dependencies","styles","encapsulation","changeDetection","ngDevMode","ɵsetClassMetadata","args","selector","imports","None","OnPush","host"],"sources":["C:/Users/Asus-PC/Downloads/WebLibraryNew/WebLibrary/WebLibraryApp/Frontend/node_modules/@taiga-ui/kit/fesm2022/taiga-ui-kit-components-input-inline.mjs"],"sourcesContent":["import { AsyncPipe, NgIf } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, ContentChild } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { TuiLet } from '@taiga-ui/cdk/directives/let';\nimport { tuiControlValue } from '@taiga-ui/cdk/observables';\nimport { tuiIsElement, tuiIsInput } from '@taiga-ui/cdk/utils/dom';\nimport { defer } from 'rxjs';\n\nclass TuiInputInline {\n    constructor() {\n        this.value$ = defer(() => tuiControlValue(this.control));\n        this.indent = -1;\n    }\n    onScroll(target) {\n        if (tuiIsElement(target) && tuiIsInput(target)) {\n            this.indent = -target.scrollLeft - 1; // -1 for Safari (see styles)\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiInputInline, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiInputInline, isStandalone: true, selector: \"tui-input-inline\", host: { listeners: { \"scroll.capture\": \"onScroll($event.target)\" } }, queries: [{ propertyName: \"control\", first: true, predicate: NgControl, descendants: true }], ngImport: i0, template: \"<ng-container *tuiLet=\\\"value$ | async as value\\\">\\n    <span\\n        class=\\\"t-before\\\"\\n        [style.text-indent.px]=\\\"indent\\\"\\n        [textContent]=\\\"value\\\"\\n    ></span>\\n\\n    <span\\n        *ngIf=\\\"!value\\\"\\n        automation-id=\\\"tui-input-inline__placeholder\\\"\\n        class=\\\"t-placeholder\\\"\\n    >\\n        <ng-content />\\n    </span>\\n</ng-container>\\n<ng-content select=\\\"input\\\" />\\n\", styles: [\"tui-input-inline{position:relative;display:inline-block;overflow:hidden;white-space:nowrap;box-sizing:border-box}tui-input-inline ::spelling-error{color:transparent}tui-input-inline>.t-before{display:block;padding-right:.02em;margin-left:1px;white-space:pre}tui-input-inline>.t-placeholder{display:inline-block;min-inline-size:1px}tui-input-inline>input{position:absolute;top:0;left:0;background-color:transparent;padding:inherit;font:inherit;-webkit-text-fill-color:transparent;box-sizing:border-box;inline-size:100%;block-size:100%;border-width:0;text-align:inherit;letter-spacing:inherit;text-indent:inherit;text-transform:inherit;outline:none}\\n\"], dependencies: [{ kind: \"pipe\", type: AsyncPipe, name: \"async\" }, { kind: \"directive\", type: NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: TuiLet, selector: \"[tuiLet]\", inputs: [\"tuiLet\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiInputInline, decorators: [{\n            type: Component,\n            args: [{ standalone: true, selector: 'tui-input-inline', imports: [AsyncPipe, NgIf, TuiLet], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: {\n                        '(scroll.capture)': 'onScroll($event.target)',\n                    }, template: \"<ng-container *tuiLet=\\\"value$ | async as value\\\">\\n    <span\\n        class=\\\"t-before\\\"\\n        [style.text-indent.px]=\\\"indent\\\"\\n        [textContent]=\\\"value\\\"\\n    ></span>\\n\\n    <span\\n        *ngIf=\\\"!value\\\"\\n        automation-id=\\\"tui-input-inline__placeholder\\\"\\n        class=\\\"t-placeholder\\\"\\n    >\\n        <ng-content />\\n    </span>\\n</ng-container>\\n<ng-content select=\\\"input\\\" />\\n\", styles: [\"tui-input-inline{position:relative;display:inline-block;overflow:hidden;white-space:nowrap;box-sizing:border-box}tui-input-inline ::spelling-error{color:transparent}tui-input-inline>.t-before{display:block;padding-right:.02em;margin-left:1px;white-space:pre}tui-input-inline>.t-placeholder{display:inline-block;min-inline-size:1px}tui-input-inline>input{position:absolute;top:0;left:0;background-color:transparent;padding:inherit;font:inherit;-webkit-text-fill-color:transparent;box-sizing:border-box;inline-size:100%;block-size:100%;border-width:0;text-align:inherit;letter-spacing:inherit;text-indent:inherit;text-transform:inherit;outline:none}\\n\"] }]\n        }], propDecorators: { control: [{\n                type: ContentChild,\n                args: [NgControl]\n            }] } });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiInputInline };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}