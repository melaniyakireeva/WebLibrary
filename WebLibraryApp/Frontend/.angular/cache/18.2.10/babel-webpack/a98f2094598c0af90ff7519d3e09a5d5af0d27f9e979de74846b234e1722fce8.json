{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./language-switcher.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./language-switcher.component.scss?ngResource\";\nimport { NgForOf, NgIf, TitleCasePipe } from '@angular/common';\nimport { Component, inject } from '@angular/core';\nimport { FormControl, ReactiveFormsModule } from '@angular/forms';\nimport { TuiIcon } from '@taiga-ui/core';\nimport { TuiButton } from '@taiga-ui/core/components/button';\nimport { TuiDataList } from '@taiga-ui/core/components/data-list';\nimport { tuiScrollbarOptionsProvider } from '@taiga-ui/core/components/scrollbar';\nimport { TuiTextfield } from '@taiga-ui/core/components/textfield';\nimport { TuiFlagPipe } from '@taiga-ui/core/pipes/flag';\nimport { TuiLanguageSwitcherService } from '@taiga-ui/i18n/utils';\nimport { TuiBadge } from '@taiga-ui/kit/components/badge';\nimport { TuiBadgedContent } from '@taiga-ui/kit/components/badged-content';\nimport { TuiButtonSelect } from '@taiga-ui/kit/directives/button-select';\nlet LanguageSwitcherComponent = class LanguageSwitcherComponent {\n  switcher = inject(TuiLanguageSwitcherService);\n  language = new FormControl(capitalize(this.switcher.language));\n  open = false;\n  flags = new Map([['chinese', 'CN'], ['english', 'GB'], ['russian', 'RU']]);\n  names = Array.from(this.flags.keys());\n  setLang(lang) {\n    this.language.setValue(lang);\n    this.switcher.setLanguage(lang);\n    this.open = false;\n  }\n};\nLanguageSwitcherComponent = __decorate([Component({\n  selector: 'app-language-switcher',\n  standalone: true,\n  imports: [NgForOf, NgIf, ReactiveFormsModule, TitleCasePipe, TuiBadge, TuiBadgedContent, TuiButton, TuiIcon, TuiButtonSelect, TuiDataList, TuiFlagPipe, TuiTextfield],\n  template: __NG_CLI_RESOURCE__0,\n  providers: [tuiScrollbarOptionsProvider({\n    mode: 'hover'\n  })],\n  styles: [__NG_CLI_RESOURCE__1]\n})], LanguageSwitcherComponent);\nexport { LanguageSwitcherComponent };\nfunction capitalize(value) {\n  return `${value.charAt(0).toUpperCase()}${value.slice(1)}`;\n}","map":{"version":3,"names":["NgForOf","NgIf","TitleCasePipe","Component","inject","FormControl","ReactiveFormsModule","TuiIcon","TuiButton","TuiDataList","tuiScrollbarOptionsProvider","TuiTextfield","TuiFlagPipe","TuiLanguageSwitcherService","TuiBadge","TuiBadgedContent","TuiButtonSelect","LanguageSwitcherComponent","switcher","language","capitalize","open","flags","Map","names","Array","from","keys","setLang","lang","setValue","setLanguage","__decorate","selector","standalone","imports","template","__NG_CLI_RESOURCE__0","providers","mode","value","charAt","toUpperCase","slice"],"sources":["C:\\Users\\Asus-PC\\Downloads\\WebLibraryNew\\WebLibrary\\WebLibraryApp\\Frontend\\src\\app\\components\\language-switcher\\language-switcher.component.ts"],"sourcesContent":["import { NgForOf, NgIf, TitleCasePipe } from '@angular/common';\r\nimport { ChangeDetectionStrategy, Component, inject } from '@angular/core';\r\nimport { FormControl, ReactiveFormsModule } from '@angular/forms';\r\nimport { TuiIcon } from '@taiga-ui/core';\r\nimport { TuiButton } from '@taiga-ui/core/components/button';\r\nimport { TuiDataList } from '@taiga-ui/core/components/data-list';\r\nimport { tuiScrollbarOptionsProvider } from '@taiga-ui/core/components/scrollbar';\r\nimport { TuiTextfield } from '@taiga-ui/core/components/textfield';\r\nimport { TuiFlagPipe } from '@taiga-ui/core/pipes/flag';\r\nimport type { TuiCountryIsoCode, TuiLanguageName } from '@taiga-ui/i18n/types';\r\nimport { TuiLanguageSwitcherService } from '@taiga-ui/i18n/utils';\r\nimport { TuiBadge } from '@taiga-ui/kit/components/badge';\r\nimport { TuiBadgedContent } from '@taiga-ui/kit/components/badged-content';\r\nimport { TuiButtonSelect } from '@taiga-ui/kit/directives/button-select';\r\nimport _ from 'lodash';\r\n\r\n@Component({\r\n  selector: 'app-language-switcher',\r\n  standalone: true,\r\n  imports: [\r\n    NgForOf,\r\n    NgIf,\r\n    ReactiveFormsModule,\r\n    TitleCasePipe,\r\n    TuiBadge,\r\n    TuiBadgedContent,\r\n    TuiButton,\r\n    TuiIcon,\r\n    TuiButtonSelect,\r\n    TuiDataList,\r\n    TuiFlagPipe,\r\n    TuiTextfield,\r\n  ],\r\n  templateUrl: './language-switcher.component.html',\r\n  styleUrl: './language-switcher.component.scss',\r\n  providers: [tuiScrollbarOptionsProvider({ mode: 'hover' })],\r\n})\r\nexport class LanguageSwitcherComponent {\r\n  protected readonly switcher = inject(TuiLanguageSwitcherService);\r\n  protected readonly language = new FormControl(\r\n    capitalize(this.switcher.language)\r\n  );\r\n\r\n  protected open = false;\r\n\r\n  public readonly flags = new Map<TuiLanguageName, TuiCountryIsoCode>([\r\n    ['chinese', 'CN'],\r\n    ['english', 'GB'],\r\n    ['russian', 'RU'],\r\n  ]);\r\n\r\n  public readonly names: TuiLanguageName[] = Array.from(this.flags.keys());\r\n\r\n  public setLang(lang: TuiLanguageName): void {\r\n    this.language.setValue(lang);\r\n    this.switcher.setLanguage(lang);\r\n    this.open = false;\r\n  }\r\n}\r\n\r\nfunction capitalize(value: string): string {\r\n  return `${value.charAt(0).toUpperCase()}${value.slice(1)}`;\r\n}"],"mappings":";;;AAAA,SAASA,OAAO,EAAEC,IAAI,EAAEC,aAAa,QAAQ,iBAAiB;AAC9D,SAAkCC,SAAS,EAAEC,MAAM,QAAQ,eAAe;AAC1E,SAASC,WAAW,EAAEC,mBAAmB,QAAQ,gBAAgB;AACjE,SAASC,OAAO,QAAQ,gBAAgB;AACxC,SAASC,SAAS,QAAQ,kCAAkC;AAC5D,SAASC,WAAW,QAAQ,qCAAqC;AACjE,SAASC,2BAA2B,QAAQ,qCAAqC;AACjF,SAASC,YAAY,QAAQ,qCAAqC;AAClE,SAASC,WAAW,QAAQ,2BAA2B;AAEvD,SAASC,0BAA0B,QAAQ,sBAAsB;AACjE,SAASC,QAAQ,QAAQ,gCAAgC;AACzD,SAASC,gBAAgB,QAAQ,yCAAyC;AAC1E,SAASC,eAAe,QAAQ,wCAAwC;AAwBjE,IAAMC,yBAAyB,GAA/B,MAAMA,yBAAyB;EACjBC,QAAQ,GAAGd,MAAM,CAACS,0BAA0B,CAAC;EAC7CM,QAAQ,GAAG,IAAId,WAAW,CAC3Ce,UAAU,CAAC,IAAI,CAACF,QAAQ,CAACC,QAAQ,CAAC,CACnC;EAESE,IAAI,GAAG,KAAK;EAENC,KAAK,GAAG,IAAIC,GAAG,CAAqC,CAClE,CAAC,SAAS,EAAE,IAAI,CAAC,EACjB,CAAC,SAAS,EAAE,IAAI,CAAC,EACjB,CAAC,SAAS,EAAE,IAAI,CAAC,CAClB,CAAC;EAEcC,KAAK,GAAsBC,KAAK,CAACC,IAAI,CAAC,IAAI,CAACJ,KAAK,CAACK,IAAI,EAAE,CAAC;EAEjEC,OAAOA,CAACC,IAAqB;IAClC,IAAI,CAACV,QAAQ,CAACW,QAAQ,CAACD,IAAI,CAAC;IAC5B,IAAI,CAACX,QAAQ,CAACa,WAAW,CAACF,IAAI,CAAC;IAC/B,IAAI,CAACR,IAAI,GAAG,KAAK;EACnB;CACD;AArBYJ,yBAAyB,GAAAe,UAAA,EArBrC7B,SAAS,CAAC;EACT8B,QAAQ,EAAE,uBAAuB;EACjCC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE,CACPnC,OAAO,EACPC,IAAI,EACJK,mBAAmB,EACnBJ,aAAa,EACbY,QAAQ,EACRC,gBAAgB,EAChBP,SAAS,EACTD,OAAO,EACPS,eAAe,EACfP,WAAW,EACXG,WAAW,EACXD,YAAY,CACb;EACDyB,QAAA,EAAAC,oBAAiD;EAEjDC,SAAS,EAAE,CAAC5B,2BAA2B,CAAC;IAAE6B,IAAI,EAAE;EAAO,CAAE,CAAC,CAAC;;CAC5D,CAAC,C,EACWtB,yBAAyB,CAqBrC;;AAED,SAASG,UAAUA,CAACoB,KAAa;EAC/B,OAAO,GAAGA,KAAK,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,EAAE,GAAGF,KAAK,CAACG,KAAK,CAAC,CAAC,CAAC,EAAE;AAC5D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}