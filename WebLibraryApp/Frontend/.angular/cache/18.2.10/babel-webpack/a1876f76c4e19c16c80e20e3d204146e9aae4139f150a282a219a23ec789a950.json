{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./account-profile.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./account-profile.component.scss?ngResource\";\nimport { AuthService } from '../../services/auth/auth-service.service';\nimport { Component, ChangeDetectorRef } from '@angular/core';\nimport { TuiPlatform } from '@taiga-ui/cdk';\nimport { TuiAppearance, TuiButton, TuiLink, TuiTitle, TuiIcon, TuiTextfield, tuiDialog } from '@taiga-ui/core';\nimport { TuiAvatar, TuiBadge } from '@taiga-ui/kit';\nimport { TuiCardLarge, TuiHeader } from '@taiga-ui/layout';\nimport { NgIf } from '@angular/common';\nimport _ from 'lodash';\nimport { UsersService } from '../../services/users/users.service';\nimport { FormsModule } from '@angular/forms';\nimport { EditAccountComponent } from '../edit-account/edit-account.component';\nimport { FilesUploaderService } from '../../services/files/files-uploader.service';\nimport { catchError, map, of, switchMap, tap } from 'rxjs';\nlet AccountProfileComponent = class AccountProfileComponent {\n  authService;\n  userService;\n  fileService;\n  cdRef;\n  accountInfo;\n  fileSrc;\n  dialog = tuiDialog(EditAccountComponent, {\n    dismissible: true,\n    label: 'Редактирование данных о пользователе',\n    size: 'l'\n  });\n  constructor(authService, userService, fileService, cdRef) {\n    this.authService = authService;\n    this.userService = userService;\n    this.fileService = fileService;\n    this.cdRef = cdRef;\n  }\n  onEditProfile() {\n    this.dialog(_.cloneDeep(this.accountInfo)).subscribe({\n      next: data => {\n        this.userService.updateUserInfo(data).subscribe(x => {\n          if (x) {\n            this.accountInfo = data;\n            if (_.isNil(data.profileIconId)) {\n              this.fileSrc = undefined;\n            } else {\n              this.fileService.getFile(data.profileIconId).pipe(tap(x => {\n                this.fileSrc = `data:image/png;base64, ${x.fileData}`;\n              })).subscribe(x => {\n                this.cdRef.markForCheck();\n              });\n            }\n            this.cdRef.markForCheck();\n          }\n        });\n      }\n    });\n  }\n  ngOnInit() {\n    const accountDto = this.authService.getUserInfo();\n    if (!_.isNil(accountDto?.userId)) {\n      const getAccountInfo$ = this.userService.getUser(accountDto.userId).pipe(switchMap(accountInfo => {\n        if (!_.isNil(accountInfo?.profileIconId)) {\n          return this.fileService.getFile(accountInfo.profileIconId).pipe(map(x => {\n            this.fileSrc = `data:image/png;base64, ${x.fileData}`;\n            return accountInfo;\n          }), catchError(x => of(accountInfo)));\n        }\n        return of(accountInfo);\n      }));\n      getAccountInfo$.subscribe(x => {\n        this.accountInfo = x;\n        this.cdRef.markForCheck();\n      });\n    }\n  }\n  static ctorParameters = () => [{\n    type: AuthService\n  }, {\n    type: UsersService\n  }, {\n    type: FilesUploaderService\n  }, {\n    type: ChangeDetectorRef\n  }];\n};\nAccountProfileComponent = __decorate([Component({\n  selector: 'app-account-profile',\n  standalone: true,\n  imports: [TuiAppearance, TuiBadge, TuiButton, TuiCardLarge, TuiHeader, TuiLink, TuiPlatform, TuiTitle, TuiAvatar, NgIf, TuiIcon, TuiTextfield, FormsModule],\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], AccountProfileComponent);\nexport { AccountProfileComponent };","map":{"version":3,"names":["AuthService","Component","ChangeDetectorRef","TuiPlatform","TuiAppearance","TuiButton","TuiLink","TuiTitle","TuiIcon","TuiTextfield","tuiDialog","TuiAvatar","TuiBadge","TuiCardLarge","TuiHeader","NgIf","_","UsersService","FormsModule","EditAccountComponent","FilesUploaderService","catchError","map","of","switchMap","tap","AccountProfileComponent","authService","userService","fileService","cdRef","accountInfo","fileSrc","dialog","dismissible","label","size","constructor","onEditProfile","cloneDeep","subscribe","next","data","updateUserInfo","x","isNil","profileIconId","undefined","getFile","pipe","fileData","markForCheck","ngOnInit","accountDto","getUserInfo","userId","getAccountInfo$","getUser","__decorate","selector","standalone","imports","template","__NG_CLI_RESOURCE__0"],"sources":["C:\\Users\\Asus-PC\\Downloads\\WebLibraryNew\\WebLibrary\\WebLibraryApp\\Frontend\\src\\app\\components\\account-profile\\account-profile.component.ts"],"sourcesContent":["import { AccountInfo, AuthService } from '../../services/auth/auth-service.service';\r\nimport {\r\n  Component,\r\n  ChangeDetectorRef,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport { TuiPlatform } from '@taiga-ui/cdk';\r\nimport {\r\n  TuiAppearance,\r\n  TuiButton,\r\n  TuiLink,\r\n  TuiTitle,\r\n  TuiIcon,\r\n  TuiTextfield,\r\n  tuiDialog,\r\n} from '@taiga-ui/core';\r\nimport { TuiAvatar, TuiBadge } from '@taiga-ui/kit';\r\nimport { TuiCardLarge, TuiHeader } from '@taiga-ui/layout';\r\nimport { AccountFullInfo } from '../../services/messages/room-service.service';\r\nimport { NgIf } from '@angular/common';\r\nimport _ from 'lodash';\r\nimport { UsersService } from '../../services/users/users.service';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { EditAccountComponent } from '../edit-account/edit-account.component';\r\nimport { FilesUploaderService } from '../../services/files/files-uploader.service';\r\nimport { catchError, map, of, switchMap, tap } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-account-profile',\r\n  standalone: true,\r\n  imports: [\r\n    TuiAppearance,\r\n    TuiBadge,\r\n    TuiButton,\r\n    TuiCardLarge,\r\n    TuiHeader,\r\n    TuiLink,\r\n    TuiPlatform,\r\n    TuiTitle,\r\n    TuiAvatar,\r\n    NgIf,\r\n    TuiIcon,\r\n    TuiTextfield,\r\n    FormsModule,\r\n  ],\r\n  templateUrl: './account-profile.component.html',\r\n  styleUrl: './account-profile.component.scss',\r\n})\r\nexport class AccountProfileComponent implements OnInit {\r\n  accountInfo!: AccountFullInfo;\r\n  fileSrc?: string;\r\n\r\n  private readonly dialog = tuiDialog<\r\n    EditAccountComponent,\r\n    'context',\r\n    AccountFullInfo,\r\n    AccountFullInfo\r\n  >(EditAccountComponent, {\r\n    dismissible: true,\r\n    label: 'Редактирование данных о пользователе',\r\n    size: 'l'\r\n  });\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private userService: UsersService,\r\n    private fileService: FilesUploaderService,\r\n    private cdRef: ChangeDetectorRef\r\n  ) {}\r\n\r\n  onEditProfile(){\r\n    this.dialog(_.cloneDeep(this.accountInfo)).subscribe({\r\n      next: (data) => {\r\n        this.userService.updateUserInfo(data).subscribe((x) => {\r\n          if (x) {\r\n            this.accountInfo = data;\r\n            if (_.isNil(data.profileIconId)) {\r\n              this.fileSrc = undefined;\r\n            } else {\r\n              this.fileService\r\n                .getFile(data.profileIconId)\r\n                .pipe(\r\n                  tap((x) => {\r\n                    this.fileSrc = `data:image/png;base64, ${x.fileData}`;\r\n                  })\r\n                )\r\n                .subscribe((x) => {\r\n                  this.cdRef.markForCheck();\r\n                });\r\n            }\r\n            this.cdRef.markForCheck();\r\n          }\r\n        });\r\n      },\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    const accountDto: AccountInfo | undefined = this.authService.getUserInfo();\r\n    if (!_.isNil(accountDto?.userId)) {\r\n      const getAccountInfo$ = this.userService.getUser(accountDto.userId).pipe(\r\n        switchMap((accountInfo) => {\r\n          if (!_.isNil(accountInfo?.profileIconId)) {\r\n            return this.fileService.getFile(accountInfo.profileIconId).pipe(\r\n              map((x) => {\r\n                this.fileSrc = `data:image/png;base64, ${x.fileData}`;\r\n                return accountInfo;\r\n              }),\r\n              catchError((x) => of(accountInfo))\r\n            );\r\n          }\r\n          return of(accountInfo);\r\n        })\r\n      );\r\n      getAccountInfo$.subscribe((x) => {\r\n        this.accountInfo = x;\r\n        this.cdRef.markForCheck();\r\n      });\r\n    }\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}