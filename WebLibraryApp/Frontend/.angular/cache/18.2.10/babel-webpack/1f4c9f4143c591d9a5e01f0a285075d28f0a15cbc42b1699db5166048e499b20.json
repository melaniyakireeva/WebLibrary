{"ast":null,"code":"import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { inject, Component, ChangeDetectionStrategy, ViewChild, Input, Directive, NgModule } from '@angular/core';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { MASKITO_DEFAULT_OPTIONS } from '@maskito/core';\nimport { maskitoDateRangeOptionsGenerator } from '@maskito/kit';\nimport { tuiAsControl } from '@taiga-ui/cdk/classes';\nimport { TUI_FALSE_HANDLER } from '@taiga-ui/cdk/constants';\nimport { TuiMonth, DATE_RANGE_FILLER_LENGTH, TuiDayRange, DATE_FILLER_LENGTH, RANGE_SEPARATOR_CHAR, TUI_FIRST_DAY, TUI_LAST_DAY } from '@taiga-ui/cdk/date-time';\nimport { tuiWatch } from '@taiga-ui/cdk/observables';\nimport { TUI_IS_MOBILE } from '@taiga-ui/cdk/tokens';\nimport { changeDateSeparator, tuiNullableSame, tuiIsPresent, tuiPure } from '@taiga-ui/cdk/utils/miscellaneous';\nimport { tuiAsDataListHost } from '@taiga-ui/core/components/data-list';\nimport { TUI_DEFAULT_DATE_FORMAT, TUI_DATE_FORMAT } from '@taiga-ui/core/tokens';\nimport { TUI_MOBILE_CALENDAR, TUI_INPUT_DATE_OPTIONS, TUI_DATE_TEXTS, TUI_DATE_RANGE_VALUE_TRANSFORMER, tuiDateStreamWithTransformer, TUI_MOBILE_CALENDAR_PROVIDER } from '@taiga-ui/kit/tokens';\nimport { AbstractTuiNullableControl, tuiAsControl as tuiAsControl$1, AbstractTuiTextfieldHost } from '@taiga-ui/legacy/classes';\nimport * as i5 from '@taiga-ui/legacy/components/primitive-textfield';\nimport { TuiPrimitiveTextfieldComponent, TuiPrimitiveTextfieldModule, TuiTextfieldComponent } from '@taiga-ui/legacy/components/primitive-textfield';\nimport * as i6 from '@taiga-ui/legacy/directives';\nimport { TUI_TEXTFIELD_SIZE, TuiTextfieldControllerModule, TuiValueAccessorModule, TuiLegacyDropdownOpenMonitorDirective } from '@taiga-ui/legacy/directives';\nimport { tuiAsFocusableItemAccessor, tuiAsTextfieldHost } from '@taiga-ui/legacy/tokens';\nimport { TUI_DATE_MODE_MASKITO_ADAPTER } from '@taiga-ui/legacy/utils';\nimport { map } from 'rxjs';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i2 from '@maskito/angular';\nimport { MaskitoDirective } from '@maskito/angular';\nimport * as i3 from '@taiga-ui/cdk/directives/let';\nimport { TuiLet } from '@taiga-ui/cdk/directives/let';\nimport * as i4 from '@taiga-ui/polymorpheus';\nimport { PolymorpheusOutlet, PolymorpheusTemplate } from '@taiga-ui/polymorpheus';\nimport * as i7 from '@taiga-ui/kit/components/calendar-range';\nimport { TuiCalendarRange } from '@taiga-ui/kit/components/calendar-range';\nimport * as i8 from '@taiga-ui/core/components/icon';\nimport { TuiIcon } from '@taiga-ui/core/components/icon';\nimport * as i9 from '@taiga-ui/core/directives/appearance';\nimport { TuiAppearance } from '@taiga-ui/core/directives/appearance';\nimport * as i1$1 from '@taiga-ui/core/directives/dropdown';\nimport { TuiDropdown } from '@taiga-ui/core/directives/dropdown';\nconst _c0 = [\"*\", [[\"input\"]]];\nconst _c1 = [\"*\", \"input\"];\nconst _c2 = a0 => ({\n  $implicit: a0\n});\nfunction TuiInputDateRangeComponent_tui_primitive_textfield_1_div_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const text_r4 = ctx.polymorpheusOutlet;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", text_r4, \" \");\n  }\n}\nfunction TuiInputDateRangeComponent_tui_primitive_textfield_1_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtemplate(1, TuiInputDateRangeComponent_tui_primitive_textfield_1_div_3_ng_container_1_Template, 2, 1, \"ng-container\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"polymorpheusOutlet\", ctx_r2.computedContent)(\"polymorpheusOutletContext\", i0.ɵɵpureFunction1(2, _c2, ctx_r2.value));\n  }\n}\nfunction TuiInputDateRangeComponent_tui_primitive_textfield_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tui-primitive-textfield\", 4);\n    i0.ɵɵlistener(\"valueChange\", function TuiInputDateRangeComponent_tui_primitive_textfield_1_Template_tui_primitive_textfield_valueChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onValueChange($event));\n    });\n    i0.ɵɵprojection(1);\n    i0.ɵɵprojection(2, 1, [\"ngProjectAs\", \"input\", 5, [\"input\"]]);\n    i0.ɵɵtemplate(3, TuiInputDateRangeComponent_tui_primitive_textfield_1_div_3_Template, 2, 4, \"div\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const dateFiller_r5 = ctx.tuiLet;\n    const ctx_r2 = i0.ɵɵnextContext();\n    const iconContent_r6 = i0.ɵɵreference(4);\n    i0.ɵɵproperty(\"disabled\", ctx_r2.computedDisabled)(\"invalid\", ctx_r2.computedInvalid)(\"maskito\", ctx_r2.computedMask)(\"nativeId\", ctx_r2.nativeId)(\"pseudoActive\", ctx_r2.pseudoActive)(\"pseudoFocus\", ctx_r2.innerPseudoFocused)(\"pseudoHover\", ctx_r2.pseudoHover)(\"readOnly\", ctx_r2.readOnly)(\"tuiTextfieldFiller\", ctx_r2.getComputedRangeFiller(dateFiller_r5 || \"\"))(\"tuiTextfieldIcon\", ctx_r2.calendarIcon && iconContent_r6)(\"value\", ctx_r2.computedValue);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.showValueTemplate);\n  }\n}\nfunction TuiInputDateRangeComponent_ng_template_3_tui_icon_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tui-icon\", 9);\n    i0.ɵɵlistener(\"click\", function TuiInputDateRangeComponent_ng_template_3_tui_icon_0_Template_tui_icon_click_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.onIconClick());\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const src_r8 = ctx.polymorpheusOutlet;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassProp(\"t-icon_small\", ctx_r2.size === \"s\")(\"t-icon\", !ctx_r2.computedDisabled);\n    i0.ɵɵproperty(\"icon\", src_r8.toString());\n  }\n}\nfunction TuiInputDateRangeComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TuiInputDateRangeComponent_ng_template_3_tui_icon_0_Template, 1, 5, \"tui-icon\", 8);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"polymorpheusOutlet\", ctx_r2.calendarIcon)(\"polymorpheusOutletContext\", i0.ɵɵpureFunction1(2, _c2, ctx_r2.size));\n  }\n}\nfunction TuiInputDateRangeComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tui-calendar-range\", 10);\n    i0.ɵɵtwoWayListener(\"itemChange\", function TuiInputDateRangeComponent_ng_template_5_Template_tui_calendar_range_itemChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r2 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r2.selectedActivePeriod, $event) || (ctx_r2.selectedActivePeriod = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵlistener(\"valueChange\", function TuiInputDateRangeComponent_ng_template_5_Template_tui_calendar_range_valueChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onRangeChange($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"defaultViewedMonth\", ctx_r2.defaultViewedMonth)(\"disabledItemHandler\", ctx_r2.disabledItemHandler)(\"items\", ctx_r2.items)(\"markerHandler\", ctx_r2.markerHandler)(\"max\", ctx_r2.max)(\"maxLength\", ctx_r2.maxLength)(\"min\", ctx_r2.min)(\"minLength\", ctx_r2.minLength)(\"value\", ctx_r2.value);\n    i0.ɵɵtwoWayProperty(\"item\", ctx_r2.selectedActivePeriod);\n  }\n}\nclass TuiInputDateRangeComponent extends AbstractTuiNullableControl {\n  constructor() {\n    super(...arguments);\n    this.isMobile = inject(TUI_IS_MOBILE);\n    this.mobileCalendar = inject(TUI_MOBILE_CALENDAR, {\n      optional: true\n    });\n    this.options = inject(TUI_INPUT_DATE_OPTIONS);\n    this.textfieldSize = inject(TUI_TEXTFIELD_SIZE);\n    this.dateTexts$ = inject(TUI_DATE_TEXTS);\n    this.valueTransformer = inject(TUI_DATE_RANGE_VALUE_TRANSFORMER, {\n      optional: true\n    });\n    this.dateFiller$ = this.dateTexts$.pipe(map(dateTexts => changeDateSeparator(dateTexts[this.dateFormat.mode], this.dateFormat.separator)));\n    this.dateFormat = TUI_DEFAULT_DATE_FORMAT;\n    this.dateFormat$ = inject(TUI_DATE_FORMAT).pipe(tuiWatch(this.cdr), takeUntilDestroyed()).subscribe(format => {\n      this.dateFormat = format;\n    });\n    this.selectedActivePeriod = null;\n    this.disabledItemHandler = TUI_FALSE_HANDLER;\n    this.markerHandler = null;\n    this.defaultViewedMonth = TuiMonth.currentLocal();\n    this.items = [];\n    this.min = this.options.min;\n    this.max = this.options.max;\n    this.minLength = null;\n    this.maxLength = null;\n    this.open = false;\n  }\n  get nativeFocusableElement() {\n    return this.textfield?.nativeFocusableElement ?? null;\n  }\n  get focused() {\n    return !!this.textfield?.focused;\n  }\n  get computedExampleText() {\n    return this.items.length ? this.textfield?.nativeFocusableElement?.placeholder || '' : '';\n  }\n  get computedValue() {\n    const {\n      value,\n      nativeValue,\n      activePeriod\n    } = this;\n    if (activePeriod) {\n      return String(activePeriod);\n    }\n    return value ? value.getFormattedDayRange(this.dateFormat.mode, this.dateFormat.separator) : nativeValue;\n  }\n  get size() {\n    return this.textfieldSize.size;\n  }\n  onClick() {\n    if (!this.isMobile && this.interactive) {\n      this.toggle();\n    }\n  }\n  onValueChange(value) {\n    if (this.control) {\n      this.control.updateValueAndValidity({\n        emitEvent: false\n      });\n    }\n    if (!value && !this.mobileCalendar) {\n      this.onOpenChange(true);\n    }\n    this.value = value.length === DATE_RANGE_FILLER_LENGTH ? TuiDayRange.normalizeParse(value, this.dateFormat.mode) : null;\n    if (!this.value) {\n      this.selectedActivePeriod = null;\n    }\n  }\n  onRangeChange(range) {\n    this.toggle();\n    this.focusInput();\n    if (!range) {\n      this.nativeValue = '';\n    }\n    this.value = range;\n  }\n  writeValue(value) {\n    super.writeValue(value);\n    this.nativeValue = value ? this.computedValue : '';\n  }\n  get computedMobile() {\n    return this.isMobile && !!this.mobileCalendar;\n  }\n  get calendarIcon() {\n    return this.options.icon;\n  }\n  get computedMask() {\n    return this.activePeriod ? MASKITO_DEFAULT_OPTIONS : this.calculateMask(this.dateFormat.mode, this.dateFormat.separator, this.min, this.max, this.minLength, this.maxLength);\n  }\n  get activePeriod() {\n    return this.selectedActivePeriod ?? (this.items.find(item => tuiNullableSame(this.value, item.range, (a, b) => a.from.daySame(b.from.dayLimit(this.min, this.max)) && a.to.daySame(b.to.dayLimit(this.min, this.max)))) || null);\n  }\n  get showValueTemplate() {\n    return tuiIsPresent(this.value) && !this.focused;\n  }\n  get computedContent() {\n    return this.activePeriod?.content || this.computedValue;\n  }\n  get innerPseudoFocused() {\n    if (this.pseudoFocus === false) {\n      return false;\n    }\n    if (this.open || this.computedFocused) {\n      return true;\n    }\n    return null;\n  }\n  get nativeValue() {\n    return this.nativeFocusableElement?.value || '';\n  }\n  set nativeValue(value) {\n    if (this.nativeFocusableElement) {\n      this.nativeFocusableElement.value = value;\n    }\n  }\n  getComputedRangeFiller(dateFiller) {\n    return this.activePeriod ? '' : this.getDateRangeFiller(dateFiller);\n  }\n  onIconClick() {\n    if (this.isMobile && this.interactive) {\n      this.onOpenChange(true);\n    }\n  }\n  onOpenChange(open) {\n    this.open = open;\n  }\n  onActiveZone(focused) {\n    this.updateFocused(focused);\n    if (!focused && !this.itemSelected && (this.nativeValue.length === DATE_FILLER_LENGTH || this.nativeValue.length === DATE_FILLER_LENGTH + RANGE_SEPARATOR_CHAR.length)) {\n      this.value = TuiDayRange.normalizeParse(this.nativeValue, this.dateFormat.mode);\n    }\n  }\n  valueIdenticalComparator(oldValue, newValue) {\n    return tuiNullableSame(oldValue, newValue, (a, b) => a.daySame(b));\n  }\n  get itemSelected() {\n    return this.items.findIndex(item => String(item) === this.nativeValue) !== -1;\n  }\n  calculateMask(dateFormat, dateSeparator, min, max, minLength, maxLength) {\n    return maskitoDateRangeOptionsGenerator({\n      dateSeparator,\n      mode: TUI_DATE_MODE_MASKITO_ADAPTER[dateFormat],\n      min: (min || TUI_FIRST_DAY).toLocalNativeDate(),\n      max: (max || TUI_LAST_DAY).toLocalNativeDate(),\n      minLength: minLength || {},\n      maxLength: maxLength || {}\n    });\n  }\n  toggle() {\n    this.open = !this.open;\n  }\n  focusInput(preventScroll = false) {\n    if (this.nativeFocusableElement) {\n      this.nativeFocusableElement.focus({\n        preventScroll\n      });\n    }\n  }\n  getDateRangeFiller(dateFiller) {\n    return `${dateFiller}${RANGE_SEPARATOR_CHAR}${dateFiller}`;\n  }\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵTuiInputDateRangeComponent_BaseFactory;\n      return function TuiInputDateRangeComponent_Factory(__ngFactoryType__) {\n        return (ɵTuiInputDateRangeComponent_BaseFactory || (ɵTuiInputDateRangeComponent_BaseFactory = i0.ɵɵgetInheritedFactory(TuiInputDateRangeComponent)))(__ngFactoryType__ || TuiInputDateRangeComponent);\n      };\n    })();\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: TuiInputDateRangeComponent,\n      selectors: [[\"tui-input-date-range\"]],\n      viewQuery: function TuiInputDateRangeComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(TuiPrimitiveTextfieldComponent, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.textfield = _t.first);\n        }\n      },\n      hostVars: 1,\n      hostBindings: function TuiInputDateRangeComponent_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"click\", function TuiInputDateRangeComponent_click_HostBindingHandler() {\n            return ctx.onClick();\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵattribute(\"data-size\", ctx.size);\n        }\n      },\n      inputs: {\n        disabledItemHandler: \"disabledItemHandler\",\n        markerHandler: \"markerHandler\",\n        defaultViewedMonth: \"defaultViewedMonth\",\n        items: \"items\",\n        min: \"min\",\n        max: \"max\",\n        minLength: \"minLength\",\n        maxLength: \"maxLength\"\n      },\n      features: [i0.ɵɵProvidersFeature([tuiAsFocusableItemAccessor(TuiInputDateRangeComponent), tuiAsControl(TuiInputDateRangeComponent), tuiAsControl$1(TuiInputDateRangeComponent), tuiDateStreamWithTransformer(TUI_DATE_RANGE_VALUE_TRANSFORMER), tuiAsDataListHost(TuiInputDateRangeComponent), TUI_MOBILE_CALENDAR_PROVIDER]), i0.ɵɵInheritDefinitionFeature],\n      ngContentSelectors: _c1,\n      decls: 7,\n      vars: 6,\n      consts: [[\"iconContent\", \"\"], [\"dropdown\", \"\"], [\"tuiDropdownOpenMonitor\", \"\", 1, \"t-hosted\", 3, \"tuiActiveZoneChange\", \"tuiDropdownOpenChange\", \"tuiDropdown\", \"tuiDropdownEnabled\", \"tuiDropdownOpen\"], [\"automation-id\", \"tui-input-date-range__textfield\", \"tuiValueAccessor\", \"\", \"class\", \"t-textfield\", 3, \"disabled\", \"invalid\", \"maskito\", \"nativeId\", \"pseudoActive\", \"pseudoFocus\", \"pseudoHover\", \"readOnly\", \"tuiTextfieldFiller\", \"tuiTextfieldIcon\", \"value\", \"valueChange\", 4, \"tuiLet\"], [\"automation-id\", \"tui-input-date-range__textfield\", \"tuiValueAccessor\", \"\", 1, \"t-textfield\", 3, \"valueChange\", \"disabled\", \"invalid\", \"maskito\", \"nativeId\", \"pseudoActive\", \"pseudoFocus\", \"pseudoHover\", \"readOnly\", \"tuiTextfieldFiller\", \"tuiTextfieldIcon\", \"value\"], [\"ngProjectAs\", \"tuiContent\", \"class\", \"t-value\", 5, [\"tuiContent\"], 4, \"ngIf\"], [\"ngProjectAs\", \"tuiContent\", 5, [\"tuiContent\"], 1, \"t-value\"], [4, \"polymorpheusOutlet\", \"polymorpheusOutletContext\"], [\"automation-id\", \"tui-input-date-range__icon\", \"tuiAppearance\", \"icon\", 3, \"t-icon_small\", \"t-icon\", \"icon\", \"click\", 4, \"polymorpheusOutlet\", \"polymorpheusOutletContext\"], [\"automation-id\", \"tui-input-date-range__icon\", \"tuiAppearance\", \"icon\", 3, \"click\", \"icon\"], [3, \"itemChange\", \"valueChange\", \"defaultViewedMonth\", \"disabledItemHandler\", \"items\", \"markerHandler\", \"max\", \"maxLength\", \"min\", \"minLength\", \"value\", \"item\"]],\n      template: function TuiInputDateRangeComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵprojectionDef(_c0);\n          i0.ɵɵelementStart(0, \"div\", 2);\n          i0.ɵɵlistener(\"tuiActiveZoneChange\", function TuiInputDateRangeComponent_Template_div_tuiActiveZoneChange_0_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.onActiveZone($event));\n          })(\"tuiDropdownOpenChange\", function TuiInputDateRangeComponent_Template_div_tuiDropdownOpenChange_0_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.onOpenChange($event));\n          });\n          i0.ɵɵtemplate(1, TuiInputDateRangeComponent_tui_primitive_textfield_1_Template, 4, 12, \"tui-primitive-textfield\", 3);\n          i0.ɵɵpipe(2, \"async\");\n          i0.ɵɵtemplate(3, TuiInputDateRangeComponent_ng_template_3_Template, 1, 4, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor)(5, TuiInputDateRangeComponent_ng_template_5_Template, 1, 10, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          const dropdown_r10 = i0.ɵɵreference(6);\n          i0.ɵɵproperty(\"tuiDropdown\", dropdown_r10)(\"tuiDropdownEnabled\", ctx.interactive)(\"tuiDropdownOpen\", ctx.open && ctx.interactive);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"tuiLet\", i0.ɵɵpipeBind1(2, 4, ctx.dateFiller$));\n        }\n      },\n      dependencies: [i1.NgIf, i2.MaskitoDirective, i3.TuiLet, i4.PolymorpheusOutlet, i5.TuiPrimitiveTextfieldComponent, i5.TuiPrimitiveTextfieldDirective, i6.TuiTextfieldIconDirective, i6.TuiTextfieldFillerDirective, i7.TuiCalendarRange, i6.TuiValueAccessorDirective, i6.TuiLegacyDropdownOpenMonitorDirective, i8.TuiIcon, i9.TuiAppearance, i1$1.TuiDropdownDirective, i1$1.TuiDropdownOpen, i1.AsyncPipe],\n      styles: [\"[_nghost-%COMP%]{display:block;border-radius:var(--tui-radius-m);text-align:start}._disabled[_nghost-%COMP%], [_nghost-%COMP%]   *:disabled[_nghost-%COMP%], *:disabled   [_nghost-%COMP%]{pointer-events:none}.t-hosted[_ngcontent-%COMP%]{display:block;border-radius:inherit}.t-textfield[_ngcontent-%COMP%]{border-radius:inherit;text-align:inherit}.t-icon[_ngcontent-%COMP%]{pointer-events:auto}.t-icon_small[_ngcontent-%COMP%]{border-width:.25rem}.t-value[_ngcontent-%COMP%]{display:flex;inline-size:100%;align-items:center}\"],\n      changeDetection: 0\n    });\n  }\n}\n__decorate([tuiPure], TuiInputDateRangeComponent.prototype, \"calculateMask\", null);\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiInputDateRangeComponent, [{\n    type: Component,\n    args: [{\n      standalone: false,\n      selector: 'tui-input-date-range',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [tuiAsFocusableItemAccessor(TuiInputDateRangeComponent), tuiAsControl(TuiInputDateRangeComponent), tuiAsControl$1(TuiInputDateRangeComponent), tuiDateStreamWithTransformer(TUI_DATE_RANGE_VALUE_TRANSFORMER), tuiAsDataListHost(TuiInputDateRangeComponent), TUI_MOBILE_CALENDAR_PROVIDER],\n      host: {\n        '[attr.data-size]': 'size',\n        '(click)': 'onClick()'\n      },\n      template: \"<div\\n    tuiDropdownOpenMonitor\\n    class=\\\"t-hosted\\\"\\n    [tuiDropdown]=\\\"dropdown\\\"\\n    [tuiDropdownEnabled]=\\\"interactive\\\"\\n    [tuiDropdownOpen]=\\\"open && interactive\\\"\\n    (tuiActiveZoneChange)=\\\"onActiveZone($event)\\\"\\n    (tuiDropdownOpenChange)=\\\"onOpenChange($event)\\\"\\n>\\n    <tui-primitive-textfield\\n        *tuiLet=\\\"dateFiller$ | async as dateFiller\\\"\\n        automation-id=\\\"tui-input-date-range__textfield\\\"\\n        tuiValueAccessor\\n        class=\\\"t-textfield\\\"\\n        [disabled]=\\\"computedDisabled\\\"\\n        [invalid]=\\\"computedInvalid\\\"\\n        [maskito]=\\\"computedMask\\\"\\n        [nativeId]=\\\"nativeId\\\"\\n        [pseudoActive]=\\\"pseudoActive\\\"\\n        [pseudoFocus]=\\\"innerPseudoFocused\\\"\\n        [pseudoHover]=\\\"pseudoHover\\\"\\n        [readOnly]=\\\"readOnly\\\"\\n        [tuiTextfieldFiller]=\\\"getComputedRangeFiller(dateFiller || '')\\\"\\n        [tuiTextfieldIcon]=\\\"calendarIcon && iconContent\\\"\\n        [value]=\\\"computedValue\\\"\\n        (valueChange)=\\\"onValueChange($event)\\\"\\n    >\\n        <ng-content />\\n        <ng-content\\n            ngProjectAs=\\\"input\\\"\\n            select=\\\"input\\\"\\n        />\\n\\n        <div\\n            *ngIf=\\\"showValueTemplate\\\"\\n            ngProjectAs=\\\"tuiContent\\\"\\n            class=\\\"t-value\\\"\\n        >\\n            <ng-container *polymorpheusOutlet=\\\"computedContent as text; context: {$implicit: value}\\\">\\n                {{ text }}\\n            </ng-container>\\n        </div>\\n    </tui-primitive-textfield>\\n\\n    <ng-template #iconContent>\\n        <tui-icon\\n            *polymorpheusOutlet=\\\"calendarIcon as src; context: {$implicit: size}\\\"\\n            automation-id=\\\"tui-input-date-range__icon\\\"\\n            tuiAppearance=\\\"icon\\\"\\n            [class.t-icon_small]=\\\"size === 's'\\\"\\n            [class.t-icon]=\\\"!computedDisabled\\\"\\n            [icon]=\\\"src.toString()\\\"\\n            (click)=\\\"onIconClick()\\\"\\n        />\\n    </ng-template>\\n\\n    <ng-template #dropdown>\\n        <tui-calendar-range\\n            [defaultViewedMonth]=\\\"defaultViewedMonth\\\"\\n            [disabledItemHandler]=\\\"disabledItemHandler\\\"\\n            [items]=\\\"items\\\"\\n            [markerHandler]=\\\"markerHandler\\\"\\n            [max]=\\\"max\\\"\\n            [maxLength]=\\\"maxLength\\\"\\n            [min]=\\\"min\\\"\\n            [minLength]=\\\"minLength\\\"\\n            [value]=\\\"value\\\"\\n            [(item)]=\\\"selectedActivePeriod\\\"\\n            (valueChange)=\\\"onRangeChange($event)\\\"\\n        />\\n    </ng-template>\\n</div>\\n\",\n      styles: [\":host{display:block;border-radius:var(--tui-radius-m);text-align:start}:host._disabled,:host :host-context(*:disabled){pointer-events:none}.t-hosted{display:block;border-radius:inherit}.t-textfield{border-radius:inherit;text-align:inherit}.t-icon{pointer-events:auto}.t-icon_small{border-width:.25rem}.t-value{display:flex;inline-size:100%;align-items:center}\\n\"]\n    }]\n  }], null, {\n    textfield: [{\n      type: ViewChild,\n      args: [TuiPrimitiveTextfieldComponent]\n    }],\n    disabledItemHandler: [{\n      type: Input\n    }],\n    markerHandler: [{\n      type: Input\n    }],\n    defaultViewedMonth: [{\n      type: Input\n    }],\n    items: [{\n      type: Input\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    minLength: [{\n      type: Input\n    }],\n    maxLength: [{\n      type: Input\n    }],\n    calculateMask: []\n  });\n})();\nclass TuiInputDateRangeDirective extends AbstractTuiTextfieldHost {\n  get value() {\n    return this.host.computedValue;\n  }\n  onValueChange(value) {\n    this.host.onValueChange(value);\n  }\n  process(input) {\n    input.inputMode = 'numeric';\n  }\n  ngDoCheck() {\n    if (this.host.nativeFocusableElement) {\n      this.host.nativeFocusableElement.placeholder = this.host.computedExampleText;\n    }\n  }\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵTuiInputDateRangeDirective_BaseFactory;\n      return function TuiInputDateRangeDirective_Factory(__ngFactoryType__) {\n        return (ɵTuiInputDateRangeDirective_BaseFactory || (ɵTuiInputDateRangeDirective_BaseFactory = i0.ɵɵgetInheritedFactory(TuiInputDateRangeDirective)))(__ngFactoryType__ || TuiInputDateRangeDirective);\n      };\n    })();\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: TuiInputDateRangeDirective,\n      selectors: [[\"tui-input-date-range\"]],\n      features: [i0.ɵɵProvidersFeature([tuiAsTextfieldHost(TuiInputDateRangeDirective)]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiInputDateRangeDirective, [{\n    type: Directive,\n    args: [{\n      standalone: false,\n      selector: 'tui-input-date-range',\n      providers: [tuiAsTextfieldHost(TuiInputDateRangeDirective)]\n    }]\n  }], null, null);\n})();\nclass TuiInputDateRangeModule {\n  static {\n    this.ɵfac = function TuiInputDateRangeModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiInputDateRangeModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: TuiInputDateRangeModule,\n      declarations: [TuiInputDateRangeComponent, TuiInputDateRangeDirective],\n      imports: [CommonModule, MaskitoDirective, TuiLet, PolymorpheusOutlet, PolymorpheusTemplate, TuiPrimitiveTextfieldModule, TuiTextfieldControllerModule, TuiCalendarRange, TuiValueAccessorModule, TuiLegacyDropdownOpenMonitorDirective, TuiIcon, TuiAppearance, i1$1.TuiDropdownOptionsDirective, i1$1.TuiDropdownDriverDirective, i1$1.TuiDropdownDirective, i1$1.TuiDropdownComponent, i1$1.TuiDropdownOpen, i1$1.TuiDropdownOpenLegacy, i1$1.TuiDropdownPortal, i1$1.TuiDropdownManual, i1$1.TuiDropdownHover, i1$1.TuiDropdownContext, i1$1.TuiDropdownPosition, i1$1.TuiDropdownPositionSided, i1$1.TuiDropdownSelection],\n      exports: [TuiInputDateRangeComponent, TuiInputDateRangeDirective, TuiTextfieldComponent, i1$1.TuiDropdownOptionsDirective, i1$1.TuiDropdownDriverDirective, i1$1.TuiDropdownDirective, i1$1.TuiDropdownComponent, i1$1.TuiDropdownOpen, i1$1.TuiDropdownOpenLegacy, i1$1.TuiDropdownPortal, i1$1.TuiDropdownManual, i1$1.TuiDropdownHover, i1$1.TuiDropdownContext, i1$1.TuiDropdownPosition, i1$1.TuiDropdownPositionSided, i1$1.TuiDropdownSelection]\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [CommonModule, TuiPrimitiveTextfieldModule, TuiTextfieldControllerModule, TuiCalendarRange, TuiValueAccessorModule, TuiIcon, i1$1.TuiDropdownComponent]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiInputDateRangeModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, MaskitoDirective, TuiLet, PolymorpheusOutlet, PolymorpheusTemplate, TuiPrimitiveTextfieldModule, TuiTextfieldControllerModule, TuiCalendarRange, TuiValueAccessorModule, TuiLegacyDropdownOpenMonitorDirective, TuiIcon, TuiAppearance, ...TuiDropdown],\n      declarations: [TuiInputDateRangeComponent, TuiInputDateRangeDirective],\n      exports: [TuiInputDateRangeComponent, TuiInputDateRangeDirective, TuiTextfieldComponent, ...TuiDropdown]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiInputDateRangeComponent, TuiInputDateRangeDirective, TuiInputDateRangeModule };","map":{"version":3,"names":["__decorate","i0","inject","Component","ChangeDetectionStrategy","ViewChild","Input","Directive","NgModule","takeUntilDestroyed","MASKITO_DEFAULT_OPTIONS","maskitoDateRangeOptionsGenerator","tuiAsControl","TUI_FALSE_HANDLER","TuiMonth","DATE_RANGE_FILLER_LENGTH","TuiDayRange","DATE_FILLER_LENGTH","RANGE_SEPARATOR_CHAR","TUI_FIRST_DAY","TUI_LAST_DAY","tuiWatch","TUI_IS_MOBILE","changeDateSeparator","tuiNullableSame","tuiIsPresent","tuiPure","tuiAsDataListHost","TUI_DEFAULT_DATE_FORMAT","TUI_DATE_FORMAT","TUI_MOBILE_CALENDAR","TUI_INPUT_DATE_OPTIONS","TUI_DATE_TEXTS","TUI_DATE_RANGE_VALUE_TRANSFORMER","tuiDateStreamWithTransformer","TUI_MOBILE_CALENDAR_PROVIDER","AbstractTuiNullableControl","tuiAsControl$1","AbstractTuiTextfieldHost","i5","TuiPrimitiveTextfieldComponent","TuiPrimitiveTextfieldModule","TuiTextfieldComponent","i6","TUI_TEXTFIELD_SIZE","TuiTextfieldControllerModule","TuiValueAccessorModule","TuiLegacyDropdownOpenMonitorDirective","tuiAsFocusableItemAccessor","tuiAsTextfieldHost","TUI_DATE_MODE_MASKITO_ADAPTER","map","i1","CommonModule","i2","MaskitoDirective","i3","TuiLet","i4","PolymorpheusOutlet","PolymorpheusTemplate","i7","TuiCalendarRange","i8","TuiIcon","i9","TuiAppearance","i1$1","TuiDropdown","_c0","_c1","_c2","a0","$implicit","TuiInputDateRangeComponent_tui_primitive_textfield_1_div_3_ng_container_1_Template","rf","ctx","ɵɵelementContainerStart","ɵɵtext","ɵɵelementContainerEnd","text_r4","polymorpheusOutlet","ɵɵadvance","ɵɵtextInterpolate1","TuiInputDateRangeComponent_tui_primitive_textfield_1_div_3_Template","ɵɵelementStart","ɵɵtemplate","ɵɵelementEnd","ctx_r2","ɵɵnextContext","ɵɵproperty","computedContent","ɵɵpureFunction1","value","TuiInputDateRangeComponent_tui_primitive_textfield_1_Template","_r2","ɵɵgetCurrentView","ɵɵlistener","TuiInputDateRangeComponent_tui_primitive_textfield_1_Template_tui_primitive_textfield_valueChange_0_listener","$event","ɵɵrestoreView","ɵɵresetView","onValueChange","ɵɵprojection","dateFiller_r5","tuiLet","iconContent_r6","ɵɵreference","computedDisabled","computedInvalid","computedMask","nativeId","pseudoActive","innerPseudoFocused","pseudoHover","readOnly","getComputedRangeFiller","calendarIcon","computedValue","showValueTemplate","TuiInputDateRangeComponent_ng_template_3_tui_icon_0_Template","_r7","TuiInputDateRangeComponent_ng_template_3_tui_icon_0_Template_tui_icon_click_0_listener","onIconClick","src_r8","ɵɵclassProp","size","toString","TuiInputDateRangeComponent_ng_template_3_Template","TuiInputDateRangeComponent_ng_template_5_Template","_r9","ɵɵtwoWayListener","TuiInputDateRangeComponent_ng_template_5_Template_tui_calendar_range_itemChange_0_listener","ɵɵtwoWayBindingSet","selectedActivePeriod","TuiInputDateRangeComponent_ng_template_5_Template_tui_calendar_range_valueChange_0_listener","onRangeChange","defaultViewedMonth","disabledItemHandler","items","markerHandler","max","maxLength","min","minLength","ɵɵtwoWayProperty","TuiInputDateRangeComponent","constructor","arguments","isMobile","mobileCalendar","optional","options","textfieldSize","dateTexts$","valueTransformer","dateFiller$","pipe","dateTexts","dateFormat","mode","separator","dateFormat$","cdr","subscribe","format","currentLocal","open","nativeFocusableElement","textfield","focused","computedExampleText","length","placeholder","nativeValue","activePeriod","String","getFormattedDayRange","onClick","interactive","toggle","control","updateValueAndValidity","emitEvent","onOpenChange","normalizeParse","range","focusInput","writeValue","computedMobile","icon","calculateMask","find","item","a","b","from","daySame","dayLimit","to","content","pseudoFocus","computedFocused","dateFiller","getDateRangeFiller","onActiveZone","updateFocused","itemSelected","valueIdenticalComparator","oldValue","newValue","findIndex","dateSeparator","toLocalNativeDate","preventScroll","focus","ɵfac","ɵTuiInputDateRangeComponent_BaseFactory","TuiInputDateRangeComponent_Factory","__ngFactoryType__","ɵɵgetInheritedFactory","ɵcmp","ɵɵdefineComponent","type","selectors","viewQuery","TuiInputDateRangeComponent_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","hostVars","hostBindings","TuiInputDateRangeComponent_HostBindings","TuiInputDateRangeComponent_click_HostBindingHandler","ɵɵattribute","inputs","features","ɵɵProvidersFeature","ɵɵInheritDefinitionFeature","ngContentSelectors","decls","vars","consts","template","TuiInputDateRangeComponent_Template","_r1","ɵɵprojectionDef","TuiInputDateRangeComponent_Template_div_tuiActiveZoneChange_0_listener","TuiInputDateRangeComponent_Template_div_tuiDropdownOpenChange_0_listener","ɵɵpipe","ɵɵtemplateRefExtractor","dropdown_r10","ɵɵpipeBind1","dependencies","NgIf","TuiPrimitiveTextfieldDirective","TuiTextfieldIconDirective","TuiTextfieldFillerDirective","TuiValueAccessorDirective","TuiDropdownDirective","TuiDropdownOpen","AsyncPipe","styles","changeDetection","prototype","ngDevMode","ɵsetClassMetadata","args","standalone","selector","OnPush","providers","host","TuiInputDateRangeDirective","process","input","inputMode","ngDoCheck","ɵTuiInputDateRangeDirective_BaseFactory","TuiInputDateRangeDirective_Factory","ɵdir","ɵɵdefineDirective","TuiInputDateRangeModule","TuiInputDateRangeModule_Factory","ɵmod","ɵɵdefineNgModule","declarations","imports","TuiDropdownOptionsDirective","TuiDropdownDriverDirective","TuiDropdownComponent","TuiDropdownOpenLegacy","TuiDropdownPortal","TuiDropdownManual","TuiDropdownHover","TuiDropdownContext","TuiDropdownPosition","TuiDropdownPositionSided","TuiDropdownSelection","exports","ɵinj","ɵɵdefineInjector"],"sources":["C:/Users/Asus-PC/Downloads/WebLibraryNew/WebLibrary/WebLibraryApp/Frontend/node_modules/@taiga-ui/legacy/fesm2022/taiga-ui-legacy-components-input-date-range.mjs"],"sourcesContent":["import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { inject, Component, ChangeDetectionStrategy, ViewChild, Input, Directive, NgModule } from '@angular/core';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { MASKITO_DEFAULT_OPTIONS } from '@maskito/core';\nimport { maskitoDateRangeOptionsGenerator } from '@maskito/kit';\nimport { tuiAsControl } from '@taiga-ui/cdk/classes';\nimport { TUI_FALSE_HANDLER } from '@taiga-ui/cdk/constants';\nimport { TuiMonth, DATE_RANGE_FILLER_LENGTH, TuiDayRange, DATE_FILLER_LENGTH, RANGE_SEPARATOR_CHAR, TUI_FIRST_DAY, TUI_LAST_DAY } from '@taiga-ui/cdk/date-time';\nimport { tuiWatch } from '@taiga-ui/cdk/observables';\nimport { TUI_IS_MOBILE } from '@taiga-ui/cdk/tokens';\nimport { changeDateSeparator, tuiNullableSame, tuiIsPresent, tuiPure } from '@taiga-ui/cdk/utils/miscellaneous';\nimport { tuiAsDataListHost } from '@taiga-ui/core/components/data-list';\nimport { TUI_DEFAULT_DATE_FORMAT, TUI_DATE_FORMAT } from '@taiga-ui/core/tokens';\nimport { TUI_MOBILE_CALENDAR, TUI_INPUT_DATE_OPTIONS, TUI_DATE_TEXTS, TUI_DATE_RANGE_VALUE_TRANSFORMER, tuiDateStreamWithTransformer, TUI_MOBILE_CALENDAR_PROVIDER } from '@taiga-ui/kit/tokens';\nimport { AbstractTuiNullableControl, tuiAsControl as tuiAsControl$1, AbstractTuiTextfieldHost } from '@taiga-ui/legacy/classes';\nimport * as i5 from '@taiga-ui/legacy/components/primitive-textfield';\nimport { TuiPrimitiveTextfieldComponent, TuiPrimitiveTextfieldModule, TuiTextfieldComponent } from '@taiga-ui/legacy/components/primitive-textfield';\nimport * as i6 from '@taiga-ui/legacy/directives';\nimport { TUI_TEXTFIELD_SIZE, TuiTextfieldControllerModule, TuiValueAccessorModule, TuiLegacyDropdownOpenMonitorDirective } from '@taiga-ui/legacy/directives';\nimport { tuiAsFocusableItemAccessor, tuiAsTextfieldHost } from '@taiga-ui/legacy/tokens';\nimport { TUI_DATE_MODE_MASKITO_ADAPTER } from '@taiga-ui/legacy/utils';\nimport { map } from 'rxjs';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i2 from '@maskito/angular';\nimport { MaskitoDirective } from '@maskito/angular';\nimport * as i3 from '@taiga-ui/cdk/directives/let';\nimport { TuiLet } from '@taiga-ui/cdk/directives/let';\nimport * as i4 from '@taiga-ui/polymorpheus';\nimport { PolymorpheusOutlet, PolymorpheusTemplate } from '@taiga-ui/polymorpheus';\nimport * as i7 from '@taiga-ui/kit/components/calendar-range';\nimport { TuiCalendarRange } from '@taiga-ui/kit/components/calendar-range';\nimport * as i8 from '@taiga-ui/core/components/icon';\nimport { TuiIcon } from '@taiga-ui/core/components/icon';\nimport * as i9 from '@taiga-ui/core/directives/appearance';\nimport { TuiAppearance } from '@taiga-ui/core/directives/appearance';\nimport * as i1$1 from '@taiga-ui/core/directives/dropdown';\nimport { TuiDropdown } from '@taiga-ui/core/directives/dropdown';\n\nclass TuiInputDateRangeComponent extends AbstractTuiNullableControl {\n    constructor() {\n        super(...arguments);\n        this.isMobile = inject(TUI_IS_MOBILE);\n        this.mobileCalendar = inject(TUI_MOBILE_CALENDAR, { optional: true });\n        this.options = inject(TUI_INPUT_DATE_OPTIONS);\n        this.textfieldSize = inject(TUI_TEXTFIELD_SIZE);\n        this.dateTexts$ = inject(TUI_DATE_TEXTS);\n        this.valueTransformer = inject(TUI_DATE_RANGE_VALUE_TRANSFORMER, { optional: true });\n        this.dateFiller$ = this.dateTexts$.pipe(map((dateTexts) => changeDateSeparator(dateTexts[this.dateFormat.mode], this.dateFormat.separator)));\n        this.dateFormat = TUI_DEFAULT_DATE_FORMAT;\n        this.dateFormat$ = inject(TUI_DATE_FORMAT)\n            .pipe(tuiWatch(this.cdr), takeUntilDestroyed())\n            .subscribe((format) => {\n            this.dateFormat = format;\n        });\n        this.selectedActivePeriod = null;\n        this.disabledItemHandler = TUI_FALSE_HANDLER;\n        this.markerHandler = null;\n        this.defaultViewedMonth = TuiMonth.currentLocal();\n        this.items = [];\n        this.min = this.options.min;\n        this.max = this.options.max;\n        this.minLength = null;\n        this.maxLength = null;\n        this.open = false;\n    }\n    get nativeFocusableElement() {\n        return this.textfield?.nativeFocusableElement ?? null;\n    }\n    get focused() {\n        return !!this.textfield?.focused;\n    }\n    get computedExampleText() {\n        return this.items.length\n            ? this.textfield?.nativeFocusableElement?.placeholder || ''\n            : '';\n    }\n    get computedValue() {\n        const { value, nativeValue, activePeriod } = this;\n        if (activePeriod) {\n            return String(activePeriod);\n        }\n        return value\n            ? value.getFormattedDayRange(this.dateFormat.mode, this.dateFormat.separator)\n            : nativeValue;\n    }\n    get size() {\n        return this.textfieldSize.size;\n    }\n    onClick() {\n        if (!this.isMobile && this.interactive) {\n            this.toggle();\n        }\n    }\n    onValueChange(value) {\n        if (this.control) {\n            this.control.updateValueAndValidity({ emitEvent: false });\n        }\n        if (!value && !this.mobileCalendar) {\n            this.onOpenChange(true);\n        }\n        this.value =\n            value.length === DATE_RANGE_FILLER_LENGTH\n                ? TuiDayRange.normalizeParse(value, this.dateFormat.mode)\n                : null;\n        if (!this.value) {\n            this.selectedActivePeriod = null;\n        }\n    }\n    onRangeChange(range) {\n        this.toggle();\n        this.focusInput();\n        if (!range) {\n            this.nativeValue = '';\n        }\n        this.value = range;\n    }\n    writeValue(value) {\n        super.writeValue(value);\n        this.nativeValue = value ? this.computedValue : '';\n    }\n    get computedMobile() {\n        return this.isMobile && !!this.mobileCalendar;\n    }\n    get calendarIcon() {\n        return this.options.icon;\n    }\n    get computedMask() {\n        return this.activePeriod\n            ? MASKITO_DEFAULT_OPTIONS\n            : this.calculateMask(this.dateFormat.mode, this.dateFormat.separator, this.min, this.max, this.minLength, this.maxLength);\n    }\n    get activePeriod() {\n        return (this.selectedActivePeriod ??\n            (this.items.find((item) => tuiNullableSame(this.value, item.range, (a, b) => a.from.daySame(b.from.dayLimit(this.min, this.max)) &&\n                a.to.daySame(b.to.dayLimit(this.min, this.max)))) ||\n                null));\n    }\n    get showValueTemplate() {\n        return tuiIsPresent(this.value) && !this.focused;\n    }\n    get computedContent() {\n        return this.activePeriod?.content || this.computedValue;\n    }\n    get innerPseudoFocused() {\n        if (this.pseudoFocus === false) {\n            return false;\n        }\n        if (this.open || this.computedFocused) {\n            return true;\n        }\n        return null;\n    }\n    get nativeValue() {\n        return this.nativeFocusableElement?.value || '';\n    }\n    set nativeValue(value) {\n        if (this.nativeFocusableElement) {\n            this.nativeFocusableElement.value = value;\n        }\n    }\n    getComputedRangeFiller(dateFiller) {\n        return this.activePeriod ? '' : this.getDateRangeFiller(dateFiller);\n    }\n    onIconClick() {\n        if (this.isMobile && this.interactive) {\n            this.onOpenChange(true);\n        }\n    }\n    onOpenChange(open) {\n        this.open = open;\n    }\n    onActiveZone(focused) {\n        this.updateFocused(focused);\n        if (!focused &&\n            !this.itemSelected &&\n            (this.nativeValue.length === DATE_FILLER_LENGTH ||\n                this.nativeValue.length ===\n                    DATE_FILLER_LENGTH + RANGE_SEPARATOR_CHAR.length)) {\n            this.value = TuiDayRange.normalizeParse(this.nativeValue, this.dateFormat.mode);\n        }\n    }\n    valueIdenticalComparator(oldValue, newValue) {\n        return tuiNullableSame(oldValue, newValue, (a, b) => a.daySame(b));\n    }\n    get itemSelected() {\n        return this.items.findIndex((item) => String(item) === this.nativeValue) !== -1;\n    }\n    calculateMask(dateFormat, dateSeparator, min, max, minLength, maxLength) {\n        return maskitoDateRangeOptionsGenerator({\n            dateSeparator,\n            mode: TUI_DATE_MODE_MASKITO_ADAPTER[dateFormat],\n            min: (min || TUI_FIRST_DAY).toLocalNativeDate(),\n            max: (max || TUI_LAST_DAY).toLocalNativeDate(),\n            minLength: minLength || {},\n            maxLength: maxLength || {},\n        });\n    }\n    toggle() {\n        this.open = !this.open;\n    }\n    focusInput(preventScroll = false) {\n        if (this.nativeFocusableElement) {\n            this.nativeFocusableElement.focus({ preventScroll });\n        }\n    }\n    getDateRangeFiller(dateFiller) {\n        return `${dateFiller}${RANGE_SEPARATOR_CHAR}${dateFiller}`;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiInputDateRangeComponent, deps: null, target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiInputDateRangeComponent, selector: \"tui-input-date-range\", inputs: { disabledItemHandler: \"disabledItemHandler\", markerHandler: \"markerHandler\", defaultViewedMonth: \"defaultViewedMonth\", items: \"items\", min: \"min\", max: \"max\", minLength: \"minLength\", maxLength: \"maxLength\" }, host: { listeners: { \"click\": \"onClick()\" }, properties: { \"attr.data-size\": \"size\" } }, providers: [\n            tuiAsFocusableItemAccessor(TuiInputDateRangeComponent),\n            tuiAsControl(TuiInputDateRangeComponent),\n            tuiAsControl$1(TuiInputDateRangeComponent),\n            tuiDateStreamWithTransformer(TUI_DATE_RANGE_VALUE_TRANSFORMER),\n            tuiAsDataListHost(TuiInputDateRangeComponent),\n            TUI_MOBILE_CALENDAR_PROVIDER,\n        ], viewQueries: [{ propertyName: \"textfield\", first: true, predicate: TuiPrimitiveTextfieldComponent, descendants: true }], usesInheritance: true, ngImport: i0, template: \"<div\\n    tuiDropdownOpenMonitor\\n    class=\\\"t-hosted\\\"\\n    [tuiDropdown]=\\\"dropdown\\\"\\n    [tuiDropdownEnabled]=\\\"interactive\\\"\\n    [tuiDropdownOpen]=\\\"open && interactive\\\"\\n    (tuiActiveZoneChange)=\\\"onActiveZone($event)\\\"\\n    (tuiDropdownOpenChange)=\\\"onOpenChange($event)\\\"\\n>\\n    <tui-primitive-textfield\\n        *tuiLet=\\\"dateFiller$ | async as dateFiller\\\"\\n        automation-id=\\\"tui-input-date-range__textfield\\\"\\n        tuiValueAccessor\\n        class=\\\"t-textfield\\\"\\n        [disabled]=\\\"computedDisabled\\\"\\n        [invalid]=\\\"computedInvalid\\\"\\n        [maskito]=\\\"computedMask\\\"\\n        [nativeId]=\\\"nativeId\\\"\\n        [pseudoActive]=\\\"pseudoActive\\\"\\n        [pseudoFocus]=\\\"innerPseudoFocused\\\"\\n        [pseudoHover]=\\\"pseudoHover\\\"\\n        [readOnly]=\\\"readOnly\\\"\\n        [tuiTextfieldFiller]=\\\"getComputedRangeFiller(dateFiller || '')\\\"\\n        [tuiTextfieldIcon]=\\\"calendarIcon && iconContent\\\"\\n        [value]=\\\"computedValue\\\"\\n        (valueChange)=\\\"onValueChange($event)\\\"\\n    >\\n        <ng-content />\\n        <ng-content\\n            ngProjectAs=\\\"input\\\"\\n            select=\\\"input\\\"\\n        />\\n\\n        <div\\n            *ngIf=\\\"showValueTemplate\\\"\\n            ngProjectAs=\\\"tuiContent\\\"\\n            class=\\\"t-value\\\"\\n        >\\n            <ng-container *polymorpheusOutlet=\\\"computedContent as text; context: {$implicit: value}\\\">\\n                {{ text }}\\n            </ng-container>\\n        </div>\\n    </tui-primitive-textfield>\\n\\n    <ng-template #iconContent>\\n        <tui-icon\\n            *polymorpheusOutlet=\\\"calendarIcon as src; context: {$implicit: size}\\\"\\n            automation-id=\\\"tui-input-date-range__icon\\\"\\n            tuiAppearance=\\\"icon\\\"\\n            [class.t-icon_small]=\\\"size === 's'\\\"\\n            [class.t-icon]=\\\"!computedDisabled\\\"\\n            [icon]=\\\"src.toString()\\\"\\n            (click)=\\\"onIconClick()\\\"\\n        />\\n    </ng-template>\\n\\n    <ng-template #dropdown>\\n        <tui-calendar-range\\n            [defaultViewedMonth]=\\\"defaultViewedMonth\\\"\\n            [disabledItemHandler]=\\\"disabledItemHandler\\\"\\n            [items]=\\\"items\\\"\\n            [markerHandler]=\\\"markerHandler\\\"\\n            [max]=\\\"max\\\"\\n            [maxLength]=\\\"maxLength\\\"\\n            [min]=\\\"min\\\"\\n            [minLength]=\\\"minLength\\\"\\n            [value]=\\\"value\\\"\\n            [(item)]=\\\"selectedActivePeriod\\\"\\n            (valueChange)=\\\"onRangeChange($event)\\\"\\n        />\\n    </ng-template>\\n</div>\\n\", styles: [\":host{display:block;border-radius:var(--tui-radius-m);text-align:start}:host._disabled,:host :host-context(*:disabled){pointer-events:none}.t-hosted{display:block;border-radius:inherit}.t-textfield{border-radius:inherit;text-align:inherit}.t-icon{pointer-events:auto}.t-icon_small{border-width:.25rem}.t-value{display:flex;inline-size:100%;align-items:center}\\n\"], dependencies: [{ kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.MaskitoDirective, selector: \"[maskito]\", inputs: [\"maskito\", \"maskitoElement\"] }, { kind: \"directive\", type: i3.TuiLet, selector: \"[tuiLet]\", inputs: [\"tuiLet\"] }, { kind: \"directive\", type: i4.PolymorpheusOutlet, selector: \"[polymorpheusOutlet]\", inputs: [\"polymorpheusOutlet\", \"polymorpheusOutletContext\"] }, { kind: \"component\", type: i5.TuiPrimitiveTextfieldComponent, selector: \"tui-primitive-textfield\", inputs: [\"editable\", \"iconCleaner\", \"readOnly\", \"invalid\", \"disabled\", \"value\"], outputs: [\"valueChange\"] }, { kind: \"directive\", type: i5.TuiPrimitiveTextfieldDirective, selector: \"tui-primitive-textfield\" }, { kind: \"directive\", type: i6.TuiTextfieldIconDirective, selector: \"[tuiTextfieldIcon]\", inputs: [\"tuiTextfieldIcon\"] }, { kind: \"directive\", type: i6.TuiTextfieldFillerDirective, selector: \"[tuiTextfieldFiller]\", inputs: [\"tuiTextfieldFiller\"] }, { kind: \"component\", type: i7.TuiCalendarRange, selector: \"tui-calendar-range\", inputs: [\"defaultViewedMonth\", \"disabledItemHandler\", \"markerHandler\", \"items\", \"min\", \"max\", \"minLength\", \"maxLength\", \"value\", \"item\"], outputs: [\"valueChange\", \"itemChange\"] }, { kind: \"directive\", type: i6.TuiValueAccessorDirective, selector: \"[tuiValueAccessor]\" }, { kind: \"directive\", type: i6.TuiLegacyDropdownOpenMonitorDirective, selector: \"[tuiDropdownOpenMonitor]\" }, { kind: \"component\", type: i8.TuiIcon, selector: \"tui-icon\", inputs: [\"icon\", \"background\"] }, { kind: \"directive\", type: i9.TuiAppearance, selector: \"[tuiAppearance]\", inputs: [\"tuiAppearance\", \"tuiAppearanceState\", \"tuiAppearanceFocus\", \"tuiAppearanceMode\"] }, { kind: \"directive\", type: i1$1.TuiDropdownDirective, selector: \"[tuiDropdown]:not(ng-container):not(ng-template)\", inputs: [\"tuiDropdown\"], exportAs: [\"tuiDropdown\"] }, { kind: \"directive\", type: i1$1.TuiDropdownOpen, selector: \"[tuiDropdown][tuiDropdownOpen],[tuiDropdown][tuiDropdownOpenChange]\", inputs: [\"tuiDropdownEnabled\", \"tuiDropdownOpen\"], outputs: [\"tuiDropdownOpenChange\"] }, { kind: \"pipe\", type: i1.AsyncPipe, name: \"async\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\n__decorate([\n    tuiPure\n], TuiInputDateRangeComponent.prototype, \"calculateMask\", null);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiInputDateRangeComponent, decorators: [{\n            type: Component,\n            args: [{ standalone: false, selector: 'tui-input-date-range', changeDetection: ChangeDetectionStrategy.OnPush, providers: [\n                        tuiAsFocusableItemAccessor(TuiInputDateRangeComponent),\n                        tuiAsControl(TuiInputDateRangeComponent),\n                        tuiAsControl$1(TuiInputDateRangeComponent),\n                        tuiDateStreamWithTransformer(TUI_DATE_RANGE_VALUE_TRANSFORMER),\n                        tuiAsDataListHost(TuiInputDateRangeComponent),\n                        TUI_MOBILE_CALENDAR_PROVIDER,\n                    ], host: {\n                        '[attr.data-size]': 'size',\n                        '(click)': 'onClick()',\n                    }, template: \"<div\\n    tuiDropdownOpenMonitor\\n    class=\\\"t-hosted\\\"\\n    [tuiDropdown]=\\\"dropdown\\\"\\n    [tuiDropdownEnabled]=\\\"interactive\\\"\\n    [tuiDropdownOpen]=\\\"open && interactive\\\"\\n    (tuiActiveZoneChange)=\\\"onActiveZone($event)\\\"\\n    (tuiDropdownOpenChange)=\\\"onOpenChange($event)\\\"\\n>\\n    <tui-primitive-textfield\\n        *tuiLet=\\\"dateFiller$ | async as dateFiller\\\"\\n        automation-id=\\\"tui-input-date-range__textfield\\\"\\n        tuiValueAccessor\\n        class=\\\"t-textfield\\\"\\n        [disabled]=\\\"computedDisabled\\\"\\n        [invalid]=\\\"computedInvalid\\\"\\n        [maskito]=\\\"computedMask\\\"\\n        [nativeId]=\\\"nativeId\\\"\\n        [pseudoActive]=\\\"pseudoActive\\\"\\n        [pseudoFocus]=\\\"innerPseudoFocused\\\"\\n        [pseudoHover]=\\\"pseudoHover\\\"\\n        [readOnly]=\\\"readOnly\\\"\\n        [tuiTextfieldFiller]=\\\"getComputedRangeFiller(dateFiller || '')\\\"\\n        [tuiTextfieldIcon]=\\\"calendarIcon && iconContent\\\"\\n        [value]=\\\"computedValue\\\"\\n        (valueChange)=\\\"onValueChange($event)\\\"\\n    >\\n        <ng-content />\\n        <ng-content\\n            ngProjectAs=\\\"input\\\"\\n            select=\\\"input\\\"\\n        />\\n\\n        <div\\n            *ngIf=\\\"showValueTemplate\\\"\\n            ngProjectAs=\\\"tuiContent\\\"\\n            class=\\\"t-value\\\"\\n        >\\n            <ng-container *polymorpheusOutlet=\\\"computedContent as text; context: {$implicit: value}\\\">\\n                {{ text }}\\n            </ng-container>\\n        </div>\\n    </tui-primitive-textfield>\\n\\n    <ng-template #iconContent>\\n        <tui-icon\\n            *polymorpheusOutlet=\\\"calendarIcon as src; context: {$implicit: size}\\\"\\n            automation-id=\\\"tui-input-date-range__icon\\\"\\n            tuiAppearance=\\\"icon\\\"\\n            [class.t-icon_small]=\\\"size === 's'\\\"\\n            [class.t-icon]=\\\"!computedDisabled\\\"\\n            [icon]=\\\"src.toString()\\\"\\n            (click)=\\\"onIconClick()\\\"\\n        />\\n    </ng-template>\\n\\n    <ng-template #dropdown>\\n        <tui-calendar-range\\n            [defaultViewedMonth]=\\\"defaultViewedMonth\\\"\\n            [disabledItemHandler]=\\\"disabledItemHandler\\\"\\n            [items]=\\\"items\\\"\\n            [markerHandler]=\\\"markerHandler\\\"\\n            [max]=\\\"max\\\"\\n            [maxLength]=\\\"maxLength\\\"\\n            [min]=\\\"min\\\"\\n            [minLength]=\\\"minLength\\\"\\n            [value]=\\\"value\\\"\\n            [(item)]=\\\"selectedActivePeriod\\\"\\n            (valueChange)=\\\"onRangeChange($event)\\\"\\n        />\\n    </ng-template>\\n</div>\\n\", styles: [\":host{display:block;border-radius:var(--tui-radius-m);text-align:start}:host._disabled,:host :host-context(*:disabled){pointer-events:none}.t-hosted{display:block;border-radius:inherit}.t-textfield{border-radius:inherit;text-align:inherit}.t-icon{pointer-events:auto}.t-icon_small{border-width:.25rem}.t-value{display:flex;inline-size:100%;align-items:center}\\n\"] }]\n        }], propDecorators: { textfield: [{\n                type: ViewChild,\n                args: [TuiPrimitiveTextfieldComponent]\n            }], disabledItemHandler: [{\n                type: Input\n            }], markerHandler: [{\n                type: Input\n            }], defaultViewedMonth: [{\n                type: Input\n            }], items: [{\n                type: Input\n            }], min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], minLength: [{\n                type: Input\n            }], maxLength: [{\n                type: Input\n            }], calculateMask: [] } });\n\nclass TuiInputDateRangeDirective extends AbstractTuiTextfieldHost {\n    get value() {\n        return this.host.computedValue;\n    }\n    onValueChange(value) {\n        this.host.onValueChange(value);\n    }\n    process(input) {\n        input.inputMode = 'numeric';\n    }\n    ngDoCheck() {\n        if (this.host.nativeFocusableElement) {\n            this.host.nativeFocusableElement.placeholder = this.host.computedExampleText;\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiInputDateRangeDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiInputDateRangeDirective, selector: \"tui-input-date-range\", providers: [tuiAsTextfieldHost(TuiInputDateRangeDirective)], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiInputDateRangeDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    standalone: false,\n                    selector: 'tui-input-date-range',\n                    providers: [tuiAsTextfieldHost(TuiInputDateRangeDirective)],\n                }]\n        }] });\n\nclass TuiInputDateRangeModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiInputDateRangeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiInputDateRangeModule, declarations: [TuiInputDateRangeComponent, TuiInputDateRangeDirective], imports: [CommonModule,\n            MaskitoDirective,\n            TuiLet,\n            PolymorpheusOutlet,\n            PolymorpheusTemplate,\n            TuiPrimitiveTextfieldModule,\n            TuiTextfieldControllerModule,\n            TuiCalendarRange,\n            TuiValueAccessorModule,\n            TuiLegacyDropdownOpenMonitorDirective,\n            TuiIcon,\n            TuiAppearance, i1$1.TuiDropdownOptionsDirective, i1$1.TuiDropdownDriverDirective, i1$1.TuiDropdownDirective, i1$1.TuiDropdownComponent, i1$1.TuiDropdownOpen, i1$1.TuiDropdownOpenLegacy, i1$1.TuiDropdownPortal, i1$1.TuiDropdownManual, i1$1.TuiDropdownHover, i1$1.TuiDropdownContext, i1$1.TuiDropdownPosition, i1$1.TuiDropdownPositionSided, i1$1.TuiDropdownSelection], exports: [TuiInputDateRangeComponent,\n            TuiInputDateRangeDirective,\n            TuiTextfieldComponent, i1$1.TuiDropdownOptionsDirective, i1$1.TuiDropdownDriverDirective, i1$1.TuiDropdownDirective, i1$1.TuiDropdownComponent, i1$1.TuiDropdownOpen, i1$1.TuiDropdownOpenLegacy, i1$1.TuiDropdownPortal, i1$1.TuiDropdownManual, i1$1.TuiDropdownHover, i1$1.TuiDropdownContext, i1$1.TuiDropdownPosition, i1$1.TuiDropdownPositionSided, i1$1.TuiDropdownSelection] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiInputDateRangeModule, imports: [CommonModule,\n            TuiPrimitiveTextfieldModule,\n            TuiTextfieldControllerModule,\n            TuiCalendarRange,\n            TuiValueAccessorModule,\n            TuiIcon, i1$1.TuiDropdownComponent] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiInputDateRangeModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        MaskitoDirective,\n                        TuiLet,\n                        PolymorpheusOutlet,\n                        PolymorpheusTemplate,\n                        TuiPrimitiveTextfieldModule,\n                        TuiTextfieldControllerModule,\n                        TuiCalendarRange,\n                        TuiValueAccessorModule,\n                        TuiLegacyDropdownOpenMonitorDirective,\n                        TuiIcon,\n                        TuiAppearance,\n                        ...TuiDropdown,\n                    ],\n                    declarations: [TuiInputDateRangeComponent, TuiInputDateRangeDirective],\n                    exports: [\n                        TuiInputDateRangeComponent,\n                        TuiInputDateRangeDirective,\n                        TuiTextfieldComponent,\n                        ...TuiDropdown,\n                    ],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiInputDateRangeComponent, TuiInputDateRangeDirective, TuiInputDateRangeModule };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}