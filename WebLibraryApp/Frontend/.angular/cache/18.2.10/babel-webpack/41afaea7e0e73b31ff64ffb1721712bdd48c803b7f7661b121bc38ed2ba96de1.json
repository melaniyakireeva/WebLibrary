{"ast":null,"code":"import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { inject, Directive, Input, EventEmitter, Component, ChangeDetectionStrategy, Output } from '@angular/core';\nimport { TuiHovered } from '@taiga-ui/cdk/directives/hovered';\nimport { TuiRepeatTimes } from '@taiga-ui/cdk/directives/repeat-times';\nimport { tuiInjectId } from '@taiga-ui/cdk/services';\nimport { tuiClamp, tuiSum } from '@taiga-ui/cdk/utils/math';\nimport { tuiEaseInOutQuad, tuiPure } from '@taiga-ui/cdk/utils/miscellaneous';\nimport * as i1 from '@taiga-ui/core/directives/hint';\nimport { TuiHintOptionsDirective, tuiHintOptionsProvider, TuiHint } from '@taiga-ui/core/directives/hint';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { WA_PERFORMANCE, WA_ANIMATION_FRAME } from '@ng-web-apis/common';\nimport { tuiDescribeSector } from '@taiga-ui/addon-charts/utils';\nimport { tuiZonefree } from '@taiga-ui/cdk/observables';\nimport { tuiInjectElement } from '@taiga-ui/cdk/utils/dom';\nimport { TUI_ANIMATIONS_SPEED } from '@taiga-ui/core/tokens';\nimport { tuiGetDuration } from '@taiga-ui/core/utils/miscellaneous';\nimport { BehaviorSubject, pairwise, switchMap, map, takeWhile } from 'rxjs';\nconst _c0 = a0 => ({\n  $implicit: a0\n});\nconst _c1 = () => [0, 0];\nfunction TuiPieChart__svg_path_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"path\", 5);\n    i0.ɵɵlistener(\"tuiHoveredChange\", function TuiPieChart__svg_path_7_Template_path_tuiHoveredChange_0_listener($event) {\n      const index_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onHovered($event, index_r2));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const index_r2 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"color\", \"var(--tui-chart-categorical-0\" + index_r2 + \")\");\n    i0.ɵɵproperty(\"tuiHint\", ctx_r2.hintContent)(\"tuiHintContext\", i0.ɵɵpureFunction1(6, _c0, index_r2))(\"tuiPieChart\", ctx_r2.segments[index_r2] || i0.ɵɵpureFunction0(8, _c1));\n    i0.ɵɵattribute(\"transform\", ctx_r2.getTransform(index_r2));\n  }\n}\nclass TuiPieChartDirective {\n  constructor() {\n    this.sector$ = new BehaviorSubject([0, 0]);\n    this.el = tuiInjectElement();\n    this.performance = inject(WA_PERFORMANCE);\n    this.animationFrame$ = inject(WA_ANIMATION_FRAME);\n    this.speed = inject(TUI_ANIMATIONS_SPEED);\n    this.$ = this.sector$.pipe(pairwise(), switchMap(([prev, cur]) => {\n      const now = this.performance.now();\n      const startDelta = cur[0] - prev[0];\n      const endDelta = cur[1] - prev[1];\n      return this.animationFrame$.pipe(map(timestamp => tuiEaseInOutQuad(tuiClamp((timestamp - now) / tuiGetDuration(this.speed), 0, 1))), takeWhile(progress => progress < 1, true), map(progress => [prev[0] + startDelta * progress, cur[1] > 359 ? cur[1] : prev[1] + endDelta * progress]));\n    }), tuiZonefree(), takeUntilDestroyed()).subscribe(([start, end]) => this.el.setAttribute('d', tuiDescribeSector(start, end)));\n  }\n  set tuiPieChart(sector) {\n    this.sector$.next(sector);\n  }\n  static {\n    this.ɵfac = function TuiPieChartDirective_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiPieChartDirective)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: TuiPieChartDirective,\n      selectors: [[\"path\", \"tuiPieChart\", \"\"]],\n      inputs: {\n        tuiPieChart: \"tuiPieChart\"\n      },\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiPieChartDirective, [{\n    type: Directive,\n    args: [{\n      standalone: true,\n      selector: 'path[tuiPieChart]'\n    }]\n  }], null, {\n    tuiPieChart: [{\n      type: Input\n    }]\n  });\n})();\nconst RADII = {\n  xs: '50',\n  s: '50',\n  m: '77.8',\n  l: '81.9',\n  xl: '81.3'\n};\nconst TRANSFORM = {\n  xs: 1.15,\n  s: 1.25,\n  m: 1.11,\n  l: 1.09,\n  xl: 1.08\n};\nclass TuiPieChart {\n  constructor() {\n    this.hintOptions = inject(TuiHintOptionsDirective, {\n      optional: true\n    });\n    this.autoId = tuiInjectId();\n    this.value = [];\n    this.size = 'm';\n    this.masked = false;\n    this.activeItemIndex = NaN;\n    this.activeItemIndexChange = new EventEmitter();\n    if (this.hintOptions) {\n      this.hintOptions.showDelay = 0;\n      this.hintOptions.hideDelay = 0;\n    }\n  }\n  get empty() {\n    return !this.getSum(this.value);\n  }\n  get hintContent() {\n    return this.hintOptions?.content || '';\n  }\n  get maskId() {\n    return `tui-ring-chart-${this.autoId}`;\n  }\n  get mask() {\n    return this.masked ? `url(#${this.maskId})` : null;\n  }\n  get radius() {\n    return RADII[this.size];\n  }\n  get segments() {\n    return this.getSegments(this.value);\n  }\n  getTransform(index) {\n    const transform = this.masked ? `scale(${TRANSFORM[this.size]})` : `scale(${TRANSFORM.xs})`;\n    return index === this.activeItemIndex ? transform : null;\n  }\n  onHovered(hovered, index) {\n    this.updateActiveItemIndex(hovered ? index : NaN);\n  }\n  getSum(value) {\n    return tuiSum(...value);\n  }\n  getSegments(value) {\n    return value.map((initial, i, array) => array.reduce((sum, current, j) => j < i ? this.getDeg(current) + sum : sum, this.getDeg(initial))).map((angle, index, array) => [array[index - 1] || 0, Math.min(angle, 359.9999)]);\n  }\n  getDeg(value) {\n    return 360 * (value / this.getSum(this.value)) || 0;\n  }\n  updateActiveItemIndex(index) {\n    if (index === this.activeItemIndex) {\n      return;\n    }\n    this.activeItemIndex = index;\n    this.activeItemIndexChange.next(index);\n  }\n  static {\n    this.ɵfac = function TuiPieChart_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiPieChart)();\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: TuiPieChart,\n      selectors: [[\"tui-pie-chart\"]],\n      hostVars: 3,\n      hostBindings: function TuiPieChart_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"data-size\", ctx.size);\n          i0.ɵɵclassProp(\"_empty\", ctx.empty);\n        }\n      },\n      inputs: {\n        value: \"value\",\n        size: \"size\",\n        masked: \"masked\",\n        activeItemIndex: \"activeItemIndex\"\n      },\n      outputs: {\n        activeItemIndexChange: \"activeItemIndexChange\"\n      },\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([], [tuiHintOptionsProvider({\n        direction: 'top-right',\n        appearance: 'dark'\n      })]), i0.ɵɵStandaloneFeature],\n      decls: 8,\n      vars: 5,\n      consts: [[\"focusable\", \"false\", \"height\", \"100%\", \"viewBox\", \"-100 -100 200 200\", \"width\", \"100%\", \"xmlns\", \"http://www.w3.org/2000/svg\", 1, \"t-svg\"], [\"fill\", \"white\", \"height\", \"400\", \"width\", \"400\", \"x\", \"-200\", \"y\", \"-200\"], [\"cx\", \"0\", \"cy\", \"0\"], [\"cx\", \"0\", \"cy\", \"0\", \"r\", \"100\", 1, \"t-placeholder\"], [\"automation-id\", \"tui-pie-chart__segment\", \"d\", \"\", \"fill\", \"currentColor\", \"tuiHintPointer\", \"\", \"class\", \"t-segment\", 3, \"color\", \"tuiHint\", \"tuiHintContext\", \"tuiPieChart\", \"tuiHoveredChange\", 4, \"tuiRepeatTimes\", \"tuiRepeatTimesOf\"], [\"automation-id\", \"tui-pie-chart__segment\", \"d\", \"\", \"fill\", \"currentColor\", \"tuiHintPointer\", \"\", 1, \"t-segment\", 3, \"tuiHoveredChange\", \"tuiHint\", \"tuiHintContext\", \"tuiPieChart\"]],\n      template: function TuiPieChart_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵnamespaceSVG();\n          i0.ɵɵelementStart(0, \"svg\", 0)(1, \"defs\")(2, \"mask\");\n          i0.ɵɵelement(3, \"rect\", 1)(4, \"circle\", 2);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(5, \"g\");\n          i0.ɵɵelement(6, \"circle\", 3);\n          i0.ɵɵtemplate(7, TuiPieChart__svg_path_7_Template, 1, 9, \"path\", 4);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵattribute(\"id\", ctx.maskId);\n          i0.ɵɵadvance(2);\n          i0.ɵɵattribute(\"r\", ctx.radius);\n          i0.ɵɵadvance();\n          i0.ɵɵstyleProp(\"mask\", ctx.mask);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"tuiRepeatTimesOf\", ctx.segments.length);\n        }\n      },\n      dependencies: [i1.TuiHintDirective, i1.TuiHintPointer, TuiHovered, TuiPieChartDirective, TuiRepeatTimes],\n      styles: [\"[_nghost-%COMP%]{position:relative;display:block;inline-size:var(--t-size);block-size:var(--t-size);border-radius:100%}[data-size=xs][_nghost-%COMP%]{--t-size: 2rem;pointer-events:none}[data-size=s][_nghost-%COMP%]{--t-size: 4rem}[data-size=m][_nghost-%COMP%]{--t-size: 9rem}[data-size=l][_nghost-%COMP%]{--t-size: 11rem}[data-size=xl][_nghost-%COMP%]{--t-size: 16rem}.t-svg[_ngcontent-%COMP%]{position:relative;overflow:visible;transform:rotate(-90deg)}.t-segment[_ngcontent-%COMP%]{transition-property:transform;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out}._empty[_nghost-%COMP%]   .t-segment[_ngcontent-%COMP%]{display:none}.t-placeholder[_ngcontent-%COMP%]{fill:var(--tui-background-neutral-1)}\"],\n      changeDetection: 0\n    });\n  }\n}\n__decorate([tuiPure], TuiPieChart.prototype, \"getSum\", null);\n__decorate([tuiPure], TuiPieChart.prototype, \"getSegments\", null);\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiPieChart, [{\n    type: Component,\n    args: [{\n      standalone: true,\n      selector: 'tui-pie-chart',\n      imports: [TuiHint, TuiHovered, TuiPieChartDirective, TuiRepeatTimes],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      viewProviders: [tuiHintOptionsProvider({\n        direction: 'top-right',\n        appearance: 'dark'\n      })],\n      host: {\n        '[attr.data-size]': 'size',\n        '[class._empty]': 'empty'\n      },\n      template: \"<svg\\n    focusable=\\\"false\\\"\\n    height=\\\"100%\\\"\\n    viewBox=\\\"-100 -100 200 200\\\"\\n    width=\\\"100%\\\"\\n    xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n    class=\\\"t-svg\\\"\\n>\\n    <defs>\\n        <mask [attr.id]=\\\"maskId\\\">\\n            <rect\\n                fill=\\\"white\\\"\\n                height=\\\"400\\\"\\n                width=\\\"400\\\"\\n                x=\\\"-200\\\"\\n                y=\\\"-200\\\"\\n            />\\n            <circle\\n                cx=\\\"0\\\"\\n                cy=\\\"0\\\"\\n                [attr.r]=\\\"radius\\\"\\n            />\\n        </mask>\\n    </defs>\\n    <g [style.mask]=\\\"mask\\\">\\n        <circle\\n            cx=\\\"0\\\"\\n            cy=\\\"0\\\"\\n            r=\\\"100\\\"\\n            class=\\\"t-placeholder\\\"\\n        />\\n        <path\\n            *tuiRepeatTimes=\\\"let index of segments.length\\\"\\n            automation-id=\\\"tui-pie-chart__segment\\\"\\n            d=\\\"\\\"\\n            fill=\\\"currentColor\\\"\\n            tuiHintPointer\\n            class=\\\"t-segment\\\"\\n            [attr.transform]=\\\"getTransform(index)\\\"\\n            [style.color]=\\\"'var(--tui-chart-categorical-0' + index + ')'\\\"\\n            [tuiHint]=\\\"hintContent\\\"\\n            [tuiHintContext]=\\\"{$implicit: index}\\\"\\n            [tuiPieChart]=\\\"segments[index] || [0, 0]\\\"\\n            (tuiHoveredChange)=\\\"onHovered($event, index)\\\"\\n        />\\n    </g>\\n</svg>\\n\",\n      styles: [\":host{position:relative;display:block;inline-size:var(--t-size);block-size:var(--t-size);border-radius:100%}:host[data-size=xs]{--t-size: 2rem;pointer-events:none}:host[data-size=s]{--t-size: 4rem}:host[data-size=m]{--t-size: 9rem}:host[data-size=l]{--t-size: 11rem}:host[data-size=xl]{--t-size: 16rem}.t-svg{position:relative;overflow:visible;transform:rotate(-90deg)}.t-segment{transition-property:transform;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out}:host._empty .t-segment{display:none}.t-placeholder{fill:var(--tui-background-neutral-1)}\\n\"]\n    }]\n  }], function () {\n    return [];\n  }, {\n    value: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }],\n    masked: [{\n      type: Input\n    }],\n    activeItemIndex: [{\n      type: Input\n    }],\n    activeItemIndexChange: [{\n      type: Output\n    }],\n    getSum: [],\n    getSegments: []\n  });\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiPieChart, TuiPieChartDirective };","map":{"version":3,"names":["__decorate","i0","inject","Directive","Input","EventEmitter","Component","ChangeDetectionStrategy","Output","TuiHovered","TuiRepeatTimes","tuiInjectId","tuiClamp","tuiSum","tuiEaseInOutQuad","tuiPure","i1","TuiHintOptionsDirective","tuiHintOptionsProvider","TuiHint","takeUntilDestroyed","WA_PERFORMANCE","WA_ANIMATION_FRAME","tuiDescribeSector","tuiZonefree","tuiInjectElement","TUI_ANIMATIONS_SPEED","tuiGetDuration","BehaviorSubject","pairwise","switchMap","map","takeWhile","_c0","a0","$implicit","_c1","TuiPieChart__svg_path_7_Template","rf","ctx","_r1","ɵɵgetCurrentView","ɵɵnamespaceSVG","ɵɵelementStart","ɵɵlistener","TuiPieChart__svg_path_7_Template_path_tuiHoveredChange_0_listener","$event","index_r2","ɵɵrestoreView","ctx_r2","ɵɵnextContext","ɵɵresetView","onHovered","ɵɵelementEnd","ɵɵstyleProp","ɵɵproperty","hintContent","ɵɵpureFunction1","segments","ɵɵpureFunction0","ɵɵattribute","getTransform","TuiPieChartDirective","constructor","sector$","el","performance","animationFrame$","speed","$","pipe","prev","cur","now","startDelta","endDelta","timestamp","progress","subscribe","start","end","setAttribute","tuiPieChart","sector","next","ɵfac","TuiPieChartDirective_Factory","__ngFactoryType__","ɵdir","ɵɵdefineDirective","type","selectors","inputs","standalone","ngDevMode","ɵsetClassMetadata","args","selector","RADII","xs","s","m","l","xl","TRANSFORM","TuiPieChart","hintOptions","optional","autoId","value","size","masked","activeItemIndex","NaN","activeItemIndexChange","showDelay","hideDelay","empty","getSum","content","maskId","mask","radius","getSegments","index","transform","hovered","updateActiveItemIndex","initial","i","array","reduce","sum","current","j","getDeg","angle","Math","min","TuiPieChart_Factory","ɵcmp","ɵɵdefineComponent","hostVars","hostBindings","TuiPieChart_HostBindings","ɵɵclassProp","outputs","features","ɵɵProvidersFeature","direction","appearance","ɵɵStandaloneFeature","decls","vars","consts","template","TuiPieChart_Template","ɵɵelement","ɵɵtemplate","ɵɵadvance","length","dependencies","TuiHintDirective","TuiHintPointer","styles","changeDetection","prototype","imports","OnPush","viewProviders","host"],"sources":["C:/Users/Asus-PC/Downloads/WebLibraryNew/WebLibrary/WebLibraryApp/Frontend/node_modules/@taiga-ui/addon-charts/fesm2022/taiga-ui-addon-charts-components-pie-chart.mjs"],"sourcesContent":["import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { inject, Directive, Input, EventEmitter, Component, ChangeDetectionStrategy, Output } from '@angular/core';\nimport { TuiHovered } from '@taiga-ui/cdk/directives/hovered';\nimport { TuiRepeatTimes } from '@taiga-ui/cdk/directives/repeat-times';\nimport { tuiInjectId } from '@taiga-ui/cdk/services';\nimport { tuiClamp, tuiSum } from '@taiga-ui/cdk/utils/math';\nimport { tuiEaseInOutQuad, tuiPure } from '@taiga-ui/cdk/utils/miscellaneous';\nimport * as i1 from '@taiga-ui/core/directives/hint';\nimport { TuiHintOptionsDirective, tuiHintOptionsProvider, TuiHint } from '@taiga-ui/core/directives/hint';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { WA_PERFORMANCE, WA_ANIMATION_FRAME } from '@ng-web-apis/common';\nimport { tuiDescribeSector } from '@taiga-ui/addon-charts/utils';\nimport { tuiZonefree } from '@taiga-ui/cdk/observables';\nimport { tuiInjectElement } from '@taiga-ui/cdk/utils/dom';\nimport { TUI_ANIMATIONS_SPEED } from '@taiga-ui/core/tokens';\nimport { tuiGetDuration } from '@taiga-ui/core/utils/miscellaneous';\nimport { BehaviorSubject, pairwise, switchMap, map, takeWhile } from 'rxjs';\n\nclass TuiPieChartDirective {\n    constructor() {\n        this.sector$ = new BehaviorSubject([0, 0]);\n        this.el = tuiInjectElement();\n        this.performance = inject(WA_PERFORMANCE);\n        this.animationFrame$ = inject(WA_ANIMATION_FRAME);\n        this.speed = inject(TUI_ANIMATIONS_SPEED);\n        this.$ = this.sector$\n            .pipe(pairwise(), switchMap(([prev, cur]) => {\n            const now = this.performance.now();\n            const startDelta = cur[0] - prev[0];\n            const endDelta = cur[1] - prev[1];\n            return this.animationFrame$.pipe(map((timestamp) => tuiEaseInOutQuad(tuiClamp((timestamp - now) / tuiGetDuration(this.speed), 0, 1))), takeWhile((progress) => progress < 1, true), map((progress) => [\n                prev[0] + startDelta * progress,\n                cur[1] > 359 ? cur[1] : prev[1] + endDelta * progress,\n            ]));\n        }), tuiZonefree(), takeUntilDestroyed())\n            .subscribe(([start, end]) => this.el.setAttribute('d', tuiDescribeSector(start, end)));\n    }\n    set tuiPieChart(sector) {\n        this.sector$.next(sector);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiPieChartDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiPieChartDirective, isStandalone: true, selector: \"path[tuiPieChart]\", inputs: { tuiPieChart: \"tuiPieChart\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiPieChartDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    standalone: true,\n                    selector: 'path[tuiPieChart]',\n                }]\n        }], propDecorators: { tuiPieChart: [{\n                type: Input\n            }] } });\n\nconst RADII = {\n    xs: '50',\n    s: '50',\n    m: '77.8',\n    l: '81.9',\n    xl: '81.3',\n};\nconst TRANSFORM = {\n    xs: 1.15,\n    s: 1.25,\n    m: 1.11,\n    l: 1.09,\n    xl: 1.08,\n};\nclass TuiPieChart {\n    constructor() {\n        this.hintOptions = inject(TuiHintOptionsDirective, { optional: true });\n        this.autoId = tuiInjectId();\n        this.value = [];\n        this.size = 'm';\n        this.masked = false;\n        this.activeItemIndex = NaN;\n        this.activeItemIndexChange = new EventEmitter();\n        if (this.hintOptions) {\n            this.hintOptions.showDelay = 0;\n            this.hintOptions.hideDelay = 0;\n        }\n    }\n    get empty() {\n        return !this.getSum(this.value);\n    }\n    get hintContent() {\n        return this.hintOptions?.content || '';\n    }\n    get maskId() {\n        return `tui-ring-chart-${this.autoId}`;\n    }\n    get mask() {\n        return this.masked ? `url(#${this.maskId})` : null;\n    }\n    get radius() {\n        return RADII[this.size];\n    }\n    get segments() {\n        return this.getSegments(this.value);\n    }\n    getTransform(index) {\n        const transform = this.masked\n            ? `scale(${TRANSFORM[this.size]})`\n            : `scale(${TRANSFORM.xs})`;\n        return index === this.activeItemIndex ? transform : null;\n    }\n    onHovered(hovered, index) {\n        this.updateActiveItemIndex(hovered ? index : NaN);\n    }\n    getSum(value) {\n        return tuiSum(...value);\n    }\n    getSegments(value) {\n        return value\n            .map((initial, i, array) => array.reduce((sum, current, j) => (j < i ? this.getDeg(current) + sum : sum), this.getDeg(initial)))\n            .map((angle, index, array) => [\n            array[index - 1] || 0,\n            Math.min(angle, 359.9999),\n        ]);\n    }\n    getDeg(value) {\n        return 360 * (value / this.getSum(this.value)) || 0;\n    }\n    updateActiveItemIndex(index) {\n        if (index === this.activeItemIndex) {\n            return;\n        }\n        this.activeItemIndex = index;\n        this.activeItemIndexChange.next(index);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiPieChart, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiPieChart, isStandalone: true, selector: \"tui-pie-chart\", inputs: { value: \"value\", size: \"size\", masked: \"masked\", activeItemIndex: \"activeItemIndex\" }, outputs: { activeItemIndexChange: \"activeItemIndexChange\" }, host: { properties: { \"attr.data-size\": \"size\", \"class._empty\": \"empty\" } }, ngImport: i0, template: \"<svg\\n    focusable=\\\"false\\\"\\n    height=\\\"100%\\\"\\n    viewBox=\\\"-100 -100 200 200\\\"\\n    width=\\\"100%\\\"\\n    xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n    class=\\\"t-svg\\\"\\n>\\n    <defs>\\n        <mask [attr.id]=\\\"maskId\\\">\\n            <rect\\n                fill=\\\"white\\\"\\n                height=\\\"400\\\"\\n                width=\\\"400\\\"\\n                x=\\\"-200\\\"\\n                y=\\\"-200\\\"\\n            />\\n            <circle\\n                cx=\\\"0\\\"\\n                cy=\\\"0\\\"\\n                [attr.r]=\\\"radius\\\"\\n            />\\n        </mask>\\n    </defs>\\n    <g [style.mask]=\\\"mask\\\">\\n        <circle\\n            cx=\\\"0\\\"\\n            cy=\\\"0\\\"\\n            r=\\\"100\\\"\\n            class=\\\"t-placeholder\\\"\\n        />\\n        <path\\n            *tuiRepeatTimes=\\\"let index of segments.length\\\"\\n            automation-id=\\\"tui-pie-chart__segment\\\"\\n            d=\\\"\\\"\\n            fill=\\\"currentColor\\\"\\n            tuiHintPointer\\n            class=\\\"t-segment\\\"\\n            [attr.transform]=\\\"getTransform(index)\\\"\\n            [style.color]=\\\"'var(--tui-chart-categorical-0' + index + ')'\\\"\\n            [tuiHint]=\\\"hintContent\\\"\\n            [tuiHintContext]=\\\"{$implicit: index}\\\"\\n            [tuiPieChart]=\\\"segments[index] || [0, 0]\\\"\\n            (tuiHoveredChange)=\\\"onHovered($event, index)\\\"\\n        />\\n    </g>\\n</svg>\\n\", styles: [\":host{position:relative;display:block;inline-size:var(--t-size);block-size:var(--t-size);border-radius:100%}:host[data-size=xs]{--t-size: 2rem;pointer-events:none}:host[data-size=s]{--t-size: 4rem}:host[data-size=m]{--t-size: 9rem}:host[data-size=l]{--t-size: 11rem}:host[data-size=xl]{--t-size: 16rem}.t-svg{position:relative;overflow:visible;transform:rotate(-90deg)}.t-segment{transition-property:transform;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out}:host._empty .t-segment{display:none}.t-placeholder{fill:var(--tui-background-neutral-1)}\\n\"], dependencies: [{ kind: \"directive\", type: i1.TuiHintDirective, selector: \"[tuiHint]:not(ng-container):not(ng-template)\", inputs: [\"tuiHintContext\", \"tuiHintAppearance\", \"tuiHint\"] }, { kind: \"directive\", type: i1.TuiHintPointer, selector: \"[tuiHint][tuiHintPointer]\" }, { kind: \"directive\", type: TuiHovered, selector: \"[tuiHoveredChange]\", outputs: [\"tuiHoveredChange\"] }, { kind: \"directive\", type: TuiPieChartDirective, selector: \"path[tuiPieChart]\", inputs: [\"tuiPieChart\"] }, { kind: \"directive\", type: TuiRepeatTimes, selector: \"[tuiRepeatTimes][tuiRepeatTimesOf]\", inputs: [\"tuiRepeatTimesOf\"] }], viewProviders: [tuiHintOptionsProvider({ direction: 'top-right', appearance: 'dark' })], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\n__decorate([\n    tuiPure\n], TuiPieChart.prototype, \"getSum\", null);\n__decorate([\n    tuiPure\n], TuiPieChart.prototype, \"getSegments\", null);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiPieChart, decorators: [{\n            type: Component,\n            args: [{ standalone: true, selector: 'tui-pie-chart', imports: [TuiHint, TuiHovered, TuiPieChartDirective, TuiRepeatTimes], changeDetection: ChangeDetectionStrategy.OnPush, viewProviders: [tuiHintOptionsProvider({ direction: 'top-right', appearance: 'dark' })], host: {\n                        '[attr.data-size]': 'size',\n                        '[class._empty]': 'empty',\n                    }, template: \"<svg\\n    focusable=\\\"false\\\"\\n    height=\\\"100%\\\"\\n    viewBox=\\\"-100 -100 200 200\\\"\\n    width=\\\"100%\\\"\\n    xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n    class=\\\"t-svg\\\"\\n>\\n    <defs>\\n        <mask [attr.id]=\\\"maskId\\\">\\n            <rect\\n                fill=\\\"white\\\"\\n                height=\\\"400\\\"\\n                width=\\\"400\\\"\\n                x=\\\"-200\\\"\\n                y=\\\"-200\\\"\\n            />\\n            <circle\\n                cx=\\\"0\\\"\\n                cy=\\\"0\\\"\\n                [attr.r]=\\\"radius\\\"\\n            />\\n        </mask>\\n    </defs>\\n    <g [style.mask]=\\\"mask\\\">\\n        <circle\\n            cx=\\\"0\\\"\\n            cy=\\\"0\\\"\\n            r=\\\"100\\\"\\n            class=\\\"t-placeholder\\\"\\n        />\\n        <path\\n            *tuiRepeatTimes=\\\"let index of segments.length\\\"\\n            automation-id=\\\"tui-pie-chart__segment\\\"\\n            d=\\\"\\\"\\n            fill=\\\"currentColor\\\"\\n            tuiHintPointer\\n            class=\\\"t-segment\\\"\\n            [attr.transform]=\\\"getTransform(index)\\\"\\n            [style.color]=\\\"'var(--tui-chart-categorical-0' + index + ')'\\\"\\n            [tuiHint]=\\\"hintContent\\\"\\n            [tuiHintContext]=\\\"{$implicit: index}\\\"\\n            [tuiPieChart]=\\\"segments[index] || [0, 0]\\\"\\n            (tuiHoveredChange)=\\\"onHovered($event, index)\\\"\\n        />\\n    </g>\\n</svg>\\n\", styles: [\":host{position:relative;display:block;inline-size:var(--t-size);block-size:var(--t-size);border-radius:100%}:host[data-size=xs]{--t-size: 2rem;pointer-events:none}:host[data-size=s]{--t-size: 4rem}:host[data-size=m]{--t-size: 9rem}:host[data-size=l]{--t-size: 11rem}:host[data-size=xl]{--t-size: 16rem}.t-svg{position:relative;overflow:visible;transform:rotate(-90deg)}.t-segment{transition-property:transform;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out}:host._empty .t-segment{display:none}.t-placeholder{fill:var(--tui-background-neutral-1)}\\n\"] }]\n        }], ctorParameters: function () { return []; }, propDecorators: { value: [{\n                type: Input\n            }], size: [{\n                type: Input\n            }], masked: [{\n                type: Input\n            }], activeItemIndex: [{\n                type: Input\n            }], activeItemIndexChange: [{\n                type: Output\n            }], getSum: [], getSegments: [] } });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiPieChart, TuiPieChartDirective };\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,OAAO,KAAKC,EAAE,MAAM,eAAe;AACnC,SAASC,MAAM,EAAEC,SAAS,EAAEC,KAAK,EAAEC,YAAY,EAAEC,SAAS,EAAEC,uBAAuB,EAAEC,MAAM,QAAQ,eAAe;AAClH,SAASC,UAAU,QAAQ,kCAAkC;AAC7D,SAASC,cAAc,QAAQ,uCAAuC;AACtE,SAASC,WAAW,QAAQ,wBAAwB;AACpD,SAASC,QAAQ,EAAEC,MAAM,QAAQ,0BAA0B;AAC3D,SAASC,gBAAgB,EAAEC,OAAO,QAAQ,mCAAmC;AAC7E,OAAO,KAAKC,EAAE,MAAM,gCAAgC;AACpD,SAASC,uBAAuB,EAAEC,sBAAsB,EAAEC,OAAO,QAAQ,gCAAgC;AACzG,SAASC,kBAAkB,QAAQ,4BAA4B;AAC/D,SAASC,cAAc,EAAEC,kBAAkB,QAAQ,qBAAqB;AACxE,SAASC,iBAAiB,QAAQ,8BAA8B;AAChE,SAASC,WAAW,QAAQ,2BAA2B;AACvD,SAASC,gBAAgB,QAAQ,yBAAyB;AAC1D,SAASC,oBAAoB,QAAQ,uBAAuB;AAC5D,SAASC,cAAc,QAAQ,oCAAoC;AACnE,SAASC,eAAe,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,GAAG,EAAEC,SAAS,QAAQ,MAAM;AAAC,MAAAC,GAAA,GAAAC,EAAA;EAAAC,SAAA,EAAAD;AAAA;AAAA,MAAAE,GAAA,GAAAA,CAAA;AAAA,SAAAC,iCAAAC,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAE,GAAA,GAwByBvC,EAAE,CAAAwC,gBAAA;IAAFxC,EAAE,CAAAyC,cAAA;IAAFzC,EAAE,CAAA0C,cAAA,aA0FwmD,CAAC;IA1F3mD1C,EAAE,CAAA2C,UAAA,8BAAAC,kEAAAC,MAAA;MAAA,MAAAC,QAAA,GAAF9C,EAAE,CAAA+C,aAAA,CAAAR,GAAA,EAAAL,SAAA;MAAA,MAAAc,MAAA,GAAFhD,EAAE,CAAAiD,aAAA;MAAA,OAAFjD,EAAE,CAAAkD,WAAA,CA0FmkDF,MAAA,CAAAG,SAAA,CAAAN,MAAA,EAAAC,QAAuB,CAAC;IAAA,CAAC,CAAC;IA1F/lD9C,EAAE,CAAAoD,YAAA,CA0FwmD,CAAC;EAAA;EAAA,IAAAf,EAAA;IAAA,MAAAS,QAAA,GAAAR,GAAA,CAAAJ,SAAA;IAAA,MAAAc,MAAA,GA1F3mDhD,EAAE,CAAAiD,aAAA;IAAFjD,EAAE,CAAAqD,WAAA,4CAAAP,QAAA,MA0F04C,CAAC;IA1F74C9C,EAAE,CAAAsD,UAAA,YAAAN,MAAA,CAAAO,WA0Fi7C,CAAC,mBA1Fp7CvD,EAAE,CAAAwD,eAAA,IAAAxB,GAAA,EAAAc,QAAA,CA0Fs+C,CAAC,gBAAAE,MAAA,CAAAS,QAAA,CAAAX,QAAA,KA1Fz+C9C,EAAE,CAAA0D,eAAA,IAAAvB,GAAA,CA0F+hD,CAAC;IA1FliDnC,EAAE,CAAA2D,WAAA,cAAAX,MAAA,CAAAY,YAAA,CAAAd,QAAA;EAAA;AAAA;AAtBvG,MAAMe,oBAAoB,CAAC;EACvBC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,OAAO,GAAG,IAAIpC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC1C,IAAI,CAACqC,EAAE,GAAGxC,gBAAgB,CAAC,CAAC;IAC5B,IAAI,CAACyC,WAAW,GAAGhE,MAAM,CAACmB,cAAc,CAAC;IACzC,IAAI,CAAC8C,eAAe,GAAGjE,MAAM,CAACoB,kBAAkB,CAAC;IACjD,IAAI,CAAC8C,KAAK,GAAGlE,MAAM,CAACwB,oBAAoB,CAAC;IACzC,IAAI,CAAC2C,CAAC,GAAG,IAAI,CAACL,OAAO,CAChBM,IAAI,CAACzC,QAAQ,CAAC,CAAC,EAAEC,SAAS,CAAC,CAAC,CAACyC,IAAI,EAAEC,GAAG,CAAC,KAAK;MAC7C,MAAMC,GAAG,GAAG,IAAI,CAACP,WAAW,CAACO,GAAG,CAAC,CAAC;MAClC,MAAMC,UAAU,GAAGF,GAAG,CAAC,CAAC,CAAC,GAAGD,IAAI,CAAC,CAAC,CAAC;MACnC,MAAMI,QAAQ,GAAGH,GAAG,CAAC,CAAC,CAAC,GAAGD,IAAI,CAAC,CAAC,CAAC;MACjC,OAAO,IAAI,CAACJ,eAAe,CAACG,IAAI,CAACvC,GAAG,CAAE6C,SAAS,IAAK9D,gBAAgB,CAACF,QAAQ,CAAC,CAACgE,SAAS,GAAGH,GAAG,IAAI9C,cAAc,CAAC,IAAI,CAACyC,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAEpC,SAAS,CAAE6C,QAAQ,IAAKA,QAAQ,GAAG,CAAC,EAAE,IAAI,CAAC,EAAE9C,GAAG,CAAE8C,QAAQ,IAAK,CAClMN,IAAI,CAAC,CAAC,CAAC,GAAGG,UAAU,GAAGG,QAAQ,EAC/BL,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAGA,GAAG,CAAC,CAAC,CAAC,GAAGD,IAAI,CAAC,CAAC,CAAC,GAAGI,QAAQ,GAAGE,QAAQ,CACxD,CAAC,CAAC;IACP,CAAC,CAAC,EAAErD,WAAW,CAAC,CAAC,EAAEJ,kBAAkB,CAAC,CAAC,CAAC,CACnC0D,SAAS,CAAC,CAAC,CAACC,KAAK,EAAEC,GAAG,CAAC,KAAK,IAAI,CAACf,EAAE,CAACgB,YAAY,CAAC,GAAG,EAAE1D,iBAAiB,CAACwD,KAAK,EAAEC,GAAG,CAAC,CAAC,CAAC;EAC9F;EACA,IAAIE,WAAWA,CAACC,MAAM,EAAE;IACpB,IAAI,CAACnB,OAAO,CAACoB,IAAI,CAACD,MAAM,CAAC;EAC7B;EACA;IAAS,IAAI,CAACE,IAAI,YAAAC,6BAAAC,iBAAA;MAAA,YAAAA,iBAAA,IAAyFzB,oBAAoB;IAAA,CAAmD;EAAE;EACpL;IAAS,IAAI,CAAC0B,IAAI,kBAD+EvF,EAAE,CAAAwF,iBAAA;MAAAC,IAAA,EACJ5B,oBAAoB;MAAA6B,SAAA;MAAAC,MAAA;QAAAV,WAAA;MAAA;MAAAW,UAAA;IAAA,EAA4G;EAAE;AACrO;AACA;EAAA,QAAAC,SAAA,oBAAAA,SAAA,KAHqG7F,EAAE,CAAA8F,iBAAA,CAGXjC,oBAAoB,EAAc,CAAC;IACnH4B,IAAI,EAAEvF,SAAS;IACf6F,IAAI,EAAE,CAAC;MACCH,UAAU,EAAE,IAAI;MAChBI,QAAQ,EAAE;IACd,CAAC;EACT,CAAC,CAAC,QAAkB;IAAEf,WAAW,EAAE,CAAC;MAC5BQ,IAAI,EAAEtF;IACV,CAAC;EAAE,CAAC;AAAA;AAEhB,MAAM8F,KAAK,GAAG;EACVC,EAAE,EAAE,IAAI;EACRC,CAAC,EAAE,IAAI;EACPC,CAAC,EAAE,MAAM;EACTC,CAAC,EAAE,MAAM;EACTC,EAAE,EAAE;AACR,CAAC;AACD,MAAMC,SAAS,GAAG;EACdL,EAAE,EAAE,IAAI;EACRC,CAAC,EAAE,IAAI;EACPC,CAAC,EAAE,IAAI;EACPC,CAAC,EAAE,IAAI;EACPC,EAAE,EAAE;AACR,CAAC;AACD,MAAME,WAAW,CAAC;EACd1C,WAAWA,CAAA,EAAG;IACV,IAAI,CAAC2C,WAAW,GAAGxG,MAAM,CAACe,uBAAuB,EAAE;MAAE0F,QAAQ,EAAE;IAAK,CAAC,CAAC;IACtE,IAAI,CAACC,MAAM,GAAGjG,WAAW,CAAC,CAAC;IAC3B,IAAI,CAACkG,KAAK,GAAG,EAAE;IACf,IAAI,CAACC,IAAI,GAAG,GAAG;IACf,IAAI,CAACC,MAAM,GAAG,KAAK;IACnB,IAAI,CAACC,eAAe,GAAGC,GAAG;IAC1B,IAAI,CAACC,qBAAqB,GAAG,IAAI7G,YAAY,CAAC,CAAC;IAC/C,IAAI,IAAI,CAACqG,WAAW,EAAE;MAClB,IAAI,CAACA,WAAW,CAACS,SAAS,GAAG,CAAC;MAC9B,IAAI,CAACT,WAAW,CAACU,SAAS,GAAG,CAAC;IAClC;EACJ;EACA,IAAIC,KAAKA,CAAA,EAAG;IACR,OAAO,CAAC,IAAI,CAACC,MAAM,CAAC,IAAI,CAACT,KAAK,CAAC;EACnC;EACA,IAAIrD,WAAWA,CAAA,EAAG;IACd,OAAO,IAAI,CAACkD,WAAW,EAAEa,OAAO,IAAI,EAAE;EAC1C;EACA,IAAIC,MAAMA,CAAA,EAAG;IACT,OAAO,kBAAkB,IAAI,CAACZ,MAAM,EAAE;EAC1C;EACA,IAAIa,IAAIA,CAAA,EAAG;IACP,OAAO,IAAI,CAACV,MAAM,GAAG,QAAQ,IAAI,CAACS,MAAM,GAAG,GAAG,IAAI;EACtD;EACA,IAAIE,MAAMA,CAAA,EAAG;IACT,OAAOxB,KAAK,CAAC,IAAI,CAACY,IAAI,CAAC;EAC3B;EACA,IAAIpD,QAAQA,CAAA,EAAG;IACX,OAAO,IAAI,CAACiE,WAAW,CAAC,IAAI,CAACd,KAAK,CAAC;EACvC;EACAhD,YAAYA,CAAC+D,KAAK,EAAE;IAChB,MAAMC,SAAS,GAAG,IAAI,CAACd,MAAM,GACvB,SAASP,SAAS,CAAC,IAAI,CAACM,IAAI,CAAC,GAAG,GAChC,SAASN,SAAS,CAACL,EAAE,GAAG;IAC9B,OAAOyB,KAAK,KAAK,IAAI,CAACZ,eAAe,GAAGa,SAAS,GAAG,IAAI;EAC5D;EACAzE,SAASA,CAAC0E,OAAO,EAAEF,KAAK,EAAE;IACtB,IAAI,CAACG,qBAAqB,CAACD,OAAO,GAAGF,KAAK,GAAGX,GAAG,CAAC;EACrD;EACAK,MAAMA,CAACT,KAAK,EAAE;IACV,OAAOhG,MAAM,CAAC,GAAGgG,KAAK,CAAC;EAC3B;EACAc,WAAWA,CAACd,KAAK,EAAE;IACf,OAAOA,KAAK,CACP9E,GAAG,CAAC,CAACiG,OAAO,EAAEC,CAAC,EAAEC,KAAK,KAAKA,KAAK,CAACC,MAAM,CAAC,CAACC,GAAG,EAAEC,OAAO,EAAEC,CAAC,KAAMA,CAAC,GAAGL,CAAC,GAAG,IAAI,CAACM,MAAM,CAACF,OAAO,CAAC,GAAGD,GAAG,GAAGA,GAAI,EAAE,IAAI,CAACG,MAAM,CAACP,OAAO,CAAC,CAAC,CAAC,CAC/HjG,GAAG,CAAC,CAACyG,KAAK,EAAEZ,KAAK,EAAEM,KAAK,KAAK,CAC9BA,KAAK,CAACN,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,EACrBa,IAAI,CAACC,GAAG,CAACF,KAAK,EAAE,QAAQ,CAAC,CAC5B,CAAC;EACN;EACAD,MAAMA,CAAC1B,KAAK,EAAE;IACV,OAAO,GAAG,IAAIA,KAAK,GAAG,IAAI,CAACS,MAAM,CAAC,IAAI,CAACT,KAAK,CAAC,CAAC,IAAI,CAAC;EACvD;EACAkB,qBAAqBA,CAACH,KAAK,EAAE;IACzB,IAAIA,KAAK,KAAK,IAAI,CAACZ,eAAe,EAAE;MAChC;IACJ;IACA,IAAI,CAACA,eAAe,GAAGY,KAAK;IAC5B,IAAI,CAACV,qBAAqB,CAAC9B,IAAI,CAACwC,KAAK,CAAC;EAC1C;EACA;IAAS,IAAI,CAACvC,IAAI,YAAAsD,oBAAApD,iBAAA;MAAA,YAAAA,iBAAA,IAAyFkB,WAAW;IAAA,CAAmD;EAAE;EAC3K;IAAS,IAAI,CAACmC,IAAI,kBA1F+E3I,EAAE,CAAA4I,iBAAA;MAAAnD,IAAA,EA0FJe,WAAW;MAAAd,SAAA;MAAAmD,QAAA;MAAAC,YAAA,WAAAC,yBAAA1G,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UA1FTrC,EAAE,CAAA2D,WAAA,cAAArB,GAAA,CAAAuE,IAAA;UAAF7G,EAAE,CAAAgJ,WAAA,WAAA1G,GAAA,CAAA8E,KA0FM,CAAC;QAAA;MAAA;MAAAzB,MAAA;QAAAiB,KAAA;QAAAC,IAAA;QAAAC,MAAA;QAAAC,eAAA;MAAA;MAAAkC,OAAA;QAAAhC,qBAAA;MAAA;MAAArB,UAAA;MAAAsD,QAAA,GA1FTlJ,EAAE,CAAAmJ,kBAAA,KA0Fm0F,CAAClI,sBAAsB,CAAC;QAAEmI,SAAS,EAAE,WAAW;QAAEC,UAAU,EAAE;MAAO,CAAC,CAAC,CAAC,GA1F74FrJ,EAAE,CAAAsJ,mBAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,qBAAAtH,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UAAFrC,EAAE,CAAAyC,cAAA;UAAFzC,EAAE,CAAA0C,cAAA,YA0Fqe,CAAC,UAAW,CAAC,UAAoC,CAAC;UA1FzhB1C,EAAE,CAAA4J,SAAA,aA0FgtB,CAAC,eAA6H,CAAC;UA1Fj1B5J,EAAE,CAAAoD,YAAA,CA0F+1B,CAAC,CAAY,CAAC;UA1F/2BpD,EAAE,CAAA0C,cAAA,OA0F24B,CAAC;UA1F94B1C,EAAE,CAAA4J,SAAA,eA0FghC,CAAC;UA1FnhC5J,EAAE,CAAA6J,UAAA,IAAAzH,gCAAA,iBA0FwmD,CAAC;UA1F3mDpC,EAAE,CAAAoD,YAAA,CA0FknD,CAAC,CAAO,CAAC;QAAA;QAAA,IAAAf,EAAA;UA1F7nDrC,EAAE,CAAA8J,SAAA,EA0FqhB,CAAC;UA1FxhB9J,EAAE,CAAA2D,WAAA,OAAArB,GAAA,CAAAiF,MAAA;UAAFvH,EAAE,CAAA8J,SAAA,EA0F8zB,CAAC;UA1Fj0B9J,EAAE,CAAA2D,WAAA,MAAArB,GAAA,CAAAmF,MAAA;UAAFzH,EAAE,CAAA8J,SAAA,CA0F04B,CAAC;UA1F74B9J,EAAE,CAAAqD,WAAA,SAAAf,GAAA,CAAAkF,IA0F04B,CAAC;UA1F74BxH,EAAE,CAAA8J,SAAA,EA0F2lC,CAAC;UA1F9lC9J,EAAE,CAAAsD,UAAA,qBAAAhB,GAAA,CAAAmB,QAAA,CAAAsG,MA0F2lC,CAAC;QAAA;MAAA;MAAAC,YAAA,GAAqqCjJ,EAAE,CAACkJ,gBAAgB,EAAqJlJ,EAAE,CAACmJ,cAAc,EAAsE1J,UAAU,EAA8FqD,oBAAoB,EAAuFpD,cAAc;MAAA0J,MAAA;MAAAC,eAAA;IAAA,EAAiO;EAAE;AAC3iG;AACArK,UAAU,CAAC,CACPe,OAAO,CACV,EAAE0F,WAAW,CAAC6D,SAAS,EAAE,QAAQ,EAAE,IAAI,CAAC;AACzCtK,UAAU,CAAC,CACPe,OAAO,CACV,EAAE0F,WAAW,CAAC6D,SAAS,EAAE,aAAa,EAAE,IAAI,CAAC;AAC9C;EAAA,QAAAxE,SAAA,oBAAAA,SAAA,KAlGqG7F,EAAE,CAAA8F,iBAAA,CAkGXU,WAAW,EAAc,CAAC;IAC1Gf,IAAI,EAAEpF,SAAS;IACf0F,IAAI,EAAE,CAAC;MAAEH,UAAU,EAAE,IAAI;MAAEI,QAAQ,EAAE,eAAe;MAAEsE,OAAO,EAAE,CAACpJ,OAAO,EAAEV,UAAU,EAAEqD,oBAAoB,EAAEpD,cAAc,CAAC;MAAE2J,eAAe,EAAE9J,uBAAuB,CAACiK,MAAM;MAAEC,aAAa,EAAE,CAACvJ,sBAAsB,CAAC;QAAEmI,SAAS,EAAE,WAAW;QAAEC,UAAU,EAAE;MAAO,CAAC,CAAC,CAAC;MAAEoB,IAAI,EAAE;QAChQ,kBAAkB,EAAE,MAAM;QAC1B,gBAAgB,EAAE;MACtB,CAAC;MAAEf,QAAQ,EAAE,o0CAAo0C;MAAES,MAAM,EAAE,CAAC,2kBAA2kB;IAAE,CAAC;EACt7D,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,EAAE;EAAE,CAAC,EAAkB;IAAEvD,KAAK,EAAE,CAAC;MAClEnB,IAAI,EAAEtF;IACV,CAAC,CAAC;IAAE0G,IAAI,EAAE,CAAC;MACPpB,IAAI,EAAEtF;IACV,CAAC,CAAC;IAAE2G,MAAM,EAAE,CAAC;MACTrB,IAAI,EAAEtF;IACV,CAAC,CAAC;IAAE4G,eAAe,EAAE,CAAC;MAClBtB,IAAI,EAAEtF;IACV,CAAC,CAAC;IAAE8G,qBAAqB,EAAE,CAAC;MACxBxB,IAAI,EAAElF;IACV,CAAC,CAAC;IAAE8G,MAAM,EAAE,EAAE;IAAEK,WAAW,EAAE;EAAG,CAAC;AAAA;;AAE7C;AACA;AACA;;AAEA,SAASlB,WAAW,EAAE3C,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}