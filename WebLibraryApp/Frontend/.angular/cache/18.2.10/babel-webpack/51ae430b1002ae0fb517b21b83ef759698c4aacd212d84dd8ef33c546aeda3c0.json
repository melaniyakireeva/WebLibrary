{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, inject, Directive } from '@angular/core';\nimport { toSignal } from '@angular/core/rxjs-interop';\nimport { tuiWatch } from '@taiga-ui/cdk/observables';\nimport { TUI_IS_MOBILE } from '@taiga-ui/cdk/tokens';\nimport { tuiWithStyles } from '@taiga-ui/cdk/utils/miscellaneous';\nimport { TuiTextfieldComponent } from '@taiga-ui/core/components/textfield';\nimport * as i1 from '@taiga-ui/core/directives/appearance';\nimport { tuiAppearanceState, TUI_APPEARANCE_OPTIONS, TuiWithAppearance } from '@taiga-ui/core/directives/appearance';\nimport * as i2 from '@taiga-ui/core/directives/hint';\nimport { TuiHintDescribe, TuiHintHover, TUI_HINT_OPTIONS, TuiHintDirective } from '@taiga-ui/core/directives/hint';\nimport { TUI_ICON_START } from '@taiga-ui/core/tokens';\nimport { map } from 'rxjs';\nclass TuiTooltipStyles {\n  static {\n    this.ɵfac = function TuiTooltipStyles_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiTooltipStyles)();\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: TuiTooltipStyles,\n      selectors: [[\"ng-component\"]],\n      hostAttrs: [1, \"tui-tooltip\"],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 0,\n      vars: 0,\n      template: function TuiTooltipStyles_Template(rf, ctx) {},\n      styles: [\"[tuiTooltip]{border-width:.25rem;border-radius:100%;cursor:pointer;pointer-events:auto}@media (hover: hover){tui-textfield:hover [tuiTooltip][data-appearance=icon]:after{color:var(--tui-text-secondary)}}\\n\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiTooltipStyles, [{\n    type: Component,\n    args: [{\n      standalone: true,\n      template: '',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        class: 'tui-tooltip'\n      },\n      styles: [\"[tuiTooltip]{border-width:.25rem;border-radius:100%;cursor:pointer;pointer-events:auto}@media (hover: hover){tui-textfield:hover [tuiTooltip][data-appearance=icon]:after{color:var(--tui-text-secondary)}}\\n\"]\n    }]\n  }], null, null);\n})();\nclass TuiTooltip {\n  constructor() {\n    this.textfield = inject(TuiTextfieldComponent, {\n      optional: true\n    });\n    this.isMobile = inject(TUI_IS_MOBILE);\n    this.describe = inject(TuiHintDescribe);\n    this.driver = inject(TuiHintHover);\n    this.nothing = tuiWithStyles(TuiTooltipStyles);\n    this.state = tuiAppearanceState(toSignal(inject(TuiHintHover).pipe(map(hover => hover ? 'hover' : null), tuiWatch()), {\n      initialValue: null\n    }));\n  }\n  ngDoCheck() {\n    if (this.textfield?.id) {\n      this.describe.tuiHintDescribe = this.textfield.id;\n    }\n  }\n  onClick(event) {\n    if (this.isMobile) {\n      event.preventDefault();\n      event.stopPropagation();\n    } else {\n      this.driver.toggle();\n    }\n  }\n  static {\n    this.ɵfac = function TuiTooltip_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiTooltip)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: TuiTooltip,\n      selectors: [[\"tui-icon\", \"tuiTooltip\", \"\"]],\n      hostAttrs: [\"tuiTooltip\", \"\"],\n      hostBindings: function TuiTooltip_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"mousedown\", function TuiTooltip_mousedown_HostBindingHandler($event) {\n            return ctx.onClick($event);\n          });\n        }\n      },\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([{\n        provide: TUI_APPEARANCE_OPTIONS,\n        useValue: {\n          appearance: 'icon'\n        }\n      }, {\n        provide: TUI_ICON_START,\n        useFactory: () => inject(TUI_HINT_OPTIONS).icon\n      }]), i0.ɵɵHostDirectivesFeature([i1.TuiWithAppearance, {\n        directive: i2.TuiHintDescribe,\n        inputs: [\"tuiHintDescribe\", \"tuiTooltipDescribe\"]\n      }, {\n        directive: i2.TuiHintDirective,\n        inputs: [\"tuiHint\", \"tuiTooltip\", \"tuiHintAppearance\", \"tuiHintAppearance\", \"tuiHintContext\", \"tuiHintContext\"]\n      }])]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiTooltip, [{\n    type: Directive,\n    args: [{\n      standalone: true,\n      selector: 'tui-icon[tuiTooltip]',\n      providers: [{\n        provide: TUI_APPEARANCE_OPTIONS,\n        useValue: {\n          appearance: 'icon'\n        }\n      }, {\n        provide: TUI_ICON_START,\n        useFactory: () => inject(TUI_HINT_OPTIONS).icon\n      }],\n      hostDirectives: [TuiWithAppearance, {\n        directive: TuiHintDescribe,\n        inputs: ['tuiHintDescribe: tuiTooltipDescribe']\n      }, {\n        directive: TuiHintDirective,\n        inputs: ['tuiHint: tuiTooltip', 'tuiHintAppearance', 'tuiHintContext']\n      }],\n      host: {\n        tuiTooltip: '',\n        '(mousedown)': 'onClick($event)'\n      }\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiTooltip };","map":{"version":3,"names":["i0","Component","ViewEncapsulation","ChangeDetectionStrategy","inject","Directive","toSignal","tuiWatch","TUI_IS_MOBILE","tuiWithStyles","TuiTextfieldComponent","i1","tuiAppearanceState","TUI_APPEARANCE_OPTIONS","TuiWithAppearance","i2","TuiHintDescribe","TuiHintHover","TUI_HINT_OPTIONS","TuiHintDirective","TUI_ICON_START","map","TuiTooltipStyles","ɵfac","TuiTooltipStyles_Factory","__ngFactoryType__","ɵcmp","ɵɵdefineComponent","type","selectors","hostAttrs","standalone","features","ɵɵStandaloneFeature","decls","vars","template","TuiTooltipStyles_Template","rf","ctx","styles","encapsulation","changeDetection","ngDevMode","ɵsetClassMetadata","args","None","OnPush","host","class","TuiTooltip","constructor","textfield","optional","isMobile","describe","driver","nothing","state","pipe","hover","initialValue","ngDoCheck","id","tuiHintDescribe","onClick","event","preventDefault","stopPropagation","toggle","TuiTooltip_Factory","ɵdir","ɵɵdefineDirective","hostBindings","TuiTooltip_HostBindings","ɵɵlistener","TuiTooltip_mousedown_HostBindingHandler","$event","ɵɵProvidersFeature","provide","useValue","appearance","useFactory","icon","ɵɵHostDirectivesFeature","directive","inputs","selector","providers","hostDirectives","tuiTooltip"],"sources":["C:/Users/Asus-PC/Downloads/WebLibraryNew/WebLibrary/WebLibraryApp/Frontend/node_modules/@taiga-ui/kit/fesm2022/taiga-ui-kit-directives-tooltip.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, inject, Directive } from '@angular/core';\nimport { toSignal } from '@angular/core/rxjs-interop';\nimport { tuiWatch } from '@taiga-ui/cdk/observables';\nimport { TUI_IS_MOBILE } from '@taiga-ui/cdk/tokens';\nimport { tuiWithStyles } from '@taiga-ui/cdk/utils/miscellaneous';\nimport { TuiTextfieldComponent } from '@taiga-ui/core/components/textfield';\nimport * as i1 from '@taiga-ui/core/directives/appearance';\nimport { tuiAppearanceState, TUI_APPEARANCE_OPTIONS, TuiWithAppearance } from '@taiga-ui/core/directives/appearance';\nimport * as i2 from '@taiga-ui/core/directives/hint';\nimport { TuiHintDescribe, TuiHintHover, TUI_HINT_OPTIONS, TuiHintDirective } from '@taiga-ui/core/directives/hint';\nimport { TUI_ICON_START } from '@taiga-ui/core/tokens';\nimport { map } from 'rxjs';\n\nclass TuiTooltipStyles {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiTooltipStyles, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiTooltipStyles, isStandalone: true, selector: \"ng-component\", host: { classAttribute: \"tui-tooltip\" }, ngImport: i0, template: '', isInline: true, styles: [\"[tuiTooltip]{border-width:.25rem;border-radius:100%;cursor:pointer;pointer-events:auto}@media (hover: hover){tui-textfield:hover [tuiTooltip][data-appearance=icon]:after{color:var(--tui-text-secondary)}}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiTooltipStyles, decorators: [{\n            type: Component,\n            args: [{ standalone: true, template: '', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: {\n                        class: 'tui-tooltip',\n                    }, styles: [\"[tuiTooltip]{border-width:.25rem;border-radius:100%;cursor:pointer;pointer-events:auto}@media (hover: hover){tui-textfield:hover [tuiTooltip][data-appearance=icon]:after{color:var(--tui-text-secondary)}}\\n\"] }]\n        }] });\nclass TuiTooltip {\n    constructor() {\n        this.textfield = inject(TuiTextfieldComponent, { optional: true });\n        this.isMobile = inject(TUI_IS_MOBILE);\n        this.describe = inject(TuiHintDescribe);\n        this.driver = inject(TuiHintHover);\n        this.nothing = tuiWithStyles(TuiTooltipStyles);\n        this.state = tuiAppearanceState(toSignal(inject(TuiHintHover).pipe(map((hover) => (hover ? 'hover' : null)), tuiWatch()), { initialValue: null }));\n    }\n    ngDoCheck() {\n        if (this.textfield?.id) {\n            this.describe.tuiHintDescribe = this.textfield.id;\n        }\n    }\n    onClick(event) {\n        if (this.isMobile) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        else {\n            this.driver.toggle();\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiTooltip, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiTooltip, isStandalone: true, selector: \"tui-icon[tuiTooltip]\", host: { attributes: { \"tuiTooltip\": \"\" }, listeners: { \"mousedown\": \"onClick($event)\" } }, providers: [\n            {\n                provide: TUI_APPEARANCE_OPTIONS,\n                useValue: { appearance: 'icon' },\n            },\n            {\n                provide: TUI_ICON_START,\n                useFactory: () => inject(TUI_HINT_OPTIONS).icon,\n            },\n        ], hostDirectives: [{ directive: i1.TuiWithAppearance }, { directive: i2.TuiHintDescribe, inputs: [\"tuiHintDescribe\", \"tuiTooltipDescribe\"] }, { directive: i2.TuiHintDirective, inputs: [\"tuiHint\", \"tuiTooltip\", \"tuiHintAppearance\", \"tuiHintAppearance\", \"tuiHintContext\", \"tuiHintContext\"] }], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiTooltip, decorators: [{\n            type: Directive,\n            args: [{\n                    standalone: true,\n                    selector: 'tui-icon[tuiTooltip]',\n                    providers: [\n                        {\n                            provide: TUI_APPEARANCE_OPTIONS,\n                            useValue: { appearance: 'icon' },\n                        },\n                        {\n                            provide: TUI_ICON_START,\n                            useFactory: () => inject(TUI_HINT_OPTIONS).icon,\n                        },\n                    ],\n                    hostDirectives: [\n                        TuiWithAppearance,\n                        {\n                            directive: TuiHintDescribe,\n                            inputs: ['tuiHintDescribe: tuiTooltipDescribe'],\n                        },\n                        {\n                            directive: TuiHintDirective,\n                            inputs: ['tuiHint: tuiTooltip', 'tuiHintAppearance', 'tuiHintContext'],\n                        },\n                    ],\n                    host: {\n                        tuiTooltip: '',\n                        '(mousedown)': 'onClick($event)',\n                    },\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiTooltip };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}