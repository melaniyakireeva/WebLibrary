{"ast":null,"code":"import { tuiCreateToken, tuiProvideOptions, tuiCreateTokenFromFactory, tuiProvide } from '@taiga-ui/cdk/utils/miscellaneous';\nimport * as i0 from '@angular/core';\nimport { Directive, Input, NgModule, ChangeDetectorRef } from '@angular/core';\nimport { AbstractTuiController } from '@taiga-ui/legacy/classes';\nimport { PolymorpheusOutlet, PolymorpheusTemplate } from '@taiga-ui/polymorpheus';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { tuiWatch } from '@taiga-ui/cdk/observables';\nimport { TUI_TEXTFIELD_APPEARANCE } from '@taiga-ui/legacy/tokens';\nimport { merge, NEVER } from 'rxjs';\nclass TuiTextfieldController {\n  constructor(change$, options, legacyAppearance, appearanceDirective, cleanerDirective, customContentDirective, iconDirective, iconLeftDirective, labelOutsideDirective, sizeDirective, prefixDirective, postfixDirective, fillerDirective) {\n    this.change$ = change$;\n    this.options = options;\n    this.legacyAppearance = legacyAppearance;\n    this.appearanceDirective = appearanceDirective;\n    this.cleanerDirective = cleanerDirective;\n    this.customContentDirective = customContentDirective;\n    this.iconDirective = iconDirective;\n    this.iconLeftDirective = iconLeftDirective;\n    this.labelOutsideDirective = labelOutsideDirective;\n    this.sizeDirective = sizeDirective;\n    this.prefixDirective = prefixDirective;\n    this.postfixDirective = postfixDirective;\n    this.fillerDirective = fillerDirective;\n  }\n  get appearance() {\n    return this.appearanceDirective.appearance || this.legacyAppearance;\n  }\n  get cleaner() {\n    return this.cleanerDirective.cleaner;\n  }\n  get customContent() {\n    return this.customContentDirective.customContent || '';\n  }\n  get icon() {\n    return this.iconDirective.icon;\n  }\n  get iconStart() {\n    return this.iconLeftDirective.iconStart;\n  }\n  get labelOutside() {\n    return this.labelOutsideDirective.labelOutside;\n  }\n  get size() {\n    return this.sizeDirective.size;\n  }\n  get prefix() {\n    return this.prefixDirective.prefix;\n  }\n  get postfix() {\n    return this.postfixDirective.postfix;\n  }\n  get filler() {\n    return this.fillerDirective.filler;\n  }\n}\n\n/**\n * @deprecated: drop in v5.0\n * Default values for primitive textfield options\n */\nconst TUI_TEXTFIELD_DEFAULT_OPTIONS = {\n  iconCleaner: '@tui.x',\n  hintOnDisabled: false\n};\n/**\n * @deprecated: drop in v5.0\n * Default parameters for textfield\n */\nconst TUI_TEXTFIELD_OPTIONS = tuiCreateToken(TUI_TEXTFIELD_DEFAULT_OPTIONS);\nfunction tuiTextfieldOptionsProvider(options) {\n  return tuiProvideOptions(TUI_TEXTFIELD_OPTIONS, options, TUI_TEXTFIELD_DEFAULT_OPTIONS);\n}\nconst TUI_TEXTFIELD_APPEARANCE_DIRECTIVE = tuiCreateTokenFromFactory(() => new TuiTextfieldAppearanceDirective());\nclass TuiTextfieldAppearanceDirective extends AbstractTuiController {\n  constructor() {\n    super(...arguments);\n    // it's an empty string by default for backward compatibility\n    // (see comment https://github.com/taiga-family/taiga-ui/pull/3007#issuecomment-1315179508)\n    this.appearance = '';\n  }\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵTuiTextfieldAppearanceDirective_BaseFactory;\n      return function TuiTextfieldAppearanceDirective_Factory(__ngFactoryType__) {\n        return (ɵTuiTextfieldAppearanceDirective_BaseFactory || (ɵTuiTextfieldAppearanceDirective_BaseFactory = i0.ɵɵgetInheritedFactory(TuiTextfieldAppearanceDirective)))(__ngFactoryType__ || TuiTextfieldAppearanceDirective);\n      };\n    })();\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: TuiTextfieldAppearanceDirective,\n      selectors: [[\"\", \"tuiTextfieldAppearance\", \"\"]],\n      inputs: {\n        appearance: [0, \"tuiTextfieldAppearance\", \"appearance\"]\n      },\n      features: [i0.ɵɵProvidersFeature([tuiProvide(TUI_TEXTFIELD_APPEARANCE_DIRECTIVE, TuiTextfieldAppearanceDirective)]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiTextfieldAppearanceDirective, [{\n    type: Directive,\n    args: [{\n      standalone: false,\n      selector: '[tuiTextfieldAppearance]',\n      providers: [tuiProvide(TUI_TEXTFIELD_APPEARANCE_DIRECTIVE, TuiTextfieldAppearanceDirective)]\n    }]\n  }], null, {\n    appearance: [{\n      type: Input,\n      args: ['tuiTextfieldAppearance']\n    }]\n  });\n})();\nconst TUI_TEXTFIELD_CLEANER = tuiCreateTokenFromFactory(() => new TuiTextfieldCleanerDirective());\nclass TuiTextfieldCleanerDirective extends AbstractTuiController {\n  constructor() {\n    super(...arguments);\n    this.cleaner = false;\n  }\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵTuiTextfieldCleanerDirective_BaseFactory;\n      return function TuiTextfieldCleanerDirective_Factory(__ngFactoryType__) {\n        return (ɵTuiTextfieldCleanerDirective_BaseFactory || (ɵTuiTextfieldCleanerDirective_BaseFactory = i0.ɵɵgetInheritedFactory(TuiTextfieldCleanerDirective)))(__ngFactoryType__ || TuiTextfieldCleanerDirective);\n      };\n    })();\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: TuiTextfieldCleanerDirective,\n      selectors: [[\"\", \"tuiTextfieldCleaner\", \"\"]],\n      inputs: {\n        cleaner: [0, \"tuiTextfieldCleaner\", \"cleaner\"]\n      },\n      features: [i0.ɵɵProvidersFeature([tuiProvide(TUI_TEXTFIELD_CLEANER, TuiTextfieldCleanerDirective)]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiTextfieldCleanerDirective, [{\n    type: Directive,\n    args: [{\n      standalone: false,\n      selector: '[tuiTextfieldCleaner]',\n      providers: [tuiProvide(TUI_TEXTFIELD_CLEANER, TuiTextfieldCleanerDirective)]\n    }]\n  }], null, {\n    cleaner: [{\n      type: Input,\n      args: ['tuiTextfieldCleaner']\n    }]\n  });\n})();\nconst TUI_TEXTFIELD_CUSTOM_CONTENT = tuiCreateTokenFromFactory(() => new TuiTextfieldCustomContentDirective());\nclass TuiTextfieldCustomContentDirective extends AbstractTuiController {\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵTuiTextfieldCustomContentDirective_BaseFactory;\n      return function TuiTextfieldCustomContentDirective_Factory(__ngFactoryType__) {\n        return (ɵTuiTextfieldCustomContentDirective_BaseFactory || (ɵTuiTextfieldCustomContentDirective_BaseFactory = i0.ɵɵgetInheritedFactory(TuiTextfieldCustomContentDirective)))(__ngFactoryType__ || TuiTextfieldCustomContentDirective);\n      };\n    })();\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: TuiTextfieldCustomContentDirective,\n      selectors: [[\"\", \"tuiTextfieldCustomContent\", \"\"]],\n      inputs: {\n        customContent: [0, \"tuiTextfieldCustomContent\", \"customContent\"]\n      },\n      features: [i0.ɵɵProvidersFeature([tuiProvide(TUI_TEXTFIELD_CUSTOM_CONTENT, TuiTextfieldCustomContentDirective)]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiTextfieldCustomContentDirective, [{\n    type: Directive,\n    args: [{\n      standalone: false,\n      selector: '[tuiTextfieldCustomContent]',\n      providers: [tuiProvide(TUI_TEXTFIELD_CUSTOM_CONTENT, TuiTextfieldCustomContentDirective)]\n    }]\n  }], null, {\n    customContent: [{\n      type: Input,\n      args: ['tuiTextfieldCustomContent']\n    }]\n  });\n})();\nconst TUI_TEXTFIELD_FILLER = tuiCreateTokenFromFactory(() => new TuiTextfieldFillerDirective());\nclass TuiTextfieldFillerDirective extends AbstractTuiController {\n  constructor() {\n    super(...arguments);\n    this.filler = '';\n  }\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵTuiTextfieldFillerDirective_BaseFactory;\n      return function TuiTextfieldFillerDirective_Factory(__ngFactoryType__) {\n        return (ɵTuiTextfieldFillerDirective_BaseFactory || (ɵTuiTextfieldFillerDirective_BaseFactory = i0.ɵɵgetInheritedFactory(TuiTextfieldFillerDirective)))(__ngFactoryType__ || TuiTextfieldFillerDirective);\n      };\n    })();\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: TuiTextfieldFillerDirective,\n      selectors: [[\"\", \"tuiTextfieldFiller\", \"\"]],\n      inputs: {\n        filler: [0, \"tuiTextfieldFiller\", \"filler\"]\n      },\n      features: [i0.ɵɵProvidersFeature([tuiProvide(TUI_TEXTFIELD_FILLER, TuiTextfieldFillerDirective)]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiTextfieldFillerDirective, [{\n    type: Directive,\n    args: [{\n      standalone: false,\n      selector: '[tuiTextfieldFiller]',\n      providers: [tuiProvide(TUI_TEXTFIELD_FILLER, TuiTextfieldFillerDirective)]\n    }]\n  }], null, {\n    filler: [{\n      type: Input,\n      args: ['tuiTextfieldFiller']\n    }]\n  });\n})();\nconst TUI_TEXTFIELD_ICON = tuiCreateTokenFromFactory(() => new TuiTextfieldIconDirective());\nclass TuiTextfieldIconDirective extends AbstractTuiController {\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵTuiTextfieldIconDirective_BaseFactory;\n      return function TuiTextfieldIconDirective_Factory(__ngFactoryType__) {\n        return (ɵTuiTextfieldIconDirective_BaseFactory || (ɵTuiTextfieldIconDirective_BaseFactory = i0.ɵɵgetInheritedFactory(TuiTextfieldIconDirective)))(__ngFactoryType__ || TuiTextfieldIconDirective);\n      };\n    })();\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: TuiTextfieldIconDirective,\n      selectors: [[\"\", \"tuiTextfieldIcon\", \"\"]],\n      inputs: {\n        icon: [0, \"tuiTextfieldIcon\", \"icon\"]\n      },\n      features: [i0.ɵɵProvidersFeature([tuiProvide(TUI_TEXTFIELD_ICON, TuiTextfieldIconDirective)]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiTextfieldIconDirective, [{\n    type: Directive,\n    args: [{\n      standalone: false,\n      selector: '[tuiTextfieldIcon]',\n      providers: [tuiProvide(TUI_TEXTFIELD_ICON, TuiTextfieldIconDirective)]\n    }]\n  }], null, {\n    icon: [{\n      type: Input,\n      args: ['tuiTextfieldIcon']\n    }]\n  });\n})();\nconst TUI_TEXTFIELD_ICON_LEFT = tuiCreateTokenFromFactory(() => new TuiTextfieldIconLeftDirective());\nclass TuiTextfieldIconLeftDirective extends AbstractTuiController {\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵTuiTextfieldIconLeftDirective_BaseFactory;\n      return function TuiTextfieldIconLeftDirective_Factory(__ngFactoryType__) {\n        return (ɵTuiTextfieldIconLeftDirective_BaseFactory || (ɵTuiTextfieldIconLeftDirective_BaseFactory = i0.ɵɵgetInheritedFactory(TuiTextfieldIconLeftDirective)))(__ngFactoryType__ || TuiTextfieldIconLeftDirective);\n      };\n    })();\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: TuiTextfieldIconLeftDirective,\n      selectors: [[\"\", \"tuiTextfieldIconLeft\", \"\"]],\n      inputs: {\n        iconStart: [0, \"tuiTextfieldIconLeft\", \"iconStart\"]\n      },\n      features: [i0.ɵɵProvidersFeature([tuiProvide(TUI_TEXTFIELD_ICON_LEFT, TuiTextfieldIconLeftDirective)]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiTextfieldIconLeftDirective, [{\n    type: Directive,\n    args: [{\n      standalone: false,\n      selector: '[tuiTextfieldIconLeft]',\n      providers: [tuiProvide(TUI_TEXTFIELD_ICON_LEFT, TuiTextfieldIconLeftDirective)]\n    }]\n  }], null, {\n    iconStart: [{\n      type: Input,\n      args: ['tuiTextfieldIconLeft']\n    }]\n  });\n})();\nconst TUI_TEXTFIELD_LABEL_OUTSIDE = tuiCreateTokenFromFactory(() => new TuiTextfieldLabelOutsideDirective());\nclass TuiTextfieldLabelOutsideDirective extends AbstractTuiController {\n  constructor() {\n    super(...arguments);\n    this.labelOutside = false;\n  }\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵTuiTextfieldLabelOutsideDirective_BaseFactory;\n      return function TuiTextfieldLabelOutsideDirective_Factory(__ngFactoryType__) {\n        return (ɵTuiTextfieldLabelOutsideDirective_BaseFactory || (ɵTuiTextfieldLabelOutsideDirective_BaseFactory = i0.ɵɵgetInheritedFactory(TuiTextfieldLabelOutsideDirective)))(__ngFactoryType__ || TuiTextfieldLabelOutsideDirective);\n      };\n    })();\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: TuiTextfieldLabelOutsideDirective,\n      selectors: [[\"\", \"tuiTextfieldLabelOutside\", \"\"]],\n      inputs: {\n        labelOutside: [0, \"tuiTextfieldLabelOutside\", \"labelOutside\"]\n      },\n      features: [i0.ɵɵProvidersFeature([tuiProvide(TUI_TEXTFIELD_LABEL_OUTSIDE, TuiTextfieldLabelOutsideDirective)]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiTextfieldLabelOutsideDirective, [{\n    type: Directive,\n    args: [{\n      standalone: false,\n      selector: '[tuiTextfieldLabelOutside]',\n      providers: [tuiProvide(TUI_TEXTFIELD_LABEL_OUTSIDE, TuiTextfieldLabelOutsideDirective)]\n    }]\n  }], null, {\n    labelOutside: [{\n      type: Input,\n      args: ['tuiTextfieldLabelOutside']\n    }]\n  });\n})();\nconst TUI_TEXTFIELD_POSTFIX = tuiCreateTokenFromFactory(() => new TuiTextfieldPostfixDirective());\nclass TuiTextfieldPostfixDirective extends AbstractTuiController {\n  constructor() {\n    super(...arguments);\n    this.postfix = '';\n  }\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵTuiTextfieldPostfixDirective_BaseFactory;\n      return function TuiTextfieldPostfixDirective_Factory(__ngFactoryType__) {\n        return (ɵTuiTextfieldPostfixDirective_BaseFactory || (ɵTuiTextfieldPostfixDirective_BaseFactory = i0.ɵɵgetInheritedFactory(TuiTextfieldPostfixDirective)))(__ngFactoryType__ || TuiTextfieldPostfixDirective);\n      };\n    })();\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: TuiTextfieldPostfixDirective,\n      selectors: [[\"\", \"tuiTextfieldPostfix\", \"\"]],\n      inputs: {\n        postfix: [0, \"tuiTextfieldPostfix\", \"postfix\"]\n      },\n      features: [i0.ɵɵProvidersFeature([tuiProvide(TUI_TEXTFIELD_POSTFIX, TuiTextfieldPostfixDirective)]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiTextfieldPostfixDirective, [{\n    type: Directive,\n    args: [{\n      standalone: false,\n      selector: '[tuiTextfieldPostfix]',\n      providers: [tuiProvide(TUI_TEXTFIELD_POSTFIX, TuiTextfieldPostfixDirective)]\n    }]\n  }], null, {\n    postfix: [{\n      type: Input,\n      args: ['tuiTextfieldPostfix']\n    }]\n  });\n})();\nconst TUI_TEXTFIELD_PREFIX = tuiCreateTokenFromFactory(() => new TuiTextfieldPrefixDirective());\nclass TuiTextfieldPrefixDirective extends AbstractTuiController {\n  constructor() {\n    super(...arguments);\n    this.prefix = '';\n  }\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵTuiTextfieldPrefixDirective_BaseFactory;\n      return function TuiTextfieldPrefixDirective_Factory(__ngFactoryType__) {\n        return (ɵTuiTextfieldPrefixDirective_BaseFactory || (ɵTuiTextfieldPrefixDirective_BaseFactory = i0.ɵɵgetInheritedFactory(TuiTextfieldPrefixDirective)))(__ngFactoryType__ || TuiTextfieldPrefixDirective);\n      };\n    })();\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: TuiTextfieldPrefixDirective,\n      selectors: [[\"\", \"tuiTextfieldPrefix\", \"\"]],\n      inputs: {\n        prefix: [0, \"tuiTextfieldPrefix\", \"prefix\"]\n      },\n      features: [i0.ɵɵProvidersFeature([tuiProvide(TUI_TEXTFIELD_PREFIX, TuiTextfieldPrefixDirective)]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiTextfieldPrefixDirective, [{\n    type: Directive,\n    args: [{\n      standalone: false,\n      selector: '[tuiTextfieldPrefix]',\n      providers: [tuiProvide(TUI_TEXTFIELD_PREFIX, TuiTextfieldPrefixDirective)]\n    }]\n  }], null, {\n    prefix: [{\n      type: Input,\n      args: ['tuiTextfieldPrefix']\n    }]\n  });\n})();\nconst TUI_TEXTFIELD_SIZE = tuiCreateTokenFromFactory(() => new TuiTextfieldSizeDirective());\nclass TuiTextfieldSizeDirective extends AbstractTuiController {\n  constructor() {\n    super(...arguments);\n    this.size = 'l';\n  }\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵTuiTextfieldSizeDirective_BaseFactory;\n      return function TuiTextfieldSizeDirective_Factory(__ngFactoryType__) {\n        return (ɵTuiTextfieldSizeDirective_BaseFactory || (ɵTuiTextfieldSizeDirective_BaseFactory = i0.ɵɵgetInheritedFactory(TuiTextfieldSizeDirective)))(__ngFactoryType__ || TuiTextfieldSizeDirective);\n      };\n    })();\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: TuiTextfieldSizeDirective,\n      selectors: [[\"\", \"tuiTextfieldSize\", \"\"]],\n      inputs: {\n        size: [0, \"tuiTextfieldSize\", \"size\"]\n      },\n      features: [i0.ɵɵProvidersFeature([tuiProvide(TUI_TEXTFIELD_SIZE, TuiTextfieldSizeDirective)]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiTextfieldSizeDirective, [{\n    type: Directive,\n    args: [{\n      standalone: false,\n      selector: '[tuiTextfieldSize]',\n      providers: [tuiProvide(TUI_TEXTFIELD_SIZE, TuiTextfieldSizeDirective)]\n    }]\n  }], null, {\n    size: [{\n      type: Input,\n      args: ['tuiTextfieldSize']\n    }]\n  });\n})();\nclass TuiTextfieldControllerModule {\n  static {\n    this.ɵfac = function TuiTextfieldControllerModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiTextfieldControllerModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: TuiTextfieldControllerModule,\n      declarations: [TuiTextfieldAppearanceDirective, TuiTextfieldCleanerDirective, TuiTextfieldCustomContentDirective, TuiTextfieldLabelOutsideDirective, TuiTextfieldSizeDirective, TuiTextfieldIconDirective, TuiTextfieldIconLeftDirective, TuiTextfieldPrefixDirective, TuiTextfieldPostfixDirective, TuiTextfieldFillerDirective],\n      imports: [PolymorpheusOutlet, PolymorpheusTemplate],\n      exports: [TuiTextfieldAppearanceDirective, TuiTextfieldCleanerDirective, TuiTextfieldCustomContentDirective, TuiTextfieldLabelOutsideDirective, TuiTextfieldSizeDirective, TuiTextfieldIconDirective, TuiTextfieldIconLeftDirective, TuiTextfieldPrefixDirective, TuiTextfieldPostfixDirective, TuiTextfieldFillerDirective, PolymorpheusOutlet, PolymorpheusTemplate]\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiTextfieldControllerModule, [{\n    type: NgModule,\n    args: [{\n      imports: [PolymorpheusOutlet, PolymorpheusTemplate],\n      declarations: [TuiTextfieldAppearanceDirective, TuiTextfieldCleanerDirective, TuiTextfieldCustomContentDirective, TuiTextfieldLabelOutsideDirective, TuiTextfieldSizeDirective, TuiTextfieldIconDirective, TuiTextfieldIconLeftDirective, TuiTextfieldPrefixDirective, TuiTextfieldPostfixDirective, TuiTextfieldFillerDirective],\n      exports: [TuiTextfieldAppearanceDirective, TuiTextfieldCleanerDirective, TuiTextfieldCustomContentDirective, TuiTextfieldLabelOutsideDirective, TuiTextfieldSizeDirective, TuiTextfieldIconDirective, TuiTextfieldIconLeftDirective, TuiTextfieldPrefixDirective, TuiTextfieldPostfixDirective, TuiTextfieldFillerDirective, PolymorpheusOutlet, PolymorpheusTemplate]\n    }]\n  }], null, null);\n})();\nconst TUI_TEXTFIELD_WATCHED_CONTROLLER = tuiCreateToken();\nconst TEXTFIELD_CONTROLLER_PROVIDER = [{\n  provide: TUI_TEXTFIELD_WATCHED_CONTROLLER,\n  deps: [ChangeDetectorRef, TUI_TEXTFIELD_OPTIONS, TUI_TEXTFIELD_APPEARANCE, TUI_TEXTFIELD_APPEARANCE_DIRECTIVE, TUI_TEXTFIELD_CLEANER, TUI_TEXTFIELD_CUSTOM_CONTENT, TUI_TEXTFIELD_ICON, TUI_TEXTFIELD_ICON_LEFT, TUI_TEXTFIELD_LABEL_OUTSIDE, TUI_TEXTFIELD_SIZE, TUI_TEXTFIELD_PREFIX, TUI_TEXTFIELD_POSTFIX, TUI_TEXTFIELD_FILLER],\n  useFactory: (cdr, options, legacyAppearance, ...controllers) => {\n    const change$ = merge(...controllers.map(({\n      change$\n    }) => change$ || NEVER)).pipe(tuiWatch(cdr), takeUntilDestroyed());\n    change$.subscribe();\n    return new TuiTextfieldController(change$, options, legacyAppearance, ...controllers);\n  }\n}];\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TEXTFIELD_CONTROLLER_PROVIDER, TUI_TEXTFIELD_APPEARANCE_DIRECTIVE, TUI_TEXTFIELD_CLEANER, TUI_TEXTFIELD_CUSTOM_CONTENT, TUI_TEXTFIELD_DEFAULT_OPTIONS, TUI_TEXTFIELD_FILLER, TUI_TEXTFIELD_ICON, TUI_TEXTFIELD_ICON_LEFT, TUI_TEXTFIELD_LABEL_OUTSIDE, TUI_TEXTFIELD_OPTIONS, TUI_TEXTFIELD_POSTFIX, TUI_TEXTFIELD_PREFIX, TUI_TEXTFIELD_SIZE, TUI_TEXTFIELD_WATCHED_CONTROLLER, TuiTextfieldAppearanceDirective, TuiTextfieldCleanerDirective, TuiTextfieldController, TuiTextfieldControllerModule, TuiTextfieldCustomContentDirective, TuiTextfieldFillerDirective, TuiTextfieldIconDirective, TuiTextfieldIconLeftDirective, TuiTextfieldLabelOutsideDirective, TuiTextfieldPostfixDirective, TuiTextfieldPrefixDirective, TuiTextfieldSizeDirective, tuiTextfieldOptionsProvider };","map":{"version":3,"names":["tuiCreateToken","tuiProvideOptions","tuiCreateTokenFromFactory","tuiProvide","i0","Directive","Input","NgModule","ChangeDetectorRef","AbstractTuiController","PolymorpheusOutlet","PolymorpheusTemplate","takeUntilDestroyed","tuiWatch","TUI_TEXTFIELD_APPEARANCE","merge","NEVER","TuiTextfieldController","constructor","change$","options","legacyAppearance","appearanceDirective","cleanerDirective","customContentDirective","iconDirective","iconLeftDirective","labelOutsideDirective","sizeDirective","prefixDirective","postfixDirective","fillerDirective","appearance","cleaner","customContent","icon","iconStart","labelOutside","size","prefix","postfix","filler","TUI_TEXTFIELD_DEFAULT_OPTIONS","iconCleaner","hintOnDisabled","TUI_TEXTFIELD_OPTIONS","tuiTextfieldOptionsProvider","TUI_TEXTFIELD_APPEARANCE_DIRECTIVE","TuiTextfieldAppearanceDirective","arguments","ɵfac","ɵTuiTextfieldAppearanceDirective_BaseFactory","TuiTextfieldAppearanceDirective_Factory","__ngFactoryType__","ɵɵgetInheritedFactory","ɵdir","ɵɵdefineDirective","type","selectors","inputs","features","ɵɵProvidersFeature","ɵɵInheritDefinitionFeature","ngDevMode","ɵsetClassMetadata","args","standalone","selector","providers","TUI_TEXTFIELD_CLEANER","TuiTextfieldCleanerDirective","ɵTuiTextfieldCleanerDirective_BaseFactory","TuiTextfieldCleanerDirective_Factory","TUI_TEXTFIELD_CUSTOM_CONTENT","TuiTextfieldCustomContentDirective","ɵTuiTextfieldCustomContentDirective_BaseFactory","TuiTextfieldCustomContentDirective_Factory","TUI_TEXTFIELD_FILLER","TuiTextfieldFillerDirective","ɵTuiTextfieldFillerDirective_BaseFactory","TuiTextfieldFillerDirective_Factory","TUI_TEXTFIELD_ICON","TuiTextfieldIconDirective","ɵTuiTextfieldIconDirective_BaseFactory","TuiTextfieldIconDirective_Factory","TUI_TEXTFIELD_ICON_LEFT","TuiTextfieldIconLeftDirective","ɵTuiTextfieldIconLeftDirective_BaseFactory","TuiTextfieldIconLeftDirective_Factory","TUI_TEXTFIELD_LABEL_OUTSIDE","TuiTextfieldLabelOutsideDirective","ɵTuiTextfieldLabelOutsideDirective_BaseFactory","TuiTextfieldLabelOutsideDirective_Factory","TUI_TEXTFIELD_POSTFIX","TuiTextfieldPostfixDirective","ɵTuiTextfieldPostfixDirective_BaseFactory","TuiTextfieldPostfixDirective_Factory","TUI_TEXTFIELD_PREFIX","TuiTextfieldPrefixDirective","ɵTuiTextfieldPrefixDirective_BaseFactory","TuiTextfieldPrefixDirective_Factory","TUI_TEXTFIELD_SIZE","TuiTextfieldSizeDirective","ɵTuiTextfieldSizeDirective_BaseFactory","TuiTextfieldSizeDirective_Factory","TuiTextfieldControllerModule","TuiTextfieldControllerModule_Factory","ɵmod","ɵɵdefineNgModule","declarations","imports","exports","ɵinj","ɵɵdefineInjector","TUI_TEXTFIELD_WATCHED_CONTROLLER","TEXTFIELD_CONTROLLER_PROVIDER","provide","deps","useFactory","cdr","controllers","map","pipe","subscribe"],"sources":["C:/Users/Asus-PC/Downloads/WebLibraryNew/WebLibrary/WebLibraryApp/Frontend/node_modules/@taiga-ui/legacy/fesm2022/taiga-ui-legacy-directives-textfield-controller.mjs"],"sourcesContent":["import { tuiCreateToken, tuiProvideOptions, tuiCreateTokenFromFactory, tuiProvide } from '@taiga-ui/cdk/utils/miscellaneous';\nimport * as i0 from '@angular/core';\nimport { Directive, Input, NgModule, ChangeDetectorRef } from '@angular/core';\nimport { AbstractTuiController } from '@taiga-ui/legacy/classes';\nimport { PolymorpheusOutlet, PolymorpheusTemplate } from '@taiga-ui/polymorpheus';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { tuiWatch } from '@taiga-ui/cdk/observables';\nimport { TUI_TEXTFIELD_APPEARANCE } from '@taiga-ui/legacy/tokens';\nimport { merge, NEVER } from 'rxjs';\n\nclass TuiTextfieldController {\n    constructor(change$, options, legacyAppearance, appearanceDirective, cleanerDirective, customContentDirective, iconDirective, iconLeftDirective, labelOutsideDirective, sizeDirective, prefixDirective, postfixDirective, fillerDirective) {\n        this.change$ = change$;\n        this.options = options;\n        this.legacyAppearance = legacyAppearance;\n        this.appearanceDirective = appearanceDirective;\n        this.cleanerDirective = cleanerDirective;\n        this.customContentDirective = customContentDirective;\n        this.iconDirective = iconDirective;\n        this.iconLeftDirective = iconLeftDirective;\n        this.labelOutsideDirective = labelOutsideDirective;\n        this.sizeDirective = sizeDirective;\n        this.prefixDirective = prefixDirective;\n        this.postfixDirective = postfixDirective;\n        this.fillerDirective = fillerDirective;\n    }\n    get appearance() {\n        return this.appearanceDirective.appearance || this.legacyAppearance;\n    }\n    get cleaner() {\n        return this.cleanerDirective.cleaner;\n    }\n    get customContent() {\n        return this.customContentDirective.customContent || '';\n    }\n    get icon() {\n        return this.iconDirective.icon;\n    }\n    get iconStart() {\n        return this.iconLeftDirective.iconStart;\n    }\n    get labelOutside() {\n        return this.labelOutsideDirective.labelOutside;\n    }\n    get size() {\n        return this.sizeDirective.size;\n    }\n    get prefix() {\n        return this.prefixDirective.prefix;\n    }\n    get postfix() {\n        return this.postfixDirective.postfix;\n    }\n    get filler() {\n        return this.fillerDirective.filler;\n    }\n}\n\n/**\n * @deprecated: drop in v5.0\n * Default values for primitive textfield options\n */\nconst TUI_TEXTFIELD_DEFAULT_OPTIONS = {\n    iconCleaner: '@tui.x',\n    hintOnDisabled: false,\n};\n/**\n * @deprecated: drop in v5.0\n * Default parameters for textfield\n */\nconst TUI_TEXTFIELD_OPTIONS = tuiCreateToken(TUI_TEXTFIELD_DEFAULT_OPTIONS);\nfunction tuiTextfieldOptionsProvider(options) {\n    return tuiProvideOptions(TUI_TEXTFIELD_OPTIONS, options, TUI_TEXTFIELD_DEFAULT_OPTIONS);\n}\n\nconst TUI_TEXTFIELD_APPEARANCE_DIRECTIVE = tuiCreateTokenFromFactory(() => new TuiTextfieldAppearanceDirective());\nclass TuiTextfieldAppearanceDirective extends AbstractTuiController {\n    constructor() {\n        super(...arguments);\n        // it's an empty string by default for backward compatibility\n        // (see comment https://github.com/taiga-family/taiga-ui/pull/3007#issuecomment-1315179508)\n        this.appearance = '';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiTextfieldAppearanceDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiTextfieldAppearanceDirective, selector: \"[tuiTextfieldAppearance]\", inputs: { appearance: [\"tuiTextfieldAppearance\", \"appearance\"] }, providers: [\n            tuiProvide(TUI_TEXTFIELD_APPEARANCE_DIRECTIVE, TuiTextfieldAppearanceDirective),\n        ], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiTextfieldAppearanceDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    standalone: false,\n                    selector: '[tuiTextfieldAppearance]',\n                    providers: [\n                        tuiProvide(TUI_TEXTFIELD_APPEARANCE_DIRECTIVE, TuiTextfieldAppearanceDirective),\n                    ],\n                }]\n        }], propDecorators: { appearance: [{\n                type: Input,\n                args: ['tuiTextfieldAppearance']\n            }] } });\n\nconst TUI_TEXTFIELD_CLEANER = tuiCreateTokenFromFactory(() => new TuiTextfieldCleanerDirective());\nclass TuiTextfieldCleanerDirective extends AbstractTuiController {\n    constructor() {\n        super(...arguments);\n        this.cleaner = false;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiTextfieldCleanerDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiTextfieldCleanerDirective, selector: \"[tuiTextfieldCleaner]\", inputs: { cleaner: [\"tuiTextfieldCleaner\", \"cleaner\"] }, providers: [tuiProvide(TUI_TEXTFIELD_CLEANER, TuiTextfieldCleanerDirective)], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiTextfieldCleanerDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    standalone: false,\n                    selector: '[tuiTextfieldCleaner]',\n                    providers: [tuiProvide(TUI_TEXTFIELD_CLEANER, TuiTextfieldCleanerDirective)],\n                }]\n        }], propDecorators: { cleaner: [{\n                type: Input,\n                args: ['tuiTextfieldCleaner']\n            }] } });\n\nconst TUI_TEXTFIELD_CUSTOM_CONTENT = tuiCreateTokenFromFactory(() => new TuiTextfieldCustomContentDirective());\nclass TuiTextfieldCustomContentDirective extends AbstractTuiController {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiTextfieldCustomContentDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiTextfieldCustomContentDirective, selector: \"[tuiTextfieldCustomContent]\", inputs: { customContent: [\"tuiTextfieldCustomContent\", \"customContent\"] }, providers: [\n            tuiProvide(TUI_TEXTFIELD_CUSTOM_CONTENT, TuiTextfieldCustomContentDirective),\n        ], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiTextfieldCustomContentDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    standalone: false,\n                    selector: '[tuiTextfieldCustomContent]',\n                    providers: [\n                        tuiProvide(TUI_TEXTFIELD_CUSTOM_CONTENT, TuiTextfieldCustomContentDirective),\n                    ],\n                }]\n        }], propDecorators: { customContent: [{\n                type: Input,\n                args: ['tuiTextfieldCustomContent']\n            }] } });\n\nconst TUI_TEXTFIELD_FILLER = tuiCreateTokenFromFactory(() => new TuiTextfieldFillerDirective());\nclass TuiTextfieldFillerDirective extends AbstractTuiController {\n    constructor() {\n        super(...arguments);\n        this.filler = '';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiTextfieldFillerDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiTextfieldFillerDirective, selector: \"[tuiTextfieldFiller]\", inputs: { filler: [\"tuiTextfieldFiller\", \"filler\"] }, providers: [tuiProvide(TUI_TEXTFIELD_FILLER, TuiTextfieldFillerDirective)], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiTextfieldFillerDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    standalone: false,\n                    selector: '[tuiTextfieldFiller]',\n                    providers: [tuiProvide(TUI_TEXTFIELD_FILLER, TuiTextfieldFillerDirective)],\n                }]\n        }], propDecorators: { filler: [{\n                type: Input,\n                args: ['tuiTextfieldFiller']\n            }] } });\n\nconst TUI_TEXTFIELD_ICON = tuiCreateTokenFromFactory(() => new TuiTextfieldIconDirective());\nclass TuiTextfieldIconDirective extends AbstractTuiController {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiTextfieldIconDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiTextfieldIconDirective, selector: \"[tuiTextfieldIcon]\", inputs: { icon: [\"tuiTextfieldIcon\", \"icon\"] }, providers: [tuiProvide(TUI_TEXTFIELD_ICON, TuiTextfieldIconDirective)], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiTextfieldIconDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    standalone: false,\n                    selector: '[tuiTextfieldIcon]',\n                    providers: [tuiProvide(TUI_TEXTFIELD_ICON, TuiTextfieldIconDirective)],\n                }]\n        }], propDecorators: { icon: [{\n                type: Input,\n                args: ['tuiTextfieldIcon']\n            }] } });\n\nconst TUI_TEXTFIELD_ICON_LEFT = tuiCreateTokenFromFactory(() => new TuiTextfieldIconLeftDirective());\nclass TuiTextfieldIconLeftDirective extends AbstractTuiController {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiTextfieldIconLeftDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiTextfieldIconLeftDirective, selector: \"[tuiTextfieldIconLeft]\", inputs: { iconStart: [\"tuiTextfieldIconLeft\", \"iconStart\"] }, providers: [tuiProvide(TUI_TEXTFIELD_ICON_LEFT, TuiTextfieldIconLeftDirective)], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiTextfieldIconLeftDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    standalone: false,\n                    selector: '[tuiTextfieldIconLeft]',\n                    providers: [tuiProvide(TUI_TEXTFIELD_ICON_LEFT, TuiTextfieldIconLeftDirective)],\n                }]\n        }], propDecorators: { iconStart: [{\n                type: Input,\n                args: ['tuiTextfieldIconLeft']\n            }] } });\n\nconst TUI_TEXTFIELD_LABEL_OUTSIDE = tuiCreateTokenFromFactory(() => new TuiTextfieldLabelOutsideDirective());\nclass TuiTextfieldLabelOutsideDirective extends AbstractTuiController {\n    constructor() {\n        super(...arguments);\n        this.labelOutside = false;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiTextfieldLabelOutsideDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiTextfieldLabelOutsideDirective, selector: \"[tuiTextfieldLabelOutside]\", inputs: { labelOutside: [\"tuiTextfieldLabelOutside\", \"labelOutside\"] }, providers: [\n            tuiProvide(TUI_TEXTFIELD_LABEL_OUTSIDE, TuiTextfieldLabelOutsideDirective),\n        ], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiTextfieldLabelOutsideDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    standalone: false,\n                    selector: '[tuiTextfieldLabelOutside]',\n                    providers: [\n                        tuiProvide(TUI_TEXTFIELD_LABEL_OUTSIDE, TuiTextfieldLabelOutsideDirective),\n                    ],\n                }]\n        }], propDecorators: { labelOutside: [{\n                type: Input,\n                args: ['tuiTextfieldLabelOutside']\n            }] } });\n\nconst TUI_TEXTFIELD_POSTFIX = tuiCreateTokenFromFactory(() => new TuiTextfieldPostfixDirective());\nclass TuiTextfieldPostfixDirective extends AbstractTuiController {\n    constructor() {\n        super(...arguments);\n        this.postfix = '';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiTextfieldPostfixDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiTextfieldPostfixDirective, selector: \"[tuiTextfieldPostfix]\", inputs: { postfix: [\"tuiTextfieldPostfix\", \"postfix\"] }, providers: [tuiProvide(TUI_TEXTFIELD_POSTFIX, TuiTextfieldPostfixDirective)], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiTextfieldPostfixDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    standalone: false,\n                    selector: '[tuiTextfieldPostfix]',\n                    providers: [tuiProvide(TUI_TEXTFIELD_POSTFIX, TuiTextfieldPostfixDirective)],\n                }]\n        }], propDecorators: { postfix: [{\n                type: Input,\n                args: ['tuiTextfieldPostfix']\n            }] } });\n\nconst TUI_TEXTFIELD_PREFIX = tuiCreateTokenFromFactory(() => new TuiTextfieldPrefixDirective());\nclass TuiTextfieldPrefixDirective extends AbstractTuiController {\n    constructor() {\n        super(...arguments);\n        this.prefix = '';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiTextfieldPrefixDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiTextfieldPrefixDirective, selector: \"[tuiTextfieldPrefix]\", inputs: { prefix: [\"tuiTextfieldPrefix\", \"prefix\"] }, providers: [tuiProvide(TUI_TEXTFIELD_PREFIX, TuiTextfieldPrefixDirective)], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiTextfieldPrefixDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    standalone: false,\n                    selector: '[tuiTextfieldPrefix]',\n                    providers: [tuiProvide(TUI_TEXTFIELD_PREFIX, TuiTextfieldPrefixDirective)],\n                }]\n        }], propDecorators: { prefix: [{\n                type: Input,\n                args: ['tuiTextfieldPrefix']\n            }] } });\n\nconst TUI_TEXTFIELD_SIZE = tuiCreateTokenFromFactory(() => new TuiTextfieldSizeDirective());\nclass TuiTextfieldSizeDirective extends AbstractTuiController {\n    constructor() {\n        super(...arguments);\n        this.size = 'l';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiTextfieldSizeDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiTextfieldSizeDirective, selector: \"[tuiTextfieldSize]\", inputs: { size: [\"tuiTextfieldSize\", \"size\"] }, providers: [tuiProvide(TUI_TEXTFIELD_SIZE, TuiTextfieldSizeDirective)], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiTextfieldSizeDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    standalone: false,\n                    selector: '[tuiTextfieldSize]',\n                    providers: [tuiProvide(TUI_TEXTFIELD_SIZE, TuiTextfieldSizeDirective)],\n                }]\n        }], propDecorators: { size: [{\n                type: Input,\n                args: ['tuiTextfieldSize']\n            }] } });\n\nclass TuiTextfieldControllerModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiTextfieldControllerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiTextfieldControllerModule, declarations: [TuiTextfieldAppearanceDirective,\n            TuiTextfieldCleanerDirective,\n            TuiTextfieldCustomContentDirective,\n            TuiTextfieldLabelOutsideDirective,\n            TuiTextfieldSizeDirective,\n            TuiTextfieldIconDirective,\n            TuiTextfieldIconLeftDirective,\n            TuiTextfieldPrefixDirective,\n            TuiTextfieldPostfixDirective,\n            TuiTextfieldFillerDirective], imports: [PolymorpheusOutlet, PolymorpheusTemplate], exports: [TuiTextfieldAppearanceDirective,\n            TuiTextfieldCleanerDirective,\n            TuiTextfieldCustomContentDirective,\n            TuiTextfieldLabelOutsideDirective,\n            TuiTextfieldSizeDirective,\n            TuiTextfieldIconDirective,\n            TuiTextfieldIconLeftDirective,\n            TuiTextfieldPrefixDirective,\n            TuiTextfieldPostfixDirective,\n            TuiTextfieldFillerDirective,\n            PolymorpheusOutlet,\n            PolymorpheusTemplate] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiTextfieldControllerModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiTextfieldControllerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [PolymorpheusOutlet, PolymorpheusTemplate],\n                    declarations: [\n                        TuiTextfieldAppearanceDirective,\n                        TuiTextfieldCleanerDirective,\n                        TuiTextfieldCustomContentDirective,\n                        TuiTextfieldLabelOutsideDirective,\n                        TuiTextfieldSizeDirective,\n                        TuiTextfieldIconDirective,\n                        TuiTextfieldIconLeftDirective,\n                        TuiTextfieldPrefixDirective,\n                        TuiTextfieldPostfixDirective,\n                        TuiTextfieldFillerDirective,\n                    ],\n                    exports: [\n                        TuiTextfieldAppearanceDirective,\n                        TuiTextfieldCleanerDirective,\n                        TuiTextfieldCustomContentDirective,\n                        TuiTextfieldLabelOutsideDirective,\n                        TuiTextfieldSizeDirective,\n                        TuiTextfieldIconDirective,\n                        TuiTextfieldIconLeftDirective,\n                        TuiTextfieldPrefixDirective,\n                        TuiTextfieldPostfixDirective,\n                        TuiTextfieldFillerDirective,\n                        PolymorpheusOutlet,\n                        PolymorpheusTemplate,\n                    ],\n                }]\n        }] });\n\nconst TUI_TEXTFIELD_WATCHED_CONTROLLER = tuiCreateToken();\nconst TEXTFIELD_CONTROLLER_PROVIDER = [\n    {\n        provide: TUI_TEXTFIELD_WATCHED_CONTROLLER,\n        deps: [\n            ChangeDetectorRef,\n            TUI_TEXTFIELD_OPTIONS,\n            TUI_TEXTFIELD_APPEARANCE,\n            TUI_TEXTFIELD_APPEARANCE_DIRECTIVE,\n            TUI_TEXTFIELD_CLEANER,\n            TUI_TEXTFIELD_CUSTOM_CONTENT,\n            TUI_TEXTFIELD_ICON,\n            TUI_TEXTFIELD_ICON_LEFT,\n            TUI_TEXTFIELD_LABEL_OUTSIDE,\n            TUI_TEXTFIELD_SIZE,\n            TUI_TEXTFIELD_PREFIX,\n            TUI_TEXTFIELD_POSTFIX,\n            TUI_TEXTFIELD_FILLER,\n        ],\n        useFactory: (cdr, options, legacyAppearance, ...controllers) => {\n            const change$ = merge(...controllers.map(({ change$ }) => change$ || NEVER)).pipe(tuiWatch(cdr), takeUntilDestroyed());\n            change$.subscribe();\n            return new TuiTextfieldController(change$, options, legacyAppearance, ...controllers);\n        },\n    },\n];\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TEXTFIELD_CONTROLLER_PROVIDER, TUI_TEXTFIELD_APPEARANCE_DIRECTIVE, TUI_TEXTFIELD_CLEANER, TUI_TEXTFIELD_CUSTOM_CONTENT, TUI_TEXTFIELD_DEFAULT_OPTIONS, TUI_TEXTFIELD_FILLER, TUI_TEXTFIELD_ICON, TUI_TEXTFIELD_ICON_LEFT, TUI_TEXTFIELD_LABEL_OUTSIDE, TUI_TEXTFIELD_OPTIONS, TUI_TEXTFIELD_POSTFIX, TUI_TEXTFIELD_PREFIX, TUI_TEXTFIELD_SIZE, TUI_TEXTFIELD_WATCHED_CONTROLLER, TuiTextfieldAppearanceDirective, TuiTextfieldCleanerDirective, TuiTextfieldController, TuiTextfieldControllerModule, TuiTextfieldCustomContentDirective, TuiTextfieldFillerDirective, TuiTextfieldIconDirective, TuiTextfieldIconLeftDirective, TuiTextfieldLabelOutsideDirective, TuiTextfieldPostfixDirective, TuiTextfieldPrefixDirective, TuiTextfieldSizeDirective, tuiTextfieldOptionsProvider };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}