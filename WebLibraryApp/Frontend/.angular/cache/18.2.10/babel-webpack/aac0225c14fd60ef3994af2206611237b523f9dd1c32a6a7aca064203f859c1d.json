{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { inject, Component, ChangeDetectionStrategy, ViewChild, Directive, NgModule } from '@angular/core';\nimport * as i1 from '@taiga-ui/core/directives/hint';\nimport { TuiHintOptionsDirective, TuiHint } from '@taiga-ui/core/directives/hint';\nimport { TUI_PASSWORD_TEXTS } from '@taiga-ui/kit/tokens';\nimport { AbstractTuiControl, tuiAsControl, AbstractTuiTextfieldHost } from '@taiga-ui/legacy/classes';\nimport * as i4 from '@taiga-ui/legacy/components/primitive-textfield';\nimport { TuiPrimitiveTextfieldComponent, TuiPrimitiveTextfieldModule, TuiTextfieldComponent } from '@taiga-ui/legacy/components/primitive-textfield';\nimport * as i5 from '@taiga-ui/legacy/directives';\nimport { TUI_TEXTFIELD_SIZE, TuiTextfieldControllerModule } from '@taiga-ui/legacy/directives';\nimport { tuiAsFocusableItemAccessor, tuiAsTextfieldHost } from '@taiga-ui/legacy/tokens';\nimport { EMPTY, startWith, map } from 'rxjs';\nimport { tuiCreateToken, tuiProvideOptions } from '@taiga-ui/cdk/utils/miscellaneous';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i3 from '@taiga-ui/polymorpheus';\nimport { PolymorpheusOutlet, PolymorpheusTemplate } from '@taiga-ui/polymorpheus';\nimport * as i6 from '@taiga-ui/core/directives/appearance';\nimport { TuiAppearance } from '@taiga-ui/core/directives/appearance';\nimport * as i7 from '@taiga-ui/core/components/icon';\nimport { TuiIcon } from '@taiga-ui/core/components/icon';\nimport { tuiIsInput } from '@taiga-ui/cdk/utils/dom';\nimport { FormsModule } from '@angular/forms';\n\n/**\n * @deprecated use {@link TuiPassword} with {@link TuiTextfield}\n */\nconst _c0 = [\"*\", [[\"input\"]]];\nconst _c1 = [\"*\", \"input\"];\nconst _c2 = a0 => ({\n  $implicit: a0\n});\nfunction TuiInputPasswordComponent_ng_template_3_ng_container_0_tui_icon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tui-icon\", 7);\n    i0.ɵɵpipe(1, \"async\");\n    i0.ɵɵlistener(\"click\", function TuiInputPasswordComponent_ng_template_3_ng_container_0_tui_icon_1_Template_tui_icon_click_0_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r2 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r2.togglePasswordVisibility());\n    })(\"mousedown.silent.prevent\", function TuiInputPasswordComponent_ng_template_3_ng_container_0_tui_icon_1_Template_tui_icon_mousedown_silent_prevent_0_listener() {\n      i0.ɵɵrestoreView(_r2);\n      return i0.ɵɵresetView(0);\n    })(\"mouseup.silent.prevent\", function TuiInputPasswordComponent_ng_template_3_ng_container_0_tui_icon_1_Template_tui_icon_mouseup_silent_prevent_0_listener() {\n      i0.ɵɵrestoreView(_r2);\n      return i0.ɵɵresetView(0);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const src_r4 = ctx.polymorpheusOutlet;\n    const texts_r5 = i0.ɵɵnextContext().ngIf;\n    const hintContent_r6 = i0.ɵɵreference(3);\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassProp(\"t-icon_small\", ctx_r2.size === \"s\");\n    i0.ɵɵproperty(\"icon\", src_r4.toString())(\"tuiHint\", texts_r5[0] && texts_r5[1] && hintContent_r6)(\"tuiHintAppearance\", i0.ɵɵpipeBind1(1, 6, ctx_r2.computedAppearance$) || \"\")(\"tuiHintDirection\", (ctx_r2.hintOptions == null ? null : ctx_r2.hintOptions.direction) || \"bottom-left\");\n  }\n}\nfunction TuiInputPasswordComponent_ng_template_3_ng_container_0_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const texts_r5 = i0.ɵɵnextContext().ngIf;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.isPasswordHidden ? texts_r5[0] : texts_r5[1], \" \");\n  }\n}\nfunction TuiInputPasswordComponent_ng_template_3_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TuiInputPasswordComponent_ng_template_3_ng_container_0_tui_icon_1_Template, 2, 8, \"tui-icon\", 5)(2, TuiInputPasswordComponent_ng_template_3_ng_container_0_ng_template_2_Template, 1, 1, \"ng-template\", 6, 1, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"polymorpheusOutlet\", ctx_r2.icon)(\"polymorpheusOutletContext\", i0.ɵɵpureFunction1(2, _c2, ctx_r2.size));\n  }\n}\nfunction TuiInputPasswordComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TuiInputPasswordComponent_ng_template_3_ng_container_0_Template, 4, 4, \"ng-container\", 4);\n    i0.ɵɵpipe(1, \"async\");\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(1, 1, ctx_r2.passwordTexts$));\n  }\n}\nconst TUI_INPUT_PASSWORD_DEFAULT_OPTIONS = {\n  icons: {\n    hide: () => '@tui.eye',\n    show: () => '@tui.eye-off'\n  }\n};\n/**\n * @deprecated use {@link TuiPassword} with {@link TuiTextfield}\n */\nconst TUI_INPUT_PASSWORD_OPTIONS = tuiCreateToken(TUI_INPUT_PASSWORD_DEFAULT_OPTIONS);\n/**\n * @deprecated use {@link TuiPassword} with {@link TuiTextfield}\n */\nfunction tuiInputPasswordOptionsProvider(options) {\n  return tuiProvideOptions(TUI_INPUT_PASSWORD_OPTIONS, options, TUI_INPUT_PASSWORD_DEFAULT_OPTIONS);\n}\n\n/**\n * @deprecated use {@link TuiPassword} with {@link TuiTextfield}\n */\nclass TuiInputPasswordComponent extends AbstractTuiControl {\n  constructor() {\n    super(...arguments);\n    this.textfieldSize = inject(TUI_TEXTFIELD_SIZE);\n    this.hintOptions = inject(TuiHintOptionsDirective, {\n      optional: true\n    });\n    this.directive$ = this.hintOptions?.change$ || EMPTY;\n    this.isPasswordHidden = true;\n    this.computedAppearance$ = this.directive$.pipe(startWith(null), map(() => this.hintOptions?.appearance || ''), startWith(''));\n    this.passwordTexts$ = inject(TUI_PASSWORD_TEXTS);\n    this.options = inject(TUI_INPUT_PASSWORD_OPTIONS);\n  }\n  get nativeFocusableElement() {\n    return this.computedDisabled || !this.textfield ? null : this.textfield.nativeFocusableElement;\n  }\n  get focused() {\n    return !!this.textfield?.focused;\n  }\n  get inputType() {\n    return this.isPasswordHidden || this.computedDisabled ? 'password' : 'text';\n  }\n  onValueChange(textValue) {\n    this.value = textValue;\n  }\n  get size() {\n    return this.textfieldSize.size;\n  }\n  get icon() {\n    return this.isPasswordHidden ? this.options.icons.show : this.options.icons.hide;\n  }\n  onFocused(focused) {\n    this.updateFocused(focused);\n  }\n  togglePasswordVisibility() {\n    this.isPasswordHidden = !this.isPasswordHidden;\n  }\n  getFallbackValue() {\n    return '';\n  }\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵTuiInputPasswordComponent_BaseFactory;\n      return function TuiInputPasswordComponent_Factory(__ngFactoryType__) {\n        return (ɵTuiInputPasswordComponent_BaseFactory || (ɵTuiInputPasswordComponent_BaseFactory = i0.ɵɵgetInheritedFactory(TuiInputPasswordComponent)))(__ngFactoryType__ || TuiInputPasswordComponent);\n      };\n    })();\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: TuiInputPasswordComponent,\n      selectors: [[\"tui-input-password\"]],\n      viewQuery: function TuiInputPasswordComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(TuiPrimitiveTextfieldComponent, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.textfield = _t.first);\n        }\n      },\n      hostVars: 1,\n      hostBindings: function TuiInputPasswordComponent_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"data-size\", ctx.size);\n        }\n      },\n      features: [i0.ɵɵProvidersFeature([tuiAsFocusableItemAccessor(TuiInputPasswordComponent), tuiAsControl(TuiInputPasswordComponent)]), i0.ɵɵInheritDefinitionFeature],\n      ngContentSelectors: _c1,\n      decls: 5,\n      vars: 11,\n      consts: [[\"iconContent\", \"polymorpheus\"], [\"hintContent\", \"polymorpheus\"], [1, \"t-textfield\", 3, \"valueChange\", \"focusedChange\", \"disabled\", \"focusable\", \"invalid\", \"nativeId\", \"pseudoActive\", \"pseudoFocus\", \"pseudoHover\", \"readOnly\", \"tuiTextfieldIcon\", \"value\"], [3, \"polymorpheus\"], [4, \"ngIf\"], [\"automation-id\", \"tui-password__icon\", \"tuiAppearance\", \"icon\", \"class\", \"t-icon\", 3, \"t-icon_small\", \"icon\", \"tuiHint\", \"tuiHintAppearance\", \"tuiHintDirection\", \"click\", \"mousedown.silent.prevent\", \"mouseup.silent.prevent\", 4, \"polymorpheusOutlet\", \"polymorpheusOutletContext\"], [\"polymorpheus\", \"\"], [\"automation-id\", \"tui-password__icon\", \"tuiAppearance\", \"icon\", 1, \"t-icon\", 3, \"click\", \"mousedown.silent.prevent\", \"mouseup.silent.prevent\", \"icon\", \"tuiHint\", \"tuiHintAppearance\", \"tuiHintDirection\"]],\n      template: function TuiInputPasswordComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵprojectionDef(_c0);\n          i0.ɵɵelementStart(0, \"tui-primitive-textfield\", 2);\n          i0.ɵɵtwoWayListener(\"valueChange\", function TuiInputPasswordComponent_Template_tui_primitive_textfield_valueChange_0_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            i0.ɵɵtwoWayBindingSet(ctx.value, $event) || (ctx.value = $event);\n            return i0.ɵɵresetView($event);\n          });\n          i0.ɵɵlistener(\"focusedChange\", function TuiInputPasswordComponent_Template_tui_primitive_textfield_focusedChange_0_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.onFocused($event));\n          });\n          i0.ɵɵprojection(1);\n          i0.ɵɵprojection(2, 1, [\"ngProjectAs\", \"input\", 5, [\"input\"]]);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(3, TuiInputPasswordComponent_ng_template_3_Template, 2, 3, \"ng-template\", 3, 0, i0.ɵɵtemplateRefExtractor);\n        }\n        if (rf & 2) {\n          const iconContent_r7 = i0.ɵɵreference(4);\n          i0.ɵɵproperty(\"disabled\", ctx.computedDisabled)(\"focusable\", ctx.focusable)(\"invalid\", ctx.computedInvalid)(\"nativeId\", ctx.nativeId)(\"pseudoActive\", ctx.pseudoActive)(\"pseudoFocus\", ctx.pseudoFocus)(\"pseudoHover\", ctx.pseudoHover)(\"readOnly\", ctx.readOnly)(\"tuiTextfieldIcon\", !ctx.computedDisabled ? iconContent_r7 : \"\");\n          i0.ɵɵtwoWayProperty(\"value\", ctx.value);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"polymorpheus\", ctx.type);\n        }\n      },\n      dependencies: [i1.TuiHintDirective, i2.NgIf, i3.PolymorpheusOutlet, i3.PolymorpheusTemplate, i4.TuiPrimitiveTextfieldComponent, i4.TuiPrimitiveTextfieldDirective, i5.TuiTextfieldIconDirective, i6.TuiAppearance, i7.TuiIcon, i2.AsyncPipe],\n      styles: [\"[_nghost-%COMP%]{display:block;border-radius:var(--tui-radius-m);text-align:start}[_nghost-%COMP%]   *:disabled[_nghost-%COMP%], *:disabled   [_nghost-%COMP%]{pointer-events:none}.t-icon[_ngcontent-%COMP%]{cursor:pointer;pointer-events:auto}.t-icon_small[_ngcontent-%COMP%]{border-width:.25rem}.t-textfield[_ngcontent-%COMP%]{border-radius:inherit;text-align:inherit}\"],\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiInputPasswordComponent, [{\n    type: Component,\n    args: [{\n      standalone: false,\n      selector: 'tui-input-password',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [tuiAsFocusableItemAccessor(TuiInputPasswordComponent), tuiAsControl(TuiInputPasswordComponent)],\n      host: {\n        '[attr.data-size]': 'size'\n      },\n      template: \"<tui-primitive-textfield\\n    class=\\\"t-textfield\\\"\\n    [disabled]=\\\"computedDisabled\\\"\\n    [focusable]=\\\"focusable\\\"\\n    [invalid]=\\\"computedInvalid\\\"\\n    [nativeId]=\\\"nativeId\\\"\\n    [pseudoActive]=\\\"pseudoActive\\\"\\n    [pseudoFocus]=\\\"pseudoFocus\\\"\\n    [pseudoHover]=\\\"pseudoHover\\\"\\n    [readOnly]=\\\"readOnly\\\"\\n    [tuiTextfieldIcon]=\\\"!computedDisabled ? iconContent : ''\\\"\\n    [(value)]=\\\"value\\\"\\n    (focusedChange)=\\\"onFocused($event)\\\"\\n>\\n    <ng-content />\\n    <ng-content\\n        ngProjectAs=\\\"input\\\"\\n        select=\\\"input\\\"\\n    />\\n</tui-primitive-textfield>\\n\\n<ng-template\\n    #iconContent=\\\"polymorpheus\\\"\\n    [polymorpheus]=\\\"type\\\"\\n>\\n    <ng-container *ngIf=\\\"passwordTexts$ | async as texts\\\">\\n        <tui-icon\\n            *polymorpheusOutlet=\\\"icon as src; context: {$implicit: size}\\\"\\n            automation-id=\\\"tui-password__icon\\\"\\n            tuiAppearance=\\\"icon\\\"\\n            class=\\\"t-icon\\\"\\n            [class.t-icon_small]=\\\"size === 's'\\\"\\n            [icon]=\\\"src.toString()\\\"\\n            [tuiHint]=\\\"texts[0] && texts[1] && hintContent\\\"\\n            [tuiHintAppearance]=\\\"(computedAppearance$ | async) || ''\\\"\\n            [tuiHintDirection]=\\\"hintOptions?.direction || 'bottom-left'\\\"\\n            (click)=\\\"togglePasswordVisibility()\\\"\\n            (mousedown.silent.prevent)=\\\"(0)\\\"\\n            (mouseup.silent.prevent)=\\\"(0)\\\"\\n        />\\n\\n        <ng-template\\n            #hintContent=\\\"polymorpheus\\\"\\n            polymorpheus\\n        >\\n            {{ isPasswordHidden ? texts[0] : texts[1] }}\\n        </ng-template>\\n    </ng-container>\\n</ng-template>\\n\",\n      styles: [\":host{display:block;border-radius:var(--tui-radius-m);text-align:start}:host :host-context(*:disabled){pointer-events:none}.t-icon{cursor:pointer;pointer-events:auto}.t-icon_small{border-width:.25rem}.t-textfield{border-radius:inherit;text-align:inherit}\\n\"]\n    }]\n  }], null, {\n    textfield: [{\n      type: ViewChild,\n      args: [TuiPrimitiveTextfieldComponent]\n    }]\n  });\n})();\n\n/**\n * @deprecated use {@link TuiPassword} with {@link TuiTextfield}\n */\nclass TuiInputPasswordDirective extends AbstractTuiTextfieldHost {\n  onValueChange(value) {\n    this.host.onValueChange(value);\n  }\n  process(input) {\n    this.input = input;\n  }\n  ngDoCheck() {\n    if (this.host.nativeFocusableElement && tuiIsInput(this.host.nativeFocusableElement)) {\n      this.host.nativeFocusableElement.type = this.host.inputType;\n    }\n  }\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵTuiInputPasswordDirective_BaseFactory;\n      return function TuiInputPasswordDirective_Factory(__ngFactoryType__) {\n        return (ɵTuiInputPasswordDirective_BaseFactory || (ɵTuiInputPasswordDirective_BaseFactory = i0.ɵɵgetInheritedFactory(TuiInputPasswordDirective)))(__ngFactoryType__ || TuiInputPasswordDirective);\n      };\n    })();\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: TuiInputPasswordDirective,\n      selectors: [[\"tui-input-password\"]],\n      features: [i0.ɵɵProvidersFeature([tuiAsTextfieldHost(TuiInputPasswordDirective)]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiInputPasswordDirective, [{\n    type: Directive,\n    args: [{\n      standalone: false,\n      selector: 'tui-input-password',\n      providers: [tuiAsTextfieldHost(TuiInputPasswordDirective)]\n    }]\n  }], null, null);\n})();\n\n/**\n * @deprecated use {@link TuiPassword} with {@link TuiTextfield}\n */\nclass TuiInputPasswordModule {\n  static {\n    this.ɵfac = function TuiInputPasswordModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiInputPasswordModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: TuiInputPasswordModule,\n      declarations: [TuiInputPasswordComponent, TuiInputPasswordDirective],\n      imports: [i1.TuiHintComponent, i1.TuiHintDirective, i1.TuiHintOptionsDirective, i1.TuiHintUnstyled, i1.TuiHintDriver, i1.TuiHintPosition, i1.TuiHintHover, i1.TuiHintOverflow, i1.TuiHintDescribe, i1.TuiHintHost, i1.TuiHintManual, i1.TuiHintPointer, CommonModule, FormsModule, PolymorpheusOutlet, PolymorpheusTemplate, TuiPrimitiveTextfieldModule, TuiTextfieldControllerModule, TuiAppearance, TuiIcon],\n      exports: [TuiInputPasswordComponent, TuiInputPasswordDirective, TuiTextfieldComponent, i1.TuiHintComponent, i1.TuiHintDirective, i1.TuiHintOptionsDirective, i1.TuiHintUnstyled, i1.TuiHintDriver, i1.TuiHintPosition, i1.TuiHintHover, i1.TuiHintOverflow, i1.TuiHintDescribe, i1.TuiHintHost, i1.TuiHintManual, i1.TuiHintPointer]\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [i1.TuiHintComponent, CommonModule, FormsModule, TuiPrimitiveTextfieldModule, TuiTextfieldControllerModule, TuiIcon]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiInputPasswordModule, [{\n    type: NgModule,\n    args: [{\n      imports: [...TuiHint, CommonModule, FormsModule, PolymorpheusOutlet, PolymorpheusTemplate, TuiPrimitiveTextfieldModule, TuiTextfieldControllerModule, TuiAppearance, TuiIcon],\n      declarations: [TuiInputPasswordComponent, TuiInputPasswordDirective],\n      exports: [TuiInputPasswordComponent, TuiInputPasswordDirective, TuiTextfieldComponent, ...TuiHint]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TUI_INPUT_PASSWORD_DEFAULT_OPTIONS, TUI_INPUT_PASSWORD_OPTIONS, TuiInputPasswordComponent, TuiInputPasswordDirective, TuiInputPasswordModule, tuiInputPasswordOptionsProvider };","map":{"version":3,"names":["i0","inject","Component","ChangeDetectionStrategy","ViewChild","Directive","NgModule","i1","TuiHintOptionsDirective","TuiHint","TUI_PASSWORD_TEXTS","AbstractTuiControl","tuiAsControl","AbstractTuiTextfieldHost","i4","TuiPrimitiveTextfieldComponent","TuiPrimitiveTextfieldModule","TuiTextfieldComponent","i5","TUI_TEXTFIELD_SIZE","TuiTextfieldControllerModule","tuiAsFocusableItemAccessor","tuiAsTextfieldHost","EMPTY","startWith","map","tuiCreateToken","tuiProvideOptions","i2","CommonModule","i3","PolymorpheusOutlet","PolymorpheusTemplate","i6","TuiAppearance","i7","TuiIcon","tuiIsInput","FormsModule","_c0","_c1","_c2","a0","$implicit","TuiInputPasswordComponent_ng_template_3_ng_container_0_tui_icon_1_Template","rf","ctx","_r2","ɵɵgetCurrentView","ɵɵelementStart","ɵɵpipe","ɵɵlistener","TuiInputPasswordComponent_ng_template_3_ng_container_0_tui_icon_1_Template_tui_icon_click_0_listener","ɵɵrestoreView","ctx_r2","ɵɵnextContext","ɵɵresetView","togglePasswordVisibility","TuiInputPasswordComponent_ng_template_3_ng_container_0_tui_icon_1_Template_tui_icon_mousedown_silent_prevent_0_listener","TuiInputPasswordComponent_ng_template_3_ng_container_0_tui_icon_1_Template_tui_icon_mouseup_silent_prevent_0_listener","ɵɵelementEnd","src_r4","polymorpheusOutlet","texts_r5","ngIf","hintContent_r6","ɵɵreference","ɵɵclassProp","size","ɵɵproperty","toString","ɵɵpipeBind1","computedAppearance$","hintOptions","direction","TuiInputPasswordComponent_ng_template_3_ng_container_0_ng_template_2_Template","ɵɵtext","ɵɵtextInterpolate1","isPasswordHidden","TuiInputPasswordComponent_ng_template_3_ng_container_0_Template","ɵɵelementContainerStart","ɵɵtemplate","ɵɵtemplateRefExtractor","ɵɵelementContainerEnd","ɵɵadvance","icon","ɵɵpureFunction1","TuiInputPasswordComponent_ng_template_3_Template","passwordTexts$","TUI_INPUT_PASSWORD_DEFAULT_OPTIONS","icons","hide","show","TUI_INPUT_PASSWORD_OPTIONS","tuiInputPasswordOptionsProvider","options","TuiInputPasswordComponent","constructor","arguments","textfieldSize","optional","directive$","change$","pipe","appearance","nativeFocusableElement","computedDisabled","textfield","focused","inputType","onValueChange","textValue","value","onFocused","updateFocused","getFallbackValue","ɵfac","ɵTuiInputPasswordComponent_BaseFactory","TuiInputPasswordComponent_Factory","__ngFactoryType__","ɵɵgetInheritedFactory","ɵcmp","ɵɵdefineComponent","type","selectors","viewQuery","TuiInputPasswordComponent_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","hostVars","hostBindings","TuiInputPasswordComponent_HostBindings","ɵɵattribute","features","ɵɵProvidersFeature","ɵɵInheritDefinitionFeature","ngContentSelectors","decls","vars","consts","template","TuiInputPasswordComponent_Template","_r1","ɵɵprojectionDef","ɵɵtwoWayListener","TuiInputPasswordComponent_Template_tui_primitive_textfield_valueChange_0_listener","$event","ɵɵtwoWayBindingSet","TuiInputPasswordComponent_Template_tui_primitive_textfield_focusedChange_0_listener","ɵɵprojection","iconContent_r7","focusable","computedInvalid","nativeId","pseudoActive","pseudoFocus","pseudoHover","readOnly","ɵɵtwoWayProperty","dependencies","TuiHintDirective","NgIf","TuiPrimitiveTextfieldDirective","TuiTextfieldIconDirective","AsyncPipe","styles","changeDetection","ngDevMode","ɵsetClassMetadata","args","standalone","selector","OnPush","providers","host","TuiInputPasswordDirective","process","input","ngDoCheck","ɵTuiInputPasswordDirective_BaseFactory","TuiInputPasswordDirective_Factory","ɵdir","ɵɵdefineDirective","TuiInputPasswordModule","TuiInputPasswordModule_Factory","ɵmod","ɵɵdefineNgModule","declarations","imports","TuiHintComponent","TuiHintUnstyled","TuiHintDriver","TuiHintPosition","TuiHintHover","TuiHintOverflow","TuiHintDescribe","TuiHintHost","TuiHintManual","TuiHintPointer","exports","ɵinj","ɵɵdefineInjector"],"sources":["C:/Users/Asus-PC/Downloads/WebLibraryNew/WebLibrary/WebLibraryApp/Frontend/node_modules/@taiga-ui/legacy/fesm2022/taiga-ui-legacy-components-input-password.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { inject, Component, ChangeDetectionStrategy, ViewChild, Directive, NgModule } from '@angular/core';\nimport * as i1 from '@taiga-ui/core/directives/hint';\nimport { TuiHintOptionsDirective, TuiHint } from '@taiga-ui/core/directives/hint';\nimport { TUI_PASSWORD_TEXTS } from '@taiga-ui/kit/tokens';\nimport { AbstractTuiControl, tuiAsControl, AbstractTuiTextfieldHost } from '@taiga-ui/legacy/classes';\nimport * as i4 from '@taiga-ui/legacy/components/primitive-textfield';\nimport { TuiPrimitiveTextfieldComponent, TuiPrimitiveTextfieldModule, TuiTextfieldComponent } from '@taiga-ui/legacy/components/primitive-textfield';\nimport * as i5 from '@taiga-ui/legacy/directives';\nimport { TUI_TEXTFIELD_SIZE, TuiTextfieldControllerModule } from '@taiga-ui/legacy/directives';\nimport { tuiAsFocusableItemAccessor, tuiAsTextfieldHost } from '@taiga-ui/legacy/tokens';\nimport { EMPTY, startWith, map } from 'rxjs';\nimport { tuiCreateToken, tuiProvideOptions } from '@taiga-ui/cdk/utils/miscellaneous';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i3 from '@taiga-ui/polymorpheus';\nimport { PolymorpheusOutlet, PolymorpheusTemplate } from '@taiga-ui/polymorpheus';\nimport * as i6 from '@taiga-ui/core/directives/appearance';\nimport { TuiAppearance } from '@taiga-ui/core/directives/appearance';\nimport * as i7 from '@taiga-ui/core/components/icon';\nimport { TuiIcon } from '@taiga-ui/core/components/icon';\nimport { tuiIsInput } from '@taiga-ui/cdk/utils/dom';\nimport { FormsModule } from '@angular/forms';\n\n/**\n * @deprecated use {@link TuiPassword} with {@link TuiTextfield}\n */\nconst TUI_INPUT_PASSWORD_DEFAULT_OPTIONS = {\n    icons: {\n        hide: () => '@tui.eye',\n        show: () => '@tui.eye-off',\n    },\n};\n/**\n * @deprecated use {@link TuiPassword} with {@link TuiTextfield}\n */\nconst TUI_INPUT_PASSWORD_OPTIONS = tuiCreateToken(TUI_INPUT_PASSWORD_DEFAULT_OPTIONS);\n/**\n * @deprecated use {@link TuiPassword} with {@link TuiTextfield}\n */\nfunction tuiInputPasswordOptionsProvider(options) {\n    return tuiProvideOptions(TUI_INPUT_PASSWORD_OPTIONS, options, TUI_INPUT_PASSWORD_DEFAULT_OPTIONS);\n}\n\n/**\n * @deprecated use {@link TuiPassword} with {@link TuiTextfield}\n */\nclass TuiInputPasswordComponent extends AbstractTuiControl {\n    constructor() {\n        super(...arguments);\n        this.textfieldSize = inject(TUI_TEXTFIELD_SIZE);\n        this.hintOptions = inject(TuiHintOptionsDirective, { optional: true });\n        this.directive$ = this.hintOptions?.change$ || EMPTY;\n        this.isPasswordHidden = true;\n        this.computedAppearance$ = this.directive$.pipe(startWith(null), map(() => this.hintOptions?.appearance || ''), startWith(''));\n        this.passwordTexts$ = inject(TUI_PASSWORD_TEXTS);\n        this.options = inject(TUI_INPUT_PASSWORD_OPTIONS);\n    }\n    get nativeFocusableElement() {\n        return this.computedDisabled || !this.textfield\n            ? null\n            : this.textfield.nativeFocusableElement;\n    }\n    get focused() {\n        return !!this.textfield?.focused;\n    }\n    get inputType() {\n        return this.isPasswordHidden || this.computedDisabled ? 'password' : 'text';\n    }\n    onValueChange(textValue) {\n        this.value = textValue;\n    }\n    get size() {\n        return this.textfieldSize.size;\n    }\n    get icon() {\n        return this.isPasswordHidden ? this.options.icons.show : this.options.icons.hide;\n    }\n    onFocused(focused) {\n        this.updateFocused(focused);\n    }\n    togglePasswordVisibility() {\n        this.isPasswordHidden = !this.isPasswordHidden;\n    }\n    getFallbackValue() {\n        return '';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiInputPasswordComponent, deps: null, target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiInputPasswordComponent, selector: \"tui-input-password\", host: { properties: { \"attr.data-size\": \"size\" } }, providers: [\n            tuiAsFocusableItemAccessor(TuiInputPasswordComponent),\n            tuiAsControl(TuiInputPasswordComponent),\n        ], viewQueries: [{ propertyName: \"textfield\", first: true, predicate: TuiPrimitiveTextfieldComponent, descendants: true }], usesInheritance: true, ngImport: i0, template: \"<tui-primitive-textfield\\n    class=\\\"t-textfield\\\"\\n    [disabled]=\\\"computedDisabled\\\"\\n    [focusable]=\\\"focusable\\\"\\n    [invalid]=\\\"computedInvalid\\\"\\n    [nativeId]=\\\"nativeId\\\"\\n    [pseudoActive]=\\\"pseudoActive\\\"\\n    [pseudoFocus]=\\\"pseudoFocus\\\"\\n    [pseudoHover]=\\\"pseudoHover\\\"\\n    [readOnly]=\\\"readOnly\\\"\\n    [tuiTextfieldIcon]=\\\"!computedDisabled ? iconContent : ''\\\"\\n    [(value)]=\\\"value\\\"\\n    (focusedChange)=\\\"onFocused($event)\\\"\\n>\\n    <ng-content />\\n    <ng-content\\n        ngProjectAs=\\\"input\\\"\\n        select=\\\"input\\\"\\n    />\\n</tui-primitive-textfield>\\n\\n<ng-template\\n    #iconContent=\\\"polymorpheus\\\"\\n    [polymorpheus]=\\\"type\\\"\\n>\\n    <ng-container *ngIf=\\\"passwordTexts$ | async as texts\\\">\\n        <tui-icon\\n            *polymorpheusOutlet=\\\"icon as src; context: {$implicit: size}\\\"\\n            automation-id=\\\"tui-password__icon\\\"\\n            tuiAppearance=\\\"icon\\\"\\n            class=\\\"t-icon\\\"\\n            [class.t-icon_small]=\\\"size === 's'\\\"\\n            [icon]=\\\"src.toString()\\\"\\n            [tuiHint]=\\\"texts[0] && texts[1] && hintContent\\\"\\n            [tuiHintAppearance]=\\\"(computedAppearance$ | async) || ''\\\"\\n            [tuiHintDirection]=\\\"hintOptions?.direction || 'bottom-left'\\\"\\n            (click)=\\\"togglePasswordVisibility()\\\"\\n            (mousedown.silent.prevent)=\\\"(0)\\\"\\n            (mouseup.silent.prevent)=\\\"(0)\\\"\\n        />\\n\\n        <ng-template\\n            #hintContent=\\\"polymorpheus\\\"\\n            polymorpheus\\n        >\\n            {{ isPasswordHidden ? texts[0] : texts[1] }}\\n        </ng-template>\\n    </ng-container>\\n</ng-template>\\n\", styles: [\":host{display:block;border-radius:var(--tui-radius-m);text-align:start}:host :host-context(*:disabled){pointer-events:none}.t-icon{cursor:pointer;pointer-events:auto}.t-icon_small{border-width:.25rem}.t-textfield{border-radius:inherit;text-align:inherit}\\n\"], dependencies: [{ kind: \"directive\", type: i1.TuiHintDirective, selector: \"[tuiHint]:not(ng-container):not(ng-template)\", inputs: [\"tuiHintContext\", \"tuiHintAppearance\", \"tuiHint\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i3.PolymorpheusOutlet, selector: \"[polymorpheusOutlet]\", inputs: [\"polymorpheusOutlet\", \"polymorpheusOutletContext\"] }, { kind: \"directive\", type: i3.PolymorpheusTemplate, selector: \"ng-template[polymorpheus]\", inputs: [\"polymorpheus\"], exportAs: [\"polymorpheus\"] }, { kind: \"component\", type: i4.TuiPrimitiveTextfieldComponent, selector: \"tui-primitive-textfield\", inputs: [\"editable\", \"iconCleaner\", \"readOnly\", \"invalid\", \"disabled\", \"value\"], outputs: [\"valueChange\"] }, { kind: \"directive\", type: i4.TuiPrimitiveTextfieldDirective, selector: \"tui-primitive-textfield\" }, { kind: \"directive\", type: i5.TuiTextfieldIconDirective, selector: \"[tuiTextfieldIcon]\", inputs: [\"tuiTextfieldIcon\"] }, { kind: \"directive\", type: i6.TuiAppearance, selector: \"[tuiAppearance]\", inputs: [\"tuiAppearance\", \"tuiAppearanceState\", \"tuiAppearanceFocus\", \"tuiAppearanceMode\"] }, { kind: \"component\", type: i7.TuiIcon, selector: \"tui-icon\", inputs: [\"icon\", \"background\"] }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiInputPasswordComponent, decorators: [{\n            type: Component,\n            args: [{ standalone: false, selector: 'tui-input-password', changeDetection: ChangeDetectionStrategy.OnPush, providers: [\n                        tuiAsFocusableItemAccessor(TuiInputPasswordComponent),\n                        tuiAsControl(TuiInputPasswordComponent),\n                    ], host: {\n                        '[attr.data-size]': 'size',\n                    }, template: \"<tui-primitive-textfield\\n    class=\\\"t-textfield\\\"\\n    [disabled]=\\\"computedDisabled\\\"\\n    [focusable]=\\\"focusable\\\"\\n    [invalid]=\\\"computedInvalid\\\"\\n    [nativeId]=\\\"nativeId\\\"\\n    [pseudoActive]=\\\"pseudoActive\\\"\\n    [pseudoFocus]=\\\"pseudoFocus\\\"\\n    [pseudoHover]=\\\"pseudoHover\\\"\\n    [readOnly]=\\\"readOnly\\\"\\n    [tuiTextfieldIcon]=\\\"!computedDisabled ? iconContent : ''\\\"\\n    [(value)]=\\\"value\\\"\\n    (focusedChange)=\\\"onFocused($event)\\\"\\n>\\n    <ng-content />\\n    <ng-content\\n        ngProjectAs=\\\"input\\\"\\n        select=\\\"input\\\"\\n    />\\n</tui-primitive-textfield>\\n\\n<ng-template\\n    #iconContent=\\\"polymorpheus\\\"\\n    [polymorpheus]=\\\"type\\\"\\n>\\n    <ng-container *ngIf=\\\"passwordTexts$ | async as texts\\\">\\n        <tui-icon\\n            *polymorpheusOutlet=\\\"icon as src; context: {$implicit: size}\\\"\\n            automation-id=\\\"tui-password__icon\\\"\\n            tuiAppearance=\\\"icon\\\"\\n            class=\\\"t-icon\\\"\\n            [class.t-icon_small]=\\\"size === 's'\\\"\\n            [icon]=\\\"src.toString()\\\"\\n            [tuiHint]=\\\"texts[0] && texts[1] && hintContent\\\"\\n            [tuiHintAppearance]=\\\"(computedAppearance$ | async) || ''\\\"\\n            [tuiHintDirection]=\\\"hintOptions?.direction || 'bottom-left'\\\"\\n            (click)=\\\"togglePasswordVisibility()\\\"\\n            (mousedown.silent.prevent)=\\\"(0)\\\"\\n            (mouseup.silent.prevent)=\\\"(0)\\\"\\n        />\\n\\n        <ng-template\\n            #hintContent=\\\"polymorpheus\\\"\\n            polymorpheus\\n        >\\n            {{ isPasswordHidden ? texts[0] : texts[1] }}\\n        </ng-template>\\n    </ng-container>\\n</ng-template>\\n\", styles: [\":host{display:block;border-radius:var(--tui-radius-m);text-align:start}:host :host-context(*:disabled){pointer-events:none}.t-icon{cursor:pointer;pointer-events:auto}.t-icon_small{border-width:.25rem}.t-textfield{border-radius:inherit;text-align:inherit}\\n\"] }]\n        }], propDecorators: { textfield: [{\n                type: ViewChild,\n                args: [TuiPrimitiveTextfieldComponent]\n            }] } });\n\n/**\n * @deprecated use {@link TuiPassword} with {@link TuiTextfield}\n */\nclass TuiInputPasswordDirective extends AbstractTuiTextfieldHost {\n    onValueChange(value) {\n        this.host.onValueChange(value);\n    }\n    process(input) {\n        this.input = input;\n    }\n    ngDoCheck() {\n        if (this.host.nativeFocusableElement &&\n            tuiIsInput(this.host.nativeFocusableElement)) {\n            this.host.nativeFocusableElement.type = this.host.inputType;\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiInputPasswordDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiInputPasswordDirective, selector: \"tui-input-password\", providers: [tuiAsTextfieldHost(TuiInputPasswordDirective)], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiInputPasswordDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    standalone: false,\n                    selector: 'tui-input-password',\n                    providers: [tuiAsTextfieldHost(TuiInputPasswordDirective)],\n                }]\n        }] });\n\n/**\n * @deprecated use {@link TuiPassword} with {@link TuiTextfield}\n */\nclass TuiInputPasswordModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiInputPasswordModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiInputPasswordModule, declarations: [TuiInputPasswordComponent, TuiInputPasswordDirective], imports: [i1.TuiHintComponent, i1.TuiHintDirective, i1.TuiHintOptionsDirective, i1.TuiHintUnstyled, i1.TuiHintDriver, i1.TuiHintPosition, i1.TuiHintHover, i1.TuiHintOverflow, i1.TuiHintDescribe, i1.TuiHintHost, i1.TuiHintManual, i1.TuiHintPointer, CommonModule,\n            FormsModule,\n            PolymorpheusOutlet,\n            PolymorpheusTemplate,\n            TuiPrimitiveTextfieldModule,\n            TuiTextfieldControllerModule,\n            TuiAppearance,\n            TuiIcon], exports: [TuiInputPasswordComponent,\n            TuiInputPasswordDirective,\n            TuiTextfieldComponent, i1.TuiHintComponent, i1.TuiHintDirective, i1.TuiHintOptionsDirective, i1.TuiHintUnstyled, i1.TuiHintDriver, i1.TuiHintPosition, i1.TuiHintHover, i1.TuiHintOverflow, i1.TuiHintDescribe, i1.TuiHintHost, i1.TuiHintManual, i1.TuiHintPointer] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiInputPasswordModule, imports: [i1.TuiHintComponent, CommonModule,\n            FormsModule,\n            TuiPrimitiveTextfieldModule,\n            TuiTextfieldControllerModule,\n            TuiIcon] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiInputPasswordModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        ...TuiHint,\n                        CommonModule,\n                        FormsModule,\n                        PolymorpheusOutlet,\n                        PolymorpheusTemplate,\n                        TuiPrimitiveTextfieldModule,\n                        TuiTextfieldControllerModule,\n                        TuiAppearance,\n                        TuiIcon,\n                    ],\n                    declarations: [TuiInputPasswordComponent, TuiInputPasswordDirective],\n                    exports: [\n                        TuiInputPasswordComponent,\n                        TuiInputPasswordDirective,\n                        TuiTextfieldComponent,\n                        ...TuiHint,\n                    ],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TUI_INPUT_PASSWORD_DEFAULT_OPTIONS, TUI_INPUT_PASSWORD_OPTIONS, TuiInputPasswordComponent, TuiInputPasswordDirective, TuiInputPasswordModule, tuiInputPasswordOptionsProvider };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}