{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { inject, Directive } from '@angular/core';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { WA_WINDOW } from '@ng-web-apis/common';\nimport { ViewportService } from '@ng-web-apis/screen-orientation';\nimport { tuiInjectElement, tuiPx } from '@taiga-ui/cdk/utils';\nclass TuiVisualViewport {\n  constructor() {\n    this.w = inject(WA_WINDOW);\n    this.style = tuiInjectElement().style;\n    this.$ = inject(ViewportService).pipe(takeUntilDestroyed()).subscribe(({\n      offsetLeft,\n      offsetTop,\n      height,\n      width,\n      scale\n    }) => {\n      this.style.setProperty('--tui-viewport-x', tuiPx(offsetLeft));\n      this.style.setProperty('--tui-viewport-y', tuiPx(offsetTop));\n      this.style.setProperty('--tui-viewport-height', tuiPx(height));\n      this.style.setProperty('--tui-viewport-width', tuiPx(width));\n      this.style.setProperty('--tui-viewport-scale', String(scale));\n      this.style.setProperty('--tui-viewport-vh', tuiPx(this.w.innerHeight / 100));\n      this.style.setProperty('--tui-viewport-vw', tuiPx(this.w.innerWidth / 100));\n    });\n  }\n  static {\n    this.ɵfac = function TuiVisualViewport_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiVisualViewport)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: TuiVisualViewport,\n      selectors: [[\"\", \"tuiVisualViewport\", \"\"]],\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiVisualViewport, [{\n    type: Directive,\n    args: [{\n      standalone: true,\n      selector: '[tuiVisualViewport]'\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiVisualViewport };","map":{"version":3,"names":["i0","inject","Directive","takeUntilDestroyed","WA_WINDOW","ViewportService","tuiInjectElement","tuiPx","TuiVisualViewport","constructor","w","style","$","pipe","subscribe","offsetLeft","offsetTop","height","width","scale","setProperty","String","innerHeight","innerWidth","ɵfac","TuiVisualViewport_Factory","__ngFactoryType__","ɵdir","ɵɵdefineDirective","type","selectors","standalone","ngDevMode","ɵsetClassMetadata","args","selector"],"sources":["C:/Users/Asus-PC/Downloads/WebLibraryNew/WebLibrary/WebLibraryApp/Frontend/node_modules/@taiga-ui/cdk/fesm2022/taiga-ui-cdk-directives-visual-viewport.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { inject, Directive } from '@angular/core';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { WA_WINDOW } from '@ng-web-apis/common';\nimport { ViewportService } from '@ng-web-apis/screen-orientation';\nimport { tuiInjectElement, tuiPx } from '@taiga-ui/cdk/utils';\n\nclass TuiVisualViewport {\n    constructor() {\n        this.w = inject(WA_WINDOW);\n        this.style = tuiInjectElement().style;\n        this.$ = inject(ViewportService)\n            .pipe(takeUntilDestroyed())\n            .subscribe(({ offsetLeft, offsetTop, height, width, scale }) => {\n            this.style.setProperty('--tui-viewport-x', tuiPx(offsetLeft));\n            this.style.setProperty('--tui-viewport-y', tuiPx(offsetTop));\n            this.style.setProperty('--tui-viewport-height', tuiPx(height));\n            this.style.setProperty('--tui-viewport-width', tuiPx(width));\n            this.style.setProperty('--tui-viewport-scale', String(scale));\n            this.style.setProperty('--tui-viewport-vh', tuiPx(this.w.innerHeight / 100));\n            this.style.setProperty('--tui-viewport-vw', tuiPx(this.w.innerWidth / 100));\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiVisualViewport, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiVisualViewport, isStandalone: true, selector: \"[tuiVisualViewport]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiVisualViewport, decorators: [{\n            type: Directive,\n            args: [{\n                    standalone: true,\n                    selector: '[tuiVisualViewport]',\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiVisualViewport };\n"],"mappings":"AAAA,OAAO,KAAKA,EAAE,MAAM,eAAe;AACnC,SAASC,MAAM,EAAEC,SAAS,QAAQ,eAAe;AACjD,SAASC,kBAAkB,QAAQ,4BAA4B;AAC/D,SAASC,SAAS,QAAQ,qBAAqB;AAC/C,SAASC,eAAe,QAAQ,iCAAiC;AACjE,SAASC,gBAAgB,EAAEC,KAAK,QAAQ,qBAAqB;AAE7D,MAAMC,iBAAiB,CAAC;EACpBC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,CAAC,GAAGT,MAAM,CAACG,SAAS,CAAC;IAC1B,IAAI,CAACO,KAAK,GAAGL,gBAAgB,CAAC,CAAC,CAACK,KAAK;IACrC,IAAI,CAACC,CAAC,GAAGX,MAAM,CAACI,eAAe,CAAC,CAC3BQ,IAAI,CAACV,kBAAkB,CAAC,CAAC,CAAC,CAC1BW,SAAS,CAAC,CAAC;MAAEC,UAAU;MAAEC,SAAS;MAAEC,MAAM;MAAEC,KAAK;MAAEC;IAAM,CAAC,KAAK;MAChE,IAAI,CAACR,KAAK,CAACS,WAAW,CAAC,kBAAkB,EAAEb,KAAK,CAACQ,UAAU,CAAC,CAAC;MAC7D,IAAI,CAACJ,KAAK,CAACS,WAAW,CAAC,kBAAkB,EAAEb,KAAK,CAACS,SAAS,CAAC,CAAC;MAC5D,IAAI,CAACL,KAAK,CAACS,WAAW,CAAC,uBAAuB,EAAEb,KAAK,CAACU,MAAM,CAAC,CAAC;MAC9D,IAAI,CAACN,KAAK,CAACS,WAAW,CAAC,sBAAsB,EAAEb,KAAK,CAACW,KAAK,CAAC,CAAC;MAC5D,IAAI,CAACP,KAAK,CAACS,WAAW,CAAC,sBAAsB,EAAEC,MAAM,CAACF,KAAK,CAAC,CAAC;MAC7D,IAAI,CAACR,KAAK,CAACS,WAAW,CAAC,mBAAmB,EAAEb,KAAK,CAAC,IAAI,CAACG,CAAC,CAACY,WAAW,GAAG,GAAG,CAAC,CAAC;MAC5E,IAAI,CAACX,KAAK,CAACS,WAAW,CAAC,mBAAmB,EAAEb,KAAK,CAAC,IAAI,CAACG,CAAC,CAACa,UAAU,GAAG,GAAG,CAAC,CAAC;IAC/E,CAAC,CAAC;EACN;EACA;IAAS,IAAI,CAACC,IAAI,YAAAC,0BAAAC,iBAAA;MAAA,YAAAA,iBAAA,IAAyFlB,iBAAiB;IAAA,CAAmD;EAAE;EACjL;IAAS,IAAI,CAACmB,IAAI,kBAD+E3B,EAAE,CAAA4B,iBAAA;MAAAC,IAAA,EACJrB,iBAAiB;MAAAsB,SAAA;MAAAC,UAAA;IAAA,EAAsE;EAAE;AAC5L;AACA;EAAA,QAAAC,SAAA,oBAAAA,SAAA,KAHqGhC,EAAE,CAAAiC,iBAAA,CAGXzB,iBAAiB,EAAc,CAAC;IAChHqB,IAAI,EAAE3B,SAAS;IACfgC,IAAI,EAAE,CAAC;MACCH,UAAU,EAAE,IAAI;MAChBI,QAAQ,EAAE;IACd,CAAC;EACT,CAAC,CAAC;AAAA;;AAEV;AACA;AACA;;AAEA,SAAS3B,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}