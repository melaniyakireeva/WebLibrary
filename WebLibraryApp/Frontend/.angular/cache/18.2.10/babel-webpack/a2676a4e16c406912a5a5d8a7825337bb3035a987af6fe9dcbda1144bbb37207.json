{"ast":null,"code":"import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { inject, ElementRef, Component, ChangeDetectionStrategy, ViewChild, Input, NgModule } from '@angular/core';\nimport { tuiIsNativeFocused } from '@taiga-ui/cdk/utils/focus';\nimport { tuiRound, tuiClamp } from '@taiga-ui/cdk/utils/math';\nimport { tuiPure } from '@taiga-ui/cdk/utils/miscellaneous';\nimport { tuiGetFractionPartPadded } from '@taiga-ui/core/utils/format';\nimport * as i1$1 from '@taiga-ui/kit/components/slider';\nimport { TUI_FLOATING_PRECISION, tuiSliderOptionsProvider, TuiSliderComponent, TuiSlider } from '@taiga-ui/kit/components/slider';\nimport { AbstractTuiControl, tuiAsControl } from '@taiga-ui/legacy/classes';\nimport * as i4 from '@taiga-ui/legacy/components/input-number';\nimport { TuiInputNumberComponent, TuiInputNumberModule } from '@taiga-ui/legacy/components/input-number';\nimport * as i6 from '@taiga-ui/legacy/directives';\nimport { TUI_TEXTFIELD_WATCHED_CONTROLLER, TEXTFIELD_CONTROLLER_PROVIDER, TuiTextfieldControllerModule } from '@taiga-ui/legacy/directives';\nimport { tuiAsFocusableItemAccessor } from '@taiga-ui/legacy/tokens';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i2 from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport * as i3 from '@taiga-ui/polymorpheus';\nimport { PolymorpheusOutlet, PolymorpheusTemplate } from '@taiga-ui/polymorpheus';\nimport * as i5 from '@taiga-ui/core/directives/number-format';\nimport { TuiNumberFormat } from '@taiga-ui/core/directives/number-format';\nconst _c0 = [\"*\"];\nconst _c1 = () => ({\n  standalone: true\n});\nconst _c2 = a0 => ({\n  precision: a0\n});\nconst _c3 = a0 => ({\n  $implicit: a0\n});\nfunction TuiInputSliderComponent_div_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const text_r1 = ctx.polymorpheusOutlet;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", text_r1, \" \");\n  }\n}\nfunction TuiInputSliderComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵtemplate(1, TuiInputSliderComponent_div_2_ng_container_1_Template, 2, 1, \"ng-container\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"polymorpheusOutlet\", ctx_r1.valueContent)(\"polymorpheusOutletContext\", i0.ɵɵpureFunction1(2, _c3, ctx_r1.value));\n  }\n}\nclass TuiInputSliderComponent extends AbstractTuiControl {\n  constructor() {\n    super(...arguments);\n    this.textfieldValue = this.safeCurrentValue;\n    this.controller = inject(TUI_TEXTFIELD_WATCHED_CONTROLLER);\n    this.min = 0;\n    this.max = 100;\n    this.quantum = 1;\n    this.steps = 0;\n    this.segments = 1;\n    this.keySteps = null;\n  }\n  get nativeFocusableElement() {\n    return !this.inputNumberRef?.nativeFocusableElement || this.computedDisabled ? null : this.inputNumberRef.nativeFocusableElement;\n  }\n  get focused() {\n    return tuiIsNativeFocused(this.nativeFocusableElement) || tuiIsNativeFocused(this.sliderRef?.nativeElement || null);\n  }\n  writeValue(value) {\n    super.writeValue(value);\n    this.textfieldValue = this.value;\n  }\n  get prefix() {\n    return this.controller.prefix;\n  }\n  get postfix() {\n    return this.controller.postfix;\n  }\n  get computedSteps() {\n    return this.steps || (this.max - this.min) / this.quantum;\n  }\n  get precision() {\n    return tuiGetFractionPartPadded(this.quantum).length;\n  }\n  get showValueContent() {\n    return Boolean(this.valueContent && !this.focused);\n  }\n  get step() {\n    return (this.max - this.min) / this.computedSteps;\n  }\n  computeKeySteps(keySteps, min, max) {\n    return keySteps || [[0, min], [100, max]];\n  }\n  focusTextInput() {\n    const focusableElement = this.inputNumberRef?.nativeFocusableElement;\n    if (focusableElement) {\n      focusableElement.focus();\n    }\n  }\n  safelyUpdateValue(value) {\n    this.value = this.valueGuard(value ?? this.safeCurrentValue);\n  }\n  onVerticalArrowKeyDown(coefficient) {\n    if (this.readOnly || !this.step) {\n      return;\n    }\n    const value = this.value + coefficient * this.step;\n    if (value !== this.value) {\n      this.safelyUpdateValue(value);\n      this.textfieldValue = this.value;\n    }\n  }\n  onSliderChange(newValue) {\n    this.safelyUpdateValue(newValue);\n    this.textfieldValue = this.value;\n  }\n  onFocused(focused) {\n    const {\n      value,\n      textfieldValue\n    } = this;\n    if (!focused && textfieldValue !== value) {\n      this.textfieldValue = value;\n    }\n    this.updateFocused(focused);\n  }\n  getFallbackValue() {\n    return 0;\n  }\n  valueGuard(value) {\n    const roundedValue = tuiRound(Math.round(value / this.quantum) * this.quantum, TUI_FLOATING_PRECISION);\n    return tuiClamp(roundedValue, this.min, this.max);\n  }\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵTuiInputSliderComponent_BaseFactory;\n      return function TuiInputSliderComponent_Factory(__ngFactoryType__) {\n        return (ɵTuiInputSliderComponent_BaseFactory || (ɵTuiInputSliderComponent_BaseFactory = i0.ɵɵgetInheritedFactory(TuiInputSliderComponent)))(__ngFactoryType__ || TuiInputSliderComponent);\n      };\n    })();\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: TuiInputSliderComponent,\n      selectors: [[\"tui-input-slider\"]],\n      viewQuery: function TuiInputSliderComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(TuiInputNumberComponent, 5);\n          i0.ɵɵviewQuery(TuiSliderComponent, 5, ElementRef);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.inputNumberRef = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sliderRef = _t.first);\n        }\n      },\n      hostVars: 3,\n      hostBindings: function TuiInputSliderComponent_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"data-size\", ctx.controller.size);\n          i0.ɵɵclassProp(\"_label-outside\", ctx.controller.labelOutside);\n        }\n      },\n      inputs: {\n        min: \"min\",\n        max: \"max\",\n        quantum: \"quantum\",\n        steps: \"steps\",\n        segments: \"segments\",\n        keySteps: \"keySteps\",\n        valueContent: \"valueContent\"\n      },\n      features: [i0.ɵɵProvidersFeature([tuiAsFocusableItemAccessor(TuiInputSliderComponent), tuiAsControl(TuiInputSliderComponent), tuiSliderOptionsProvider({\n        trackColor: 'transparent'\n      }), TEXTFIELD_CONTROLLER_PROVIDER]), i0.ɵɵInheritDefinitionFeature],\n      ngContentSelectors: _c0,\n      decls: 4,\n      vars: 24,\n      consts: [[3, \"ngModelChange\", \"focusedChange\", \"keydown.arrowDown.prevent\", \"keydown.arrowUp.prevent\", \"disabled\", \"max\", \"min\", \"ngModelOptions\", \"pseudoActive\", \"pseudoFocus\", \"pseudoHover\", \"pseudoInvalid\", \"readOnly\", \"tuiNumberFormat\", \"tuiTextfieldPostfix\", \"tuiTextfieldPrefix\", \"ngModel\"], [\"automation-id\", \"tui-input-slider__value-content\", \"ngProjectAs\", \"tuiContent\", 5, [\"tuiContent\"], 4, \"ngIf\"], [\"tabIndex\", \"-1\", \"tuiSlider\", \"\", \"type\", \"range\", 3, \"click\", \"ngModelChange\", \"disabled\", \"keySteps\", \"max\", \"ngModel\", \"ngModelOptions\", \"segments\"], [\"automation-id\", \"tui-input-slider__value-content\", \"ngProjectAs\", \"tuiContent\", 5, [\"tuiContent\"]], [4, \"polymorpheusOutlet\", \"polymorpheusOutletContext\"]],\n      template: function TuiInputSliderComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵelementStart(0, \"tui-input-number\", 0);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function TuiInputSliderComponent_Template_tui_input_number_ngModelChange_0_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.textfieldValue, $event) || (ctx.textfieldValue = $event);\n            return $event;\n          });\n          i0.ɵɵlistener(\"focusedChange\", function TuiInputSliderComponent_Template_tui_input_number_focusedChange_0_listener($event) {\n            return ctx.onFocused($event);\n          })(\"keydown.arrowDown.prevent\", function TuiInputSliderComponent_Template_tui_input_number_keydown_arrowDown_prevent_0_listener() {\n            return ctx.onVerticalArrowKeyDown(-1);\n          })(\"keydown.arrowUp.prevent\", function TuiInputSliderComponent_Template_tui_input_number_keydown_arrowUp_prevent_0_listener() {\n            return ctx.onVerticalArrowKeyDown(1);\n          })(\"ngModelChange\", function TuiInputSliderComponent_Template_tui_input_number_ngModelChange_0_listener($event) {\n            return ctx.safelyUpdateValue($event);\n          });\n          i0.ɵɵprojection(1);\n          i0.ɵɵtemplate(2, TuiInputSliderComponent_div_2_Template, 2, 4, \"div\", 1);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"input\", 2);\n          i0.ɵɵlistener(\"click\", function TuiInputSliderComponent_Template_input_click_3_listener() {\n            return ctx.focusTextInput();\n          })(\"ngModelChange\", function TuiInputSliderComponent_Template_input_ngModelChange_3_listener($event) {\n            return ctx.onSliderChange($event);\n          });\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"disabled\", ctx.computedDisabled)(\"max\", ctx.max)(\"min\", ctx.min)(\"ngModelOptions\", i0.ɵɵpureFunction0(20, _c1))(\"pseudoActive\", ctx.pseudoActive)(\"pseudoFocus\", ctx.computedFocused)(\"pseudoHover\", ctx.pseudoHover)(\"pseudoInvalid\", ctx.pseudoInvalid)(\"readOnly\", ctx.readOnly)(\"tuiNumberFormat\", i0.ɵɵpureFunction1(21, _c2, ctx.precision))(\"tuiTextfieldPostfix\", ctx.postfix)(\"tuiTextfieldPrefix\", ctx.prefix);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.textfieldValue);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.showValueContent);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"disabled\", ctx.readOnly || ctx.computedDisabled)(\"keySteps\", ctx.computeKeySteps(ctx.keySteps, ctx.min, ctx.max))(\"max\", ctx.computedSteps)(\"ngModel\", ctx.value)(\"ngModelOptions\", i0.ɵɵpureFunction0(23, _c1))(\"segments\", ctx.segments);\n        }\n      },\n      dependencies: [i1.NgIf, i2.DefaultValueAccessor, i2.RangeValueAccessor, i2.NgControlStatus, i2.NgModel, i3.PolymorpheusOutlet, i4.TuiInputNumberComponent, i4.TuiInputNumberDirective, i5.TuiNumberFormat, i6.TuiTextfieldPrefixDirective, i6.TuiTextfieldPostfixDirective, i1$1.TuiSliderComponent, i1$1.TuiSliderKeySteps],\n      styles: [\"[_nghost-%COMP%]{position:relative;display:block;block-size:-webkit-max-content;block-size:max-content;isolation:isolate;border-radius:var(--tui-radius);--tui-radius: var(--tui-radius-m)}[data-size=l][_nghost-%COMP%]{--tui-radius: var(--tui-radius-l)}[_nghost-%COMP%]   *:disabled[_nghost-%COMP%], *:disabled   [_nghost-%COMP%]{pointer-events:none}tui-input-number[_ngcontent-%COMP%]{border-radius:inherit}input[type=range][_ngcontent-%COMP%]{position:absolute;top:100%;left:calc(var(--tui-radius) / 2);right:0;inline-size:calc(100% - calc(var(--tui-radius) / 2));box-sizing:border-box;block-size:1rem;margin:-.5625rem 0 0;border-start-start-radius:0;border-end-start-radius:calc(var(--tui-radius) * 10) calc(var(--tui-radius) * 2)}\"],\n      changeDetection: 0\n    });\n  }\n}\n__decorate([tuiPure], TuiInputSliderComponent.prototype, \"computeKeySteps\", null);\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiInputSliderComponent, [{\n    type: Component,\n    args: [{\n      standalone: false,\n      selector: 'tui-input-slider',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [tuiAsFocusableItemAccessor(TuiInputSliderComponent), tuiAsControl(TuiInputSliderComponent), tuiSliderOptionsProvider({\n        trackColor: 'transparent'\n      }), TEXTFIELD_CONTROLLER_PROVIDER],\n      host: {\n        '[attr.data-size]': 'controller.size',\n        '[class._label-outside]': 'controller.labelOutside'\n      },\n      template: \"<tui-input-number\\n    [disabled]=\\\"computedDisabled\\\"\\n    [max]=\\\"max\\\"\\n    [min]=\\\"min\\\"\\n    [ngModelOptions]=\\\"{standalone: true}\\\"\\n    [pseudoActive]=\\\"pseudoActive\\\"\\n    [pseudoFocus]=\\\"computedFocused\\\"\\n    [pseudoHover]=\\\"pseudoHover\\\"\\n    [pseudoInvalid]=\\\"pseudoInvalid\\\"\\n    [readOnly]=\\\"readOnly\\\"\\n    [tuiNumberFormat]=\\\"{precision}\\\"\\n    [tuiTextfieldPostfix]=\\\"postfix\\\"\\n    [tuiTextfieldPrefix]=\\\"prefix\\\"\\n    [(ngModel)]=\\\"textfieldValue\\\"\\n    (focusedChange)=\\\"onFocused($event)\\\"\\n    (keydown.arrowDown.prevent)=\\\"onVerticalArrowKeyDown(-1)\\\"\\n    (keydown.arrowUp.prevent)=\\\"onVerticalArrowKeyDown(1)\\\"\\n    (ngModelChange)=\\\"safelyUpdateValue($event)\\\"\\n>\\n    <ng-content />\\n    <div\\n        *ngIf=\\\"showValueContent\\\"\\n        automation-id=\\\"tui-input-slider__value-content\\\"\\n        ngProjectAs=\\\"tuiContent\\\"\\n    >\\n        <ng-container *polymorpheusOutlet=\\\"valueContent as text; context: {$implicit: value}\\\">\\n            {{ text }}\\n        </ng-container>\\n    </div>\\n</tui-input-number>\\n\\n<input\\n    tabIndex=\\\"-1\\\"\\n    tuiSlider\\n    type=\\\"range\\\"\\n    [disabled]=\\\"readOnly || computedDisabled\\\"\\n    [keySteps]=\\\"computeKeySteps(keySteps, min, max)\\\"\\n    [max]=\\\"computedSteps\\\"\\n    [ngModel]=\\\"value\\\"\\n    [ngModelOptions]=\\\"{standalone: true}\\\"\\n    [segments]=\\\"segments\\\"\\n    (click)=\\\"focusTextInput()\\\"\\n    (ngModelChange)=\\\"onSliderChange($event)\\\"\\n/>\\n\",\n      styles: [\":host{position:relative;display:block;block-size:-webkit-max-content;block-size:max-content;isolation:isolate;border-radius:var(--tui-radius);--tui-radius: var(--tui-radius-m)}:host[data-size=l]{--tui-radius: var(--tui-radius-l)}:host :host-context(*:disabled){pointer-events:none}tui-input-number{border-radius:inherit}input[type=range]{position:absolute;top:100%;left:calc(var(--tui-radius) / 2);right:0;inline-size:calc(100% - calc(var(--tui-radius) / 2));box-sizing:border-box;block-size:1rem;margin:-.5625rem 0 0;border-start-start-radius:0;border-end-start-radius:calc(var(--tui-radius) * 10) calc(var(--tui-radius) * 2)}\\n\"]\n    }]\n  }], null, {\n    inputNumberRef: [{\n      type: ViewChild,\n      args: [TuiInputNumberComponent]\n    }],\n    sliderRef: [{\n      type: ViewChild,\n      args: [TuiSliderComponent, {\n        read: ElementRef\n      }]\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    quantum: [{\n      type: Input\n    }],\n    steps: [{\n      type: Input\n    }],\n    segments: [{\n      type: Input\n    }],\n    keySteps: [{\n      type: Input\n    }],\n    valueContent: [{\n      type: Input\n    }],\n    computeKeySteps: []\n  });\n})();\nclass TuiInputSliderModule {\n  static {\n    this.ɵfac = function TuiInputSliderModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiInputSliderModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: TuiInputSliderModule,\n      declarations: [TuiInputSliderComponent],\n      imports: [CommonModule, FormsModule, PolymorpheusOutlet, PolymorpheusTemplate, TuiInputNumberModule, TuiNumberFormat, TuiTextfieldControllerModule, i1$1.TuiSliderComponent, i1$1.TuiSliderThumbLabel, i1$1.TuiSliderKeySteps, i1$1.TuiSliderReadonly],\n      exports: [TuiInputSliderComponent, i1$1.TuiSliderComponent, i1$1.TuiSliderThumbLabel, i1$1.TuiSliderKeySteps, i1$1.TuiSliderReadonly]\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [CommonModule, FormsModule, TuiInputNumberModule, TuiTextfieldControllerModule, i1$1.TuiSliderComponent, i1$1.TuiSliderThumbLabel]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiInputSliderModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, FormsModule, PolymorpheusOutlet, PolymorpheusTemplate, TuiInputNumberModule, TuiNumberFormat, TuiTextfieldControllerModule, ...TuiSlider],\n      declarations: [TuiInputSliderComponent],\n      exports: [TuiInputSliderComponent, ...TuiSlider]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiInputSliderComponent, TuiInputSliderModule };","map":{"version":3,"names":["__decorate","i0","inject","ElementRef","Component","ChangeDetectionStrategy","ViewChild","Input","NgModule","tuiIsNativeFocused","tuiRound","tuiClamp","tuiPure","tuiGetFractionPartPadded","i1$1","TUI_FLOATING_PRECISION","tuiSliderOptionsProvider","TuiSliderComponent","TuiSlider","AbstractTuiControl","tuiAsControl","i4","TuiInputNumberComponent","TuiInputNumberModule","i6","TUI_TEXTFIELD_WATCHED_CONTROLLER","TEXTFIELD_CONTROLLER_PROVIDER","TuiTextfieldControllerModule","tuiAsFocusableItemAccessor","i1","CommonModule","i2","FormsModule","i3","PolymorpheusOutlet","PolymorpheusTemplate","i5","TuiNumberFormat","_c0","_c1","standalone","_c2","a0","precision","_c3","$implicit","TuiInputSliderComponent_div_2_ng_container_1_Template","rf","ctx","ɵɵelementContainerStart","ɵɵtext","ɵɵelementContainerEnd","text_r1","polymorpheusOutlet","ɵɵadvance","ɵɵtextInterpolate1","TuiInputSliderComponent_div_2_Template","ɵɵelementStart","ɵɵtemplate","ɵɵelementEnd","ctx_r1","ɵɵnextContext","ɵɵproperty","valueContent","ɵɵpureFunction1","value","TuiInputSliderComponent","constructor","arguments","textfieldValue","safeCurrentValue","controller","min","max","quantum","steps","segments","keySteps","nativeFocusableElement","inputNumberRef","computedDisabled","focused","sliderRef","nativeElement","writeValue","prefix","postfix","computedSteps","length","showValueContent","Boolean","step","computeKeySteps","focusTextInput","focusableElement","focus","safelyUpdateValue","valueGuard","onVerticalArrowKeyDown","coefficient","readOnly","onSliderChange","newValue","onFocused","updateFocused","getFallbackValue","roundedValue","Math","round","ɵfac","ɵTuiInputSliderComponent_BaseFactory","TuiInputSliderComponent_Factory","__ngFactoryType__","ɵɵgetInheritedFactory","ɵcmp","ɵɵdefineComponent","type","selectors","viewQuery","TuiInputSliderComponent_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","hostVars","hostBindings","TuiInputSliderComponent_HostBindings","ɵɵattribute","size","ɵɵclassProp","labelOutside","inputs","features","ɵɵProvidersFeature","trackColor","ɵɵInheritDefinitionFeature","ngContentSelectors","decls","vars","consts","template","TuiInputSliderComponent_Template","ɵɵprojectionDef","ɵɵtwoWayListener","TuiInputSliderComponent_Template_tui_input_number_ngModelChange_0_listener","$event","ɵɵtwoWayBindingSet","ɵɵlistener","TuiInputSliderComponent_Template_tui_input_number_focusedChange_0_listener","TuiInputSliderComponent_Template_tui_input_number_keydown_arrowDown_prevent_0_listener","TuiInputSliderComponent_Template_tui_input_number_keydown_arrowUp_prevent_0_listener","ɵɵprojection","TuiInputSliderComponent_Template_input_click_3_listener","TuiInputSliderComponent_Template_input_ngModelChange_3_listener","ɵɵpureFunction0","pseudoActive","computedFocused","pseudoHover","pseudoInvalid","ɵɵtwoWayProperty","dependencies","NgIf","DefaultValueAccessor","RangeValueAccessor","NgControlStatus","NgModel","TuiInputNumberDirective","TuiTextfieldPrefixDirective","TuiTextfieldPostfixDirective","TuiSliderKeySteps","styles","changeDetection","prototype","ngDevMode","ɵsetClassMetadata","args","selector","OnPush","providers","host","read","TuiInputSliderModule","TuiInputSliderModule_Factory","ɵmod","ɵɵdefineNgModule","declarations","imports","TuiSliderThumbLabel","TuiSliderReadonly","exports","ɵinj","ɵɵdefineInjector"],"sources":["C:/Users/Asus-PC/Downloads/WebLibraryNew/WebLibrary/WebLibraryApp/Frontend/node_modules/@taiga-ui/legacy/fesm2022/taiga-ui-legacy-components-input-slider.mjs"],"sourcesContent":["import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { inject, ElementRef, Component, ChangeDetectionStrategy, ViewChild, Input, NgModule } from '@angular/core';\nimport { tuiIsNativeFocused } from '@taiga-ui/cdk/utils/focus';\nimport { tuiRound, tuiClamp } from '@taiga-ui/cdk/utils/math';\nimport { tuiPure } from '@taiga-ui/cdk/utils/miscellaneous';\nimport { tuiGetFractionPartPadded } from '@taiga-ui/core/utils/format';\nimport * as i1$1 from '@taiga-ui/kit/components/slider';\nimport { TUI_FLOATING_PRECISION, tuiSliderOptionsProvider, TuiSliderComponent, TuiSlider } from '@taiga-ui/kit/components/slider';\nimport { AbstractTuiControl, tuiAsControl } from '@taiga-ui/legacy/classes';\nimport * as i4 from '@taiga-ui/legacy/components/input-number';\nimport { TuiInputNumberComponent, TuiInputNumberModule } from '@taiga-ui/legacy/components/input-number';\nimport * as i6 from '@taiga-ui/legacy/directives';\nimport { TUI_TEXTFIELD_WATCHED_CONTROLLER, TEXTFIELD_CONTROLLER_PROVIDER, TuiTextfieldControllerModule } from '@taiga-ui/legacy/directives';\nimport { tuiAsFocusableItemAccessor } from '@taiga-ui/legacy/tokens';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i2 from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport * as i3 from '@taiga-ui/polymorpheus';\nimport { PolymorpheusOutlet, PolymorpheusTemplate } from '@taiga-ui/polymorpheus';\nimport * as i5 from '@taiga-ui/core/directives/number-format';\nimport { TuiNumberFormat } from '@taiga-ui/core/directives/number-format';\n\nclass TuiInputSliderComponent extends AbstractTuiControl {\n    constructor() {\n        super(...arguments);\n        this.textfieldValue = this.safeCurrentValue;\n        this.controller = inject(TUI_TEXTFIELD_WATCHED_CONTROLLER);\n        this.min = 0;\n        this.max = 100;\n        this.quantum = 1;\n        this.steps = 0;\n        this.segments = 1;\n        this.keySteps = null;\n    }\n    get nativeFocusableElement() {\n        return !this.inputNumberRef?.nativeFocusableElement || this.computedDisabled\n            ? null\n            : this.inputNumberRef.nativeFocusableElement;\n    }\n    get focused() {\n        return (tuiIsNativeFocused(this.nativeFocusableElement) ||\n            tuiIsNativeFocused(this.sliderRef?.nativeElement || null));\n    }\n    writeValue(value) {\n        super.writeValue(value);\n        this.textfieldValue = this.value;\n    }\n    get prefix() {\n        return this.controller.prefix;\n    }\n    get postfix() {\n        return this.controller.postfix;\n    }\n    get computedSteps() {\n        return this.steps || (this.max - this.min) / this.quantum;\n    }\n    get precision() {\n        return tuiGetFractionPartPadded(this.quantum).length;\n    }\n    get showValueContent() {\n        return Boolean(this.valueContent && !this.focused);\n    }\n    get step() {\n        return (this.max - this.min) / this.computedSteps;\n    }\n    computeKeySteps(keySteps, min, max) {\n        return (keySteps || [\n            [0, min],\n            [100, max],\n        ]);\n    }\n    focusTextInput() {\n        const focusableElement = this.inputNumberRef?.nativeFocusableElement;\n        if (focusableElement) {\n            focusableElement.focus();\n        }\n    }\n    safelyUpdateValue(value) {\n        this.value = this.valueGuard(value ?? this.safeCurrentValue);\n    }\n    onVerticalArrowKeyDown(coefficient) {\n        if (this.readOnly || !this.step) {\n            return;\n        }\n        const value = this.value + coefficient * this.step;\n        if (value !== this.value) {\n            this.safelyUpdateValue(value);\n            this.textfieldValue = this.value;\n        }\n    }\n    onSliderChange(newValue) {\n        this.safelyUpdateValue(newValue);\n        this.textfieldValue = this.value;\n    }\n    onFocused(focused) {\n        const { value, textfieldValue } = this;\n        if (!focused && textfieldValue !== value) {\n            this.textfieldValue = value;\n        }\n        this.updateFocused(focused);\n    }\n    getFallbackValue() {\n        return 0;\n    }\n    valueGuard(value) {\n        const roundedValue = tuiRound(Math.round(value / this.quantum) * this.quantum, TUI_FLOATING_PRECISION);\n        return tuiClamp(roundedValue, this.min, this.max);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiInputSliderComponent, deps: null, target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiInputSliderComponent, selector: \"tui-input-slider\", inputs: { min: \"min\", max: \"max\", quantum: \"quantum\", steps: \"steps\", segments: \"segments\", keySteps: \"keySteps\", valueContent: \"valueContent\" }, host: { properties: { \"attr.data-size\": \"controller.size\", \"class._label-outside\": \"controller.labelOutside\" } }, providers: [\n            tuiAsFocusableItemAccessor(TuiInputSliderComponent),\n            tuiAsControl(TuiInputSliderComponent),\n            tuiSliderOptionsProvider({ trackColor: 'transparent' }),\n            TEXTFIELD_CONTROLLER_PROVIDER,\n        ], viewQueries: [{ propertyName: \"inputNumberRef\", first: true, predicate: TuiInputNumberComponent, descendants: true }, { propertyName: \"sliderRef\", first: true, predicate: TuiSliderComponent, descendants: true, read: ElementRef }], usesInheritance: true, ngImport: i0, template: \"<tui-input-number\\n    [disabled]=\\\"computedDisabled\\\"\\n    [max]=\\\"max\\\"\\n    [min]=\\\"min\\\"\\n    [ngModelOptions]=\\\"{standalone: true}\\\"\\n    [pseudoActive]=\\\"pseudoActive\\\"\\n    [pseudoFocus]=\\\"computedFocused\\\"\\n    [pseudoHover]=\\\"pseudoHover\\\"\\n    [pseudoInvalid]=\\\"pseudoInvalid\\\"\\n    [readOnly]=\\\"readOnly\\\"\\n    [tuiNumberFormat]=\\\"{precision}\\\"\\n    [tuiTextfieldPostfix]=\\\"postfix\\\"\\n    [tuiTextfieldPrefix]=\\\"prefix\\\"\\n    [(ngModel)]=\\\"textfieldValue\\\"\\n    (focusedChange)=\\\"onFocused($event)\\\"\\n    (keydown.arrowDown.prevent)=\\\"onVerticalArrowKeyDown(-1)\\\"\\n    (keydown.arrowUp.prevent)=\\\"onVerticalArrowKeyDown(1)\\\"\\n    (ngModelChange)=\\\"safelyUpdateValue($event)\\\"\\n>\\n    <ng-content />\\n    <div\\n        *ngIf=\\\"showValueContent\\\"\\n        automation-id=\\\"tui-input-slider__value-content\\\"\\n        ngProjectAs=\\\"tuiContent\\\"\\n    >\\n        <ng-container *polymorpheusOutlet=\\\"valueContent as text; context: {$implicit: value}\\\">\\n            {{ text }}\\n        </ng-container>\\n    </div>\\n</tui-input-number>\\n\\n<input\\n    tabIndex=\\\"-1\\\"\\n    tuiSlider\\n    type=\\\"range\\\"\\n    [disabled]=\\\"readOnly || computedDisabled\\\"\\n    [keySteps]=\\\"computeKeySteps(keySteps, min, max)\\\"\\n    [max]=\\\"computedSteps\\\"\\n    [ngModel]=\\\"value\\\"\\n    [ngModelOptions]=\\\"{standalone: true}\\\"\\n    [segments]=\\\"segments\\\"\\n    (click)=\\\"focusTextInput()\\\"\\n    (ngModelChange)=\\\"onSliderChange($event)\\\"\\n/>\\n\", styles: [\":host{position:relative;display:block;block-size:-webkit-max-content;block-size:max-content;isolation:isolate;border-radius:var(--tui-radius);--tui-radius: var(--tui-radius-m)}:host[data-size=l]{--tui-radius: var(--tui-radius-l)}:host :host-context(*:disabled){pointer-events:none}tui-input-number{border-radius:inherit}input[type=range]{position:absolute;top:100%;left:calc(var(--tui-radius) / 2);right:0;inline-size:calc(100% - calc(var(--tui-radius) / 2));box-sizing:border-box;block-size:1rem;margin:-.5625rem 0 0;border-start-start-radius:0;border-end-start-radius:calc(var(--tui-radius) * 10) calc(var(--tui-radius) * 2)}\\n\"], dependencies: [{ kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i2.RangeValueAccessor, selector: \"input[type=range][formControlName],input[type=range][formControl],input[type=range][ngModel]\" }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { kind: \"directive\", type: i3.PolymorpheusOutlet, selector: \"[polymorpheusOutlet]\", inputs: [\"polymorpheusOutlet\", \"polymorpheusOutletContext\"] }, { kind: \"component\", type: i4.TuiInputNumberComponent, selector: \"tui-input-number\", inputs: [\"min\", \"max\", \"step\"] }, { kind: \"directive\", type: i4.TuiInputNumberDirective, selector: \"tui-input-number\" }, { kind: \"directive\", type: i5.TuiNumberFormat, selector: \"[tuiNumberFormat]\", inputs: [\"tuiNumberFormat\"] }, { kind: \"directive\", type: i6.TuiTextfieldPrefixDirective, selector: \"[tuiTextfieldPrefix]\", inputs: [\"tuiTextfieldPrefix\"] }, { kind: \"directive\", type: i6.TuiTextfieldPostfixDirective, selector: \"[tuiTextfieldPostfix]\", inputs: [\"tuiTextfieldPostfix\"] }, { kind: \"component\", type: i1$1.TuiSliderComponent, selector: \"input[type=range][tuiSlider]\", inputs: [\"size\", \"segments\"] }, { kind: \"directive\", type: i1$1.TuiSliderKeySteps, selector: \"input[tuiSlider][keySteps]\", inputs: [\"keySteps\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\n__decorate([\n    tuiPure\n], TuiInputSliderComponent.prototype, \"computeKeySteps\", null);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiInputSliderComponent, decorators: [{\n            type: Component,\n            args: [{ standalone: false, selector: 'tui-input-slider', changeDetection: ChangeDetectionStrategy.OnPush, providers: [\n                        tuiAsFocusableItemAccessor(TuiInputSliderComponent),\n                        tuiAsControl(TuiInputSliderComponent),\n                        tuiSliderOptionsProvider({ trackColor: 'transparent' }),\n                        TEXTFIELD_CONTROLLER_PROVIDER,\n                    ], host: {\n                        '[attr.data-size]': 'controller.size',\n                        '[class._label-outside]': 'controller.labelOutside',\n                    }, template: \"<tui-input-number\\n    [disabled]=\\\"computedDisabled\\\"\\n    [max]=\\\"max\\\"\\n    [min]=\\\"min\\\"\\n    [ngModelOptions]=\\\"{standalone: true}\\\"\\n    [pseudoActive]=\\\"pseudoActive\\\"\\n    [pseudoFocus]=\\\"computedFocused\\\"\\n    [pseudoHover]=\\\"pseudoHover\\\"\\n    [pseudoInvalid]=\\\"pseudoInvalid\\\"\\n    [readOnly]=\\\"readOnly\\\"\\n    [tuiNumberFormat]=\\\"{precision}\\\"\\n    [tuiTextfieldPostfix]=\\\"postfix\\\"\\n    [tuiTextfieldPrefix]=\\\"prefix\\\"\\n    [(ngModel)]=\\\"textfieldValue\\\"\\n    (focusedChange)=\\\"onFocused($event)\\\"\\n    (keydown.arrowDown.prevent)=\\\"onVerticalArrowKeyDown(-1)\\\"\\n    (keydown.arrowUp.prevent)=\\\"onVerticalArrowKeyDown(1)\\\"\\n    (ngModelChange)=\\\"safelyUpdateValue($event)\\\"\\n>\\n    <ng-content />\\n    <div\\n        *ngIf=\\\"showValueContent\\\"\\n        automation-id=\\\"tui-input-slider__value-content\\\"\\n        ngProjectAs=\\\"tuiContent\\\"\\n    >\\n        <ng-container *polymorpheusOutlet=\\\"valueContent as text; context: {$implicit: value}\\\">\\n            {{ text }}\\n        </ng-container>\\n    </div>\\n</tui-input-number>\\n\\n<input\\n    tabIndex=\\\"-1\\\"\\n    tuiSlider\\n    type=\\\"range\\\"\\n    [disabled]=\\\"readOnly || computedDisabled\\\"\\n    [keySteps]=\\\"computeKeySteps(keySteps, min, max)\\\"\\n    [max]=\\\"computedSteps\\\"\\n    [ngModel]=\\\"value\\\"\\n    [ngModelOptions]=\\\"{standalone: true}\\\"\\n    [segments]=\\\"segments\\\"\\n    (click)=\\\"focusTextInput()\\\"\\n    (ngModelChange)=\\\"onSliderChange($event)\\\"\\n/>\\n\", styles: [\":host{position:relative;display:block;block-size:-webkit-max-content;block-size:max-content;isolation:isolate;border-radius:var(--tui-radius);--tui-radius: var(--tui-radius-m)}:host[data-size=l]{--tui-radius: var(--tui-radius-l)}:host :host-context(*:disabled){pointer-events:none}tui-input-number{border-radius:inherit}input[type=range]{position:absolute;top:100%;left:calc(var(--tui-radius) / 2);right:0;inline-size:calc(100% - calc(var(--tui-radius) / 2));box-sizing:border-box;block-size:1rem;margin:-.5625rem 0 0;border-start-start-radius:0;border-end-start-radius:calc(var(--tui-radius) * 10) calc(var(--tui-radius) * 2)}\\n\"] }]\n        }], propDecorators: { inputNumberRef: [{\n                type: ViewChild,\n                args: [TuiInputNumberComponent]\n            }], sliderRef: [{\n                type: ViewChild,\n                args: [TuiSliderComponent, { read: ElementRef }]\n            }], min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], quantum: [{\n                type: Input\n            }], steps: [{\n                type: Input\n            }], segments: [{\n                type: Input\n            }], keySteps: [{\n                type: Input\n            }], valueContent: [{\n                type: Input\n            }], computeKeySteps: [] } });\n\nclass TuiInputSliderModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiInputSliderModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiInputSliderModule, declarations: [TuiInputSliderComponent], imports: [CommonModule,\n            FormsModule,\n            PolymorpheusOutlet,\n            PolymorpheusTemplate,\n            TuiInputNumberModule,\n            TuiNumberFormat,\n            TuiTextfieldControllerModule, i1$1.TuiSliderComponent, i1$1.TuiSliderThumbLabel, i1$1.TuiSliderKeySteps, i1$1.TuiSliderReadonly], exports: [TuiInputSliderComponent, i1$1.TuiSliderComponent, i1$1.TuiSliderThumbLabel, i1$1.TuiSliderKeySteps, i1$1.TuiSliderReadonly] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiInputSliderModule, imports: [CommonModule,\n            FormsModule,\n            TuiInputNumberModule,\n            TuiTextfieldControllerModule, i1$1.TuiSliderComponent, i1$1.TuiSliderThumbLabel] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiInputSliderModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        FormsModule,\n                        PolymorpheusOutlet,\n                        PolymorpheusTemplate,\n                        TuiInputNumberModule,\n                        TuiNumberFormat,\n                        TuiTextfieldControllerModule,\n                        ...TuiSlider,\n                    ],\n                    declarations: [TuiInputSliderComponent],\n                    exports: [TuiInputSliderComponent, ...TuiSlider],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiInputSliderComponent, TuiInputSliderModule };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}