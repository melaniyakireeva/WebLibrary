{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./load-csv-elements.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./load-csv-elements.component.scss?ngResource\";\nimport { AsyncPipe, NgIf } from '@angular/common';\nimport { Component, inject } from '@angular/core';\nimport { FormControl, ReactiveFormsModule } from '@angular/forms';\nimport { TuiIcon } from '@taiga-ui/core';\nimport { TuiFiles } from '@taiga-ui/kit';\nimport { map } from 'rxjs';\nimport { injectContext } from '@taiga-ui/polymorpheus';\nimport { EkbTableService } from '../../services/ekb-table/ekb-table.service';\nimport { FilterOperations, OrFilters, StringFilterOperation } from '../../services/filters/filterOperations';\nimport _ from 'lodash';\nimport { CsvHelperService } from '../../services/csv-helper/csv-helper.service';\nlet LoadCsvElementsComponent = class LoadCsvElementsComponent {\n  context = injectContext();\n  control = new FormControl(null);\n  ekbService = inject(EkbTableService);\n  csvGenerator = inject(CsvHelperService);\n  convertToEkb(ekbElement) {\n    let result = {};\n    result['Производитель'] = `${ekbElement.manufacturer?.id} ${ekbElement.manufacturer?.name}`;\n    result['Калькодержатель'] = `${ekbElement.traceHolder?.id} ${ekbElement.traceHolder?.name}`;\n    result['Категория'] = ekbElement.ekbCategory?.name ?? 'Не известно';\n    for (let ekbProp of ekbElement.properties) {\n      result[ekbProp.propertyName] = ekbProp.value;\n    }\n    return result;\n  }\n  getElementsByFilter(names) {\n    let filter = {\n      paging: null,\n      scopeParams: null,\n      sortInfo: null,\n      filterOperations: null\n    };\n    const fullFilter = new OrFilters();\n    for (let name of names) {\n      const filterOperation = new StringFilterOperation();\n      filterOperation.filterColumn = 'Условное обозначение изделия';\n      filterOperation.operation = FilterOperations.Contains;\n      filterOperation.valueForComparison = name;\n      fullFilter.filters.push(filterOperation);\n    }\n    filter.filterOperations = fullFilter;\n    return this.ekbService.getEkbElements(filter).pipe(map(elements => _.map(elements.items, this.convertToEkb)));\n  }\n  onFileChanged($event) {\n    var file = $event.target.files[0];\n    var reader = new FileReader();\n    reader.readAsText(file);\n    reader.onload = event => {\n      let csvdata = event?.target?.result?.toString();\n      var rowData = csvdata?.split('\\r\\n') ?? [];\n      this.getElementsByFilter(rowData).subscribe(data => {\n        const csvStr = this.csvGenerator.generateCsv(data);\n        var downloadLink = document.createElement('a');\n        var blob = new Blob(['\\ufeff', csvStr]);\n        var url = URL.createObjectURL(blob);\n        downloadLink.href = url;\n        downloadLink.download = 'ekb_elements.csv';\n        document.body.appendChild(downloadLink);\n        downloadLink.click();\n        document.body.removeChild(downloadLink);\n      });\n    };\n  }\n  file = {\n    name: 'custom.txt'\n  };\n};\nLoadCsvElementsComponent = __decorate([Component({\n  selector: 'app-load-csv-elements',\n  standalone: true,\n  imports: [AsyncPipe, NgIf, ReactiveFormsModule, TuiFiles, TuiIcon],\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], LoadCsvElementsComponent);\nexport { LoadCsvElementsComponent };","map":{"version":3,"names":["AsyncPipe","NgIf","Component","inject","FormControl","ReactiveFormsModule","TuiIcon","TuiFiles","map","injectContext","EkbTableService","FilterOperations","OrFilters","StringFilterOperation","_","CsvHelperService","LoadCsvElementsComponent","context","control","ekbService","csvGenerator","convertToEkb","ekbElement","result","manufacturer","id","name","traceHolder","ekbCategory","ekbProp","properties","propertyName","value","getElementsByFilter","names","filter","paging","scopeParams","sortInfo","filterOperations","fullFilter","filterOperation","filterColumn","operation","Contains","valueForComparison","filters","push","getEkbElements","pipe","elements","items","onFileChanged","$event","file","target","files","reader","FileReader","readAsText","onload","event","csvdata","toString","rowData","split","subscribe","data","csvStr","generateCsv","downloadLink","document","createElement","blob","Blob","url","URL","createObjectURL","href","download","body","appendChild","click","removeChild","__decorate","selector","standalone","imports","template","__NG_CLI_RESOURCE__0"],"sources":["C:\\Users\\Asus-PC\\Downloads\\WebLibraryNew\\WebLibrary\\WebLibraryApp\\Frontend\\src\\app\\components\\load-csv-elements\\load-csv-elements.component.ts"],"sourcesContent":["import { AsyncPipe, NgIf } from '@angular/common';\r\nimport { ChangeDetectionStrategy, Component, inject } from '@angular/core';\r\nimport { FormControl, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { TuiDialogContext, TuiIcon } from '@taiga-ui/core';\r\nimport type { TuiFileLike } from '@taiga-ui/kit';\r\nimport { TuiFiles } from '@taiga-ui/kit';\r\nimport type { Observable } from 'rxjs';\r\nimport { finalize, map, of, Subject, switchMap, timer } from 'rxjs';\r\nimport { injectContext } from '@taiga-ui/polymorpheus';\r\nimport { TUI_INPUT_FILE_TEXTS } from '@taiga-ui/kit/tokens';\r\nimport { TUI_LANGUAGE, TUI_RUSSIAN_LANGUAGE } from '@taiga-ui/i18n';\r\nimport {\r\n  EkbElementDto,\r\n  EkbTableService,\r\n  GetEkbElementsResponse,\r\n} from '../../services/ekb-table/ekb-table.service';\r\nimport { BaseFilter, Paging } from '../../services/filters/filters';\r\nimport { AndFilter, FilterOperations, OrFilters, StringFilterOperation } from '../../services/filters/filterOperations';\r\nimport _ from 'lodash';\r\nimport { CsvHelperService } from '../../services/csv-helper/csv-helper.service';\r\n\r\n@Component({\r\n  selector: 'app-load-csv-elements',\r\n  standalone: true,\r\n  imports: [AsyncPipe, NgIf, ReactiveFormsModule, TuiFiles, TuiIcon],\r\n  templateUrl: './load-csv-elements.component.html',\r\n  styleUrl: './load-csv-elements.component.scss',\r\n})\r\nexport class LoadCsvElementsComponent {\r\n  public readonly context = injectContext<TuiDialogContext<void, void>>();\r\n\r\n  protected readonly control = new FormControl<TuiFileLike | null>(null);\r\n\r\n  private ekbService: EkbTableService = inject(EkbTableService);\r\n\r\n  private csvGenerator: CsvHelperService = inject(CsvHelperService);\r\n\r\n  convertToEkb(ekbElement: EkbElementDto): Record<string, any> {\r\n    let result: Record<string, any> = {};\r\n    result[\r\n      'Производитель'\r\n    ] = `${ekbElement.manufacturer?.id} ${ekbElement.manufacturer?.name}`;\r\n    result[\r\n      'Калькодержатель'\r\n    ] = `${ekbElement.traceHolder?.id} ${ekbElement.traceHolder?.name}`;\r\n    result['Категория'] = ekbElement.ekbCategory?.name ?? 'Не известно';\r\n    for (let ekbProp of ekbElement.properties) {\r\n      result[ekbProp.propertyName] = ekbProp.value;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  getElementsByFilter(names: string[]): Observable<Record<string, any>[]> {\r\n    let filter: BaseFilter = {\r\n      paging: null,\r\n      scopeParams: null,\r\n      sortInfo: null,\r\n      filterOperations: null,\r\n    };\r\n\r\n    const fullFilter = new OrFilters();\r\n    for (let name of names) {\r\n      const filterOperation: StringFilterOperation =\r\n        new StringFilterOperation();\r\n      filterOperation.filterColumn = 'Условное обозначение изделия';\r\n      filterOperation.operation = FilterOperations.Contains;\r\n      filterOperation.valueForComparison = name;\r\n      fullFilter.filters.push(filterOperation);\r\n    }\r\n\r\n    filter.filterOperations = fullFilter;\r\n\r\n    return this.ekbService\r\n      .getEkbElements(filter)\r\n      .pipe(map((elements) => _.map(elements.items, this.convertToEkb)));\r\n  }\r\n\r\n  onFileChanged($event: any) {\r\n    var file = $event.target.files[0];\r\n    var reader = new FileReader();\r\n\r\n    reader.readAsText(file);\r\n\r\n    reader.onload = (event) => {\r\n      let csvdata = event?.target?.result?.toString();\r\n\r\n      var rowData = csvdata?.split('\\r\\n') ?? [];\r\n\r\n      this.getElementsByFilter(rowData).subscribe((data) => {\r\n        const csvStr = this.csvGenerator.generateCsv(data);\r\n        var downloadLink = document.createElement('a');\r\n        var blob = new Blob(['\\ufeff', csvStr]);\r\n        var url = URL.createObjectURL(blob);\r\n        downloadLink.href = url;\r\n        downloadLink.download = 'ekb_elements.csv';\r\n\r\n        document.body.appendChild(downloadLink);\r\n        downloadLink.click();\r\n        document.body.removeChild(downloadLink);\r\n      });\r\n    };\r\n  }\r\n\r\n  protected readonly file: TuiFileLike = {\r\n    name: 'custom.txt',\r\n  };\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}