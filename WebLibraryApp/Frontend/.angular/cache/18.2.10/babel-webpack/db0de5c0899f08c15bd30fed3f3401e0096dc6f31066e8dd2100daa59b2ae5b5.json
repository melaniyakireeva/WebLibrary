{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Directive } from '@angular/core';\nimport { TuiControl } from '@taiga-ui/cdk/classes';\nimport { tuiProvide } from '@taiga-ui/cdk/utils/miscellaneous';\nimport { TUI_DATA_LIST_HOST } from '@taiga-ui/core/components/data-list';\nimport * as i2 from '@taiga-ui/core/components/textfield';\nimport { TuiWithTextfieldDropdown } from '@taiga-ui/core/components/textfield';\nimport * as i1 from '@taiga-ui/core/directives/dropdown';\nimport { tuiDropdownOpen, tuiDropdownOptionsProvider, TuiDropdownDirective, TuiWithDropdownOpen } from '@taiga-ui/core/directives/dropdown';\nclass TuiButtonSelect extends TuiControl {\n  constructor() {\n    super(...arguments);\n    this.open = tuiDropdownOpen();\n    this.size = 's';\n  }\n  handleOption(option) {\n    this.onChange(option);\n    this.open.set(false);\n  }\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵTuiButtonSelect_BaseFactory;\n      return function TuiButtonSelect_Factory(__ngFactoryType__) {\n        return (ɵTuiButtonSelect_BaseFactory || (ɵTuiButtonSelect_BaseFactory = i0.ɵɵgetInheritedFactory(TuiButtonSelect)))(__ngFactoryType__ || TuiButtonSelect);\n      };\n    })();\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: TuiButtonSelect,\n      selectors: [[\"button\", \"tuiButtonSelect\", \"\"]],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([\n      // TODO: Add checkmark once we properly implement new Select, then add to demo\n      tuiProvide(TUI_DATA_LIST_HOST, TuiButtonSelect), tuiDropdownOptionsProvider({\n        align: 'right'\n      })]), i0.ɵɵHostDirectivesFeature([i1.TuiDropdownDirective, i1.TuiWithDropdownOpen, i2.TuiWithTextfieldDropdown]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiButtonSelect, [{\n    type: Directive,\n    args: [{\n      standalone: true,\n      selector: 'button[tuiButtonSelect]',\n      providers: [\n      // TODO: Add checkmark once we properly implement new Select, then add to demo\n      tuiProvide(TUI_DATA_LIST_HOST, TuiButtonSelect), tuiDropdownOptionsProvider({\n        align: 'right'\n      })],\n      hostDirectives: [TuiDropdownDirective, TuiWithDropdownOpen, TuiWithTextfieldDropdown]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiButtonSelect };","map":{"version":3,"names":["i0","Directive","TuiControl","tuiProvide","TUI_DATA_LIST_HOST","i2","TuiWithTextfieldDropdown","i1","tuiDropdownOpen","tuiDropdownOptionsProvider","TuiDropdownDirective","TuiWithDropdownOpen","TuiButtonSelect","constructor","arguments","open","size","handleOption","option","onChange","set","ɵfac","ɵTuiButtonSelect_BaseFactory","TuiButtonSelect_Factory","__ngFactoryType__","ɵɵgetInheritedFactory","ɵdir","ɵɵdefineDirective","type","selectors","standalone","features","ɵɵProvidersFeature","align","ɵɵHostDirectivesFeature","ɵɵInheritDefinitionFeature","ngDevMode","ɵsetClassMetadata","args","selector","providers","hostDirectives"],"sources":["C:/Users/Asus-PC/Downloads/WebLibraryNew/WebLibrary/WebLibraryApp/Frontend/node_modules/@taiga-ui/kit/fesm2022/taiga-ui-kit-directives-button-select.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Directive } from '@angular/core';\nimport { TuiControl } from '@taiga-ui/cdk/classes';\nimport { tuiProvide } from '@taiga-ui/cdk/utils/miscellaneous';\nimport { TUI_DATA_LIST_HOST } from '@taiga-ui/core/components/data-list';\nimport * as i2 from '@taiga-ui/core/components/textfield';\nimport { TuiWithTextfieldDropdown } from '@taiga-ui/core/components/textfield';\nimport * as i1 from '@taiga-ui/core/directives/dropdown';\nimport { tuiDropdownOpen, tuiDropdownOptionsProvider, TuiDropdownDirective, TuiWithDropdownOpen } from '@taiga-ui/core/directives/dropdown';\n\nclass TuiButtonSelect extends TuiControl {\n    constructor() {\n        super(...arguments);\n        this.open = tuiDropdownOpen();\n        this.size = 's';\n    }\n    handleOption(option) {\n        this.onChange(option);\n        this.open.set(false);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiButtonSelect, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiButtonSelect, isStandalone: true, selector: \"button[tuiButtonSelect]\", providers: [\n            // TODO: Add checkmark once we properly implement new Select, then add to demo\n            tuiProvide(TUI_DATA_LIST_HOST, TuiButtonSelect),\n            tuiDropdownOptionsProvider({ align: 'right' }),\n        ], usesInheritance: true, hostDirectives: [{ directive: i1.TuiDropdownDirective }, { directive: i1.TuiWithDropdownOpen }, { directive: i2.TuiWithTextfieldDropdown }], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiButtonSelect, decorators: [{\n            type: Directive,\n            args: [{\n                    standalone: true,\n                    selector: 'button[tuiButtonSelect]',\n                    providers: [\n                        // TODO: Add checkmark once we properly implement new Select, then add to demo\n                        tuiProvide(TUI_DATA_LIST_HOST, TuiButtonSelect),\n                        tuiDropdownOptionsProvider({ align: 'right' }),\n                    ],\n                    hostDirectives: [TuiDropdownDirective, TuiWithDropdownOpen, TuiWithTextfieldDropdown],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiButtonSelect };\n"],"mappings":"AAAA,OAAO,KAAKA,EAAE,MAAM,eAAe;AACnC,SAASC,SAAS,QAAQ,eAAe;AACzC,SAASC,UAAU,QAAQ,uBAAuB;AAClD,SAASC,UAAU,QAAQ,mCAAmC;AAC9D,SAASC,kBAAkB,QAAQ,qCAAqC;AACxE,OAAO,KAAKC,EAAE,MAAM,qCAAqC;AACzD,SAASC,wBAAwB,QAAQ,qCAAqC;AAC9E,OAAO,KAAKC,EAAE,MAAM,oCAAoC;AACxD,SAASC,eAAe,EAAEC,0BAA0B,EAAEC,oBAAoB,EAAEC,mBAAmB,QAAQ,oCAAoC;AAE3I,MAAMC,eAAe,SAASV,UAAU,CAAC;EACrCW,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC,GAAGC,SAAS,CAAC;IACnB,IAAI,CAACC,IAAI,GAAGP,eAAe,CAAC,CAAC;IAC7B,IAAI,CAACQ,IAAI,GAAG,GAAG;EACnB;EACAC,YAAYA,CAACC,MAAM,EAAE;IACjB,IAAI,CAACC,QAAQ,CAACD,MAAM,CAAC;IACrB,IAAI,CAACH,IAAI,CAACK,GAAG,CAAC,KAAK,CAAC;EACxB;EACA;IAAS,IAAI,CAACC,IAAI;MAAA,IAAAC,4BAAA;MAAA,gBAAAC,wBAAAC,iBAAA;QAAA,QAAAF,4BAAA,KAAAA,4BAAA,GAA+EtB,EAAE,CAAAyB,qBAAA,CAAQb,eAAe,IAAAY,iBAAA,IAAfZ,eAAe;MAAA;IAAA,IAAqD;EAAE;EACjL;IAAS,IAAI,CAACc,IAAI,kBAD+E1B,EAAE,CAAA2B,iBAAA;MAAAC,IAAA,EACJhB,eAAe;MAAAiB,SAAA;MAAAC,UAAA;MAAAC,QAAA,GADb/B,EAAE,CAAAgC,kBAAA,CACiF;MAC5K;MACA7B,UAAU,CAACC,kBAAkB,EAAEQ,eAAe,CAAC,EAC/CH,0BAA0B,CAAC;QAAEwB,KAAK,EAAE;MAAQ,CAAC,CAAC,CACjD,GAL4FjC,EAAE,CAAAkC,uBAAA,EAKvC3B,EAAE,CAACG,oBAAoB,EAAiBH,EAAE,CAACI,mBAAmB,EAAiBN,EAAE,CAACC,wBAAwB,IALrEN,EAAE,CAAAmC,0BAAA;IAAA,EAKuF;EAAE;AAChM;AACA;EAAA,QAAAC,SAAA,oBAAAA,SAAA,KAPqGpC,EAAE,CAAAqC,iBAAA,CAOXzB,eAAe,EAAc,CAAC;IAC9GgB,IAAI,EAAE3B,SAAS;IACfqC,IAAI,EAAE,CAAC;MACCR,UAAU,EAAE,IAAI;MAChBS,QAAQ,EAAE,yBAAyB;MACnCC,SAAS,EAAE;MACP;MACArC,UAAU,CAACC,kBAAkB,EAAEQ,eAAe,CAAC,EAC/CH,0BAA0B,CAAC;QAAEwB,KAAK,EAAE;MAAQ,CAAC,CAAC,CACjD;MACDQ,cAAc,EAAE,CAAC/B,oBAAoB,EAAEC,mBAAmB,EAAEL,wBAAwB;IACxF,CAAC;EACT,CAAC,CAAC;AAAA;;AAEV;AACA;AACA;;AAEA,SAASM,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}