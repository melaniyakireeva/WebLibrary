{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./references.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./references.component.scss?ngResource\";\nimport { ChangeDetectorRef, Component } from '@angular/core';\nimport { ReferenceService } from '../../services/reference/reference.service';\nimport { AuthService } from '../../services/auth/auth-service.service';\nimport { TuiButton, tuiDialog, TuiLoader } from '@taiga-ui/core';\nimport { AddReferenceModalComponent } from '../add-reference-modal/add-reference-modal.component';\nimport { map, of, shareReplay, tap } from 'rxjs';\nimport { ReferenceEditorComponent } from '../reference-editor/reference-editor.component';\nimport { AsyncPipe, NgFor, NgIf } from '@angular/common';\nimport { ReferenceEkbElementComponent } from '../reference-ekb-element/reference-ekb-element.component';\nlet ReferencesComponent = class ReferencesComponent {\n  referenceService;\n  authService;\n  cdRef;\n  isLoading = true;\n  accountId = -1;\n  currentData$ = of([]);\n  addReference = tuiDialog(AddReferenceModalComponent, {\n    dismissible: true,\n    label: 'Добавить справочник',\n    size: 'auto'\n  });\n  referenceElements = tuiDialog(ReferenceEkbElementComponent, {\n    dismissible: true,\n    label: 'Элементы справочника',\n    size: 'auto'\n  });\n  constructor(referenceService, authService, cdRef) {\n    this.referenceService = referenceService;\n    this.authService = authService;\n    this.cdRef = cdRef;\n    this.accountId = this.authService.getUserInfo()?.userId ?? -1;\n  }\n  ngOnInit() {\n    this.updateFilterParams();\n  }\n  onAddReference() {\n    this.addReference({\n      userId: this.accountId\n    }).subscribe(x => {\n      this.referenceService.saveUserReference(x).subscribe(y => {\n        this.updateFilterParams();\n        this.cdRef.markForCheck();\n      });\n    });\n  }\n  onReferenceClick(reference) {\n    this.referenceElements({\n      referenceId: reference.id\n    }).subscribe(x => {});\n  }\n  updateFilterParams() {\n    this.isLoading = true;\n    this.currentData$ = this.referenceService.getUserReference(this.accountId).pipe(tap(x => {\n      this.isLoading = false;\n    }), map(x => {\n      return x.items;\n    }), shareReplay(1));\n  }\n  static ctorParameters = () => [{\n    type: ReferenceService\n  }, {\n    type: AuthService\n  }, {\n    type: ChangeDetectorRef\n  }];\n};\nReferencesComponent = __decorate([Component({\n  selector: 'app-references',\n  standalone: true,\n  imports: [TuiLoader, TuiButton, ReferenceEditorComponent, NgIf, NgFor, AsyncPipe],\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], ReferencesComponent);\nexport { ReferencesComponent };","map":{"version":3,"names":["ChangeDetectorRef","Component","ReferenceService","AuthService","TuiButton","tuiDialog","TuiLoader","AddReferenceModalComponent","map","of","shareReplay","tap","ReferenceEditorComponent","AsyncPipe","NgFor","NgIf","ReferenceEkbElementComponent","ReferencesComponent","referenceService","authService","cdRef","isLoading","accountId","currentData$","addReference","dismissible","label","size","referenceElements","constructor","getUserInfo","userId","ngOnInit","updateFilterParams","onAddReference","subscribe","x","saveUserReference","y","markForCheck","onReferenceClick","reference","referenceId","id","getUserReference","pipe","items","__decorate","selector","standalone","imports","template","__NG_CLI_RESOURCE__0"],"sources":["C:\\Users\\Asus-PC\\Downloads\\WebLibraryNew\\WebLibrary\\WebLibraryApp\\Frontend\\src\\app\\components\\references\\references.component.ts"],"sourcesContent":["import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { ReferenceInfo, References, ReferenceService } from '../../services/reference/reference.service';\r\nimport { AuthService } from '../../services/auth/auth-service.service';\r\nimport { TuiButton, tuiDialog, TuiLoader } from '@taiga-ui/core';\r\nimport { AddReferenceModalComponent } from '../add-reference-modal/add-reference-modal.component';\r\nimport { map, Observable, of, shareReplay, tap } from 'rxjs';\r\nimport { ReferenceEditorComponent } from '../reference-editor/reference-editor.component';\r\nimport { AsyncPipe, NgFor, NgIf } from '@angular/common';\r\nimport { ReferenceEkbElementComponent } from '../reference-ekb-element/reference-ekb-element.component';\r\n\r\n@Component({\r\n  selector: 'app-references',\r\n  standalone: true,\r\n  imports: [\r\n    TuiLoader,\r\n    TuiButton,\r\n    ReferenceEditorComponent,\r\n    NgIf,\r\n    NgFor,\r\n    AsyncPipe,\r\n  ],\r\n  templateUrl: './references.component.html',\r\n  styleUrl: './references.component.scss',\r\n})\r\nexport class ReferencesComponent implements OnInit {\r\n  protected isLoading: boolean = true;\r\n  protected accountId: number = -1;\r\n  protected currentData$: Observable<ReferenceInfo[]> = of([]);\r\n\r\n  private readonly addReference = tuiDialog(AddReferenceModalComponent, {\r\n    dismissible: true,\r\n    label: 'Добавить справочник',\r\n    size: 'auto',\r\n  });\r\n\r\n  private readonly referenceElements = tuiDialog(ReferenceEkbElementComponent, {\r\n    dismissible: true,\r\n    label: 'Элементы справочника',\r\n    size: 'auto',\r\n  });\r\n\r\n  constructor(\r\n    private referenceService: ReferenceService,\r\n    private authService: AuthService,\r\n    private cdRef: ChangeDetectorRef\r\n  ) {\r\n    this.accountId = this.authService.getUserInfo()?.userId ?? -1;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.updateFilterParams();\r\n  }\r\n\r\n  onAddReference() {\r\n    this.addReference({ userId: this.accountId }).subscribe((x) => {\r\n      this.referenceService.saveUserReference(x).subscribe((y) => {\r\n        this.updateFilterParams();\r\n        this.cdRef.markForCheck();\r\n      });\r\n    });\r\n  }\r\n\r\n  onReferenceClick(reference: ReferenceInfo){\r\n    this.referenceElements({referenceId: reference.id}).subscribe(x => {});\r\n  }\r\n\r\n  updateFilterParams() {\r\n    this.isLoading = true;\r\n    this.currentData$ = this.referenceService\r\n      .getUserReference(this.accountId)\r\n      .pipe(\r\n        tap((x) => {\r\n          this.isLoading = false;\r\n        }),\r\n        map((x) => {\r\n          return x.items;\r\n        }),\r\n        shareReplay(1)\r\n      );\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}