{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./electronic-table.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./electronic-table.component.scss?ngResource\";\nimport { AsyncPipe, NgForOf, NgIf } from '@angular/common';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, inject, Input } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { WaIntersectionObserver } from '@ng-web-apis/intersection-observer';\nimport { TuiTable } from '@taiga-ui/addon-table';\nimport { TuiLet, TuiValidator } from '@taiga-ui/cdk';\nimport { TuiButton, tuiDialog, TuiDialogService, TuiFormatNumberPipe, TuiHint, TuiIcon, TuiLoader, TuiScrollbar, TuiTextfield } from '@taiga-ui/core';\nimport { TUI_CONFIRM, TuiChip, TuiDataListWrapper, TuiLike, TuiPagination, TuiStatus } from '@taiga-ui/kit';\nimport { TuiInputDateModule, TuiInputNumberModule, TuiSelectModule, TuiTextareaModule } from '@taiga-ui/legacy';\nimport { CategoryTreeComponent } from '../category-tree/category-tree.component';\nimport { EkbTableService } from '../../services/ekb-table/ekb-table.service';\nimport { combineLatest, map, of, shareReplay, switchMap, tap } from 'rxjs';\nimport _ from 'lodash';\nimport { AndFilter, FilterOperations, MultipleNumberFilterOperation, StringFilterOperation } from '../../services/filters/filterOperations';\nimport { FilterModalComponent } from '../filter-modal/filter-modal.component';\nimport { FilterConverter } from '../../services/filters/filter-converter';\nimport { TableColumnEditorComponent } from '../table-column-editor/table-column-editor.component';\nimport { FilesUploaderService } from '../../services/files/files-uploader.service';\nimport { FileWorkerService } from '../../services/fileworker/file-worker.service';\nimport { ElectronicCardComponent } from '../electronic-card/electronic-card.component';\nimport { LoadCsvElementsComponent } from '../load-csv-elements/load-csv-elements.component';\nimport { CsvHelperService } from '../../services/csv-helper/csv-helper.service';\nimport { AuthService } from '../../services/auth/auth-service.service';\nimport { ElementToReferenceComponent, ReferenceListItem } from '../element-to-reference/element-to-reference.component';\nimport { ReferenceService } from '../../services/reference/reference.service';\nimport { LlmLogicService } from '../../services/llm-logic/llm-logic.service';\nlet ElectronicTableComponent = class ElectronicTableComponent {\n  fileService;\n  fileWorker;\n  ekbService;\n  authService;\n  referenceService;\n  csvGenerator;\n  llmService;\n  cdRef;\n  showOperations = true;\n  data;\n  dialogs = inject(TuiDialogService);\n  sortColumns = ['Id'];\n  properties = [];\n  shownProperties = [];\n  currentData$ = of([]);\n  isLoading = false;\n  index = 0;\n  length = 0;\n  filterText = '';\n  item_per_page = 20;\n  columnForSort = '';\n  elementToReferenceDialog = tuiDialog(ElementToReferenceComponent, {\n    dismissible: true,\n    label: 'Добавление элементов в справочник',\n    size: 'auto'\n  });\n  filterDialog = tuiDialog(FilterModalComponent, {\n    dismissible: true,\n    label: 'Фильтр по компонентам',\n    size: 'auto'\n  });\n  cardDialog = tuiDialog(ElectronicCardComponent, {\n    dismissible: true,\n    label: 'Карточка компонента',\n    size: 'auto'\n  });\n  csvFinderDialog = tuiDialog(LoadCsvElementsComponent, {\n    dismissible: true,\n    label: 'Поиск по CSV',\n    size: 'auto'\n  });\n  accountInfo;\n  ITEMS_PER_PAGE_LIST = [10, 20, 50];\n  filterNameVal = '';\n  selectedCategories;\n  customFilters = new AndFilter();\n  filterFromLlm = new AndFilter();\n  converter = FilterConverter;\n  filterResult = '';\n  hasFilter = false;\n  constructor(fileService, fileWorker, ekbService, authService, referenceService, csvGenerator, llmService, cdRef) {\n    this.fileService = fileService;\n    this.fileWorker = fileWorker;\n    this.ekbService = ekbService;\n    this.authService = authService;\n    this.referenceService = referenceService;\n    this.csvGenerator = csvGenerator;\n    this.llmService = llmService;\n    this.cdRef = cdRef;\n    this.accountInfo = this.authService.getUserInfo();\n  }\n  showDialog(content) {\n    this.dialogs.open(content, {\n      label: 'Расположение колонок',\n      size: 'l'\n    }).subscribe();\n  }\n  sendFilterText() {\n    this.llmService.generateFilter(this.filterText).subscribe(x => {\n      this.filterResult = JSON.stringify(x?.['filter']?.['filter']?.['where']);\n      this.filterFromLlm = FilterConverter.getFilterFromObj(x['filter']['filter']['where'], this.properties) ?? new AndFilter();\n      this.updateFilterParams();\n      this.cdRef.markForCheck();\n    });\n  }\n  onExportCsvEkb() {\n    const filter = this.createFilter();\n    filter.paging = null;\n    const obs$ = this.ekbService.getEkbElements(filter).pipe(map(elements => _.map(elements.items, this.convertToEkb)));\n    obs$.subscribe(data => {\n      const dataVals = _.map(data, x => x.data);\n      const csvStr = this.csvGenerator.generateCsv(dataVals);\n      var downloadLink = document.createElement('a');\n      var blob = new Blob(['\\ufeff', csvStr]);\n      var url = URL.createObjectURL(blob);\n      downloadLink.href = url;\n      downloadLink.download = 'ekb_elements.csv';\n      document.body.appendChild(downloadLink);\n      downloadLink.click();\n      document.body.removeChild(downloadLink);\n    });\n  }\n  onCsvFilter() {\n    this.csvFinderDialog().subscribe(x => {});\n  }\n  onOpenElementCard(elem) {\n    this.cardDialog(elem).subscribe(x => {});\n  }\n  onAddReference(elem) {\n    this.referenceService.getUserReference(this.accountInfo?.userId ?? -1).pipe(switchMap(references => {\n      return this.referenceService.getReferencesPerElement(this.accountInfo?.userId ?? -1, elem.data.Id).pipe(map(ekbReferences => {\n        return [references, ekbReferences];\n      }));\n    })).subscribe(([references, ekbReferences]) => {\n      this.elementToReferenceDialog({\n        selectedReferences: _.map(ekbReferences.items, x => new ReferenceListItem(x)),\n        userReferences: _.map(references.items, x => new ReferenceListItem(x))\n      }).subscribe(({\n        selectedReferences,\n        userReferences\n      }) => {\n        const removedReferences = _.difference(userReferences, selectedReferences);\n        const referenceObs$ = [this.referenceService.saveElementToReference(elem.modelRef.id, selectedReferences), this.referenceService.deleteElementFromReference(elem.modelRef.id, removedReferences)];\n        combineLatest(referenceObs$).subscribe(([isSaveResult, isDeleteResult]) => {\n          if (isSaveResult && isDeleteResult) {\n            const data = {\n              yes: 'Да',\n              no: 'Отмена'\n            };\n            this.dialogs.open(TUI_CONFIRM, {\n              label: 'Элемент добавлен в справочники',\n              size: 's',\n              data\n            }).subscribe(x => {});\n          } else {\n            const data = {\n              yes: 'Да',\n              no: 'Отмена'\n            };\n            this.dialogs.open(TUI_CONFIRM, {\n              label: 'Ошибка при добавлении',\n              size: 's',\n              data\n            }).subscribe(x => {});\n          }\n        });\n      });\n    });\n  }\n  onOpenElementCardEdit(elem) {}\n  onAddElement() {}\n  onColumnChanged(newColumns) {\n    this.shownProperties = newColumns;\n  }\n  onSelectedCategoryChanged($event) {\n    if (_.isEmpty($event)) {\n      this.selectedCategories = undefined;\n    } else {\n      this.selectedCategories = $event;\n    }\n    this.updateFilterParams();\n  }\n  onAddFilter() {\n    this.filterDialog({\n      columns: this.sortColumns,\n      initFilter: FilterConverter.copyFilter(this.customFilters)\n    }).subscribe(x => {\n      this.customFilters = x;\n      this.hasFilter = !FilterConverter.isEmptyFilter(x);\n      this.updateFilterParams();\n      this.cdRef.markForCheck();\n    });\n  }\n  loadFile(id) {\n    this.fileService.getFile(id).pipe(tap(file => {\n      var a = document.createElement('a');\n      const mimeType = this.fileWorker.getFileMimeType(file.fileName);\n      a.href = `data:${mimeType};base64,` + file.fileData;\n      a.download = file.fileName;\n      a.click();\n      a.remove();\n    })).subscribe(x => {});\n  }\n  convertToEkb(ekbElement) {\n    let result = {};\n    result['Id'] = ekbElement.id;\n    result['Файл'] = ekbElement.fileModelId;\n    result['Производитель'] = `${ekbElement.manufacturer?.id} ${ekbElement.manufacturer?.name}`;\n    result['Калькодержатель'] = `${ekbElement.traceHolder?.id} ${ekbElement.traceHolder?.name}`;\n    result['Категория'] = ekbElement.ekbCategory?.name ?? 'Не известно';\n    for (let ekbProp of ekbElement.properties) {\n      result[ekbProp.propertyName] = ekbProp.value;\n    }\n    return {\n      data: result,\n      modelRef: ekbElement\n    };\n  }\n  ngOnInit() {\n    this.updateFilterParams();\n  }\n  onSortColumnChange(event) {\n    this.updateFilterParams();\n  }\n  onFilterNameChange(event) {\n    this.updateFilterParams();\n  }\n  onFavouriteChange(elem, flag) {\n    const ekbId = elem.data['Id'];\n    const userId = this.authService.getUserInfo()?.userId ?? -1;\n    this.ekbService.markElementAsFavourite(ekbId, userId, flag.target.checked).subscribe(x => {});\n  }\n  createFilter() {\n    let filter = {\n      paging: null,\n      scopeParams: null,\n      sortInfo: null,\n      filterOperations: null\n    };\n    filter.paging = {\n      pageIndex: this.index,\n      itemsPerPage: this.item_per_page\n    };\n    if (!_.isEmpty(this.columnForSort)) {\n      filter.sortInfo = {\n        isDescending: false,\n        sortColumn: this.columnForSort\n      };\n    }\n    const fullFilter = new AndFilter();\n    if (!_.isEmpty(this.filterNameVal)) {\n      const filterOperation = new StringFilterOperation();\n      filterOperation.filterColumn = 'Условное обозначение изделия';\n      filterOperation.operation = FilterOperations.Contains;\n      filterOperation.valueForComparison = this.filterNameVal;\n      fullFilter.filters.push(filterOperation);\n    }\n    if (!_.isNil(this.selectedCategories)) {\n      const filterOperation = new MultipleNumberFilterOperation();\n      filterOperation.filterColumn = 'Категория';\n      filterOperation.operation = FilterOperations.Contains;\n      filterOperation.valueForComparison = this.selectedCategories;\n      fullFilter.filters.push(filterOperation);\n    }\n    if (!_.isNil(this.customFilters)) {\n      fullFilter.filters.push(this.customFilters);\n    }\n    if (!_.isNil(this.filterFromLlm)) {\n      fullFilter.filters.push(this.filterFromLlm);\n    }\n    filter.filterOperations = fullFilter;\n    filter.filterOperations = fullFilter;\n    return filter;\n  }\n  updateFilterParams() {\n    const filter = this.createFilter();\n    this.isLoading = true;\n    this.currentData$ = this.data(filter).pipe(tap(x => {\n      this.length = Math.ceil(x.totalCount / this.item_per_page);\n      if (this.length > 0) {\n        this.index = Math.min(this.index, this.length - 1);\n      } else {\n        this.index = 0;\n      }\n    }), map(elements => _.map(elements.items, this.convertToEkb)), tap(elements => {\n      const keys = _.union(..._.map(elements, x => _.keys(x.data)));\n      this.properties = keys;\n      if (_.isEmpty(this.shownProperties)) {\n        this.shownProperties = keys;\n      }\n      this.sortColumns = _.union(this.sortColumns, keys);\n      this.isLoading = false;\n    }), shareReplay(1));\n  }\n  onPageAmountChanged() {\n    this.index = 0;\n    this.updateFilterParams();\n  }\n  goToPage(index) {\n    this.index = index;\n    this.updateFilterParams();\n  }\n  static ctorParameters = () => [{\n    type: FilesUploaderService\n  }, {\n    type: FileWorkerService\n  }, {\n    type: EkbTableService\n  }, {\n    type: AuthService\n  }, {\n    type: ReferenceService\n  }, {\n    type: CsvHelperService\n  }, {\n    type: LlmLogicService\n  }, {\n    type: ChangeDetectorRef\n  }];\n  static propDecorators = {\n    showOperations: [{\n      type: Input\n    }],\n    data: [{\n      type: Input\n    }]\n  };\n};\nElectronicTableComponent = __decorate([Component({\n  selector: 'app-electronic-table',\n  standalone: true,\n  imports: [AsyncPipe, FormsModule, NgForOf, NgIf, TuiSelectModule, TuiTextfield, TuiDataListWrapper, TuiButton, TuiDataListWrapper, TuiFormatNumberPipe, CategoryTreeComponent, TuiChip, TuiIcon, TuiPagination, TuiInputDateModule, TuiInputNumberModule, TuiLoader, TuiLet, TuiScrollbar, TuiTable, TuiLike, TuiStatus, TuiTextareaModule, TuiValidator, TableColumnEditorComponent, TuiHint, WaIntersectionObserver],\n  template: __NG_CLI_RESOURCE__0,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styles: [__NG_CLI_RESOURCE__1]\n})], ElectronicTableComponent);\nexport { ElectronicTableComponent };","map":{"version":3,"names":["AsyncPipe","NgForOf","NgIf","ChangeDetectionStrategy","ChangeDetectorRef","Component","inject","Input","FormsModule","WaIntersectionObserver","TuiTable","TuiLet","TuiValidator","TuiButton","tuiDialog","TuiDialogService","TuiFormatNumberPipe","TuiHint","TuiIcon","TuiLoader","TuiScrollbar","TuiTextfield","TUI_CONFIRM","TuiChip","TuiDataListWrapper","TuiLike","TuiPagination","TuiStatus","TuiInputDateModule","TuiInputNumberModule","TuiSelectModule","TuiTextareaModule","CategoryTreeComponent","EkbTableService","combineLatest","map","of","shareReplay","switchMap","tap","_","AndFilter","FilterOperations","MultipleNumberFilterOperation","StringFilterOperation","FilterModalComponent","FilterConverter","TableColumnEditorComponent","FilesUploaderService","FileWorkerService","ElectronicCardComponent","LoadCsvElementsComponent","CsvHelperService","AuthService","ElementToReferenceComponent","ReferenceListItem","ReferenceService","LlmLogicService","ElectronicTableComponent","fileService","fileWorker","ekbService","authService","referenceService","csvGenerator","llmService","cdRef","showOperations","data","dialogs","sortColumns","properties","shownProperties","currentData$","isLoading","index","length","filterText","item_per_page","columnForSort","elementToReferenceDialog","dismissible","label","size","filterDialog","cardDialog","csvFinderDialog","accountInfo","ITEMS_PER_PAGE_LIST","filterNameVal","selectedCategories","customFilters","filterFromLlm","converter","filterResult","hasFilter","constructor","getUserInfo","showDialog","content","open","subscribe","sendFilterText","generateFilter","x","JSON","stringify","getFilterFromObj","updateFilterParams","markForCheck","onExportCsvEkb","filter","createFilter","paging","obs$","getEkbElements","pipe","elements","items","convertToEkb","dataVals","csvStr","generateCsv","downloadLink","document","createElement","blob","Blob","url","URL","createObjectURL","href","download","body","appendChild","click","removeChild","onCsvFilter","onOpenElementCard","elem","onAddReference","getUserReference","userId","references","getReferencesPerElement","Id","ekbReferences","selectedReferences","userReferences","removedReferences","difference","referenceObs$","saveElementToReference","modelRef","id","deleteElementFromReference","isSaveResult","isDeleteResult","yes","no","onOpenElementCardEdit","onAddElement","onColumnChanged","newColumns","onSelectedCategoryChanged","$event","isEmpty","undefined","onAddFilter","columns","initFilter","copyFilter","isEmptyFilter","loadFile","getFile","file","a","mimeType","getFileMimeType","fileName","fileData","remove","ekbElement","result","fileModelId","manufacturer","name","traceHolder","ekbCategory","ekbProp","propertyName","value","ngOnInit","onSortColumnChange","event","onFilterNameChange","onFavouriteChange","flag","ekbId","markElementAsFavourite","target","checked","scopeParams","sortInfo","filterOperations","pageIndex","itemsPerPage","isDescending","sortColumn","fullFilter","filterOperation","filterColumn","operation","Contains","valueForComparison","filters","push","isNil","Math","ceil","totalCount","min","keys","union","onPageAmountChanged","goToPage","__decorate","selector","standalone","imports","template","__NG_CLI_RESOURCE__0","changeDetection","OnPush"],"sources":["C:\\Users\\Asus-PC\\Downloads\\WebLibraryNew\\WebLibrary\\WebLibraryApp\\Frontend\\src\\app\\components\\electronic-table\\electronic-table.component.ts"],"sourcesContent":["import { AsyncPipe, NgForOf, NgIf } from '@angular/common';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  inject,\r\n  Input,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport type { ValidatorFn } from '@angular/forms';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { WaIntersectionObserver } from '@ng-web-apis/intersection-observer';\r\nimport type { TuiComparator } from '@taiga-ui/addon-table';\r\nimport { TuiTable } from '@taiga-ui/addon-table';\r\nimport { TuiDay, tuiDefaultSort, TuiLet, TuiValidator } from '@taiga-ui/cdk';\r\nimport {\r\n  TuiButton,\r\n  tuiDialog,\r\n  TuiDialogContext,\r\n  TuiDialogService,\r\n  TuiFormatNumberPipe,\r\n  TuiHint,\r\n  TuiIcon,\r\n  TuiLoader,\r\n  TuiScrollbar,\r\n  TuiTextfield,\r\n} from '@taiga-ui/core';\r\nimport {\r\n  TUI_CONFIRM,\r\n  TuiChip,\r\n  TuiConfirmData,\r\n  TuiDataListWrapper,\r\n  TuiLike,\r\n  TuiPagination,\r\n  TuiStatus,\r\n} from '@taiga-ui/kit';\r\nimport {\r\n  TuiInputDateModule,\r\n  TuiInputNumberModule,\r\n  TuiSelectModule,\r\n  TuiTextareaModule,\r\n} from '@taiga-ui/legacy';\r\nimport { CategoryTreeComponent } from '../category-tree/category-tree.component';\r\nimport {\r\n  EkbElementDto,\r\n  EkbTableService,\r\n  GetEkbElementsResponse,\r\n} from '../../services/ekb-table/ekb-table.service';\r\nimport { combineLatest, map, Observable, of, shareReplay, switchMap, tap } from 'rxjs';\r\nimport _ from 'lodash';\r\nimport { BaseFilter, Paging } from '../../services/filters/filters';\r\nimport {\r\n  AndFilter,\r\n  FilterOperations,\r\n  IFilter,\r\n  MultipleNumberFilterOperation,\r\n  StringFilterOperation,\r\n} from '../../services/filters/filterOperations';\r\nimport { FilterModalComponent } from '../filter-modal/filter-modal.component';\r\nimport { FilterConverter } from '../../services/filters/filter-converter';\r\nimport type { PolymorpheusContent } from '@taiga-ui/polymorpheus';\r\nimport { TableColumnEditorComponent } from '../table-column-editor/table-column-editor.component';\r\nimport { FilesUploaderService } from '../../services/files/files-uploader.service';\r\nimport { FileWorkerService } from '../../services/fileworker/file-worker.service';\r\nimport { ElectronicCardComponent } from '../electronic-card/electronic-card.component';\r\nimport { LoadCsvElementsComponent } from '../load-csv-elements/load-csv-elements.component';\r\nimport { CsvHelperService } from '../../services/csv-helper/csv-helper.service';\r\nimport {\r\n  AccountInfo,\r\n  AuthService,\r\n} from '../../services/auth/auth-service.service';\r\nimport {\r\n  ElementToReferenceComponent,\r\n  ReferenceListItem,\r\n} from '../element-to-reference/element-to-reference.component';\r\nimport {\r\n  References,\r\n  ReferenceService,\r\n} from '../../services/reference/reference.service';\r\nimport { LlmLogicService } from '../../services/llm-logic/llm-logic.service';\r\n\r\n@Component({\r\n  selector: 'app-electronic-table',\r\n  standalone: true,\r\n  imports: [\r\n    AsyncPipe,\r\n    FormsModule,\r\n    NgForOf,\r\n    NgIf,\r\n    TuiSelectModule,\r\n    TuiTextfield,\r\n    TuiDataListWrapper,\r\n    TuiButton,\r\n    TuiDataListWrapper,\r\n    TuiFormatNumberPipe,\r\n    CategoryTreeComponent,\r\n    TuiChip,\r\n    TuiIcon,\r\n    TuiPagination,\r\n    TuiInputDateModule,\r\n    TuiInputNumberModule,\r\n    TuiLoader,\r\n    TuiLet,\r\n    TuiScrollbar,\r\n    TuiTable,\r\n    TuiLike,\r\n    TuiStatus,\r\n    TuiTextareaModule,\r\n    TuiValidator,\r\n    TableColumnEditorComponent,\r\n    TuiHint,\r\n    WaIntersectionObserver,\r\n  ],\r\n  templateUrl: './electronic-table.component.html',\r\n  styleUrl: './electronic-table.component.scss',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ElectronicTableComponent implements OnInit {\r\n  @Input() showOperations: boolean = true;\r\n  @Input() data!: (filter: BaseFilter) => Observable<GetEkbElementsResponse>;\r\n\r\n  private readonly dialogs = inject(TuiDialogService);\r\n\r\n  sortColumns: string[] = ['Id'];\r\n  protected properties: string[] = [];\r\n  protected shownProperties: string[] = [];\r\n\r\n  protected currentData$: Observable<any[]> = of([]);\r\n  protected isLoading: boolean = false;\r\n  protected index: number = 0;\r\n  protected length: number = 0;\r\n\r\n  protected filterText: string = '';\r\n\r\n  item_per_page: number = 20;\r\n\r\n  columnForSort: string = '';\r\n\r\n  private readonly elementToReferenceDialog = tuiDialog(\r\n    ElementToReferenceComponent,\r\n    {\r\n      dismissible: true,\r\n      label: 'Добавление элементов в справочник',\r\n      size: 'auto',\r\n    }\r\n  );\r\n\r\n  private readonly filterDialog = tuiDialog(FilterModalComponent, {\r\n    dismissible: true,\r\n    label: 'Фильтр по компонентам',\r\n    size: 'auto',\r\n  });\r\n\r\n  private readonly cardDialog = tuiDialog(ElectronicCardComponent, {\r\n    dismissible: true,\r\n    label: 'Карточка компонента',\r\n    size: 'auto',\r\n  });\r\n\r\n  private readonly csvFinderDialog = tuiDialog(LoadCsvElementsComponent, {\r\n    dismissible: true,\r\n    label: 'Поиск по CSV',\r\n    size: 'auto',\r\n  });\r\n\r\n  protected readonly accountInfo!: AccountInfo | undefined;\r\n\r\n  readonly ITEMS_PER_PAGE_LIST: number[] = [10, 20, 50];\r\n\r\n  filterNameVal: string = '';\r\n\r\n  selectedCategories?: number[];\r\n\r\n  customFilters: IFilter = new AndFilter();\r\n\r\n  filterFromLlm: IFilter = new AndFilter();\r\n\r\n  converter: any = FilterConverter;\r\n\r\n  filterResult: string = '';\r\n\r\n  protected hasFilter: boolean = false;\r\n\r\n  constructor(\r\n    private fileService: FilesUploaderService,\r\n    private fileWorker: FileWorkerService,\r\n    private ekbService: EkbTableService,\r\n    private authService: AuthService,\r\n    private referenceService: ReferenceService,\r\n    private csvGenerator: CsvHelperService,\r\n    private llmService: LlmLogicService,\r\n    private cdRef: ChangeDetectorRef\r\n  ) {\r\n    this.accountInfo = this.authService.getUserInfo();\r\n  }\r\n\r\n  protected showDialog(content: PolymorpheusContent<TuiDialogContext>): void {\r\n    this.dialogs\r\n      .open(content, { label: 'Расположение колонок', size: 'l' })\r\n      .subscribe();\r\n  }\r\n\r\n  sendFilterText(){\r\n    this.llmService.generateFilter(this.filterText).subscribe(x => {\r\n      this.filterResult = JSON.stringify(x?.['filter']?.['filter']?.['where']);\r\n      this.filterFromLlm = FilterConverter.getFilterFromObj(\r\n        x['filter']['filter']['where'],\r\n        this.properties\r\n      ) ?? new AndFilter();\r\n      this.updateFilterParams();\r\n      this.cdRef.markForCheck();\r\n    });\r\n  }\r\n\r\n  onExportCsvEkb() {\r\n    const filter = this.createFilter();\r\n    filter.paging = null;\r\n    const obs$ = this.ekbService\r\n      .getEkbElements(filter)\r\n      .pipe(map((elements) => _.map(elements.items, this.convertToEkb)));\r\n    obs$.subscribe((data) => {\r\n      const dataVals = _.map(data, (x) => x.data);\r\n      const csvStr = this.csvGenerator.generateCsv(dataVals);\r\n      var downloadLink = document.createElement('a');\r\n      var blob = new Blob(['\\ufeff', csvStr]);\r\n      var url = URL.createObjectURL(blob);\r\n      downloadLink.href = url;\r\n      downloadLink.download = 'ekb_elements.csv';\r\n\r\n      document.body.appendChild(downloadLink);\r\n      downloadLink.click();\r\n      document.body.removeChild(downloadLink);\r\n    });\r\n  }\r\n\r\n  onCsvFilter() {\r\n    this.csvFinderDialog().subscribe((x) => {});\r\n  }\r\n\r\n  onOpenElementCard(elem: any) {\r\n    this.cardDialog(elem).subscribe((x) => {});\r\n  }\r\n\r\n  onAddReference(elem: any) {\r\n    this.referenceService\r\n      .getUserReference(this.accountInfo?.userId ?? -1)\r\n      .pipe(\r\n        switchMap((references) => {\r\n          return this.referenceService.getReferencesPerElement(\r\n            this.accountInfo?.userId ?? -1,\r\n            elem.data.Id\r\n          ).pipe(\r\n            map(ekbReferences => {\r\n              return [references, ekbReferences];\r\n            })\r\n          );\r\n        })\r\n      )\r\n      .subscribe(([references, ekbReferences]) => {\r\n        this.elementToReferenceDialog({\r\n          selectedReferences: _.map(\r\n            ekbReferences.items,\r\n            (x) => new ReferenceListItem(x)\r\n          ),\r\n          userReferences: _.map(\r\n            references.items,\r\n            (x) => new ReferenceListItem(x)\r\n          ),\r\n        }).subscribe(({selectedReferences, userReferences}) => {\r\n          const removedReferences: number[] = _.difference(\r\n            userReferences,\r\n            selectedReferences\r\n          );\r\n          const referenceObs$ = [\r\n            this.referenceService.saveElementToReference(\r\n              elem.modelRef.id,\r\n              selectedReferences\r\n            ),\r\n            this.referenceService.deleteElementFromReference(\r\n              elem.modelRef.id,\r\n              removedReferences\r\n            ),\r\n          ];\r\n          combineLatest(referenceObs$).subscribe(([isSaveResult, isDeleteResult]) => {\r\n            if (isSaveResult && isDeleteResult) {\r\n              const data: TuiConfirmData = {\r\n                yes: 'Да',\r\n                no: 'Отмена',\r\n              };\r\n\r\n              this.dialogs\r\n                .open<boolean>(TUI_CONFIRM, {\r\n                  label: 'Элемент добавлен в справочники',\r\n                  size: 's',\r\n                  data,\r\n                })\r\n                .subscribe((x) => {});\r\n            } else {\r\n              const data: TuiConfirmData = {\r\n                yes: 'Да',\r\n                no: 'Отмена',\r\n              };\r\n\r\n              this.dialogs\r\n                .open<boolean>(TUI_CONFIRM, {\r\n                  label: 'Ошибка при добавлении',\r\n                  size: 's',\r\n                  data,\r\n                })\r\n                .subscribe((x) => {});\r\n            }\r\n          });\r\n        });\r\n      });\r\n  }\r\n\r\n  onOpenElementCardEdit(elem: any) {}\r\n\r\n  onAddElement() {}\r\n\r\n  onColumnChanged(newColumns: string[]) {\r\n    this.shownProperties = newColumns;\r\n  }\r\n\r\n  onSelectedCategoryChanged($event: number[]) {\r\n    if (_.isEmpty($event)) {\r\n      this.selectedCategories = undefined;\r\n    } else {\r\n      this.selectedCategories = $event;\r\n    }\r\n    this.updateFilterParams();\r\n  }\r\n\r\n  onAddFilter() {\r\n    this.filterDialog({\r\n      columns: this.sortColumns,\r\n      initFilter: FilterConverter.copyFilter(this.customFilters),\r\n    }).subscribe((x) => {\r\n      this.customFilters = x;\r\n      this.hasFilter = !FilterConverter.isEmptyFilter(x);\r\n      this.updateFilterParams();\r\n      this.cdRef.markForCheck();\r\n    });\r\n  }\r\n\r\n  loadFile(id: number) {\r\n    this.fileService\r\n      .getFile(id)\r\n      .pipe(\r\n        tap((file) => {\r\n          var a = document.createElement('a');\r\n          const mimeType = this.fileWorker.getFileMimeType(file.fileName);\r\n          a.href = `data:${mimeType};base64,` + file.fileData;\r\n          a.download = file.fileName;\r\n          a.click();\r\n          a.remove();\r\n        })\r\n      )\r\n      .subscribe((x) => {});\r\n  }\r\n\r\n  convertToEkb(ekbElement: EkbElementDto): {\r\n    data: Record<string, any>;\r\n    modelRef: EkbElementDto;\r\n  } {\r\n    let result: Record<string, any> = {};\r\n    result['Id'] = ekbElement.id;\r\n    result['Файл'] = ekbElement.fileModelId;\r\n    result[\r\n      'Производитель'\r\n    ] = `${ekbElement.manufacturer?.id} ${ekbElement.manufacturer?.name}`;\r\n    result[\r\n      'Калькодержатель'\r\n    ] = `${ekbElement.traceHolder?.id} ${ekbElement.traceHolder?.name}`;\r\n    result['Категория'] = ekbElement.ekbCategory?.name ?? 'Не известно';\r\n    for (let ekbProp of ekbElement.properties) {\r\n      result[ekbProp.propertyName] = ekbProp.value;\r\n    }\r\n    return {\r\n      data: result,\r\n      modelRef: ekbElement,\r\n    };\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.updateFilterParams();\r\n  }\r\n\r\n  onSortColumnChange(event: any) {\r\n    this.updateFilterParams();\r\n  }\r\n\r\n  onFilterNameChange(event: any) {\r\n    this.updateFilterParams();\r\n  }\r\n\r\n  onFavouriteChange(elem: any, flag: any) {\r\n    const ekbId: number = elem.data['Id'];\r\n    const userId: number = this.authService.getUserInfo()?.userId ?? -1;\r\n    this.ekbService\r\n      .markElementAsFavourite(ekbId, userId, flag.target.checked)\r\n      .subscribe((x) => {});\r\n  }\r\n\r\n  createFilter(): BaseFilter {\r\n    let filter: BaseFilter = {\r\n      paging: null,\r\n      scopeParams: null,\r\n      sortInfo: null,\r\n      filterOperations: null,\r\n    };\r\n\r\n    filter.paging = <Paging>{\r\n      pageIndex: this.index,\r\n      itemsPerPage: this.item_per_page,\r\n    };\r\n\r\n    if (!_.isEmpty(this.columnForSort)) {\r\n      filter.sortInfo = {\r\n        isDescending: false,\r\n        sortColumn: this.columnForSort,\r\n      };\r\n    }\r\n\r\n    const fullFilter = new AndFilter();\r\n    if (!_.isEmpty(this.filterNameVal)) {\r\n      const filterOperation: StringFilterOperation =\r\n        new StringFilterOperation();\r\n      filterOperation.filterColumn = 'Условное обозначение изделия';\r\n      filterOperation.operation = FilterOperations.Contains;\r\n      filterOperation.valueForComparison = this.filterNameVal;\r\n      fullFilter.filters.push(filterOperation);\r\n    }\r\n\r\n    if (!_.isNil(this.selectedCategories)) {\r\n      const filterOperation: MultipleNumberFilterOperation =\r\n        new MultipleNumberFilterOperation();\r\n      filterOperation.filterColumn = 'Категория';\r\n      filterOperation.operation = FilterOperations.Contains;\r\n      filterOperation.valueForComparison = this.selectedCategories;\r\n      fullFilter.filters.push(filterOperation);\r\n    }\r\n\r\n    if (!_.isNil(this.customFilters)) {\r\n      fullFilter.filters.push(this.customFilters);\r\n    }\r\n\r\n    if (!_.isNil(this.filterFromLlm)){\r\n      fullFilter.filters.push(this.filterFromLlm);\r\n    }\r\n\r\n    filter.filterOperations = fullFilter;\r\n\r\n    filter.filterOperations = fullFilter;\r\n\r\n    return filter;\r\n  }\r\n\r\n  updateFilterParams() {\r\n    const filter = this.createFilter();\r\n\r\n    this.isLoading = true;\r\n\r\n    this.currentData$ = this.data(filter).pipe(\r\n      tap((x) => {\r\n        this.length = Math.ceil(x.totalCount / this.item_per_page);\r\n        if (this.length > 0) {\r\n          this.index = Math.min(this.index, this.length - 1);\r\n        } else {\r\n          this.index = 0;\r\n        }\r\n      }),\r\n      map((elements) => _.map(elements.items, this.convertToEkb)),\r\n      tap((elements) => {\r\n        const keys = _.union(..._.map(elements, (x) => _.keys(x.data)));\r\n        this.properties = keys;\r\n        if (_.isEmpty(this.shownProperties)) {\r\n          this.shownProperties = keys;\r\n        }\r\n        this.sortColumns = _.union(this.sortColumns, keys);\r\n        this.isLoading = false;\r\n      }),\r\n      shareReplay(1)\r\n    );\r\n  }\r\n\r\n  onPageAmountChanged() {\r\n    this.index = 0;\r\n    this.updateFilterParams();\r\n  }\r\n\r\n  goToPage(index: number) {\r\n    this.index = index;\r\n    this.updateFilterParams();\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}