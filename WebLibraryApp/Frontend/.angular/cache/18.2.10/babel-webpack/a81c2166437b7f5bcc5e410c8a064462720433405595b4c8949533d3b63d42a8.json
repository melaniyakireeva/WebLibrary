{"ast":null,"code":"import { __decorate } from 'tslib';\nimport { NgForOf } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { tuiSum } from '@taiga-ui/cdk/utils/math';\nimport { tuiPure } from '@taiga-ui/cdk/utils/miscellaneous';\nfunction TuiBar_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 1);\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    const index_r2 = ctx.index;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"background\", \"var(--tui-chart-categorical-0\" + index_r2 + \")\")(\"height\", ctx_r2.getHeight(item_r1), \"%\");\n  }\n}\nclass TuiBar {\n  constructor() {\n    this.value = [];\n    this.size = 'm';\n  }\n  getHeight(value) {\n    return 100 * value / this.getSum(this.value);\n  }\n  getSum(value) {\n    return tuiSum(...value);\n  }\n  static {\n    this.ɵfac = function TuiBar_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiBar)();\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: TuiBar,\n      selectors: [[\"tui-bar\"]],\n      hostVars: 1,\n      hostBindings: function TuiBar_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"data-size\", ctx.size);\n        }\n      },\n      inputs: {\n        value: \"value\",\n        size: \"size\"\n      },\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 1,\n      vars: 1,\n      consts: [[\"automation-id\", \"tui-bar__bar\", 3, \"background\", \"height\", 4, \"ngFor\", \"ngForOf\"], [\"automation-id\", \"tui-bar__bar\"]],\n      template: function TuiBar_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, TuiBar_div_0_Template, 1, 4, \"div\", 0);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngForOf\", ctx.value);\n        }\n      },\n      dependencies: [NgForOf],\n      styles: [\"[_nghost-%COMP%]{display:flex;min-inline-size:.125rem;flex-direction:column-reverse;border-start-start-radius:var(--tui-radius-l);border-start-end-radius:var(--tui-radius-l);overflow:hidden}[data-size=l][_nghost-%COMP%]{inline-size:1rem;max-inline-size:1rem;margin:0 .1875rem}[data-size=m][_nghost-%COMP%]{inline-size:.5rem;max-inline-size:.5rem;margin:0 .1875rem}[data-size=s][_nghost-%COMP%]{inline-size:.25rem;max-inline-size:.5rem;margin:0 .125rem}\"],\n      changeDetection: 0\n    });\n  }\n}\n__decorate([tuiPure], TuiBar.prototype, \"getSum\", null);\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiBar, [{\n    type: Component,\n    args: [{\n      standalone: true,\n      selector: 'tui-bar',\n      imports: [NgForOf],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        '[attr.data-size]': 'size'\n      },\n      template: \"<div\\n    *ngFor=\\\"let item of value; let index = index\\\"\\n    automation-id=\\\"tui-bar__bar\\\"\\n    [style.background]=\\\"'var(--tui-chart-categorical-0' + index + ')'\\\"\\n    [style.height.%]=\\\"getHeight(item)\\\"\\n></div>\\n\",\n      styles: [\":host{display:flex;min-inline-size:.125rem;flex-direction:column-reverse;border-start-start-radius:var(--tui-radius-l);border-start-end-radius:var(--tui-radius-l);overflow:hidden}:host[data-size=l]{inline-size:1rem;max-inline-size:1rem;margin:0 .1875rem}:host[data-size=m]{inline-size:.5rem;max-inline-size:.5rem;margin:0 .1875rem}:host[data-size=s]{inline-size:.25rem;max-inline-size:.5rem;margin:0 .125rem}\\n\"]\n    }]\n  }], null, {\n    value: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }],\n    getSum: []\n  });\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiBar };","map":{"version":3,"names":["__decorate","NgForOf","i0","Component","ChangeDetectionStrategy","Input","tuiSum","tuiPure","TuiBar_div_0_Template","rf","ctx","ɵɵelement","item_r1","$implicit","index_r2","index","ctx_r2","ɵɵnextContext","ɵɵstyleProp","getHeight","TuiBar","constructor","value","size","getSum","ɵfac","TuiBar_Factory","__ngFactoryType__","ɵcmp","ɵɵdefineComponent","type","selectors","hostVars","hostBindings","TuiBar_HostBindings","ɵɵattribute","inputs","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","TuiBar_Template","ɵɵtemplate","ɵɵproperty","dependencies","styles","changeDetection","prototype","ngDevMode","ɵsetClassMetadata","args","selector","imports","OnPush","host"],"sources":["C:/Users/Asus-PC/Downloads/WebLibraryNew/WebLibrary/WebLibraryApp/Frontend/node_modules/@taiga-ui/addon-charts/fesm2022/taiga-ui-addon-charts-components-bar.mjs"],"sourcesContent":["import { __decorate } from 'tslib';\nimport { NgForOf } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { tuiSum } from '@taiga-ui/cdk/utils/math';\nimport { tuiPure } from '@taiga-ui/cdk/utils/miscellaneous';\n\nclass TuiBar {\n    constructor() {\n        this.value = [];\n        this.size = 'm';\n    }\n    getHeight(value) {\n        return (100 * value) / this.getSum(this.value);\n    }\n    getSum(value) {\n        return tuiSum(...value);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiBar, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiBar, isStandalone: true, selector: \"tui-bar\", inputs: { value: \"value\", size: \"size\" }, host: { properties: { \"attr.data-size\": \"size\" } }, ngImport: i0, template: \"<div\\n    *ngFor=\\\"let item of value; let index = index\\\"\\n    automation-id=\\\"tui-bar__bar\\\"\\n    [style.background]=\\\"'var(--tui-chart-categorical-0' + index + ')'\\\"\\n    [style.height.%]=\\\"getHeight(item)\\\"\\n></div>\\n\", styles: [\":host{display:flex;min-inline-size:.125rem;flex-direction:column-reverse;border-start-start-radius:var(--tui-radius-l);border-start-end-radius:var(--tui-radius-l);overflow:hidden}:host[data-size=l]{inline-size:1rem;max-inline-size:1rem;margin:0 .1875rem}:host[data-size=m]{inline-size:.5rem;max-inline-size:.5rem;margin:0 .1875rem}:host[data-size=s]{inline-size:.25rem;max-inline-size:.5rem;margin:0 .125rem}\\n\"], dependencies: [{ kind: \"directive\", type: NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\n__decorate([\n    tuiPure\n], TuiBar.prototype, \"getSum\", null);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiBar, decorators: [{\n            type: Component,\n            args: [{ standalone: true, selector: 'tui-bar', imports: [NgForOf], changeDetection: ChangeDetectionStrategy.OnPush, host: {\n                        '[attr.data-size]': 'size',\n                    }, template: \"<div\\n    *ngFor=\\\"let item of value; let index = index\\\"\\n    automation-id=\\\"tui-bar__bar\\\"\\n    [style.background]=\\\"'var(--tui-chart-categorical-0' + index + ')'\\\"\\n    [style.height.%]=\\\"getHeight(item)\\\"\\n></div>\\n\", styles: [\":host{display:flex;min-inline-size:.125rem;flex-direction:column-reverse;border-start-start-radius:var(--tui-radius-l);border-start-end-radius:var(--tui-radius-l);overflow:hidden}:host[data-size=l]{inline-size:1rem;max-inline-size:1rem;margin:0 .1875rem}:host[data-size=m]{inline-size:.5rem;max-inline-size:.5rem;margin:0 .1875rem}:host[data-size=s]{inline-size:.25rem;max-inline-size:.5rem;margin:0 .125rem}\\n\"] }]\n        }], propDecorators: { value: [{\n                type: Input\n            }], size: [{\n                type: Input\n            }], getSum: [] } });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiBar };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}