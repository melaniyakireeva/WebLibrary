{"ast":null,"code":"import { tuiIsString, tuiCreateTokenFromFactory, tuiCreateToken, tuiPure } from '@taiga-ui/cdk/utils/miscellaneous';\nimport { __decorate } from 'tslib';\nimport { DOCUMENT, AsyncPipe, NgIf } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { inject, SecurityContext, Injectable, SkipSelf, Optional, Component, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { WA_WINDOW } from '@ng-web-apis/common';\nimport { TuiLet } from '@taiga-ui/cdk/directives/let';\nimport { TUI_BASE_HREF } from '@taiga-ui/cdk/tokens';\nimport { tuiInjectElement, tuiGetDocumentOrShadowRoot } from '@taiga-ui/cdk/utils/dom';\nimport { TuiStaticRequestService } from '@taiga-ui/legacy/services';\nimport { TUI_SANITIZER, TUI_ICON_STARTS } from '@taiga-ui/legacy/tokens';\nimport { tuiProcessIcon, tuiIconsPathFactory, TUI_CACHE_BUSTING_PAYLOAD, tuiIsPresumedHTMLString } from '@taiga-ui/legacy/utils';\nimport { BehaviorSubject, identity, ReplaySubject, switchMap, of, startWith, catchError, map } from 'rxjs';\nfunction makeRandomSalt() {\n  return Math.floor(Math.random() * Date.now());\n}\nfunction extractLinearGradientIdsFromSvg(svg) {\n  const ids = (svg.match(/url\\((\"?)('*)#(.*?)('*)\\)/g) ?? []).map(url => url.slice(4, url.length - 1).replaceAll(/['\"#]+/g, ''));\n  return Array.from(new Set(ids));\n}\n/**\n * @deprecated: drop in v5.0 use {@link TuiIcon}\n * https://taiga-ui.dev/components/icon\n *\n * @description:\n * Any ‘linearGradient’ attributes which are defined on the referenced\n * element which are not defined on this element are inherited by this element.\n * If this element has no defined gradient stops, and the referenced element does\n * (possibly due to its own ‘xlink:href’ attribute), then this element inherits\n * the gradient stop from the referenced element. Inheritance can be indirect\n * to an arbitrary level; thus, if the referenced element inherits attribute\n * or gradient stops due to its own ‘xlink:href’ attribute, then the current\n * element can inherit those attributes or gradient stops.\n *\n * Documentation: https://www.w3.org/TR/SVG11/pservers.html\n *\n */\nfunction tuiSvgLinearGradientProcessor(svg, salt = makeRandomSalt()) {\n  if (tuiIsString(svg)) {\n    const uniqueIds = extractLinearGradientIdsFromSvg(svg);\n    return uniqueIds.reduce((newSvg, previousId) => {\n      const newId = `id_${salt}_${previousId}`;\n      return newSvg.replaceAll(`\"${previousId}\"`, `\"${newId}\"`).replaceAll(`'${previousId}'`, `'${newId}'`).replaceAll(`url('#${previousId}')`, `url('#${newId}')`).replaceAll(`url(\"#${previousId}\")`, `url(\"#${newId}\")`).replaceAll(`url(#${previousId})`, `url(#${newId})`);\n    }, svg);\n  }\n  return svg;\n}\n\n/**\n * @deprecated: drop in v5.0 use {@link TuiIcon}\n * https://taiga-ui.dev/components/icon\n */\nconst TUI_DEPRECATED_ICONS = {\n  tuiIconAttach: 'tuiIconPaperclip',\n  tuiIconAttention: 'tuiIconAlertCircle',\n  tuiIconBackCircle: 'tuiIconArrowLeftCircle',\n  tuiIconCall: 'tuiIconPhone',\n  tuiIconCallIn: 'tuiIconPhoneIncoming',\n  tuiIconCallOut: 'tuiIconPhoneOutgoing',\n  tuiIconCallTransfer: 'tuiIconPhoneForwarded',\n  tuiIconCancel: 'tuiIconXCircle',\n  tuiIconCancelCircle: 'tuiIconSlash',\n  tuiIconCard: 'tuiIconCreditCard',\n  tuiIconCards: 'tuiIconCreditCard',\n  tuiIconChartBar: 'tuiIconBarChart',\n  tuiIconChart: 'tuiIconBarChart',\n  tuiIconCheckList: 'tuiIconClipboard',\n  tuiIconCloseCircle: 'tuiIconXCircle',\n  tuiIconCollapse: 'tuiIconMinimize',\n  tuiIconComment: 'tuiIconMessageSquare',\n  tuiIconCommentFw: 'tuiIconMessageForward',\n  tuiIconCompany: 'tuiIconBriefcase',\n  tuiIconDefaultDoc: 'tuiIconFile',\n  tuiIconDesktop: 'tuiIconMonitor',\n  tuiIconDesktopOff: 'tuiIconMonitorOff',\n  tuiIconDislike: 'tuiIconThumbsDown',\n  tuiIconDone: 'tuiIconCheckCircle',\n  tuiIconDraft: 'tuiIconEdit2',\n  tuiIconEyeOpen: 'tuiIconEye',\n  tuiIconEyeClosed: 'tuiIconEyeOff',\n  tuiIconExpand: 'tuiIconMaximize',\n  tuiIconExternal: 'tuiIconExternalLink',\n  tuiIconFrame: 'tuiIconLayout',\n  tuiIconGeo: 'tuiIconMapPin',\n  tuiIconHeartFilled: 'tuiIconHeart',\n  tuiIconHide: 'tuiIconEyeOff',\n  tuiIconImg: 'tuiIconImage',\n  tuiIconInfoCircle: 'tuiIconInfo',\n  tuiIconLike: 'tuiIconThumbsUp',\n  tuiIconLockOpen: 'tuiIconUnlock',\n  tuiIconMobile: 'tuiIconSmartphone',\n  tuiIconMoreHor: 'tuiIconMoreHorizontal',\n  tuiIconMoreVer: 'tuiIconMoreVertical',\n  tuiIconMoreVert: 'tuiIconMoreVertical',\n  tuiIconPicture: 'tuiIconImage',\n  tuiIconPin: 'tuiIconMapPin',\n  tuiIconPrint: 'tuiIconPrinter',\n  tuiIconRefresh: 'tuiIconRefreshCw',\n  tuiIconRemove: 'tuiIconX',\n  tuiIconShow: 'tuiIconEye',\n  tuiIconSound: 'tuiIconVolume',\n  tuiIconSoundOff: 'tuiIconVolumeX',\n  tuiIconStarFilled: 'tuiIconStar',\n  tuiIconStop: 'tuiIconSquare',\n  tuiIconStructure: 'tuiIconLayoutGrid',\n  tuiIconTime: 'tuiIconClock',\n  tuiIconTooltip: 'tuiIconHelpCircle',\n  tuiIconViewList: 'tuiIconList',\n  tuiIconWifiOn: 'tuiIconWifi'\n};\n\n/// <reference types=\"@taiga-ui/tsconfig/ng-dev-mode\" />\n/// <reference types=\"@taiga-ui/tsconfig/ng-dev-mode\" />\n/**\n * @deprecated: drop in v5.0 use {@link TuiIcon}\n * Service for reusing SVGs without inlining each instance\n */\nclass TuiSvgService {\n  constructor() {\n    this.tuiSanitizer = inject(TUI_SANITIZER, {\n      optional: true\n    });\n    this.sanitizer = inject(DomSanitizer);\n    this.originals = {};\n    this.items$ = new BehaviorSubject(new Map());\n    this.define(inject(TUI_ICON_STARTS));\n  }\n  define(icons) {\n    const {\n      value\n    } = this.items$;\n    Object.keys(icons).forEach(key => {\n      this.defineIcon(key, icons[key] ?? '', value);\n    });\n    this.items$.next(value);\n  }\n  getOriginal(name) {\n    return this.originals[name] || null;\n  }\n  defineIcon(name, src, map) {\n    if (map.has(name)) {\n      return;\n    }\n    const parsed = this.parseSrc(name, src);\n    if (!parsed) {\n      ngDevMode && console.assert(false, 'Unable to parse given SVG src');\n      return;\n    }\n    map.set(name, parsed);\n    this.originals = {\n      ...this.originals,\n      [name]: src\n    };\n  }\n  parseSrc(name, src) {\n    return this.sanitize(tuiProcessIcon(src, name));\n  }\n  sanitize(src) {\n    return this.sanitizer.bypassSecurityTrustHtml((this.tuiSanitizer ? this.tuiSanitizer.sanitize(SecurityContext.HTML, src) : this.sanitizer.sanitize(SecurityContext.HTML, src)) || '');\n  }\n  static {\n    this.ɵfac = function TuiSvgService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiSvgService)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: TuiSvgService,\n      factory: TuiSvgService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiSvgService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n\n/**\n * @deprecated: drop in v5.0 use {@link TuiIcon}\n * https://taiga-ui.dev/components/icon\n */\nconst TUI_DEFAULT_ICONS_PLACE = 'assets/taiga-ui/icons';\n/**\n * @deprecated: drop in v5.0 use {@link TuiIcon}\n * https://taiga-ui.dev/components/icon\n */\nconst TUI_SVG_DEFAULT_OPTIONS = {\n  iconsPlace: TUI_DEFAULT_ICONS_PLACE,\n  path: tuiIconsPathFactory(TUI_DEFAULT_ICONS_PLACE),\n  srcProcessor: identity,\n  contentProcessor: tuiSvgLinearGradientProcessor,\n  deprecated: src => {\n    const oldIcon = src.replace('Large', '').replace('Outline', '');\n    const newIcon = TUI_DEPRECATED_ICONS[oldIcon];\n    return newIcon ? `${oldIcon}/(Large|Outline) is deprecated, use ${newIcon}/(Large|Outline) instead` : '';\n  }\n};\n/**\n * @deprecated: drop in v5.0 use {@link TuiIcon}\n * https://taiga-ui.dev/components/icon\n */\nconst TUI_SVG_OPTIONS = tuiCreateTokenFromFactory(() => ({\n  iconsPlace: TUI_DEFAULT_ICONS_PLACE,\n  path: tuiIconsPathFactory(TUI_DEFAULT_ICONS_PLACE),\n  deprecated: TUI_SVG_DEFAULT_OPTIONS.deprecated,\n  srcProcessor: identity,\n  contentProcessor: tuiSvgLinearGradientProcessor\n}));\n/**\n * @deprecated: drop in v5.0 use {@link TuiIcon}\n * https://taiga-ui.dev/components/icon\n */\nconst TUI_SVG_SRC_INTERCEPTORS = tuiCreateToken();\n/**\n * @deprecated: drop in v5.0 use {@link TuiIcon}\n * https://taiga-ui.dev/components/icon\n */\nfunction tuiSvgSrcInterceptors(interceptor) {\n  return {\n    provide: TUI_SVG_SRC_INTERCEPTORS,\n    useValue: interceptor,\n    multi: true\n  };\n}\n/**\n * @deprecated: drop in v5.0 use {@link TuiIcon}\n * https://taiga-ui.dev/components/icon\n */\nconst tuiSvgOptionsProvider = options => ({\n  provide: TUI_SVG_OPTIONS,\n  deps: [[new SkipSelf(), new Optional(), TUI_SVG_OPTIONS]],\n  useFactory: fallback => ({\n    iconsPlace: options.iconsPlace ?? fallback?.iconsPlace ?? TUI_SVG_DEFAULT_OPTIONS.iconsPlace,\n    path: tuiIsString(options.path) ? tuiIconsPathFactory(options.path) : options.path ?? fallback?.path ?? TUI_SVG_DEFAULT_OPTIONS.path,\n    deprecated: options.deprecated ?? fallback?.deprecated ?? TUI_SVG_DEFAULT_OPTIONS.deprecated,\n    srcProcessor: options.srcProcessor ?? fallback?.srcProcessor ?? TUI_SVG_DEFAULT_OPTIONS.srcProcessor,\n    contentProcessor: options.contentProcessor ?? fallback?.contentProcessor ?? TUI_SVG_DEFAULT_OPTIONS.contentProcessor\n  })\n});\nconst UNDEFINED_NAMED_ICON = 'Attempted to use undefined named icon';\nconst MISSING_EXTERNAL_ICON = 'External icon is missing on the given URL';\nconst FAILED_EXTERNAL_ICON = 'Failed to load external SVG';\n/**\n * @deprecated: drop in v5.0 use {@link TuiIcon}\n * https://taiga-ui.dev/components/icon\n */\nclass TuiSvgComponent {\n  constructor() {\n    this.icon = '';\n    this.doc = inject(DOCUMENT);\n    this.win = inject(WA_WINDOW);\n    this.options = inject(TUI_SVG_OPTIONS);\n    this.tuiSanitizer = inject(TUI_SANITIZER, {\n      optional: true\n    });\n    this.svgService = inject(TuiSvgService);\n    this.staticRequestService = inject(TuiStaticRequestService);\n    this.sanitizer = inject(DomSanitizer);\n    this.el = tuiInjectElement();\n    this.baseHref = inject(TUI_BASE_HREF);\n    this.src$ = new ReplaySubject(1);\n    this.srcInterceptors = inject(TUI_SVG_SRC_INTERCEPTORS, {\n      optional: true\n    });\n    this.innerHTML$ = this.src$.pipe(switchMap(() => {\n      if (tuiIsString(this.icon)) {\n        return this.isExternal ? this.getExternalIcon(this.icon) : of(this.getSafeHtml(this.icon));\n      }\n      return of(this.icon);\n    }), startWith(''));\n  }\n  set src(src) {\n    const deprecated = this.options.deprecated(String(src));\n    ngDevMode && console.assert(!deprecated, deprecated);\n    this.icon = (this.srcInterceptors ?? []).reduce((newSrc, interceptor) => interceptor(newSrc, this.options), this.options.srcProcessor(src || ''));\n    this.src$.next();\n  }\n  get src() {\n    return this.icon;\n  }\n  get use() {\n    if (tuiIsString(this.icon)) {\n      return this.icon.includes('.svg#') ? this.icon : this.resolveName(this.icon, this.options.path);\n    }\n    return '';\n  }\n  get isInnerHTML() {\n    return !tuiIsString(this.icon) || this.isSrc || this.isExternal || this.isName && this.isShadowDOM;\n  }\n  onError(message = MISSING_EXTERNAL_ICON) {\n    const {\n      icon\n    } = this;\n    const event = new CustomEvent('tui-icon-error', {\n      bubbles: true,\n      detail: {\n        message,\n        icon: icon\n      }\n    });\n    ngDevMode && console.assert(false, message, icon);\n    this.el.dispatchEvent(event);\n  }\n  get isShadowDOM() {\n    return tuiGetDocumentOrShadowRoot(this.el) !== this.doc;\n  }\n  get isUse() {\n    return this.use.replace(TUI_CACHE_BUSTING_PAYLOAD, '').includes('.svg#');\n  }\n  get isExternal() {\n    return this.isUrl || this.isCrossDomain || !this.isSrc && !this.svgService.getOriginal(String(this.icon));\n  }\n  get isUrl() {\n    return tuiIsString(this.icon) && this.icon.replace(TUI_CACHE_BUSTING_PAYLOAD, '').endsWith('.svg');\n  }\n  get isSrc() {\n    return tuiIsString(this.icon) && tuiIsPresumedHTMLString(this.icon);\n  }\n  get isName() {\n    return !this.isUrl && !this.isUse && !this.isSrc;\n  }\n  get isCrossDomain() {\n    const {\n      use,\n      isUse,\n      win\n    } = this;\n    return isUse && use.startsWith('http') && !!win.origin && !use.startsWith(win.origin);\n  }\n  resolveName(name, iconsPath) {\n    return iconsPath(name, this.baseHref);\n  }\n  getSafeHtml(src) {\n    return this.isSrc ? this.sanitize(src) : this.process(src);\n  }\n  process(src) {\n    const icon = this.svgService.getOriginal(src);\n    if (this.isName && !icon && !!src) {\n      this.onError(UNDEFINED_NAMED_ICON);\n    }\n    return this.sanitize(icon || '');\n  }\n  sanitize(src) {\n    src = this.options.contentProcessor(src);\n    return this.tuiSanitizer && tuiIsString(src) ? this.sanitizer.bypassSecurityTrustHtml(this.tuiSanitizer.sanitize(SecurityContext.HTML, src) || '') : src;\n  }\n  getExternalIcon(src) {\n    const url = src.includes('.svg') ? src : this.use;\n    return this.staticRequestService.request(url).pipe(catchError(() => {\n      this.onError(FAILED_EXTERNAL_ICON);\n      return of('');\n    }), map(response => this.sanitize(response.replace('<svg', '<svg focusable=\"false\"'))));\n  }\n  static {\n    this.ɵfac = function TuiSvgComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiSvgComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: TuiSvgComponent,\n      selectors: [[\"tui-svg\"]],\n      inputs: {\n        src: \"src\"\n      },\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 2,\n      vars: 3,\n      consts: [[1, \"t-src\", 3, \"innerHTML\"]],\n      template: function TuiSvgComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelement(0, \"div\", 0);\n          i0.ɵɵpipe(1, \"async\");\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"innerHTML\", i0.ɵɵpipeBind1(1, 1, ctx.innerHTML$), i0.ɵɵsanitizeHtml);\n        }\n      },\n      dependencies: [AsyncPipe],\n      styles: [\"[_nghost-%COMP%]{display:inline-flex;vertical-align:middle;flex-shrink:0;align-items:center;justify-content:center;line-height:0;block-size:1.5rem;inline-size:1.5rem;fill:transparent;stroke:transparent;font-size:1rem}.t-src[_ngcontent-%COMP%]{display:flex;inline-size:100%;block-size:100%;align-items:center;justify-content:center}.t-svg[_ngcontent-%COMP%]{overflow:visible}\"],\n      changeDetection: 0\n    });\n  }\n}\n__decorate([tuiPure], TuiSvgComponent.prototype, \"resolveName\", null);\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiSvgComponent, [{\n    type: Component,\n    args: [{\n      standalone: true,\n      selector: 'tui-svg',\n      imports: [AsyncPipe, NgIf, TuiLet],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<div\\n    class=\\\"t-src\\\"\\n    [innerHTML]=\\\"innerHTML$ | async\\\"\\n></div>\\n\",\n      styles: [\":host{display:inline-flex;vertical-align:middle;flex-shrink:0;align-items:center;justify-content:center;line-height:0;block-size:1.5rem;inline-size:1.5rem;fill:transparent;stroke:transparent;font-size:1rem}.t-src{display:flex;inline-size:100%;block-size:100%;align-items:center;justify-content:center}.t-svg{overflow:visible}\\n\"]\n    }]\n  }], null, {\n    src: [{\n      type: Input\n    }],\n    resolveName: []\n  });\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TUI_DEFAULT_ICONS_PLACE, TUI_DEPRECATED_ICONS, TUI_SVG_DEFAULT_OPTIONS, TUI_SVG_OPTIONS, TUI_SVG_SRC_INTERCEPTORS, TuiSvgComponent, TuiSvgService, tuiSvgLinearGradientProcessor, tuiSvgOptionsProvider, tuiSvgSrcInterceptors };","map":{"version":3,"names":["tuiIsString","tuiCreateTokenFromFactory","tuiCreateToken","tuiPure","__decorate","DOCUMENT","AsyncPipe","NgIf","i0","inject","SecurityContext","Injectable","SkipSelf","Optional","Component","ChangeDetectionStrategy","Input","DomSanitizer","WA_WINDOW","TuiLet","TUI_BASE_HREF","tuiInjectElement","tuiGetDocumentOrShadowRoot","TuiStaticRequestService","TUI_SANITIZER","TUI_ICON_STARTS","tuiProcessIcon","tuiIconsPathFactory","TUI_CACHE_BUSTING_PAYLOAD","tuiIsPresumedHTMLString","BehaviorSubject","identity","ReplaySubject","switchMap","of","startWith","catchError","map","makeRandomSalt","Math","floor","random","Date","now","extractLinearGradientIdsFromSvg","svg","ids","match","url","slice","length","replaceAll","Array","from","Set","tuiSvgLinearGradientProcessor","salt","uniqueIds","reduce","newSvg","previousId","newId","TUI_DEPRECATED_ICONS","tuiIconAttach","tuiIconAttention","tuiIconBackCircle","tuiIconCall","tuiIconCallIn","tuiIconCallOut","tuiIconCallTransfer","tuiIconCancel","tuiIconCancelCircle","tuiIconCard","tuiIconCards","tuiIconChartBar","tuiIconChart","tuiIconCheckList","tuiIconCloseCircle","tuiIconCollapse","tuiIconComment","tuiIconCommentFw","tuiIconCompany","tuiIconDefaultDoc","tuiIconDesktop","tuiIconDesktopOff","tuiIconDislike","tuiIconDone","tuiIconDraft","tuiIconEyeOpen","tuiIconEyeClosed","tuiIconExpand","tuiIconExternal","tuiIconFrame","tuiIconGeo","tuiIconHeartFilled","tuiIconHide","tuiIconImg","tuiIconInfoCircle","tuiIconLike","tuiIconLockOpen","tuiIconMobile","tuiIconMoreHor","tuiIconMoreVer","tuiIconMoreVert","tuiIconPicture","tuiIconPin","tuiIconPrint","tuiIconRefresh","tuiIconRemove","tuiIconShow","tuiIconSound","tuiIconSoundOff","tuiIconStarFilled","tuiIconStop","tuiIconStructure","tuiIconTime","tuiIconTooltip","tuiIconViewList","tuiIconWifiOn","TuiSvgService","constructor","tuiSanitizer","optional","sanitizer","originals","items$","Map","define","icons","value","Object","keys","forEach","key","defineIcon","next","getOriginal","name","src","has","parsed","parseSrc","ngDevMode","console","assert","set","sanitize","bypassSecurityTrustHtml","HTML","ɵfac","TuiSvgService_Factory","__ngFactoryType__","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","ɵsetClassMetadata","type","args","TUI_DEFAULT_ICONS_PLACE","TUI_SVG_DEFAULT_OPTIONS","iconsPlace","path","srcProcessor","contentProcessor","deprecated","oldIcon","replace","newIcon","TUI_SVG_OPTIONS","TUI_SVG_SRC_INTERCEPTORS","tuiSvgSrcInterceptors","interceptor","provide","useValue","multi","tuiSvgOptionsProvider","options","deps","useFactory","fallback","UNDEFINED_NAMED_ICON","MISSING_EXTERNAL_ICON","FAILED_EXTERNAL_ICON","TuiSvgComponent","icon","doc","win","svgService","staticRequestService","el","baseHref","src$","srcInterceptors","innerHTML$","pipe","isExternal","getExternalIcon","getSafeHtml","String","newSrc","use","includes","resolveName","isInnerHTML","isSrc","isName","isShadowDOM","onError","message","event","CustomEvent","bubbles","detail","dispatchEvent","isUse","isUrl","isCrossDomain","endsWith","startsWith","origin","iconsPath","process","request","response","TuiSvgComponent_Factory","ɵcmp","ɵɵdefineComponent","selectors","inputs","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","TuiSvgComponent_Template","rf","ctx","ɵɵelement","ɵɵpipe","ɵɵproperty","ɵɵpipeBind1","ɵɵsanitizeHtml","dependencies","styles","changeDetection","prototype","selector","imports","OnPush"],"sources":["C:/Users/Asus-PC/Downloads/WebLibraryNew/WebLibrary/WebLibraryApp/Frontend/node_modules/@taiga-ui/legacy/fesm2022/taiga-ui-legacy-components-svg.mjs"],"sourcesContent":["import { tuiIsString, tuiCreateTokenFromFactory, tuiCreateToken, tuiPure } from '@taiga-ui/cdk/utils/miscellaneous';\nimport { __decorate } from 'tslib';\nimport { DOCUMENT, AsyncPipe, NgIf } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { inject, SecurityContext, Injectable, SkipSelf, Optional, Component, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { WA_WINDOW } from '@ng-web-apis/common';\nimport { TuiLet } from '@taiga-ui/cdk/directives/let';\nimport { TUI_BASE_HREF } from '@taiga-ui/cdk/tokens';\nimport { tuiInjectElement, tuiGetDocumentOrShadowRoot } from '@taiga-ui/cdk/utils/dom';\nimport { TuiStaticRequestService } from '@taiga-ui/legacy/services';\nimport { TUI_SANITIZER, TUI_ICON_STARTS } from '@taiga-ui/legacy/tokens';\nimport { tuiProcessIcon, tuiIconsPathFactory, TUI_CACHE_BUSTING_PAYLOAD, tuiIsPresumedHTMLString } from '@taiga-ui/legacy/utils';\nimport { BehaviorSubject, identity, ReplaySubject, switchMap, of, startWith, catchError, map } from 'rxjs';\n\nfunction makeRandomSalt() {\n    return Math.floor(Math.random() * Date.now());\n}\nfunction extractLinearGradientIdsFromSvg(svg) {\n    const ids = (svg.match(/url\\((\"?)('*)#(.*?)('*)\\)/g) ?? []).map((url) => url.slice(4, url.length - 1).replaceAll(/['\"#]+/g, ''));\n    return Array.from(new Set(ids));\n}\n/**\n * @deprecated: drop in v5.0 use {@link TuiIcon}\n * https://taiga-ui.dev/components/icon\n *\n * @description:\n * Any ‘linearGradient’ attributes which are defined on the referenced\n * element which are not defined on this element are inherited by this element.\n * If this element has no defined gradient stops, and the referenced element does\n * (possibly due to its own ‘xlink:href’ attribute), then this element inherits\n * the gradient stop from the referenced element. Inheritance can be indirect\n * to an arbitrary level; thus, if the referenced element inherits attribute\n * or gradient stops due to its own ‘xlink:href’ attribute, then the current\n * element can inherit those attributes or gradient stops.\n *\n * Documentation: https://www.w3.org/TR/SVG11/pservers.html\n *\n */\nfunction tuiSvgLinearGradientProcessor(svg, salt = makeRandomSalt()) {\n    if (tuiIsString(svg)) {\n        const uniqueIds = extractLinearGradientIdsFromSvg(svg);\n        return uniqueIds.reduce((newSvg, previousId) => {\n            const newId = `id_${salt}_${previousId}`;\n            return newSvg\n                .replaceAll(`\"${previousId}\"`, `\"${newId}\"`)\n                .replaceAll(`'${previousId}'`, `'${newId}'`)\n                .replaceAll(`url('#${previousId}')`, `url('#${newId}')`)\n                .replaceAll(`url(\"#${previousId}\")`, `url(\"#${newId}\")`)\n                .replaceAll(`url(#${previousId})`, `url(#${newId})`);\n        }, svg);\n    }\n    return svg;\n}\n\n/**\n * @deprecated: drop in v5.0 use {@link TuiIcon}\n * https://taiga-ui.dev/components/icon\n */\nconst TUI_DEPRECATED_ICONS = {\n    tuiIconAttach: 'tuiIconPaperclip',\n    tuiIconAttention: 'tuiIconAlertCircle',\n    tuiIconBackCircle: 'tuiIconArrowLeftCircle',\n    tuiIconCall: 'tuiIconPhone',\n    tuiIconCallIn: 'tuiIconPhoneIncoming',\n    tuiIconCallOut: 'tuiIconPhoneOutgoing',\n    tuiIconCallTransfer: 'tuiIconPhoneForwarded',\n    tuiIconCancel: 'tuiIconXCircle',\n    tuiIconCancelCircle: 'tuiIconSlash',\n    tuiIconCard: 'tuiIconCreditCard',\n    tuiIconCards: 'tuiIconCreditCard',\n    tuiIconChartBar: 'tuiIconBarChart',\n    tuiIconChart: 'tuiIconBarChart',\n    tuiIconCheckList: 'tuiIconClipboard',\n    tuiIconCloseCircle: 'tuiIconXCircle',\n    tuiIconCollapse: 'tuiIconMinimize',\n    tuiIconComment: 'tuiIconMessageSquare',\n    tuiIconCommentFw: 'tuiIconMessageForward',\n    tuiIconCompany: 'tuiIconBriefcase',\n    tuiIconDefaultDoc: 'tuiIconFile',\n    tuiIconDesktop: 'tuiIconMonitor',\n    tuiIconDesktopOff: 'tuiIconMonitorOff',\n    tuiIconDislike: 'tuiIconThumbsDown',\n    tuiIconDone: 'tuiIconCheckCircle',\n    tuiIconDraft: 'tuiIconEdit2',\n    tuiIconEyeOpen: 'tuiIconEye',\n    tuiIconEyeClosed: 'tuiIconEyeOff',\n    tuiIconExpand: 'tuiIconMaximize',\n    tuiIconExternal: 'tuiIconExternalLink',\n    tuiIconFrame: 'tuiIconLayout',\n    tuiIconGeo: 'tuiIconMapPin',\n    tuiIconHeartFilled: 'tuiIconHeart',\n    tuiIconHide: 'tuiIconEyeOff',\n    tuiIconImg: 'tuiIconImage',\n    tuiIconInfoCircle: 'tuiIconInfo',\n    tuiIconLike: 'tuiIconThumbsUp',\n    tuiIconLockOpen: 'tuiIconUnlock',\n    tuiIconMobile: 'tuiIconSmartphone',\n    tuiIconMoreHor: 'tuiIconMoreHorizontal',\n    tuiIconMoreVer: 'tuiIconMoreVertical',\n    tuiIconMoreVert: 'tuiIconMoreVertical',\n    tuiIconPicture: 'tuiIconImage',\n    tuiIconPin: 'tuiIconMapPin',\n    tuiIconPrint: 'tuiIconPrinter',\n    tuiIconRefresh: 'tuiIconRefreshCw',\n    tuiIconRemove: 'tuiIconX',\n    tuiIconShow: 'tuiIconEye',\n    tuiIconSound: 'tuiIconVolume',\n    tuiIconSoundOff: 'tuiIconVolumeX',\n    tuiIconStarFilled: 'tuiIconStar',\n    tuiIconStop: 'tuiIconSquare',\n    tuiIconStructure: 'tuiIconLayoutGrid',\n    tuiIconTime: 'tuiIconClock',\n    tuiIconTooltip: 'tuiIconHelpCircle',\n    tuiIconViewList: 'tuiIconList',\n    tuiIconWifiOn: 'tuiIconWifi',\n};\n\n/// <reference types=\"@taiga-ui/tsconfig/ng-dev-mode\" />\n/// <reference types=\"@taiga-ui/tsconfig/ng-dev-mode\" />\n/**\n * @deprecated: drop in v5.0 use {@link TuiIcon}\n * Service for reusing SVGs without inlining each instance\n */\nclass TuiSvgService {\n    constructor() {\n        this.tuiSanitizer = inject(TUI_SANITIZER, { optional: true });\n        this.sanitizer = inject(DomSanitizer);\n        this.originals = {};\n        this.items$ = new BehaviorSubject(new Map());\n        this.define(inject(TUI_ICON_STARTS));\n    }\n    define(icons) {\n        const { value } = this.items$;\n        Object.keys(icons).forEach((key) => {\n            this.defineIcon(key, icons[key] ?? '', value);\n        });\n        this.items$.next(value);\n    }\n    getOriginal(name) {\n        return this.originals[name] || null;\n    }\n    defineIcon(name, src, map) {\n        if (map.has(name)) {\n            return;\n        }\n        const parsed = this.parseSrc(name, src);\n        if (!parsed) {\n            ngDevMode && console.assert(false, 'Unable to parse given SVG src');\n            return;\n        }\n        map.set(name, parsed);\n        this.originals = {\n            ...this.originals,\n            [name]: src,\n        };\n    }\n    parseSrc(name, src) {\n        return this.sanitize(tuiProcessIcon(src, name));\n    }\n    sanitize(src) {\n        return this.sanitizer.bypassSecurityTrustHtml((this.tuiSanitizer\n            ? this.tuiSanitizer.sanitize(SecurityContext.HTML, src)\n            : this.sanitizer.sanitize(SecurityContext.HTML, src)) || '');\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiSvgService, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiSvgService, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiSvgService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: function () { return []; } });\n\n/**\n * @deprecated: drop in v5.0 use {@link TuiIcon}\n * https://taiga-ui.dev/components/icon\n */\nconst TUI_DEFAULT_ICONS_PLACE = 'assets/taiga-ui/icons';\n/**\n * @deprecated: drop in v5.0 use {@link TuiIcon}\n * https://taiga-ui.dev/components/icon\n */\nconst TUI_SVG_DEFAULT_OPTIONS = {\n    iconsPlace: TUI_DEFAULT_ICONS_PLACE,\n    path: tuiIconsPathFactory(TUI_DEFAULT_ICONS_PLACE),\n    srcProcessor: identity,\n    contentProcessor: tuiSvgLinearGradientProcessor,\n    deprecated: (src) => {\n        const oldIcon = src.replace('Large', '').replace('Outline', '');\n        const newIcon = TUI_DEPRECATED_ICONS[oldIcon];\n        return newIcon\n            ? `${oldIcon}/(Large|Outline) is deprecated, use ${newIcon}/(Large|Outline) instead`\n            : '';\n    },\n};\n/**\n * @deprecated: drop in v5.0 use {@link TuiIcon}\n * https://taiga-ui.dev/components/icon\n */\nconst TUI_SVG_OPTIONS = tuiCreateTokenFromFactory(() => ({\n    iconsPlace: TUI_DEFAULT_ICONS_PLACE,\n    path: tuiIconsPathFactory(TUI_DEFAULT_ICONS_PLACE),\n    deprecated: TUI_SVG_DEFAULT_OPTIONS.deprecated,\n    srcProcessor: identity,\n    contentProcessor: tuiSvgLinearGradientProcessor,\n}));\n/**\n * @deprecated: drop in v5.0 use {@link TuiIcon}\n * https://taiga-ui.dev/components/icon\n */\nconst TUI_SVG_SRC_INTERCEPTORS = tuiCreateToken();\n/**\n * @deprecated: drop in v5.0 use {@link TuiIcon}\n * https://taiga-ui.dev/components/icon\n */\nfunction tuiSvgSrcInterceptors(interceptor) {\n    return {\n        provide: TUI_SVG_SRC_INTERCEPTORS,\n        useValue: interceptor,\n        multi: true,\n    };\n}\n/**\n * @deprecated: drop in v5.0 use {@link TuiIcon}\n * https://taiga-ui.dev/components/icon\n */\nconst tuiSvgOptionsProvider = (options) => ({\n    provide: TUI_SVG_OPTIONS,\n    deps: [[new SkipSelf(), new Optional(), TUI_SVG_OPTIONS]],\n    useFactory: (fallback) => ({\n        iconsPlace: options.iconsPlace ??\n            fallback?.iconsPlace ??\n            TUI_SVG_DEFAULT_OPTIONS.iconsPlace,\n        path: tuiIsString(options.path)\n            ? tuiIconsPathFactory(options.path)\n            : (options.path ?? fallback?.path ?? TUI_SVG_DEFAULT_OPTIONS.path),\n        deprecated: options.deprecated ??\n            fallback?.deprecated ??\n            TUI_SVG_DEFAULT_OPTIONS.deprecated,\n        srcProcessor: options.srcProcessor ??\n            fallback?.srcProcessor ??\n            TUI_SVG_DEFAULT_OPTIONS.srcProcessor,\n        contentProcessor: options.contentProcessor ??\n            fallback?.contentProcessor ??\n            TUI_SVG_DEFAULT_OPTIONS.contentProcessor,\n    }),\n});\n\nconst UNDEFINED_NAMED_ICON = 'Attempted to use undefined named icon';\nconst MISSING_EXTERNAL_ICON = 'External icon is missing on the given URL';\nconst FAILED_EXTERNAL_ICON = 'Failed to load external SVG';\n/**\n * @deprecated: drop in v5.0 use {@link TuiIcon}\n * https://taiga-ui.dev/components/icon\n */\nclass TuiSvgComponent {\n    constructor() {\n        this.icon = '';\n        this.doc = inject(DOCUMENT);\n        this.win = inject(WA_WINDOW);\n        this.options = inject(TUI_SVG_OPTIONS);\n        this.tuiSanitizer = inject(TUI_SANITIZER, { optional: true });\n        this.svgService = inject(TuiSvgService);\n        this.staticRequestService = inject(TuiStaticRequestService);\n        this.sanitizer = inject(DomSanitizer);\n        this.el = tuiInjectElement();\n        this.baseHref = inject(TUI_BASE_HREF);\n        this.src$ = new ReplaySubject(1);\n        this.srcInterceptors = inject(TUI_SVG_SRC_INTERCEPTORS, {\n            optional: true,\n        });\n        this.innerHTML$ = this.src$.pipe(switchMap(() => {\n            if (tuiIsString(this.icon)) {\n                return this.isExternal\n                    ? this.getExternalIcon(this.icon)\n                    : of(this.getSafeHtml(this.icon));\n            }\n            return of(this.icon);\n        }), startWith(''));\n    }\n    set src(src) {\n        const deprecated = this.options.deprecated(String(src));\n        ngDevMode && console.assert(!deprecated, deprecated);\n        this.icon = (this.srcInterceptors ?? []).reduce((newSrc, interceptor) => interceptor(newSrc, this.options), this.options.srcProcessor(src || ''));\n        this.src$.next();\n    }\n    get src() {\n        return this.icon;\n    }\n    get use() {\n        if (tuiIsString(this.icon)) {\n            return this.icon.includes('.svg#')\n                ? this.icon\n                : this.resolveName(this.icon, this.options.path);\n        }\n        return '';\n    }\n    get isInnerHTML() {\n        return (!tuiIsString(this.icon) ||\n            this.isSrc ||\n            this.isExternal ||\n            (this.isName && this.isShadowDOM));\n    }\n    onError(message = MISSING_EXTERNAL_ICON) {\n        const { icon } = this;\n        const event = new CustomEvent('tui-icon-error', {\n            bubbles: true,\n            detail: {\n                message,\n                icon: icon,\n            },\n        });\n        ngDevMode && console.assert(false, message, icon);\n        this.el.dispatchEvent(event);\n    }\n    get isShadowDOM() {\n        return tuiGetDocumentOrShadowRoot(this.el) !== this.doc;\n    }\n    get isUse() {\n        return this.use.replace(TUI_CACHE_BUSTING_PAYLOAD, '').includes('.svg#');\n    }\n    get isExternal() {\n        return (this.isUrl ||\n            this.isCrossDomain ||\n            (!this.isSrc && !this.svgService.getOriginal(String(this.icon))));\n    }\n    get isUrl() {\n        return (tuiIsString(this.icon) &&\n            this.icon.replace(TUI_CACHE_BUSTING_PAYLOAD, '').endsWith('.svg'));\n    }\n    get isSrc() {\n        return tuiIsString(this.icon) && tuiIsPresumedHTMLString(this.icon);\n    }\n    get isName() {\n        return !this.isUrl && !this.isUse && !this.isSrc;\n    }\n    get isCrossDomain() {\n        const { use, isUse, win } = this;\n        return (isUse && use.startsWith('http') && !!win.origin && !use.startsWith(win.origin));\n    }\n    resolveName(name, iconsPath) {\n        return iconsPath(name, this.baseHref);\n    }\n    getSafeHtml(src) {\n        return this.isSrc ? this.sanitize(src) : this.process(src);\n    }\n    process(src) {\n        const icon = this.svgService.getOriginal(src);\n        if (this.isName && !icon && !!src) {\n            this.onError(UNDEFINED_NAMED_ICON);\n        }\n        return this.sanitize(icon || '');\n    }\n    sanitize(src) {\n        src = this.options.contentProcessor(src);\n        return this.tuiSanitizer && tuiIsString(src)\n            ? this.sanitizer.bypassSecurityTrustHtml(this.tuiSanitizer.sanitize(SecurityContext.HTML, src) || '')\n            : src;\n    }\n    getExternalIcon(src) {\n        const url = src.includes('.svg') ? src : this.use;\n        return this.staticRequestService.request(url).pipe(catchError(() => {\n            this.onError(FAILED_EXTERNAL_ICON);\n            return of('');\n        }), map((response) => this.sanitize(response.replace('<svg', '<svg focusable=\"false\"'))));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiSvgComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiSvgComponent, isStandalone: true, selector: \"tui-svg\", inputs: { src: \"src\" }, ngImport: i0, template: \"<div\\n    class=\\\"t-src\\\"\\n    [innerHTML]=\\\"innerHTML$ | async\\\"\\n></div>\\n\", styles: [\":host{display:inline-flex;vertical-align:middle;flex-shrink:0;align-items:center;justify-content:center;line-height:0;block-size:1.5rem;inline-size:1.5rem;fill:transparent;stroke:transparent;font-size:1rem}.t-src{display:flex;inline-size:100%;block-size:100%;align-items:center;justify-content:center}.t-svg{overflow:visible}\\n\"], dependencies: [{ kind: \"pipe\", type: AsyncPipe, name: \"async\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\n__decorate([\n    tuiPure\n], TuiSvgComponent.prototype, \"resolveName\", null);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiSvgComponent, decorators: [{\n            type: Component,\n            args: [{ standalone: true, selector: 'tui-svg', imports: [AsyncPipe, NgIf, TuiLet], changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div\\n    class=\\\"t-src\\\"\\n    [innerHTML]=\\\"innerHTML$ | async\\\"\\n></div>\\n\", styles: [\":host{display:inline-flex;vertical-align:middle;flex-shrink:0;align-items:center;justify-content:center;line-height:0;block-size:1.5rem;inline-size:1.5rem;fill:transparent;stroke:transparent;font-size:1rem}.t-src{display:flex;inline-size:100%;block-size:100%;align-items:center;justify-content:center}.t-svg{overflow:visible}\\n\"] }]\n        }], propDecorators: { src: [{\n                type: Input\n            }], resolveName: [] } });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TUI_DEFAULT_ICONS_PLACE, TUI_DEPRECATED_ICONS, TUI_SVG_DEFAULT_OPTIONS, TUI_SVG_OPTIONS, TUI_SVG_SRC_INTERCEPTORS, TuiSvgComponent, TuiSvgService, tuiSvgLinearGradientProcessor, tuiSvgOptionsProvider, tuiSvgSrcInterceptors };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}