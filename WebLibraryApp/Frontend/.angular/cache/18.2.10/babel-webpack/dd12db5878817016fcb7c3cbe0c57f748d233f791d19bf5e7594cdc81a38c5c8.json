{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./book-page.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./book-page.component.scss?ngResource\";\nimport { AsyncPipe, NgForOf, NgIf } from '@angular/common';\nimport { ChangeDetectorRef, Component, inject } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TuiReorder, TuiTable } from '@taiga-ui/addon-table';\nimport { TuiAutoColorPipe, TuiButton, tuiDialog, TuiDialogService, TuiDropdown, TuiIcon, TuiInitialsPipe, TuiLink, TuiLoader, TuiRoot, TuiScrollbar, TuiTextfield, TuiTitle } from '@taiga-ui/core';\nimport { TUI_CONFIRM, TuiAvatar, TuiBadge, TuiCheckbox, TuiChevron, TuiChip, TuiDataListWrapper, TuiItemsWithMore, TuiPagination, TuiProgressBar, TuiRadioList, TuiStatus, TuiTooltip } from '@taiga-ui/kit';\nimport { TuiCell } from '@taiga-ui/layout';\nimport { TuiInputNumberModule, TuiSelectModule } from '@taiga-ui/legacy';\nimport { TuiLet } from '@taiga-ui/cdk';\nimport _ from 'lodash';\nimport { shareReplay, tap } from 'rxjs';\nimport { AndFilter, FilterOperations, StringFilterOperation } from '../../services/filters/filterOperations';\nimport { FilterModalComponent } from '../filter-modal/filter-modal.component';\nimport { FilterConverter } from '../../services/filters/filter-converter';\nimport { ManufactureCardEditComponent } from '../manufacture-card-edit/manufacture-card-edit.component';\nimport { CsvHelperService } from '../../services/csv-helper/csv-helper.service';\nimport { AuthService } from '../../services/auth/auth-service.service';\nimport { BookService } from '../../services/book/book.service';\nimport { BookCardComponent } from '../book-card/book-card.component';\nimport { BookCardEditComponent } from '../book-card-edit/book-card-edit.component';\nlet BookPageComponent = class BookPageComponent {\n  cdRef;\n  bookService;\n  csvGenerator;\n  authService;\n  dialogs = inject(TuiDialogService);\n  ITEMS_PER_PAGE_LIST = [10, 20, 50];\n  item_per_page = 20;\n  data;\n  accountInfo;\n  filterDialog = tuiDialog(FilterModalComponent, {\n    dismissible: true,\n    label: 'Фильтр по книгам',\n    size: 'auto'\n  });\n  cardDialog = tuiDialog(BookCardComponent, {\n    dismissible: true,\n    label: 'Карточка книги',\n    size: 'auto'\n  });\n  editBook = tuiDialog(BookCardEditComponent, {\n    dismissible: true,\n    label: 'Редактировать книгу',\n    size: 'auto'\n  });\n  addManufacturer = tuiDialog(ManufactureCardEditComponent, {\n    dismissible: true,\n    label: 'Добавить книгу',\n    size: 'auto'\n  });\n  converter = FilterConverter;\n  constructor(cdRef, bookService, csvGenerator, authService) {\n    this.cdRef = cdRef;\n    this.bookService = bookService;\n    this.csvGenerator = csvGenerator;\n    this.authService = authService;\n    this.data = filter => this.bookService.getBooks(filter);\n    this.accountInfo = this.authService.getUserInfo();\n  }\n  ngOnInit() {\n    this.updateFilterParams();\n  }\n  currentData$;\n  columnsType = ['Id', 'Name', 'Description', 'Cipher', 'ISBN', 'Price'];\n  hasFilter = false;\n  columnForSort = '';\n  filterNameVal = '';\n  index = 0;\n  length = 0;\n  isLoading = false;\n  shownData = [];\n  customFilters = new AndFilter();\n  goToPage(index) {\n    this.index = index;\n    this.updateFilterParams();\n  }\n  onFilterNameChangeDebounce = _.debounce(x => this.onFilterNameChange(x), 300);\n  onAddFilter() {\n    this.filterDialog({\n      columns: this.columnsType,\n      initFilter: FilterConverter.copyFilter(this.customFilters)\n    }).subscribe(x => {\n      this.customFilters = x;\n      this.hasFilter = !FilterConverter.isEmptyFilter(x);\n      this.updateFilterParams();\n      this.cdRef.markForCheck();\n    });\n  }\n  onOpenBookCard(item) {\n    this.cardDialog({\n      bookInfo: item\n    }).subscribe(x => {});\n  }\n  onEditBookCard(item) {\n    this.editBook({\n      bookInfo: item\n    }).subscribe(x => {\n      this.bookService.saveBook(x).subscribe(y => {\n        this.updateFilterParams();\n        this.cdRef.markForCheck();\n      });\n    });\n  }\n  onAddBook() {\n    this.editBook({}).subscribe(x => {\n      this.bookService.saveBook(x).subscribe(y => {\n        this.updateFilterParams();\n        this.cdRef.markForCheck();\n      });\n    });\n  }\n  createFilter() {\n    let filter = {\n      paging: null,\n      scopeParams: null,\n      sortInfo: null,\n      filterOperations: null\n    };\n    filter.paging = {\n      pageIndex: this.index,\n      itemsPerPage: this.item_per_page\n    };\n    const fullFilter = new AndFilter();\n    if (!_.isEmpty(this.filterNameVal)) {\n      const filterOperation = new StringFilterOperation();\n      filterOperation.filterColumn = 'Name';\n      filterOperation.operation = FilterOperations.Contains;\n      filterOperation.valueForComparison = this.filterNameVal;\n      fullFilter.filters.push(filterOperation);\n    }\n    if (!_.isNil(this.customFilters)) {\n      fullFilter.filters.push(this.customFilters);\n    }\n    filter.filterOperations = fullFilter;\n    if (this.columnForSort !== 'Нет' && this.columnsType.includes(this.columnForSort)) {\n      filter.sortInfo = {\n        sortColumn: this.columnForSort,\n        isDescending: false\n      };\n    }\n    return filter;\n  }\n  onExportCsvManufacturer() {\n    const filter = this.createFilter();\n    filter.paging = null;\n    const obs$ = this.data(filter);\n    obs$.subscribe(data => {\n      const csvStr = this.csvGenerator.generateCsv(data.items);\n      var downloadLink = document.createElement('a');\n      var blob = new Blob(['\\ufeff', csvStr]);\n      var url = URL.createObjectURL(blob);\n      downloadLink.href = url;\n      downloadLink.download = 'book.csv';\n      document.body.appendChild(downloadLink);\n      downloadLink.click();\n      document.body.removeChild(downloadLink);\n    });\n  }\n  onOpenBookCardEdit(item) {\n    // this.editManufacturer({ authorInfo: item }).subscribe((x) => {\n    //   this.bookService.saveBook(x as any).subscribe((y) => {\n    //     this.updateFilterParams();\n    //     this.cdRef.markForCheck();\n    //   });\n    // });\n  }\n  onDeleteBook(item) {\n    const data = {\n      yes: 'Да',\n      no: 'Отмена'\n    };\n    this.dialogs.open(TUI_CONFIRM, {\n      label: 'Вы уверены что хотите удалить данную книгу?',\n      size: 's',\n      data\n    }).subscribe(x => {\n      if (x) {\n        this.bookService.deleteBook(item.id ?? -1).subscribe(x => {\n          if (x) {\n            this.updateFilterParams();\n          }\n        });\n      }\n    });\n  }\n  onFilterNameChange(event) {\n    this.updateFilterParams();\n  }\n  updateFilterParams() {\n    const filter = this.createFilter();\n    this.isLoading = true;\n    this.currentData$ = this.data(filter).pipe(tap(x => {\n      this.isLoading = false;\n      this.length = Math.ceil(x.totalCount / this.item_per_page);\n      if (this.length > 0) {\n        this.index = Math.min(this.index, this.length - 1);\n      } else {\n        this.index = 0;\n      }\n    }), shareReplay(1));\n  }\n  onSortColumnChange(event) {\n    this.updateFilterParams();\n  }\n  onPageAmountChanged() {\n    this.index = 0;\n    this.updateFilterParams();\n  }\n  resetShownData(newData) {\n    this.length = Math.ceil(newData.length / this.item_per_page);\n    this.index = 0;\n    this.shownData = newData.slice(0, this.item_per_page);\n  }\n  ngOnChanges(changes) {\n    const dataChange = changes['data'];\n    if (dataChange) {\n      this.updateFilterParams();\n    }\n  }\n  static ctorParameters = () => [{\n    type: ChangeDetectorRef\n  }, {\n    type: BookService\n  }, {\n    type: CsvHelperService\n  }, {\n    type: AuthService\n  }];\n};\nBookPageComponent = __decorate([Component({\n  selector: 'app-book-page',\n  standalone: true,\n  imports: [FormsModule, NgForOf, NgIf, AsyncPipe, TuiAutoColorPipe, TuiAvatar, TuiBadge, TuiLoader, TuiButton, TuiCell, TuiCheckbox, TuiChip, TuiSelectModule, TuiDataListWrapper, ManufactureCardEditComponent, TuiRoot, ReactiveFormsModule, TuiChip, TuiScrollbar, TuiLet, TuiInitialsPipe, TuiTextfield, TuiTooltip, TuiDropdown, TuiReorder, TuiChevron, TuiIcon, TuiInputNumberModule, TuiInitialsPipe, TuiItemsWithMore, TuiLink, TuiProgressBar, TuiRadioList, TuiStatus, TuiTable, TuiTitle, TuiPagination],\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], BookPageComponent);\nexport { BookPageComponent };","map":{"version":3,"names":["AsyncPipe","NgForOf","NgIf","ChangeDetectorRef","Component","inject","FormsModule","ReactiveFormsModule","TuiReorder","TuiTable","TuiAutoColorPipe","TuiButton","tuiDialog","TuiDialogService","TuiDropdown","TuiIcon","TuiInitialsPipe","TuiLink","TuiLoader","TuiRoot","TuiScrollbar","TuiTextfield","TuiTitle","TUI_CONFIRM","TuiAvatar","TuiBadge","TuiCheckbox","TuiChevron","TuiChip","TuiDataListWrapper","TuiItemsWithMore","TuiPagination","TuiProgressBar","TuiRadioList","TuiStatus","TuiTooltip","TuiCell","TuiInputNumberModule","TuiSelectModule","TuiLet","_","shareReplay","tap","AndFilter","FilterOperations","StringFilterOperation","FilterModalComponent","FilterConverter","ManufactureCardEditComponent","CsvHelperService","AuthService","BookService","BookCardComponent","BookCardEditComponent","BookPageComponent","cdRef","bookService","csvGenerator","authService","dialogs","ITEMS_PER_PAGE_LIST","item_per_page","data","accountInfo","filterDialog","dismissible","label","size","cardDialog","editBook","addManufacturer","converter","constructor","filter","getBooks","getUserInfo","ngOnInit","updateFilterParams","currentData$","columnsType","hasFilter","columnForSort","filterNameVal","index","length","isLoading","shownData","customFilters","goToPage","onFilterNameChangeDebounce","debounce","x","onFilterNameChange","onAddFilter","columns","initFilter","copyFilter","subscribe","isEmptyFilter","markForCheck","onOpenBookCard","item","bookInfo","onEditBookCard","saveBook","y","onAddBook","createFilter","paging","scopeParams","sortInfo","filterOperations","pageIndex","itemsPerPage","fullFilter","isEmpty","filterOperation","filterColumn","operation","Contains","valueForComparison","filters","push","isNil","includes","sortColumn","isDescending","onExportCsvManufacturer","obs$","csvStr","generateCsv","items","downloadLink","document","createElement","blob","Blob","url","URL","createObjectURL","href","download","body","appendChild","click","removeChild","onOpenBookCardEdit","onDeleteBook","yes","no","open","deleteBook","id","event","pipe","Math","ceil","totalCount","min","onSortColumnChange","onPageAmountChanged","resetShownData","newData","slice","ngOnChanges","changes","dataChange","__decorate","selector","standalone","imports","template","__NG_CLI_RESOURCE__0"],"sources":["C:\\Users\\Asus-PC\\Downloads\\WebLibraryNew\\WebLibrary\\WebLibraryApp\\Frontend\\src\\app\\components\\book-page\\book-page.component.ts"],"sourcesContent":["import { AsyncPipe, NgForOf, NgIf } from '@angular/common';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  inject,\r\n  Input,\r\n  OnChanges,\r\n  OnInit,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { TuiReorder, TuiTable } from '@taiga-ui/addon-table';\r\nimport {\r\n  TuiAlertService,\r\n  TuiAutoColorPipe,\r\n  TuiButton,\r\n  tuiDialog,\r\n  TuiDialogService,\r\n  TuiDropdown,\r\n  TuiIcon,\r\n  TuiInitialsPipe,\r\n  TuiLink,\r\n  TuiLoader,\r\n  TuiRoot,\r\n  TuiScrollbar,\r\n  TuiTextfield,\r\n  TuiTitle,\r\n} from '@taiga-ui/core';\r\nimport {\r\n  TUI_CONFIRM,\r\n  TuiAvatar,\r\n  TuiBadge,\r\n  TuiCheckbox,\r\n  TuiChevron,\r\n  TuiChip,\r\n  TuiConfirmData,\r\n  TuiDataListWrapper,\r\n  TuiItemsWithMore,\r\n  TuiPagination,\r\n  TuiProgressBar,\r\n  TuiRadioList,\r\n  TuiStatus,\r\n  TuiTooltip,\r\n} from '@taiga-ui/kit';\r\nimport { TuiCell } from '@taiga-ui/layout';\r\nimport {\r\n  GetManufacturersResponse,\r\n  Author,\r\n  AuthorsData,\r\n  AuthorService,\r\n} from '../../services/author/author-service.service';\r\nimport { TuiInputNumberModule, TuiSelectModule } from '@taiga-ui/legacy';\r\nimport { TuiLet } from '@taiga-ui/cdk';\r\nimport _ from 'lodash';\r\nimport { BaseFilter, Paging, SortInfo } from '../../services/filters/filters';\r\nimport { Observable, shareReplay, tap } from 'rxjs';\r\nimport {\r\n  AndFilter,\r\n  FilterOperations,\r\n  IFilter,\r\n  StringFilterOperation,\r\n} from '../../services/filters/filterOperations';\r\nimport { FilterModalComponent } from '../filter-modal/filter-modal.component';\r\nimport { FilterConverter } from '../../services/filters/filter-converter';\r\nimport { ManufacturerCardComponent } from '../manufacturer-card/manufacturer-card.component';\r\nimport { ManufactureCardEditComponent } from '../manufacture-card-edit/manufacture-card-edit.component';\r\nimport { CsvHelperService } from '../../services/csv-helper/csv-helper.service';\r\nimport {\r\n  AccountInfo,\r\n  AuthService,\r\n} from '../../services/auth/auth-service.service';\r\nimport { BookDto, BookService, GetBooksResponse } from '../../services/book/book.service';\r\nimport { BookCardComponent } from '../book-card/book-card.component';\r\nimport { BookCardEditComponent } from '../book-card-edit/book-card-edit.component';\r\n\r\n@Component({\r\n  selector: 'app-book-page',\r\n  standalone: true,\r\n  imports: [\r\n    FormsModule,\r\n    NgForOf,\r\n    NgIf,\r\n    AsyncPipe,\r\n    TuiAutoColorPipe,\r\n    TuiAvatar,\r\n    TuiBadge,\r\n    TuiLoader,\r\n    TuiButton,\r\n    TuiCell,\r\n    TuiCheckbox,\r\n    TuiChip,\r\n    TuiSelectModule,\r\n    TuiDataListWrapper,\r\n    ManufactureCardEditComponent,\r\n    TuiRoot,\r\n    ReactiveFormsModule,\r\n    TuiChip,\r\n    TuiScrollbar,\r\n    TuiLet,\r\n    TuiInitialsPipe,\r\n    TuiTextfield,\r\n    TuiTooltip,\r\n    TuiDropdown,\r\n    TuiReorder,\r\n    TuiChevron,\r\n    TuiIcon,\r\n    TuiInputNumberModule,\r\n    TuiInitialsPipe,\r\n    TuiItemsWithMore,\r\n    TuiLink,\r\n    TuiProgressBar,\r\n    TuiRadioList,\r\n    TuiStatus,\r\n    TuiTable,\r\n    TuiTitle,\r\n    TuiPagination,\r\n  ],\r\n  templateUrl: './book-page.component.html',\r\n  styleUrl: './book-page.component.scss',\r\n})\r\nexport class BookPageComponent implements OnInit {\r\n  private readonly dialogs = inject(TuiDialogService);\r\n\r\n  readonly ITEMS_PER_PAGE_LIST: number[] = [10, 20, 50];\r\n  item_per_page: number = 20;\r\n\r\n  data!: (filter: BaseFilter) => Observable<GetBooksResponse>;\r\n\r\n  protected readonly accountInfo!: AccountInfo | undefined;\r\n\r\n  private readonly filterDialog = tuiDialog(FilterModalComponent, {\r\n    dismissible: true,\r\n    label: 'Фильтр по книгам',\r\n    size: 'auto',\r\n  });\r\n\r\n  private readonly cardDialog = tuiDialog(BookCardComponent, {\r\n    dismissible: true,\r\n    label: 'Карточка книги',\r\n    size: 'auto',\r\n  });\r\n\r\n  private readonly editBook = tuiDialog(BookCardEditComponent, {\r\n    dismissible: true,\r\n    label: 'Редактировать книгу',\r\n    size: 'auto',\r\n  });\r\n\r\n  private readonly addManufacturer = tuiDialog(ManufactureCardEditComponent, {\r\n    dismissible: true,\r\n    label: 'Добавить книгу',\r\n    size: 'auto',\r\n  });\r\n\r\n  converter: any = FilterConverter;\r\n\r\n  constructor(\r\n    private cdRef: ChangeDetectorRef,\r\n    private bookService: BookService,\r\n    private csvGenerator: CsvHelperService,\r\n    private authService: AuthService\r\n  ) {\r\n    this.data = (filter: BaseFilter) => this.bookService.getBooks(filter);\r\n    this.accountInfo = this.authService.getUserInfo();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.updateFilterParams();\r\n  }\r\n\r\n  currentData$!: Observable<GetBooksResponse>;\r\n\r\n  readonly columnsType: string[] = [\r\n    'Id',\r\n    'Name',\r\n    'Description',\r\n    'Cipher',\r\n    'ISBN',\r\n    'Price',\r\n  ];\r\n\r\n  protected hasFilter: boolean = false;\r\n\r\n  columnForSort: string = '';\r\n\r\n  filterNameVal: string = '';\r\n  index: number = 0;\r\n  length: number = 0;\r\n  isLoading: boolean = false;\r\n  shownData: Author[] = [];\r\n\r\n  customFilters: IFilter = new AndFilter();\r\n\r\n  protected goToPage(index: number): void {\r\n    this.index = index;\r\n    this.updateFilterParams();\r\n  }\r\n\r\n  onFilterNameChangeDebounce = _.debounce(\r\n    (x) => this.onFilterNameChange(x),\r\n    300\r\n  );\r\n\r\n  onAddFilter() {\r\n    this.filterDialog({\r\n      columns: this.columnsType,\r\n      initFilter: FilterConverter.copyFilter(this.customFilters),\r\n    }).subscribe((x) => {\r\n      this.customFilters = x;\r\n      this.hasFilter = !FilterConverter.isEmptyFilter(x);\r\n      this.updateFilterParams();\r\n      this.cdRef.markForCheck();\r\n    });\r\n  }\r\n\r\n  onOpenBookCard(item: BookDto) {\r\n    this.cardDialog({ bookInfo: item }).subscribe((x) => {});\r\n  }\r\n\r\n  onEditBookCard(item: BookDto) {\r\n    this.editBook({ bookInfo: item }).subscribe((x) => {\r\n      this.bookService.saveBook(x as any).subscribe((y) => {\r\n        this.updateFilterParams();\r\n        this.cdRef.markForCheck();\r\n      });\r\n    });\r\n  }\r\n\r\n  onAddBook() {\r\n    this.editBook({ }).subscribe((x) => {\r\n      this.bookService.saveBook(x as any).subscribe((y) => {\r\n        this.updateFilterParams();\r\n        this.cdRef.markForCheck();\r\n      });\r\n    });\r\n  }\r\n\r\n  createFilter(): BaseFilter {\r\n    let filter: BaseFilter = {\r\n      paging: null,\r\n      scopeParams: null,\r\n      sortInfo: null,\r\n      filterOperations: null,\r\n    };\r\n\r\n    filter.paging = <Paging>{\r\n      pageIndex: this.index,\r\n      itemsPerPage: this.item_per_page,\r\n    };\r\n\r\n    const fullFilter = new AndFilter();\r\n    if (!_.isEmpty(this.filterNameVal)) {\r\n      const filterOperation: StringFilterOperation =\r\n        new StringFilterOperation();\r\n      filterOperation.filterColumn = 'Name';\r\n      filterOperation.operation = FilterOperations.Contains;\r\n      filterOperation.valueForComparison = this.filterNameVal;\r\n      fullFilter.filters.push(filterOperation);\r\n    }\r\n\r\n    if (!_.isNil(this.customFilters)) {\r\n      fullFilter.filters.push(this.customFilters);\r\n    }\r\n\r\n    filter.filterOperations = fullFilter;\r\n\r\n    if (\r\n      this.columnForSort !== 'Нет' &&\r\n      this.columnsType.includes(this.columnForSort)\r\n    ) {\r\n      filter.sortInfo = <SortInfo>{\r\n        sortColumn: this.columnForSort,\r\n        isDescending: false,\r\n      };\r\n    }\r\n\r\n    return filter;\r\n  }\r\n\r\n  onExportCsvManufacturer() {\r\n    const filter = this.createFilter();\r\n    filter.paging = null;\r\n    const obs$ = this.data(filter);\r\n\r\n    obs$.subscribe((data) => {\r\n      const csvStr = this.csvGenerator.generateCsv(data.items);\r\n      var downloadLink = document.createElement('a');\r\n      var blob = new Blob(['\\ufeff', csvStr]);\r\n      var url = URL.createObjectURL(blob);\r\n      downloadLink.href = url;\r\n      downloadLink.download = 'book.csv';\r\n\r\n      document.body.appendChild(downloadLink);\r\n      downloadLink.click();\r\n      document.body.removeChild(downloadLink);\r\n    });\r\n  }\r\n\r\n  onOpenBookCardEdit(item: BookDto) {\r\n    // this.editManufacturer({ authorInfo: item }).subscribe((x) => {\r\n    //   this.bookService.saveBook(x as any).subscribe((y) => {\r\n    //     this.updateFilterParams();\r\n    //     this.cdRef.markForCheck();\r\n    //   });\r\n    // });\r\n  }\r\n\r\n  onDeleteBook(item: BookDto) {\r\n    const data: TuiConfirmData = {\r\n      yes: 'Да',\r\n      no: 'Отмена',\r\n    };\r\n\r\n    this.dialogs\r\n      .open<boolean>(TUI_CONFIRM, {\r\n        label: 'Вы уверены что хотите удалить данную книгу?',\r\n        size: 's',\r\n        data,\r\n      })\r\n      .subscribe((x) => {\r\n        if (x) {\r\n          this.bookService.deleteBook(item.id ?? -1).subscribe((x) => {\r\n            if (x) {\r\n              this.updateFilterParams();\r\n            }\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  onFilterNameChange(event: any) {\r\n    this.updateFilterParams();\r\n  }\r\n\r\n  updateFilterParams() {\r\n    const filter = this.createFilter();\r\n\r\n    this.isLoading = true;\r\n\r\n    this.currentData$ = this.data(filter).pipe(\r\n      tap((x) => {\r\n        this.isLoading = false;\r\n        this.length = Math.ceil(x.totalCount / this.item_per_page);\r\n        if (this.length > 0) {\r\n          this.index = Math.min(this.index, this.length - 1);\r\n        } else {\r\n          this.index = 0;\r\n        }\r\n      }),\r\n      shareReplay(1)\r\n    );\r\n  }\r\n\r\n  onSortColumnChange(event: any) {\r\n    this.updateFilterParams();\r\n  }\r\n\r\n  onPageAmountChanged() {\r\n    this.index = 0;\r\n    this.updateFilterParams();\r\n  }\r\n\r\n  resetShownData(newData: Author[]) {\r\n    this.length = Math.ceil(newData.length / this.item_per_page);\r\n    this.index = 0;\r\n    this.shownData = newData.slice(0, this.item_per_page);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    const dataChange = changes['data'];\r\n    if (dataChange) {\r\n      this.updateFilterParams();\r\n    }\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}