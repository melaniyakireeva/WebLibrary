{"ast":null,"code":"import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { inject, EventEmitter, TemplateRef, Component, ChangeDetectionStrategy, ViewChild, ContentChild, Input, Output, Directive, NgModule } from '@angular/core';\nimport { maskitoTransform, MASKITO_DEFAULT_OPTIONS } from '@maskito/core';\nimport { maskitoPrefixPostprocessorGenerator, maskitoCaretGuard } from '@maskito/kit';\nimport { tuiIsNativeFocused } from '@taiga-ui/cdk/utils/focus';\nimport { tuiCreateToken, tuiProvideOptions, tuiPure } from '@taiga-ui/cdk/utils/miscellaneous';\nimport { tuiAsDataListHost, TuiDataListDirective } from '@taiga-ui/core/components/data-list';\nimport * as i1 from '@taiga-ui/core/directives/dropdown';\nimport { TuiDropdownOpen, TuiDropdownFixed, TuiDropdown } from '@taiga-ui/core/directives/dropdown';\nimport { AbstractTuiControl, tuiAsControl, AbstractTuiTextfieldHost } from '@taiga-ui/legacy/classes';\nimport * as i3 from '@taiga-ui/legacy/components/primitive-textfield';\nimport { TuiPrimitiveTextfieldComponent, TuiPrimitiveTextfieldModule, TuiTextfieldComponent } from '@taiga-ui/legacy/components/primitive-textfield';\nimport * as i4 from '@taiga-ui/legacy/directives';\nimport { TUI_TEXTFIELD_CLEANER, TUI_TEXTFIELD_SIZE, TuiTextfieldControllerModule, TuiValueAccessorModule, TuiLegacyDropdownOpenMonitorDirective } from '@taiga-ui/legacy/directives';\nimport { tuiAsFocusableItemAccessor, tuiAsTextfieldHost } from '@taiga-ui/legacy/tokens';\nimport * as i2 from '@maskito/angular';\nimport { MaskitoDirective } from '@maskito/angular';\nconst _c0 = [\"*\", [[\"input\"]]];\nconst _c1 = [\"*\", \"input\"];\nconst TUI_INPUT_PHONE_DEFAULT_OPTIONS = {\n  phoneMaskAfterCountryCode: '### ###-##-##',\n  allowText: false,\n  countryCode: '+7'\n};\n/**\n * @deprecated: drop in v5.0\n * Default parameters for input phone component\n */\nconst TUI_INPUT_PHONE_OPTIONS = tuiCreateToken(TUI_INPUT_PHONE_DEFAULT_OPTIONS);\nfunction tuiInputPhoneOptionsProvider(options) {\n  return tuiProvideOptions(TUI_INPUT_PHONE_OPTIONS, options, TUI_INPUT_PHONE_DEFAULT_OPTIONS);\n}\nconst countDigits = value => value.replaceAll(/\\D/g, '').length;\n/**\n * `InputPhone` component sets country code as non-removable prefix.\n * This prefix appears on focus and cannot be erased.\n * But users sometimes can copy complete phone number (from any different source)\n * and try to insert the whole string inside our `InputPhone` textfield.\n * This preprocessor helps to avoid country prefix duplication on paste/drop/autofill events.\n */\nfunction tuiCreateCompletePhoneInsertionPreprocessor(countryCode, phoneMaskAfterCountryCode) {\n  const completePhoneLength = (countryCode + phoneMaskAfterCountryCode).replaceAll(/[^#\\d]+/g, '').length;\n  const trimCountryPrefix = value => countryCode === '+7' ? value.replace(/^(\\+?7?\\s?8?)\\s?/, '') : value.replace(new RegExp(`^(\\\\+?${countryCode.replace('+', '')}?)\\\\s?`), '');\n  return ({\n    elementState,\n    data\n  }) => {\n    const {\n      value,\n      selection\n    } = elementState;\n    return {\n      elementState: {\n        selection,\n        value:\n        /**\n         * The only possible case when `value` includes digits more\n         * than mask expression allows – browser autofill.\n         * It means that we are inside `input`-event\n         * and mask are ready to reject \"extra\" characters.\n         * We should cut leading country prefix to save trailing characters!\n         */\n        countDigits(value) > completePhoneLength ? trimCountryPrefix(value) : value\n      },\n      data: countDigits(data) >= completePhoneLength ?\n      /**\n       * User tries to insert/drop the complete phone number (with country prefix).\n       * We should drop already existing non-removable prefix.\n       */\n      trimCountryPrefix(data) : data\n    };\n  };\n}\n\n/**\n * Create {@link https://maskito.dev/core-concepts/mask-expression pattern mask expression} for phone number\n *\n * @example\n * tuiCreatePhoneMaskExpression('+1', '(###) ###-####');\n */\nfunction tuiCreatePhoneMaskExpression(countryCode, phoneMaskAfterCountryCode) {\n  return [...countryCode.split(''), ' ', ...phoneMaskAfterCountryCode.replaceAll(/[^#\\- ()]+/g, '').split('').map(item => item === '#' ? /\\d/ : item)];\n}\nconst MASK_SYMBOLS = /[ \\-_()]/g;\nfunction isText(value) {\n  return Number.isNaN(parseInt(value.replaceAll(MASK_SYMBOLS, ''), 10));\n}\nclass TuiInputPhoneComponent extends AbstractTuiControl {\n  constructor() {\n    super(...arguments);\n    this.textfieldCleaner = inject(TUI_TEXTFIELD_CLEANER);\n    this.options = inject(TUI_INPUT_PHONE_OPTIONS);\n    this.textfieldSize = inject(TUI_TEXTFIELD_SIZE);\n    this.open = false;\n    this.phoneMaskAfterCountryCode = this.options.phoneMaskAfterCountryCode;\n    this.allowText = this.options.allowText;\n    this.search = '';\n    this.searchChange = new EventEmitter();\n    this.countryCode = this.options.countryCode;\n  }\n  set countryCodeSetter(newCountryCode) {\n    const prevCountryCode = this.countryCode;\n    this.countryCode = newCountryCode;\n    this.updateValueWithNewCountryCode(prevCountryCode, newCountryCode);\n  }\n  get size() {\n    return this.textfieldSize.size;\n  }\n  get nativeFocusableElement() {\n    return !this.textfield || this.computedDisabled ? null : this.textfield.nativeFocusableElement;\n  }\n  get focused() {\n    return tuiIsNativeFocused(this.nativeFocusableElement) || !!this.dropdown?.tuiDropdownOpen;\n  }\n  get nativeValue() {\n    return this.nativeFocusableElement?.value || maskitoTransform(this.value, this.maskOptions);\n  }\n  set nativeValue(value) {\n    if (this.nativeFocusableElement) {\n      this.nativeFocusableElement.value = value;\n    }\n  }\n  get inputMode() {\n    return this.allowText ? 'text' : 'numeric';\n  }\n  onValueChange(value) {\n    const parsed = isText(value) ? value : value.replaceAll(MASK_SYMBOLS, '').slice(0, this.maxPhoneLength);\n    this.updateSearch(parsed);\n    this.value = parsed === this.countryCode || isText(parsed) ? '' : parsed;\n    this.open = true;\n    if (!this.value && !this.allowText) {\n      this.nativeValue = this.nonRemovablePrefix;\n    }\n  }\n  handleOption(item) {\n    this.focusInput();\n    this.value = item;\n    this.nativeValue = maskitoTransform(this.value, this.maskOptions);\n    this.updateSearch('');\n    this.open = false;\n  }\n  setDisabledState() {\n    super.setDisabledState();\n    this.open = false;\n  }\n  writeValue(value) {\n    super.writeValue(value);\n    this.nativeValue = maskitoTransform(value || '', this.maskOptions);\n    this.updateSearch('');\n  }\n  get canOpen() {\n    return this.interactive && !!this.datalist;\n  }\n  get canClean() {\n    return this.nativeValue !== this.nonRemovablePrefix && this.textfieldCleaner.cleaner;\n  }\n  get maskOptions() {\n    return this.calculateMask(this.countryCode, this.phoneMaskAfterCountryCode, this.nonRemovablePrefix, this.allowText);\n  }\n  onActiveZone(active) {\n    this.updateFocused(active);\n    if (active && !this.nativeValue && !this.readOnly && !this.allowText) {\n      this.updateSearch(this.nonRemovablePrefix);\n      this.nativeValue = this.nonRemovablePrefix;\n      return;\n    }\n    if (this.nativeValue === this.nonRemovablePrefix || this.isTextValue) {\n      this.updateSearch('');\n      this.nativeValue = '';\n      return;\n    }\n    if (!active && !this.allowText && this.nativeFocusableElement) {\n      this.nativeValue = this.nativeValue.replace(/\\D$/, '');\n    }\n  }\n  getFallbackValue() {\n    return '';\n  }\n  get nonRemovablePrefix() {\n    return `${this.countryCode} `;\n  }\n  get maxPhoneLength() {\n    return this.countryCode.length + this.phoneMaskAfterCountryCode.replaceAll(/[^#]+/g, '').length;\n  }\n  get isTextValue() {\n    return !!this.search && isText(this.search);\n  }\n  calculateMask(countryCode, phoneMaskAfterCountryCode, nonRemovablePrefix, allowText) {\n    const mask = tuiCreatePhoneMaskExpression(countryCode, phoneMaskAfterCountryCode);\n    const preprocessors = [tuiCreateCompletePhoneInsertionPreprocessor(countryCode, phoneMaskAfterCountryCode)];\n    return allowText ? {\n      mask: ({\n        value\n      }) => isText(value) && value !== '+' ? MASKITO_DEFAULT_OPTIONS.mask : mask,\n      preprocessors\n    } : {\n      mask,\n      preprocessors,\n      postprocessors: [maskitoPrefixPostprocessorGenerator(nonRemovablePrefix)],\n      plugins: [maskitoCaretGuard((value, [from, to]) => [from === to ? nonRemovablePrefix.length : 0, value.length])]\n    };\n  }\n  focusInput() {\n    if (this.nativeFocusableElement) {\n      this.nativeFocusableElement.focus({\n        preventScroll: true\n      });\n    }\n  }\n  updateSearch(search) {\n    if (this.search === search) {\n      return;\n    }\n    this.search = search;\n    this.searchChange.emit(search);\n  }\n  updateValueWithNewCountryCode(prevCountryCode, newCountryCode) {\n    if (!this.isTextValue) {\n      this.value = this.value.replace(prevCountryCode, newCountryCode);\n      this.nativeValue = maskitoTransform(this.value, this.maskOptions);\n    }\n  }\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵTuiInputPhoneComponent_BaseFactory;\n      return function TuiInputPhoneComponent_Factory(__ngFactoryType__) {\n        return (ɵTuiInputPhoneComponent_BaseFactory || (ɵTuiInputPhoneComponent_BaseFactory = i0.ɵɵgetInheritedFactory(TuiInputPhoneComponent)))(__ngFactoryType__ || TuiInputPhoneComponent);\n      };\n    })();\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: TuiInputPhoneComponent,\n      selectors: [[\"tui-input-phone\"]],\n      contentQueries: function TuiInputPhoneComponent_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, TuiDataListDirective, 5, TemplateRef);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.datalist = _t.first);\n        }\n      },\n      viewQuery: function TuiInputPhoneComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(TuiDropdownOpen, 5);\n          i0.ɵɵviewQuery(TuiPrimitiveTextfieldComponent, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dropdown = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.textfield = _t.first);\n        }\n      },\n      hostVars: 1,\n      hostBindings: function TuiInputPhoneComponent_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"data-size\", ctx.size);\n        }\n      },\n      inputs: {\n        phoneMaskAfterCountryCode: \"phoneMaskAfterCountryCode\",\n        allowText: \"allowText\",\n        search: \"search\",\n        countryCodeSetter: [0, \"countryCode\", \"countryCodeSetter\"]\n      },\n      outputs: {\n        searchChange: \"searchChange\"\n      },\n      features: [i0.ɵɵProvidersFeature([tuiAsFocusableItemAccessor(TuiInputPhoneComponent), tuiAsControl(TuiInputPhoneComponent), tuiAsDataListHost(TuiInputPhoneComponent)]), i0.ɵɵHostDirectivesFeature([i1.TuiDropdownFixed]), i0.ɵɵInheritDefinitionFeature],\n      ngContentSelectors: _c1,\n      decls: 4,\n      vars: 13,\n      consts: [[\"tuiDropdownOpenMonitor\", \"\", 1, \"t-hosted\", 3, \"tuiDropdownOpenChange\", \"tuiActiveZoneChange\", \"tuiDropdown\", \"tuiDropdownEnabled\", \"tuiDropdownOpen\"], [\"tuiValueAccessor\", \"\", 1, \"t-textfield\", 3, \"valueChange\", \"disabled\", \"focusable\", \"invalid\", \"maskito\", \"nativeId\", \"pseudoFocus\", \"pseudoHover\", \"readOnly\", \"tuiTextfieldCleaner\", \"value\"]],\n      template: function TuiInputPhoneComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef(_c0);\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵtwoWayListener(\"tuiDropdownOpenChange\", function TuiInputPhoneComponent_Template_div_tuiDropdownOpenChange_0_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.open, $event) || (ctx.open = $event);\n            return $event;\n          });\n          i0.ɵɵlistener(\"tuiActiveZoneChange\", function TuiInputPhoneComponent_Template_div_tuiActiveZoneChange_0_listener($event) {\n            return ctx.onActiveZone($event);\n          });\n          i0.ɵɵelementStart(1, \"tui-primitive-textfield\", 1);\n          i0.ɵɵtwoWayListener(\"valueChange\", function TuiInputPhoneComponent_Template_tui_primitive_textfield_valueChange_1_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.nativeValue, $event) || (ctx.nativeValue = $event);\n            return $event;\n          });\n          i0.ɵɵlistener(\"valueChange\", function TuiInputPhoneComponent_Template_tui_primitive_textfield_valueChange_1_listener($event) {\n            return ctx.onValueChange($event);\n          });\n          i0.ɵɵprojection(2);\n          i0.ɵɵprojection(3, 1, [\"ngProjectAs\", \"input\", 5, [\"input\"]]);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"tuiDropdown\", ctx.datalist || \"\")(\"tuiDropdownEnabled\", ctx.canOpen);\n          i0.ɵɵtwoWayProperty(\"tuiDropdownOpen\", ctx.open);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"disabled\", ctx.computedDisabled)(\"focusable\", ctx.focusable)(\"invalid\", ctx.computedInvalid)(\"maskito\", ctx.maskOptions)(\"nativeId\", ctx.nativeId)(\"pseudoFocus\", ctx.computedFocused)(\"pseudoHover\", ctx.pseudoHover)(\"readOnly\", ctx.readOnly)(\"tuiTextfieldCleaner\", ctx.canClean);\n          i0.ɵɵtwoWayProperty(\"value\", ctx.nativeValue);\n        }\n      },\n      dependencies: [i2.MaskitoDirective, i3.TuiPrimitiveTextfieldComponent, i3.TuiPrimitiveTextfieldDirective, i4.TuiTextfieldCleanerDirective, i4.TuiValueAccessorDirective, i4.TuiLegacyDropdownOpenMonitorDirective, i1.TuiDropdownDirective, i1.TuiDropdownOpen],\n      styles: [\"[_nghost-%COMP%]{display:block;border-radius:var(--tui-radius-m);text-align:start}._disabled[_nghost-%COMP%], [_nghost-%COMP%]   *:disabled[_nghost-%COMP%], *:disabled   [_nghost-%COMP%]{pointer-events:none}.t-hosted[_ngcontent-%COMP%]{display:block;border-radius:inherit}.t-textfield[_ngcontent-%COMP%]{border-radius:inherit;text-align:inherit}\"],\n      changeDetection: 0\n    });\n  }\n}\n__decorate([tuiPure], TuiInputPhoneComponent.prototype, \"calculateMask\", null);\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiInputPhoneComponent, [{\n    type: Component,\n    args: [{\n      standalone: false,\n      selector: 'tui-input-phone',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [tuiAsFocusableItemAccessor(TuiInputPhoneComponent), tuiAsControl(TuiInputPhoneComponent), tuiAsDataListHost(TuiInputPhoneComponent)],\n      hostDirectives: [TuiDropdownFixed],\n      host: {\n        '[attr.data-size]': 'size'\n      },\n      template: \"<div\\n    tuiDropdownOpenMonitor\\n    class=\\\"t-hosted\\\"\\n    [tuiDropdown]=\\\"datalist || ''\\\"\\n    [tuiDropdownEnabled]=\\\"canOpen\\\"\\n    [(tuiDropdownOpen)]=\\\"open\\\"\\n    (tuiActiveZoneChange)=\\\"onActiveZone($event)\\\"\\n>\\n    <tui-primitive-textfield\\n        tuiValueAccessor\\n        class=\\\"t-textfield\\\"\\n        [disabled]=\\\"computedDisabled\\\"\\n        [focusable]=\\\"focusable\\\"\\n        [invalid]=\\\"computedInvalid\\\"\\n        [maskito]=\\\"maskOptions\\\"\\n        [nativeId]=\\\"nativeId\\\"\\n        [pseudoFocus]=\\\"computedFocused\\\"\\n        [pseudoHover]=\\\"pseudoHover\\\"\\n        [readOnly]=\\\"readOnly\\\"\\n        [tuiTextfieldCleaner]=\\\"canClean\\\"\\n        [(value)]=\\\"nativeValue\\\"\\n        (valueChange)=\\\"onValueChange($event)\\\"\\n    >\\n        <ng-content />\\n        <ng-content\\n            ngProjectAs=\\\"input\\\"\\n            select=\\\"input\\\"\\n        />\\n    </tui-primitive-textfield>\\n</div>\\n\",\n      styles: [\":host{display:block;border-radius:var(--tui-radius-m);text-align:start}:host._disabled,:host :host-context(*:disabled){pointer-events:none}.t-hosted{display:block;border-radius:inherit}.t-textfield{border-radius:inherit;text-align:inherit}\\n\"]\n    }]\n  }], null, {\n    dropdown: [{\n      type: ViewChild,\n      args: [TuiDropdownOpen]\n    }],\n    textfield: [{\n      type: ViewChild,\n      args: [TuiPrimitiveTextfieldComponent]\n    }],\n    datalist: [{\n      type: ContentChild,\n      args: [TuiDataListDirective, {\n        read: TemplateRef\n      }]\n    }],\n    phoneMaskAfterCountryCode: [{\n      type: Input\n    }],\n    allowText: [{\n      type: Input\n    }],\n    search: [{\n      type: Input\n    }],\n    searchChange: [{\n      type: Output\n    }],\n    countryCodeSetter: [{\n      type: Input,\n      args: ['countryCode']\n    }],\n    calculateMask: []\n  });\n})();\nclass TuiInputPhoneDirective extends AbstractTuiTextfieldHost {\n  get value() {\n    return this.host.nativeValue;\n  }\n  onValueChange(value) {\n    this.host.onValueChange(value);\n  }\n  process(input) {\n    this.input = input;\n  }\n  ngDoCheck() {\n    if (!this.input) {\n      return;\n    }\n    this.input.type = 'tel';\n    this.input.inputMode = this.host.inputMode;\n  }\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵTuiInputPhoneDirective_BaseFactory;\n      return function TuiInputPhoneDirective_Factory(__ngFactoryType__) {\n        return (ɵTuiInputPhoneDirective_BaseFactory || (ɵTuiInputPhoneDirective_BaseFactory = i0.ɵɵgetInheritedFactory(TuiInputPhoneDirective)))(__ngFactoryType__ || TuiInputPhoneDirective);\n      };\n    })();\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: TuiInputPhoneDirective,\n      selectors: [[\"tui-input-phone\"]],\n      features: [i0.ɵɵProvidersFeature([tuiAsTextfieldHost(TuiInputPhoneDirective)]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiInputPhoneDirective, [{\n    type: Directive,\n    args: [{\n      standalone: false,\n      selector: 'tui-input-phone',\n      providers: [tuiAsTextfieldHost(TuiInputPhoneDirective)]\n    }]\n  }], null, null);\n})();\nclass TuiInputPhoneModule {\n  static {\n    this.ɵfac = function TuiInputPhoneModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiInputPhoneModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: TuiInputPhoneModule,\n      declarations: [TuiInputPhoneComponent, TuiInputPhoneDirective],\n      imports: [MaskitoDirective, TuiPrimitiveTextfieldModule, TuiTextfieldControllerModule, TuiValueAccessorModule, TuiLegacyDropdownOpenMonitorDirective, i1.TuiDropdownOptionsDirective, i1.TuiDropdownDriverDirective, i1.TuiDropdownDirective, i1.TuiDropdownComponent, i1.TuiDropdownOpen, i1.TuiDropdownOpenLegacy, i1.TuiDropdownPortal, i1.TuiDropdownManual, i1.TuiDropdownHover, i1.TuiDropdownContext, i1.TuiDropdownPosition, i1.TuiDropdownPositionSided, i1.TuiDropdownSelection],\n      exports: [TuiInputPhoneComponent, TuiInputPhoneDirective, TuiTextfieldComponent, i1.TuiDropdownOptionsDirective, i1.TuiDropdownDriverDirective, i1.TuiDropdownDirective, i1.TuiDropdownComponent, i1.TuiDropdownOpen, i1.TuiDropdownOpenLegacy, i1.TuiDropdownPortal, i1.TuiDropdownManual, i1.TuiDropdownHover, i1.TuiDropdownContext, i1.TuiDropdownPosition, i1.TuiDropdownPositionSided, i1.TuiDropdownSelection]\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [TuiPrimitiveTextfieldModule, TuiTextfieldControllerModule, TuiValueAccessorModule, i1.TuiDropdownComponent]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiInputPhoneModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MaskitoDirective, TuiPrimitiveTextfieldModule, TuiTextfieldControllerModule, TuiValueAccessorModule, TuiLegacyDropdownOpenMonitorDirective, ...TuiDropdown],\n      declarations: [TuiInputPhoneComponent, TuiInputPhoneDirective],\n      exports: [TuiInputPhoneComponent, TuiInputPhoneDirective, TuiTextfieldComponent, ...TuiDropdown]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TUI_INPUT_PHONE_DEFAULT_OPTIONS, TUI_INPUT_PHONE_OPTIONS, TuiInputPhoneComponent, TuiInputPhoneDirective, TuiInputPhoneModule, tuiInputPhoneOptionsProvider };","map":{"version":3,"names":["__decorate","i0","inject","EventEmitter","TemplateRef","Component","ChangeDetectionStrategy","ViewChild","ContentChild","Input","Output","Directive","NgModule","maskitoTransform","MASKITO_DEFAULT_OPTIONS","maskitoPrefixPostprocessorGenerator","maskitoCaretGuard","tuiIsNativeFocused","tuiCreateToken","tuiProvideOptions","tuiPure","tuiAsDataListHost","TuiDataListDirective","i1","TuiDropdownOpen","TuiDropdownFixed","TuiDropdown","AbstractTuiControl","tuiAsControl","AbstractTuiTextfieldHost","i3","TuiPrimitiveTextfieldComponent","TuiPrimitiveTextfieldModule","TuiTextfieldComponent","i4","TUI_TEXTFIELD_CLEANER","TUI_TEXTFIELD_SIZE","TuiTextfieldControllerModule","TuiValueAccessorModule","TuiLegacyDropdownOpenMonitorDirective","tuiAsFocusableItemAccessor","tuiAsTextfieldHost","i2","MaskitoDirective","_c0","_c1","TUI_INPUT_PHONE_DEFAULT_OPTIONS","phoneMaskAfterCountryCode","allowText","countryCode","TUI_INPUT_PHONE_OPTIONS","tuiInputPhoneOptionsProvider","options","countDigits","value","replaceAll","length","tuiCreateCompletePhoneInsertionPreprocessor","completePhoneLength","trimCountryPrefix","replace","RegExp","elementState","data","selection","tuiCreatePhoneMaskExpression","split","map","item","MASK_SYMBOLS","isText","Number","isNaN","parseInt","TuiInputPhoneComponent","constructor","arguments","textfieldCleaner","textfieldSize","open","search","searchChange","countryCodeSetter","newCountryCode","prevCountryCode","updateValueWithNewCountryCode","size","nativeFocusableElement","textfield","computedDisabled","focused","dropdown","tuiDropdownOpen","nativeValue","maskOptions","inputMode","onValueChange","parsed","slice","maxPhoneLength","updateSearch","nonRemovablePrefix","handleOption","focusInput","setDisabledState","writeValue","canOpen","interactive","datalist","canClean","cleaner","calculateMask","onActiveZone","active","updateFocused","readOnly","isTextValue","getFallbackValue","mask","preprocessors","postprocessors","plugins","from","to","focus","preventScroll","emit","ɵfac","ɵTuiInputPhoneComponent_BaseFactory","TuiInputPhoneComponent_Factory","__ngFactoryType__","ɵɵgetInheritedFactory","ɵcmp","ɵɵdefineComponent","type","selectors","contentQueries","TuiInputPhoneComponent_ContentQueries","rf","ctx","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","viewQuery","TuiInputPhoneComponent_Query","ɵɵviewQuery","hostVars","hostBindings","TuiInputPhoneComponent_HostBindings","ɵɵattribute","inputs","outputs","features","ɵɵProvidersFeature","ɵɵHostDirectivesFeature","ɵɵInheritDefinitionFeature","ngContentSelectors","decls","vars","consts","template","TuiInputPhoneComponent_Template","ɵɵprojectionDef","ɵɵelementStart","ɵɵtwoWayListener","TuiInputPhoneComponent_Template_div_tuiDropdownOpenChange_0_listener","$event","ɵɵtwoWayBindingSet","ɵɵlistener","TuiInputPhoneComponent_Template_div_tuiActiveZoneChange_0_listener","TuiInputPhoneComponent_Template_tui_primitive_textfield_valueChange_1_listener","ɵɵprojection","ɵɵelementEnd","ɵɵproperty","ɵɵtwoWayProperty","ɵɵadvance","focusable","computedInvalid","nativeId","computedFocused","pseudoHover","dependencies","TuiPrimitiveTextfieldDirective","TuiTextfieldCleanerDirective","TuiValueAccessorDirective","TuiDropdownDirective","styles","changeDetection","prototype","ngDevMode","ɵsetClassMetadata","args","standalone","selector","OnPush","providers","hostDirectives","host","read","TuiInputPhoneDirective","process","input","ngDoCheck","ɵTuiInputPhoneDirective_BaseFactory","TuiInputPhoneDirective_Factory","ɵdir","ɵɵdefineDirective","TuiInputPhoneModule","TuiInputPhoneModule_Factory","ɵmod","ɵɵdefineNgModule","declarations","imports","TuiDropdownOptionsDirective","TuiDropdownDriverDirective","TuiDropdownComponent","TuiDropdownOpenLegacy","TuiDropdownPortal","TuiDropdownManual","TuiDropdownHover","TuiDropdownContext","TuiDropdownPosition","TuiDropdownPositionSided","TuiDropdownSelection","exports","ɵinj","ɵɵdefineInjector"],"sources":["C:/Users/Asus-PC/Downloads/WebLibraryNew/WebLibrary/WebLibraryApp/Frontend/node_modules/@taiga-ui/legacy/fesm2022/taiga-ui-legacy-components-input-phone.mjs"],"sourcesContent":["import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { inject, EventEmitter, TemplateRef, Component, ChangeDetectionStrategy, ViewChild, ContentChild, Input, Output, Directive, NgModule } from '@angular/core';\nimport { maskitoTransform, MASKITO_DEFAULT_OPTIONS } from '@maskito/core';\nimport { maskitoPrefixPostprocessorGenerator, maskitoCaretGuard } from '@maskito/kit';\nimport { tuiIsNativeFocused } from '@taiga-ui/cdk/utils/focus';\nimport { tuiCreateToken, tuiProvideOptions, tuiPure } from '@taiga-ui/cdk/utils/miscellaneous';\nimport { tuiAsDataListHost, TuiDataListDirective } from '@taiga-ui/core/components/data-list';\nimport * as i1 from '@taiga-ui/core/directives/dropdown';\nimport { TuiDropdownOpen, TuiDropdownFixed, TuiDropdown } from '@taiga-ui/core/directives/dropdown';\nimport { AbstractTuiControl, tuiAsControl, AbstractTuiTextfieldHost } from '@taiga-ui/legacy/classes';\nimport * as i3 from '@taiga-ui/legacy/components/primitive-textfield';\nimport { TuiPrimitiveTextfieldComponent, TuiPrimitiveTextfieldModule, TuiTextfieldComponent } from '@taiga-ui/legacy/components/primitive-textfield';\nimport * as i4 from '@taiga-ui/legacy/directives';\nimport { TUI_TEXTFIELD_CLEANER, TUI_TEXTFIELD_SIZE, TuiTextfieldControllerModule, TuiValueAccessorModule, TuiLegacyDropdownOpenMonitorDirective } from '@taiga-ui/legacy/directives';\nimport { tuiAsFocusableItemAccessor, tuiAsTextfieldHost } from '@taiga-ui/legacy/tokens';\nimport * as i2 from '@maskito/angular';\nimport { MaskitoDirective } from '@maskito/angular';\n\nconst TUI_INPUT_PHONE_DEFAULT_OPTIONS = {\n    phoneMaskAfterCountryCode: '### ###-##-##',\n    allowText: false,\n    countryCode: '+7',\n};\n/**\n * @deprecated: drop in v5.0\n * Default parameters for input phone component\n */\nconst TUI_INPUT_PHONE_OPTIONS = tuiCreateToken(TUI_INPUT_PHONE_DEFAULT_OPTIONS);\nfunction tuiInputPhoneOptionsProvider(options) {\n    return tuiProvideOptions(TUI_INPUT_PHONE_OPTIONS, options, TUI_INPUT_PHONE_DEFAULT_OPTIONS);\n}\n\nconst countDigits = (value) => value.replaceAll(/\\D/g, '').length;\n/**\n * `InputPhone` component sets country code as non-removable prefix.\n * This prefix appears on focus and cannot be erased.\n * But users sometimes can copy complete phone number (from any different source)\n * and try to insert the whole string inside our `InputPhone` textfield.\n * This preprocessor helps to avoid country prefix duplication on paste/drop/autofill events.\n */\nfunction tuiCreateCompletePhoneInsertionPreprocessor(countryCode, phoneMaskAfterCountryCode) {\n    const completePhoneLength = (countryCode + phoneMaskAfterCountryCode).replaceAll(/[^#\\d]+/g, '').length;\n    const trimCountryPrefix = (value) => countryCode === '+7'\n        ? value.replace(/^(\\+?7?\\s?8?)\\s?/, '')\n        : value.replace(new RegExp(`^(\\\\+?${countryCode.replace('+', '')}?)\\\\s?`), '');\n    return ({ elementState, data }) => {\n        const { value, selection } = elementState;\n        return {\n            elementState: {\n                selection,\n                value: \n                /**\n                 * The only possible case when `value` includes digits more\n                 * than mask expression allows – browser autofill.\n                 * It means that we are inside `input`-event\n                 * and mask are ready to reject \"extra\" characters.\n                 * We should cut leading country prefix to save trailing characters!\n                 */\n                countDigits(value) > completePhoneLength\n                    ? trimCountryPrefix(value)\n                    : value,\n            },\n            data: countDigits(data) >= completePhoneLength\n                ? /**\n                   * User tries to insert/drop the complete phone number (with country prefix).\n                   * We should drop already existing non-removable prefix.\n                   */\n                    trimCountryPrefix(data)\n                : data,\n        };\n    };\n}\n\n/**\n * Create {@link https://maskito.dev/core-concepts/mask-expression pattern mask expression} for phone number\n *\n * @example\n * tuiCreatePhoneMaskExpression('+1', '(###) ###-####');\n */\nfunction tuiCreatePhoneMaskExpression(countryCode, phoneMaskAfterCountryCode) {\n    return [\n        ...countryCode.split(''),\n        ' ',\n        ...phoneMaskAfterCountryCode\n            .replaceAll(/[^#\\- ()]+/g, '')\n            .split('')\n            .map((item) => (item === '#' ? /\\d/ : item)),\n    ];\n}\n\nconst MASK_SYMBOLS = /[ \\-_()]/g;\nfunction isText(value) {\n    return Number.isNaN(parseInt(value.replaceAll(MASK_SYMBOLS, ''), 10));\n}\nclass TuiInputPhoneComponent extends AbstractTuiControl {\n    constructor() {\n        super(...arguments);\n        this.textfieldCleaner = inject(TUI_TEXTFIELD_CLEANER);\n        this.options = inject(TUI_INPUT_PHONE_OPTIONS);\n        this.textfieldSize = inject(TUI_TEXTFIELD_SIZE);\n        this.open = false;\n        this.phoneMaskAfterCountryCode = this.options.phoneMaskAfterCountryCode;\n        this.allowText = this.options.allowText;\n        this.search = '';\n        this.searchChange = new EventEmitter();\n        this.countryCode = this.options.countryCode;\n    }\n    set countryCodeSetter(newCountryCode) {\n        const prevCountryCode = this.countryCode;\n        this.countryCode = newCountryCode;\n        this.updateValueWithNewCountryCode(prevCountryCode, newCountryCode);\n    }\n    get size() {\n        return this.textfieldSize.size;\n    }\n    get nativeFocusableElement() {\n        return !this.textfield || this.computedDisabled\n            ? null\n            : this.textfield.nativeFocusableElement;\n    }\n    get focused() {\n        return (tuiIsNativeFocused(this.nativeFocusableElement) ||\n            !!this.dropdown?.tuiDropdownOpen);\n    }\n    get nativeValue() {\n        return (this.nativeFocusableElement?.value ||\n            maskitoTransform(this.value, this.maskOptions));\n    }\n    set nativeValue(value) {\n        if (this.nativeFocusableElement) {\n            this.nativeFocusableElement.value = value;\n        }\n    }\n    get inputMode() {\n        return this.allowText ? 'text' : 'numeric';\n    }\n    onValueChange(value) {\n        const parsed = isText(value)\n            ? value\n            : value.replaceAll(MASK_SYMBOLS, '').slice(0, this.maxPhoneLength);\n        this.updateSearch(parsed);\n        this.value = parsed === this.countryCode || isText(parsed) ? '' : parsed;\n        this.open = true;\n        if (!this.value && !this.allowText) {\n            this.nativeValue = this.nonRemovablePrefix;\n        }\n    }\n    handleOption(item) {\n        this.focusInput();\n        this.value = item;\n        this.nativeValue = maskitoTransform(this.value, this.maskOptions);\n        this.updateSearch('');\n        this.open = false;\n    }\n    setDisabledState() {\n        super.setDisabledState();\n        this.open = false;\n    }\n    writeValue(value) {\n        super.writeValue(value);\n        this.nativeValue = maskitoTransform(value || '', this.maskOptions);\n        this.updateSearch('');\n    }\n    get canOpen() {\n        return this.interactive && !!this.datalist;\n    }\n    get canClean() {\n        return (this.nativeValue !== this.nonRemovablePrefix && this.textfieldCleaner.cleaner);\n    }\n    get maskOptions() {\n        return this.calculateMask(this.countryCode, this.phoneMaskAfterCountryCode, this.nonRemovablePrefix, this.allowText);\n    }\n    onActiveZone(active) {\n        this.updateFocused(active);\n        if (active && !this.nativeValue && !this.readOnly && !this.allowText) {\n            this.updateSearch(this.nonRemovablePrefix);\n            this.nativeValue = this.nonRemovablePrefix;\n            return;\n        }\n        if (this.nativeValue === this.nonRemovablePrefix || this.isTextValue) {\n            this.updateSearch('');\n            this.nativeValue = '';\n            return;\n        }\n        if (!active && !this.allowText && this.nativeFocusableElement) {\n            this.nativeValue = this.nativeValue.replace(/\\D$/, '');\n        }\n    }\n    getFallbackValue() {\n        return '';\n    }\n    get nonRemovablePrefix() {\n        return `${this.countryCode} `;\n    }\n    get maxPhoneLength() {\n        return (this.countryCode.length +\n            this.phoneMaskAfterCountryCode.replaceAll(/[^#]+/g, '').length);\n    }\n    get isTextValue() {\n        return !!this.search && isText(this.search);\n    }\n    calculateMask(countryCode, phoneMaskAfterCountryCode, nonRemovablePrefix, allowText) {\n        const mask = tuiCreatePhoneMaskExpression(countryCode, phoneMaskAfterCountryCode);\n        const preprocessors = [\n            tuiCreateCompletePhoneInsertionPreprocessor(countryCode, phoneMaskAfterCountryCode),\n        ];\n        return allowText\n            ? {\n                mask: ({ value }) => isText(value) && value !== '+'\n                    ? MASKITO_DEFAULT_OPTIONS.mask\n                    : mask,\n                preprocessors,\n            }\n            : {\n                mask,\n                preprocessors,\n                postprocessors: [\n                    maskitoPrefixPostprocessorGenerator(nonRemovablePrefix),\n                ],\n                plugins: [\n                    maskitoCaretGuard((value, [from, to]) => [\n                        from === to ? nonRemovablePrefix.length : 0,\n                        value.length,\n                    ]),\n                ],\n            };\n    }\n    focusInput() {\n        if (this.nativeFocusableElement) {\n            this.nativeFocusableElement.focus({ preventScroll: true });\n        }\n    }\n    updateSearch(search) {\n        if (this.search === search) {\n            return;\n        }\n        this.search = search;\n        this.searchChange.emit(search);\n    }\n    updateValueWithNewCountryCode(prevCountryCode, newCountryCode) {\n        if (!this.isTextValue) {\n            this.value = this.value.replace(prevCountryCode, newCountryCode);\n            this.nativeValue = maskitoTransform(this.value, this.maskOptions);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiInputPhoneComponent, deps: null, target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiInputPhoneComponent, selector: \"tui-input-phone\", inputs: { phoneMaskAfterCountryCode: \"phoneMaskAfterCountryCode\", allowText: \"allowText\", search: \"search\", countryCodeSetter: [\"countryCode\", \"countryCodeSetter\"] }, outputs: { searchChange: \"searchChange\" }, host: { properties: { \"attr.data-size\": \"size\" } }, providers: [\n            tuiAsFocusableItemAccessor(TuiInputPhoneComponent),\n            tuiAsControl(TuiInputPhoneComponent),\n            tuiAsDataListHost(TuiInputPhoneComponent),\n        ], queries: [{ propertyName: \"datalist\", first: true, predicate: TuiDataListDirective, descendants: true, read: TemplateRef }], viewQueries: [{ propertyName: \"dropdown\", first: true, predicate: TuiDropdownOpen, descendants: true }, { propertyName: \"textfield\", first: true, predicate: TuiPrimitiveTextfieldComponent, descendants: true }], usesInheritance: true, hostDirectives: [{ directive: i1.TuiDropdownFixed }], ngImport: i0, template: \"<div\\n    tuiDropdownOpenMonitor\\n    class=\\\"t-hosted\\\"\\n    [tuiDropdown]=\\\"datalist || ''\\\"\\n    [tuiDropdownEnabled]=\\\"canOpen\\\"\\n    [(tuiDropdownOpen)]=\\\"open\\\"\\n    (tuiActiveZoneChange)=\\\"onActiveZone($event)\\\"\\n>\\n    <tui-primitive-textfield\\n        tuiValueAccessor\\n        class=\\\"t-textfield\\\"\\n        [disabled]=\\\"computedDisabled\\\"\\n        [focusable]=\\\"focusable\\\"\\n        [invalid]=\\\"computedInvalid\\\"\\n        [maskito]=\\\"maskOptions\\\"\\n        [nativeId]=\\\"nativeId\\\"\\n        [pseudoFocus]=\\\"computedFocused\\\"\\n        [pseudoHover]=\\\"pseudoHover\\\"\\n        [readOnly]=\\\"readOnly\\\"\\n        [tuiTextfieldCleaner]=\\\"canClean\\\"\\n        [(value)]=\\\"nativeValue\\\"\\n        (valueChange)=\\\"onValueChange($event)\\\"\\n    >\\n        <ng-content />\\n        <ng-content\\n            ngProjectAs=\\\"input\\\"\\n            select=\\\"input\\\"\\n        />\\n    </tui-primitive-textfield>\\n</div>\\n\", styles: [\":host{display:block;border-radius:var(--tui-radius-m);text-align:start}:host._disabled,:host :host-context(*:disabled){pointer-events:none}.t-hosted{display:block;border-radius:inherit}.t-textfield{border-radius:inherit;text-align:inherit}\\n\"], dependencies: [{ kind: \"directive\", type: i2.MaskitoDirective, selector: \"[maskito]\", inputs: [\"maskito\", \"maskitoElement\"] }, { kind: \"component\", type: i3.TuiPrimitiveTextfieldComponent, selector: \"tui-primitive-textfield\", inputs: [\"editable\", \"iconCleaner\", \"readOnly\", \"invalid\", \"disabled\", \"value\"], outputs: [\"valueChange\"] }, { kind: \"directive\", type: i3.TuiPrimitiveTextfieldDirective, selector: \"tui-primitive-textfield\" }, { kind: \"directive\", type: i4.TuiTextfieldCleanerDirective, selector: \"[tuiTextfieldCleaner]\", inputs: [\"tuiTextfieldCleaner\"] }, { kind: \"directive\", type: i4.TuiValueAccessorDirective, selector: \"[tuiValueAccessor]\" }, { kind: \"directive\", type: i4.TuiLegacyDropdownOpenMonitorDirective, selector: \"[tuiDropdownOpenMonitor]\" }, { kind: \"directive\", type: i1.TuiDropdownDirective, selector: \"[tuiDropdown]:not(ng-container):not(ng-template)\", inputs: [\"tuiDropdown\"], exportAs: [\"tuiDropdown\"] }, { kind: \"directive\", type: i1.TuiDropdownOpen, selector: \"[tuiDropdown][tuiDropdownOpen],[tuiDropdown][tuiDropdownOpenChange]\", inputs: [\"tuiDropdownEnabled\", \"tuiDropdownOpen\"], outputs: [\"tuiDropdownOpenChange\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\n__decorate([\n    tuiPure\n], TuiInputPhoneComponent.prototype, \"calculateMask\", null);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiInputPhoneComponent, decorators: [{\n            type: Component,\n            args: [{ standalone: false, selector: 'tui-input-phone', changeDetection: ChangeDetectionStrategy.OnPush, providers: [\n                        tuiAsFocusableItemAccessor(TuiInputPhoneComponent),\n                        tuiAsControl(TuiInputPhoneComponent),\n                        tuiAsDataListHost(TuiInputPhoneComponent),\n                    ], hostDirectives: [TuiDropdownFixed], host: {\n                        '[attr.data-size]': 'size',\n                    }, template: \"<div\\n    tuiDropdownOpenMonitor\\n    class=\\\"t-hosted\\\"\\n    [tuiDropdown]=\\\"datalist || ''\\\"\\n    [tuiDropdownEnabled]=\\\"canOpen\\\"\\n    [(tuiDropdownOpen)]=\\\"open\\\"\\n    (tuiActiveZoneChange)=\\\"onActiveZone($event)\\\"\\n>\\n    <tui-primitive-textfield\\n        tuiValueAccessor\\n        class=\\\"t-textfield\\\"\\n        [disabled]=\\\"computedDisabled\\\"\\n        [focusable]=\\\"focusable\\\"\\n        [invalid]=\\\"computedInvalid\\\"\\n        [maskito]=\\\"maskOptions\\\"\\n        [nativeId]=\\\"nativeId\\\"\\n        [pseudoFocus]=\\\"computedFocused\\\"\\n        [pseudoHover]=\\\"pseudoHover\\\"\\n        [readOnly]=\\\"readOnly\\\"\\n        [tuiTextfieldCleaner]=\\\"canClean\\\"\\n        [(value)]=\\\"nativeValue\\\"\\n        (valueChange)=\\\"onValueChange($event)\\\"\\n    >\\n        <ng-content />\\n        <ng-content\\n            ngProjectAs=\\\"input\\\"\\n            select=\\\"input\\\"\\n        />\\n    </tui-primitive-textfield>\\n</div>\\n\", styles: [\":host{display:block;border-radius:var(--tui-radius-m);text-align:start}:host._disabled,:host :host-context(*:disabled){pointer-events:none}.t-hosted{display:block;border-radius:inherit}.t-textfield{border-radius:inherit;text-align:inherit}\\n\"] }]\n        }], propDecorators: { dropdown: [{\n                type: ViewChild,\n                args: [TuiDropdownOpen]\n            }], textfield: [{\n                type: ViewChild,\n                args: [TuiPrimitiveTextfieldComponent]\n            }], datalist: [{\n                type: ContentChild,\n                args: [TuiDataListDirective, { read: TemplateRef }]\n            }], phoneMaskAfterCountryCode: [{\n                type: Input\n            }], allowText: [{\n                type: Input\n            }], search: [{\n                type: Input\n            }], searchChange: [{\n                type: Output\n            }], countryCodeSetter: [{\n                type: Input,\n                args: ['countryCode']\n            }], calculateMask: [] } });\n\nclass TuiInputPhoneDirective extends AbstractTuiTextfieldHost {\n    get value() {\n        return this.host.nativeValue;\n    }\n    onValueChange(value) {\n        this.host.onValueChange(value);\n    }\n    process(input) {\n        this.input = input;\n    }\n    ngDoCheck() {\n        if (!this.input) {\n            return;\n        }\n        this.input.type = 'tel';\n        this.input.inputMode = this.host.inputMode;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiInputPhoneDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiInputPhoneDirective, selector: \"tui-input-phone\", providers: [tuiAsTextfieldHost(TuiInputPhoneDirective)], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiInputPhoneDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    standalone: false,\n                    selector: 'tui-input-phone',\n                    providers: [tuiAsTextfieldHost(TuiInputPhoneDirective)],\n                }]\n        }] });\n\nclass TuiInputPhoneModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiInputPhoneModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiInputPhoneModule, declarations: [TuiInputPhoneComponent, TuiInputPhoneDirective], imports: [MaskitoDirective,\n            TuiPrimitiveTextfieldModule,\n            TuiTextfieldControllerModule,\n            TuiValueAccessorModule,\n            TuiLegacyDropdownOpenMonitorDirective, i1.TuiDropdownOptionsDirective, i1.TuiDropdownDriverDirective, i1.TuiDropdownDirective, i1.TuiDropdownComponent, i1.TuiDropdownOpen, i1.TuiDropdownOpenLegacy, i1.TuiDropdownPortal, i1.TuiDropdownManual, i1.TuiDropdownHover, i1.TuiDropdownContext, i1.TuiDropdownPosition, i1.TuiDropdownPositionSided, i1.TuiDropdownSelection], exports: [TuiInputPhoneComponent,\n            TuiInputPhoneDirective,\n            TuiTextfieldComponent, i1.TuiDropdownOptionsDirective, i1.TuiDropdownDriverDirective, i1.TuiDropdownDirective, i1.TuiDropdownComponent, i1.TuiDropdownOpen, i1.TuiDropdownOpenLegacy, i1.TuiDropdownPortal, i1.TuiDropdownManual, i1.TuiDropdownHover, i1.TuiDropdownContext, i1.TuiDropdownPosition, i1.TuiDropdownPositionSided, i1.TuiDropdownSelection] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiInputPhoneModule, imports: [TuiPrimitiveTextfieldModule,\n            TuiTextfieldControllerModule,\n            TuiValueAccessorModule, i1.TuiDropdownComponent] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiInputPhoneModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        MaskitoDirective,\n                        TuiPrimitiveTextfieldModule,\n                        TuiTextfieldControllerModule,\n                        TuiValueAccessorModule,\n                        TuiLegacyDropdownOpenMonitorDirective,\n                        ...TuiDropdown,\n                    ],\n                    declarations: [TuiInputPhoneComponent, TuiInputPhoneDirective],\n                    exports: [\n                        TuiInputPhoneComponent,\n                        TuiInputPhoneDirective,\n                        TuiTextfieldComponent,\n                        ...TuiDropdown,\n                    ],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TUI_INPUT_PHONE_DEFAULT_OPTIONS, TUI_INPUT_PHONE_OPTIONS, TuiInputPhoneComponent, TuiInputPhoneDirective, TuiInputPhoneModule, tuiInputPhoneOptionsProvider };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}