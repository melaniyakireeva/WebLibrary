{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./filter-modal.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./filter-modal.component.scss?ngResource\";\nimport { ChangeDetectorRef, Component, inject } from '@angular/core';\nimport { injectContext } from '@taiga-ui/polymorpheus';\nimport { TuiButton, TuiIcon } from '@taiga-ui/core';\nimport { AndFilter, NumberFilterOperation, OrFilters, StringFilterOperation } from '../../services/filters/filterOperations';\nimport { TuiTree } from '@taiga-ui/kit';\nimport { FilterConverter } from '../../services/filters/filter-converter';\nimport { EMPTY_ARRAY } from '@taiga-ui/cdk';\nimport { CommonModule, NgClass, NgIf } from '@angular/common';\nimport { FilterEditorComponent } from '../filter-editor/filter-editor.component';\nimport _ from 'lodash';\nlet FilterModalComponent = class FilterModalComponent {\n  data = undefined;\n  focusElement = undefined;\n  cdRef;\n  constructor() {\n    this.cdRef = inject(ChangeDetectorRef);\n  }\n  ngOnInit() {\n    this.refreshData();\n  }\n  onAddAndFilter() {\n    if (!_.isNil(this.focusElement?.children)) {\n      if (this.focusElement.value.$type === 'AndFilter') {\n        const filter = this.focusElement.value;\n        filter.filters.push(new AndFilter());\n        this.refreshData();\n      } else if (this.focusElement.value.$type === 'OrFilter') {\n        const filter = this.focusElement.value;\n        filter.filters.push(new AndFilter());\n        this.refreshData();\n      }\n    }\n  }\n  onDeleteFilter(val) {\n    if (!_.isNil(val?.parent?.value)) {\n      const filters = val.parent.value['filters'];\n      _.pull(filters, val.value);\n      this.refreshData();\n    }\n  }\n  onAddOrFilter() {\n    if (!_.isNil(this.focusElement?.children)) {\n      if (this.focusElement.value.$type === 'AndFilter') {\n        const filter = this.focusElement.value;\n        filter.filters.push(new OrFilters());\n        this.refreshData();\n      } else if (this.focusElement.value.$type === 'OrFilter') {\n        const filter = this.focusElement.value;\n        filter.filters.push(new OrFilters());\n        this.refreshData();\n      }\n    }\n  }\n  onAddStringFilter() {\n    if (!_.isNil(this.focusElement?.children)) {\n      if (this.focusElement.value.$type === 'AndFilter') {\n        const filter = this.focusElement.value;\n        filter.filters.push(new StringFilterOperation());\n        this.refreshData();\n      } else if (this.focusElement.value.$type === 'OrFilter') {\n        const filter = this.focusElement.value;\n        filter.filters.push(new StringFilterOperation());\n        this.refreshData();\n      }\n    }\n  }\n  onAddNumberFilter() {\n    if (!_.isNil(this.focusElement?.children)) {\n      if (this.focusElement.value.$type === 'AndFilter') {\n        const filter = this.focusElement.value;\n        filter.filters.push(new NumberFilterOperation());\n        this.refreshData();\n      } else if (this.focusElement.value.$type === 'OrFilter') {\n        const filter = this.focusElement.value;\n        filter.filters.push(new NumberFilterOperation());\n        this.refreshData();\n      }\n    }\n  }\n  refreshData() {\n    this.data = FilterConverter.convertToTree(this.context.data.initFilter);\n  }\n  onFocusTreeElement(elem) {\n    if (this.focusElement === elem) {\n      this.focusElement = undefined;\n    } else {\n      this.focusElement = elem;\n    }\n    this.cdRef.markForCheck();\n  }\n  context = injectContext();\n  handler = item => item.children || EMPTY_ARRAY;\n  submit() {\n    this.context.completeWith(this.context.data.initFilter);\n  }\n  static ctorParameters = () => [];\n};\nFilterModalComponent = __decorate([Component({\n  selector: 'app-filter-modal',\n  standalone: true,\n  imports: [TuiTree, TuiButton, TuiIcon, NgClass, FilterEditorComponent, NgIf, CommonModule],\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], FilterModalComponent);\nexport { FilterModalComponent };","map":{"version":3,"names":["ChangeDetectorRef","Component","inject","injectContext","TuiButton","TuiIcon","AndFilter","NumberFilterOperation","OrFilters","StringFilterOperation","TuiTree","FilterConverter","EMPTY_ARRAY","CommonModule","NgClass","NgIf","FilterEditorComponent","_","FilterModalComponent","data","undefined","focusElement","cdRef","constructor","ngOnInit","refreshData","onAddAndFilter","isNil","children","value","$type","filter","filters","push","onDeleteFilter","val","parent","pull","onAddOrFilter","onAddStringFilter","onAddNumberFilter","convertToTree","context","initFilter","onFocusTreeElement","elem","markForCheck","handler","item","submit","completeWith","__decorate","selector","standalone","imports","template","__NG_CLI_RESOURCE__0"],"sources":["C:\\Users\\Asus-PC\\Downloads\\WebLibraryNew\\WebLibrary\\WebLibraryApp\\Frontend\\src\\app\\components\\filter-modal\\filter-modal.component.ts"],"sourcesContent":["import { ChangeDetectorRef, Component, inject, OnInit } from '@angular/core';\r\nimport { injectContext } from '@taiga-ui/polymorpheus';\r\nimport { TuiButton, TuiIcon, type TuiDialogContext } from '@taiga-ui/core';\r\nimport { Observable } from 'rxjs';\r\nimport { AndFilter, IFilter, NumberFilterOperation, OrFilters, StringFilterOperation } from '../../services/filters/filterOperations';\r\nimport { TuiTree } from '@taiga-ui/kit';\r\nimport { FilterConverter, TreeNode } from '../../services/filters/filter-converter';\r\nimport { EMPTY_ARRAY, TuiHandler } from '@taiga-ui/cdk';\r\nimport { CommonModule, NgClass, NgIf, NgStyle } from '@angular/common';\r\nimport { FilterEditorComponent } from '../filter-editor/filter-editor.component';\r\nimport _ from 'lodash';\r\n\r\n@Component({\r\n  selector: 'app-filter-modal',\r\n  standalone: true,\r\n  imports: [\r\n    TuiTree,\r\n    TuiButton,\r\n    TuiIcon,\r\n    NgClass,\r\n    FilterEditorComponent,\r\n    NgIf,\r\n    CommonModule,\r\n  ],\r\n  templateUrl: './filter-modal.component.html',\r\n  styleUrl: './filter-modal.component.scss',\r\n})\r\nexport class FilterModalComponent implements OnInit {\r\n  data: TreeNode | undefined | null = undefined;\r\n  focusElement: TreeNode | undefined | null = undefined;\r\n  private cdRef: ChangeDetectorRef;\r\n\r\n  constructor() {\r\n    this.cdRef = inject(ChangeDetectorRef);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.refreshData();\r\n  }\r\n\r\n  onAddAndFilter() {\r\n    if (!_.isNil(this.focusElement?.children)) {\r\n      if (this.focusElement.value.$type === 'AndFilter') {\r\n        const filter: AndFilter = this.focusElement.value as AndFilter;\r\n        filter.filters.push(new AndFilter());\r\n        this.refreshData();\r\n      } else if (this.focusElement.value.$type === 'OrFilter') {\r\n        const filter: OrFilters = this.focusElement.value as OrFilters;\r\n        filter.filters.push(new AndFilter());\r\n        this.refreshData();\r\n      }\r\n    }\r\n  }\r\n\r\n  onDeleteFilter(val: TreeNode) {\r\n    if (!_.isNil(val?.parent?.value)) {\r\n      const filters = (val.parent.value as any)['filters'];\r\n      _.pull(filters, val.value);\r\n      this.refreshData();\r\n    }\r\n  }\r\n\r\n  onAddOrFilter() {\r\n    if (!_.isNil(this.focusElement?.children)) {\r\n      if (this.focusElement.value.$type === 'AndFilter') {\r\n        const filter: AndFilter = this.focusElement.value as AndFilter;\r\n        filter.filters.push(new OrFilters());\r\n        this.refreshData();\r\n      } else if (this.focusElement.value.$type === 'OrFilter') {\r\n        const filter: OrFilters = this.focusElement.value as OrFilters;\r\n        filter.filters.push(new OrFilters());\r\n        this.refreshData();\r\n      }\r\n    }\r\n  }\r\n\r\n  onAddStringFilter() {\r\n    if (!_.isNil(this.focusElement?.children)) {\r\n      if (this.focusElement.value.$type === 'AndFilter') {\r\n        const filter: AndFilter = this.focusElement.value as AndFilter;\r\n        filter.filters.push(new StringFilterOperation());\r\n        this.refreshData();\r\n      } else if (this.focusElement.value.$type === 'OrFilter') {\r\n        const filter: OrFilters = this.focusElement.value as OrFilters;\r\n        filter.filters.push(new StringFilterOperation());\r\n        this.refreshData();\r\n      }\r\n    }\r\n  }\r\n\r\n  onAddNumberFilter() {\r\n    if (!_.isNil(this.focusElement?.children)) {\r\n      if (this.focusElement.value.$type === 'AndFilter') {\r\n        const filter: AndFilter = this.focusElement.value as AndFilter;\r\n        filter.filters.push(new NumberFilterOperation());\r\n        this.refreshData();\r\n      } else if (this.focusElement.value.$type === 'OrFilter') {\r\n        const filter: OrFilters = this.focusElement.value as OrFilters;\r\n        filter.filters.push(new NumberFilterOperation());\r\n        this.refreshData();\r\n      }\r\n    }\r\n  }\r\n\r\n  refreshData() {\r\n    this.data = FilterConverter.convertToTree(this.context.data.initFilter);\r\n  }\r\n\r\n  onFocusTreeElement(elem: TreeNode) {\r\n    if (this.focusElement === elem) {\r\n      this.focusElement = undefined;\r\n    } else {\r\n      this.focusElement = elem;\r\n    }\r\n    this.cdRef.markForCheck();\r\n  }\r\n\r\n  public readonly context =\r\n    injectContext<\r\n      TuiDialogContext<IFilter, { columns: string[]; initFilter: IFilter }>\r\n    >();\r\n\r\n  protected readonly handler: TuiHandler<TreeNode, readonly TreeNode[]> = (\r\n    item\r\n  ) => item.children || EMPTY_ARRAY;\r\n\r\n  protected submit(): void {\r\n    this.context.completeWith(this.context.data.initFilter);\r\n  }\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}