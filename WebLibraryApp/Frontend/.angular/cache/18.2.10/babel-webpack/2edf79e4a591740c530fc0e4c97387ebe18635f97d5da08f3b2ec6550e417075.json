{"ast":null,"code":"var __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Mime_extensionToType, _Mime_typeToExtension, _Mime_typeToExtensions;\nclass Mime {\n  constructor(...args) {\n    _Mime_extensionToType.set(this, new Map());\n    _Mime_typeToExtension.set(this, new Map());\n    _Mime_typeToExtensions.set(this, new Map());\n    for (const arg of args) {\n      this.define(arg);\n    }\n  }\n  define(typeMap, force = false) {\n    for (let [type, extensions] of Object.entries(typeMap)) {\n      type = type.toLowerCase();\n      extensions = extensions.map(ext => ext.toLowerCase());\n      if (!__classPrivateFieldGet(this, _Mime_typeToExtensions, \"f\").has(type)) {\n        __classPrivateFieldGet(this, _Mime_typeToExtensions, \"f\").set(type, new Set());\n      }\n      const allExtensions = __classPrivateFieldGet(this, _Mime_typeToExtensions, \"f\").get(type);\n      let first = true;\n      for (let extension of extensions) {\n        const starred = extension.startsWith('*');\n        extension = starred ? extension.slice(1) : extension;\n        allExtensions?.add(extension);\n        if (first) {\n          __classPrivateFieldGet(this, _Mime_typeToExtension, \"f\").set(type, extension);\n        }\n        first = false;\n        if (starred) continue;\n        const currentType = __classPrivateFieldGet(this, _Mime_extensionToType, \"f\").get(extension);\n        if (currentType && currentType != type && !force) {\n          throw new Error(`\"${type} -> ${extension}\" conflicts with \"${currentType} -> ${extension}\". Pass \\`force=true\\` to override this definition.`);\n        }\n        __classPrivateFieldGet(this, _Mime_extensionToType, \"f\").set(extension, type);\n      }\n    }\n    return this;\n  }\n  getType(path) {\n    if (typeof path !== 'string') return null;\n    const last = path.replace(/^.*[/\\\\]/, '').toLowerCase();\n    const ext = last.replace(/^.*\\./, '').toLowerCase();\n    const hasPath = last.length < path.length;\n    const hasDot = ext.length < last.length - 1;\n    if (!hasDot && hasPath) return null;\n    return __classPrivateFieldGet(this, _Mime_extensionToType, \"f\").get(ext) ?? null;\n  }\n  getExtension(type) {\n    if (typeof type !== 'string') return null;\n    type = type?.split?.(';')[0];\n    return (type && __classPrivateFieldGet(this, _Mime_typeToExtension, \"f\").get(type.trim().toLowerCase())) ?? null;\n  }\n  getAllExtensions(type) {\n    if (typeof type !== 'string') return null;\n    return __classPrivateFieldGet(this, _Mime_typeToExtensions, \"f\").get(type.toLowerCase()) ?? null;\n  }\n  _freeze() {\n    this.define = () => {\n      throw new Error('define() not allowed for built-in Mime objects. See https://github.com/broofa/mime/blob/main/README.md#custom-mime-instances');\n    };\n    Object.freeze(this);\n    for (const extensions of __classPrivateFieldGet(this, _Mime_typeToExtensions, \"f\").values()) {\n      Object.freeze(extensions);\n    }\n    return this;\n  }\n  _getTestState() {\n    return {\n      types: __classPrivateFieldGet(this, _Mime_extensionToType, \"f\"),\n      extensions: __classPrivateFieldGet(this, _Mime_typeToExtension, \"f\")\n    };\n  }\n}\n_Mime_extensionToType = new WeakMap(), _Mime_typeToExtension = new WeakMap(), _Mime_typeToExtensions = new WeakMap();\nexport default Mime;","map":{"version":3,"names":["__classPrivateFieldGet","receiver","state","kind","f","TypeError","has","call","value","get","_Mime_extensionToType","_Mime_typeToExtension","_Mime_typeToExtensions","Mime","constructor","args","set","Map","arg","define","typeMap","force","type","extensions","Object","entries","toLowerCase","map","ext","Set","allExtensions","first","extension","starred","startsWith","slice","add","currentType","Error","getType","path","last","replace","hasPath","length","hasDot","getExtension","split","trim","getAllExtensions","_freeze","freeze","values","_getTestState","types","WeakMap"],"sources":["C:/Users/Asus-PC/Downloads/WebLibraryNew/WebLibrary/WebLibraryApp/Frontend/node_modules/mime/dist/src/Mime.js"],"sourcesContent":["var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Mime_extensionToType, _Mime_typeToExtension, _Mime_typeToExtensions;\nclass Mime {\n    constructor(...args) {\n        _Mime_extensionToType.set(this, new Map());\n        _Mime_typeToExtension.set(this, new Map());\n        _Mime_typeToExtensions.set(this, new Map());\n        for (const arg of args) {\n            this.define(arg);\n        }\n    }\n    define(typeMap, force = false) {\n        for (let [type, extensions] of Object.entries(typeMap)) {\n            type = type.toLowerCase();\n            extensions = extensions.map((ext) => ext.toLowerCase());\n            if (!__classPrivateFieldGet(this, _Mime_typeToExtensions, \"f\").has(type)) {\n                __classPrivateFieldGet(this, _Mime_typeToExtensions, \"f\").set(type, new Set());\n            }\n            const allExtensions = __classPrivateFieldGet(this, _Mime_typeToExtensions, \"f\").get(type);\n            let first = true;\n            for (let extension of extensions) {\n                const starred = extension.startsWith('*');\n                extension = starred ? extension.slice(1) : extension;\n                allExtensions?.add(extension);\n                if (first) {\n                    __classPrivateFieldGet(this, _Mime_typeToExtension, \"f\").set(type, extension);\n                }\n                first = false;\n                if (starred)\n                    continue;\n                const currentType = __classPrivateFieldGet(this, _Mime_extensionToType, \"f\").get(extension);\n                if (currentType && currentType != type && !force) {\n                    throw new Error(`\"${type} -> ${extension}\" conflicts with \"${currentType} -> ${extension}\". Pass \\`force=true\\` to override this definition.`);\n                }\n                __classPrivateFieldGet(this, _Mime_extensionToType, \"f\").set(extension, type);\n            }\n        }\n        return this;\n    }\n    getType(path) {\n        if (typeof path !== 'string')\n            return null;\n        const last = path.replace(/^.*[/\\\\]/, '').toLowerCase();\n        const ext = last.replace(/^.*\\./, '').toLowerCase();\n        const hasPath = last.length < path.length;\n        const hasDot = ext.length < last.length - 1;\n        if (!hasDot && hasPath)\n            return null;\n        return __classPrivateFieldGet(this, _Mime_extensionToType, \"f\").get(ext) ?? null;\n    }\n    getExtension(type) {\n        if (typeof type !== 'string')\n            return null;\n        type = type?.split?.(';')[0];\n        return ((type && __classPrivateFieldGet(this, _Mime_typeToExtension, \"f\").get(type.trim().toLowerCase())) ?? null);\n    }\n    getAllExtensions(type) {\n        if (typeof type !== 'string')\n            return null;\n        return __classPrivateFieldGet(this, _Mime_typeToExtensions, \"f\").get(type.toLowerCase()) ?? null;\n    }\n    _freeze() {\n        this.define = () => {\n            throw new Error('define() not allowed for built-in Mime objects. See https://github.com/broofa/mime/blob/main/README.md#custom-mime-instances');\n        };\n        Object.freeze(this);\n        for (const extensions of __classPrivateFieldGet(this, _Mime_typeToExtensions, \"f\").values()) {\n            Object.freeze(extensions);\n        }\n        return this;\n    }\n    _getTestState() {\n        return {\n            types: __classPrivateFieldGet(this, _Mime_extensionToType, \"f\"),\n            extensions: __classPrivateFieldGet(this, _Mime_typeToExtension, \"f\"),\n        };\n    }\n}\n_Mime_extensionToType = new WeakMap(), _Mime_typeToExtension = new WeakMap(), _Mime_typeToExtensions = new WeakMap();\nexport default Mime;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}