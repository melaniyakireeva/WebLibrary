{"ast":null,"code":"import { CHAR_PLUS, TUI_VERSION } from '@taiga-ui/cdk/constants';\nimport { isApple } from '@ng-web-apis/platform';\nimport { tuiDropdownOptionsProvider } from '@taiga-ui/core/directives/dropdown';\n\n/**\n * @deprecated: drop in v5.0\n */\nfunction tuiCapitalizeFirstLetter(value) {\n  return `${value.charAt(0).toUpperCase()}${value.slice(1)}`;\n}\n\n/**\n * @deprecated: drop in v5.0\n */\nconst TUI_DATE_MODE_MASKITO_ADAPTER = {\n  DMY: 'dd/mm/yyyy',\n  MDY: 'mm/dd/yyyy',\n  YMD: 'yyyy/mm/dd'\n};\n\n/**\n * @deprecated: drop in v5.0\n * Use {@link https://maskito.dev/core-concepts/transformer maskitoTransform} instead!\n * @example\n * import {maskitoTransform} from '@maskito/core';\n *\n * const mask = {\n *     mask: ['+', '1', ' ', /\\d/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/],\n * };\n * maskitoTransform('12125552368', mask); // +1 (212) 555-2368\n * ___\n * @example\n * import {maskitoTransform} from '@maskito/core';\n * import {maskitoPhoneOptionsGenerator} from '@maskito/phone';\n * import metadata from 'libphonenumber-js/min/metadata';\n *\n * const options = maskitoPhoneOptionsGenerator({countryIsoCode: 'US', metadata});\n *\n * maskitoTransform('12125552368', mask); // +1 (212) 555-2368\n * ___\n * @deprecated Use {@link https://maskito.dev/core-concepts/transformer maskitoTransform} instead<br/>\n * Formats a string with the phone format +7XXXXXXXXXXXX or XXXXXXXXXXXX,\n * adding parentheses and hyphens.\n *\n * @param value the input string\n * @param countryCode a country code\n * @param phoneMask a phone number mask\n * @return the formatted phone string of the form +7 XXX XXX-XX-XX\n */\nfunction tuiFormatPhone(value, countryCode, phoneMask) {\n  if (!value) {\n    return '';\n  }\n  let result = countryCode;\n  countryCode = countryCode.replaceAll(/[()]/g, '');\n  if (!value.startsWith(countryCode)) {\n    value = countryCode + value.replace(CHAR_PLUS, '');\n  }\n  const splitPhoneMask = phoneMask.split('');\n  const splitValue = value.slice(countryCode.length).split('');\n  result += ' ';\n  if (splitValue.length === 0) {\n    return result;\n  }\n  for (const mask of splitPhoneMask) {\n    if (splitValue.length === 0) {\n      break;\n    }\n    if (mask === '#') {\n      result += splitValue[0] || '';\n      splitValue.splice(0, 1);\n    } else {\n      result += mask;\n    }\n  }\n  return result;\n}\nconst ITEM_SIZE = 1.5;\nconst CONTENT_SIZE = 2.5;\n/**\n * @deprecated: drop in v5.0\n */\nfunction tuiGetBorder(hasIcon, hasCleaner = false, hasTooltip = false, hasContent = false, size = 'm') {\n  const offset = size === 's' ? 0 : 0.25;\n  let border = 0;\n  if (hasIcon) {\n    border += ITEM_SIZE + offset;\n  }\n  if (hasCleaner) {\n    border += ITEM_SIZE + offset;\n  }\n  if (hasTooltip) {\n    border += ITEM_SIZE + offset;\n  }\n  if (hasContent) {\n    border += CONTENT_SIZE + offset;\n  }\n  return border;\n}\n\n/**\n * @deprecated: drop in v5.0\n * use `validatePhoneNumberLength` from `libphonenumber-js` instead\n * ```\n * npm i libphonenumber-js\n * ```\n *\n * ```ts\n * import {validatePhoneNumberLength} from 'libphonenumber-js';\n * import metadata from 'libphonenumber-js/max/metadata';\n *\n * const validationError = validatePhoneNumberLength(\n *      '+7 777 777-7777',\n *      'KZ'\n * ) // undefined | 'INVALID_COUNTRY' | 'NOT_A_NUMBER' | 'TOO_SHORT' | 'TOO_LONG' | 'INVALID_LENGTH';\n *\n * validatePhoneNumberLength('+7777777', 'KZ'); // 'TOO_SHORT'\n * validatePhoneNumberLength('+7 777 777-7777', 'KZ'); // undefined\n * validatePhoneNumberLength('+77777777777', 'KZ'); // undefined\n * validatePhoneNumberLength('+777777777777777777', 'KZ'); // 'TOO_LONG'\n * ```\n */\nfunction tuiGetMaxAllowedPhoneLength(countries, isoCode) {\n  return countries[isoCode].replaceAll(/[()\\- ]/g, '').length;\n}\n\n/**\n * @deprecated: drop in v5.0\n * Calculates size of safe area on mobile devices (status bars)\n *\n * ATTENTION: Only use in browser environment\n */\nfunction tuiGetSafeAreaSize() {\n  if (!CSS.supports('padding-top: env(safe-area-inset-top)')) {\n    return 0;\n  }\n  const div = document.createElement('div');\n  div.style.paddingTop = 'env(safe-area-inset-top)';\n  document.body.appendChild(div);\n  const safeAreaSize = parseInt(window.getComputedStyle(div).paddingTop, 10) || 0;\n  document.body.removeChild(div);\n  return safeAreaSize;\n}\n\n/**\n * @deprecated: drop in v5.0\n */\nconst TUI_CACHE_BUSTING_PAYLOAD = `?v=${TUI_VERSION}`;\n/**\n * @deprecated: drop in v5.0\n */\nconst DEFAULT_ICONS_PATH = name => name.includes('.svg#') ? name : `#${name}`;\n/**\n * @deprecated: drop in v5.0\n */\nfunction tuiIconsPathFactory(staticPath) {\n  const base = staticPath.endsWith('/') ? staticPath : `${staticPath}/`;\n  return name => {\n    if (name.startsWith('tuiIcon')) {\n      return `${base}${name}.svg${TUI_CACHE_BUSTING_PAYLOAD}#${name}`;\n    }\n    return DEFAULT_ICONS_PATH(name);\n  };\n}\n\n/**\n * @deprecated: drop in v5.0\n */\nconst tuiIsApple = isApple;\n\n/**\n * @deprecated: drop in v5.0\n */\nfunction tuiIsPresumedHTMLString(candidate) {\n  const trimmed = candidate.trim();\n  return trimmed.startsWith('<') && trimmed.endsWith('>');\n}\nconst MASK_AFTER_CODE_REGEXP = /\\(#+\\)|[#\\- ]/g;\n/**\n * @deprecated: drop in v5.0\n * Use `getCountryCallingCode` from `libphonenumber-js/core` instead\n * ```ts\n * import {getCountryCallingCode} from 'libphonenumber-js/core';\n * import metadata from 'libphonenumber-js/max/metadata';\n *\n * getCountryCallingCode('US', metadata) // 1\n * getCountryCallingCode('GB', metadata) // 44\n * ```\n */\nfunction tuiIsoToCountryCode(countriesMasks, isoCode) {\n  return countriesMasks[isoCode].replaceAll(MASK_AFTER_CODE_REGEXP, '');\n}\n\n/**\n * @deprecated: drop in v5.0\n * use `maskitoGetCountryFromNumber` from `@maskito/phone` instead\n * ```\n * npm i @maskito/phone\n * ```\n *\n * ```ts\n * import {maskitoGetCountryFromNumber} from '@maskito/phone';\n * import metadata from 'libphonenumber-js/max/metadata';\n *\n * const countryIsoCode = maskitoGetCountryFromNumber(\n *      '+7 777 777-7777',\n *      metadata\n * );\n *\n * countryIsoCode !== 'KZ'\n * ```\n */\nfunction tuiNotKzRegion(value) {\n  const region = Number(value.slice(1, 4));\n  return region < 600 || region > 799;\n}\nconst WIDTH_SEARCH = 'width=\"';\nconst HEIGHT_SEARCH = 'height=\"';\nconst START = '<svg';\n/**\n * @deprecated: drop in v5.0\n */\nfunction tuiProcessIcon(source, name) {\n  if (source.includes(`id=\"${name}\"`)) {\n    return source;\n  }\n  const src = source.slice(Math.max(0, source.indexOf(START)));\n  const attributes = src.slice(0, Math.max(0, src.indexOf('>')));\n  if (!attributes?.includes(WIDTH_SEARCH) || !attributes.includes(HEIGHT_SEARCH)) {\n    return `${src.replace(START, `<svg xmlns=\"http://www.w3.org/2000/svg\"><g id=\"${name}\" xmlns=\"http://www.w3.org/2000/svg\"><svg`)}</g></svg>`;\n  }\n  const indexOfWidth = attributes.indexOf(WIDTH_SEARCH);\n  const indexOfHeight = attributes.indexOf(HEIGHT_SEARCH);\n  const widthOffset = indexOfWidth + WIDTH_SEARCH.length;\n  const heightOffset = indexOfHeight + HEIGHT_SEARCH.length;\n  const widthString = attributes.slice(widthOffset, attributes.indexOf('\"', widthOffset));\n  const heightString = attributes.slice(heightOffset, attributes.indexOf('\"', heightOffset));\n  if (!heightString || !widthString || widthString.includes('%') || heightString.includes('%') || widthString.includes('em') || heightString.includes('em')) {\n    return src.replace(START, `<svg id=\"${name}\"`);\n  }\n  const width = parseInt(widthString, 10);\n  const height = parseInt(heightString, 10);\n  return `<g id=\"${name}\" xmlns=\"http://www.w3.org/2000/svg\"><svg  x=\"50%\" y=\"50%\" width=\"${width / 16}em\" height=\"${height / 16}em\" overflow=\"visible\" viewBox=\"0 0 ${width} ${height}\"><svg x=\"${-width / 2}\" y=\"${-height / 2}\">${src}</svg></svg></g>`;\n}\n\n/**\n * @deprecated: drop in v5.0\n */\nconst FIXED_DROPDOWN_CONTROLLER_PROVIDER = tuiDropdownOptionsProvider({\n  limitWidth: 'fixed',\n  align: 'right'\n});\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DEFAULT_ICONS_PATH, FIXED_DROPDOWN_CONTROLLER_PROVIDER, TUI_CACHE_BUSTING_PAYLOAD, TUI_DATE_MODE_MASKITO_ADAPTER, tuiCapitalizeFirstLetter, tuiFormatPhone, tuiGetBorder, tuiGetMaxAllowedPhoneLength, tuiGetSafeAreaSize, tuiIconsPathFactory, tuiIsApple, tuiIsPresumedHTMLString, tuiIsoToCountryCode, tuiNotKzRegion, tuiProcessIcon };","map":{"version":3,"names":["CHAR_PLUS","TUI_VERSION","isApple","tuiDropdownOptionsProvider","tuiCapitalizeFirstLetter","value","charAt","toUpperCase","slice","TUI_DATE_MODE_MASKITO_ADAPTER","DMY","MDY","YMD","tuiFormatPhone","countryCode","phoneMask","result","replaceAll","startsWith","replace","splitPhoneMask","split","splitValue","length","mask","splice","ITEM_SIZE","CONTENT_SIZE","tuiGetBorder","hasIcon","hasCleaner","hasTooltip","hasContent","size","offset","border","tuiGetMaxAllowedPhoneLength","countries","isoCode","tuiGetSafeAreaSize","CSS","supports","div","document","createElement","style","paddingTop","body","appendChild","safeAreaSize","parseInt","window","getComputedStyle","removeChild","TUI_CACHE_BUSTING_PAYLOAD","DEFAULT_ICONS_PATH","name","includes","tuiIconsPathFactory","staticPath","base","endsWith","tuiIsApple","tuiIsPresumedHTMLString","candidate","trimmed","trim","MASK_AFTER_CODE_REGEXP","tuiIsoToCountryCode","countriesMasks","tuiNotKzRegion","region","Number","WIDTH_SEARCH","HEIGHT_SEARCH","START","tuiProcessIcon","source","src","Math","max","indexOf","attributes","indexOfWidth","indexOfHeight","widthOffset","heightOffset","widthString","heightString","width","height","FIXED_DROPDOWN_CONTROLLER_PROVIDER","limitWidth","align"],"sources":["C:/Users/Asus-PC/Downloads/WebLibraryNew/WebLibrary/WebLibraryApp/Frontend/node_modules/@taiga-ui/legacy/fesm2022/taiga-ui-legacy-utils.mjs"],"sourcesContent":["import { CHAR_PLUS, TUI_VERSION } from '@taiga-ui/cdk/constants';\nimport { isApple } from '@ng-web-apis/platform';\nimport { tuiDropdownOptionsProvider } from '@taiga-ui/core/directives/dropdown';\n\n/**\n * @deprecated: drop in v5.0\n */\nfunction tuiCapitalizeFirstLetter(value) {\n    return `${value.charAt(0).toUpperCase()}${value.slice(1)}`;\n}\n\n/**\n * @deprecated: drop in v5.0\n */\nconst TUI_DATE_MODE_MASKITO_ADAPTER = {\n    DMY: 'dd/mm/yyyy',\n    MDY: 'mm/dd/yyyy',\n    YMD: 'yyyy/mm/dd',\n};\n\n/**\n * @deprecated: drop in v5.0\n * Use {@link https://maskito.dev/core-concepts/transformer maskitoTransform} instead!\n * @example\n * import {maskitoTransform} from '@maskito/core';\n *\n * const mask = {\n *     mask: ['+', '1', ' ', /\\d/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/],\n * };\n * maskitoTransform('12125552368', mask); // +1 (212) 555-2368\n * ___\n * @example\n * import {maskitoTransform} from '@maskito/core';\n * import {maskitoPhoneOptionsGenerator} from '@maskito/phone';\n * import metadata from 'libphonenumber-js/min/metadata';\n *\n * const options = maskitoPhoneOptionsGenerator({countryIsoCode: 'US', metadata});\n *\n * maskitoTransform('12125552368', mask); // +1 (212) 555-2368\n * ___\n * @deprecated Use {@link https://maskito.dev/core-concepts/transformer maskitoTransform} instead<br/>\n * Formats a string with the phone format +7XXXXXXXXXXXX or XXXXXXXXXXXX,\n * adding parentheses and hyphens.\n *\n * @param value the input string\n * @param countryCode a country code\n * @param phoneMask a phone number mask\n * @return the formatted phone string of the form +7 XXX XXX-XX-XX\n */\nfunction tuiFormatPhone(value, countryCode, phoneMask) {\n    if (!value) {\n        return '';\n    }\n    let result = countryCode;\n    countryCode = countryCode.replaceAll(/[()]/g, '');\n    if (!value.startsWith(countryCode)) {\n        value = countryCode + value.replace(CHAR_PLUS, '');\n    }\n    const splitPhoneMask = phoneMask.split('');\n    const splitValue = value.slice(countryCode.length).split('');\n    result += ' ';\n    if (splitValue.length === 0) {\n        return result;\n    }\n    for (const mask of splitPhoneMask) {\n        if (splitValue.length === 0) {\n            break;\n        }\n        if (mask === '#') {\n            result += splitValue[0] || '';\n            splitValue.splice(0, 1);\n        }\n        else {\n            result += mask;\n        }\n    }\n    return result;\n}\n\nconst ITEM_SIZE = 1.5;\nconst CONTENT_SIZE = 2.5;\n/**\n * @deprecated: drop in v5.0\n */\nfunction tuiGetBorder(hasIcon, hasCleaner = false, hasTooltip = false, hasContent = false, size = 'm') {\n    const offset = size === 's' ? 0 : 0.25;\n    let border = 0;\n    if (hasIcon) {\n        border += ITEM_SIZE + offset;\n    }\n    if (hasCleaner) {\n        border += ITEM_SIZE + offset;\n    }\n    if (hasTooltip) {\n        border += ITEM_SIZE + offset;\n    }\n    if (hasContent) {\n        border += CONTENT_SIZE + offset;\n    }\n    return border;\n}\n\n/**\n * @deprecated: drop in v5.0\n * use `validatePhoneNumberLength` from `libphonenumber-js` instead\n * ```\n * npm i libphonenumber-js\n * ```\n *\n * ```ts\n * import {validatePhoneNumberLength} from 'libphonenumber-js';\n * import metadata from 'libphonenumber-js/max/metadata';\n *\n * const validationError = validatePhoneNumberLength(\n *      '+7 777 777-7777',\n *      'KZ'\n * ) // undefined | 'INVALID_COUNTRY' | 'NOT_A_NUMBER' | 'TOO_SHORT' | 'TOO_LONG' | 'INVALID_LENGTH';\n *\n * validatePhoneNumberLength('+7777777', 'KZ'); // 'TOO_SHORT'\n * validatePhoneNumberLength('+7 777 777-7777', 'KZ'); // undefined\n * validatePhoneNumberLength('+77777777777', 'KZ'); // undefined\n * validatePhoneNumberLength('+777777777777777777', 'KZ'); // 'TOO_LONG'\n * ```\n */\nfunction tuiGetMaxAllowedPhoneLength(countries, isoCode) {\n    return countries[isoCode].replaceAll(/[()\\- ]/g, '').length;\n}\n\n/**\n * @deprecated: drop in v5.0\n * Calculates size of safe area on mobile devices (status bars)\n *\n * ATTENTION: Only use in browser environment\n */\nfunction tuiGetSafeAreaSize() {\n    if (!CSS.supports('padding-top: env(safe-area-inset-top)')) {\n        return 0;\n    }\n    const div = document.createElement('div');\n    div.style.paddingTop = 'env(safe-area-inset-top)';\n    document.body.appendChild(div);\n    const safeAreaSize = parseInt(window.getComputedStyle(div).paddingTop, 10) || 0;\n    document.body.removeChild(div);\n    return safeAreaSize;\n}\n\n/**\n * @deprecated: drop in v5.0\n */\nconst TUI_CACHE_BUSTING_PAYLOAD = `?v=${TUI_VERSION}`;\n/**\n * @deprecated: drop in v5.0\n */\nconst DEFAULT_ICONS_PATH = (name) => name.includes('.svg#') ? name : `#${name}`;\n/**\n * @deprecated: drop in v5.0\n */\nfunction tuiIconsPathFactory(staticPath) {\n    const base = staticPath.endsWith('/') ? staticPath : `${staticPath}/`;\n    return (name) => {\n        if (name.startsWith('tuiIcon')) {\n            return `${base}${name}.svg${TUI_CACHE_BUSTING_PAYLOAD}#${name}`;\n        }\n        return DEFAULT_ICONS_PATH(name);\n    };\n}\n\n/**\n * @deprecated: drop in v5.0\n */\nconst tuiIsApple = isApple;\n\n/**\n * @deprecated: drop in v5.0\n */\nfunction tuiIsPresumedHTMLString(candidate) {\n    const trimmed = candidate.trim();\n    return trimmed.startsWith('<') && trimmed.endsWith('>');\n}\n\nconst MASK_AFTER_CODE_REGEXP = /\\(#+\\)|[#\\- ]/g;\n/**\n * @deprecated: drop in v5.0\n * Use `getCountryCallingCode` from `libphonenumber-js/core` instead\n * ```ts\n * import {getCountryCallingCode} from 'libphonenumber-js/core';\n * import metadata from 'libphonenumber-js/max/metadata';\n *\n * getCountryCallingCode('US', metadata) // 1\n * getCountryCallingCode('GB', metadata) // 44\n * ```\n */\nfunction tuiIsoToCountryCode(countriesMasks, isoCode) {\n    return countriesMasks[isoCode].replaceAll(MASK_AFTER_CODE_REGEXP, '');\n}\n\n/**\n * @deprecated: drop in v5.0\n * use `maskitoGetCountryFromNumber` from `@maskito/phone` instead\n * ```\n * npm i @maskito/phone\n * ```\n *\n * ```ts\n * import {maskitoGetCountryFromNumber} from '@maskito/phone';\n * import metadata from 'libphonenumber-js/max/metadata';\n *\n * const countryIsoCode = maskitoGetCountryFromNumber(\n *      '+7 777 777-7777',\n *      metadata\n * );\n *\n * countryIsoCode !== 'KZ'\n * ```\n */\nfunction tuiNotKzRegion(value) {\n    const region = Number(value.slice(1, 4));\n    return region < 600 || region > 799;\n}\n\nconst WIDTH_SEARCH = 'width=\"';\nconst HEIGHT_SEARCH = 'height=\"';\nconst START = '<svg';\n/**\n * @deprecated: drop in v5.0\n */\nfunction tuiProcessIcon(source, name) {\n    if (source.includes(`id=\"${name}\"`)) {\n        return source;\n    }\n    const src = source.slice(Math.max(0, source.indexOf(START)));\n    const attributes = src.slice(0, Math.max(0, src.indexOf('>')));\n    if (!attributes?.includes(WIDTH_SEARCH) || !attributes.includes(HEIGHT_SEARCH)) {\n        return `${src.replace(START, `<svg xmlns=\"http://www.w3.org/2000/svg\"><g id=\"${name}\" xmlns=\"http://www.w3.org/2000/svg\"><svg`)}</g></svg>`;\n    }\n    const indexOfWidth = attributes.indexOf(WIDTH_SEARCH);\n    const indexOfHeight = attributes.indexOf(HEIGHT_SEARCH);\n    const widthOffset = indexOfWidth + WIDTH_SEARCH.length;\n    const heightOffset = indexOfHeight + HEIGHT_SEARCH.length;\n    const widthString = attributes.slice(widthOffset, attributes.indexOf('\"', widthOffset));\n    const heightString = attributes.slice(heightOffset, attributes.indexOf('\"', heightOffset));\n    if (!heightString ||\n        !widthString ||\n        widthString.includes('%') ||\n        heightString.includes('%') ||\n        widthString.includes('em') ||\n        heightString.includes('em')) {\n        return src.replace(START, `<svg id=\"${name}\"`);\n    }\n    const width = parseInt(widthString, 10);\n    const height = parseInt(heightString, 10);\n    return `<g id=\"${name}\" xmlns=\"http://www.w3.org/2000/svg\"><svg  x=\"50%\" y=\"50%\" width=\"${width / 16}em\" height=\"${height / 16}em\" overflow=\"visible\" viewBox=\"0 0 ${width} ${height}\"><svg x=\"${-width / 2}\" y=\"${-height / 2}\">${src}</svg></svg></g>`;\n}\n\n/**\n * @deprecated: drop in v5.0\n */\nconst FIXED_DROPDOWN_CONTROLLER_PROVIDER = tuiDropdownOptionsProvider({\n    limitWidth: 'fixed',\n    align: 'right',\n});\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DEFAULT_ICONS_PATH, FIXED_DROPDOWN_CONTROLLER_PROVIDER, TUI_CACHE_BUSTING_PAYLOAD, TUI_DATE_MODE_MASKITO_ADAPTER, tuiCapitalizeFirstLetter, tuiFormatPhone, tuiGetBorder, tuiGetMaxAllowedPhoneLength, tuiGetSafeAreaSize, tuiIconsPathFactory, tuiIsApple, tuiIsPresumedHTMLString, tuiIsoToCountryCode, tuiNotKzRegion, tuiProcessIcon };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}