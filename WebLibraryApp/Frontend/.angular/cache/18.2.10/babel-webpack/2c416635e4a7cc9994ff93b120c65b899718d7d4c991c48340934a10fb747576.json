{"ast":null,"code":"import { NgForOf, NgIf } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { inject, EventEmitter, Component, ChangeDetectionStrategy, ViewChildren, forwardRef, Input, Output } from '@angular/core';\nimport { TuiElement } from '@taiga-ui/cdk/directives/element';\nimport * as i1 from '@taiga-ui/core/components/data-list';\nimport { tuiInjectDataListSize, tuiAsDataListAccessor, TuiOption, TuiDataList, TuiDataListDirective } from '@taiga-ui/core/components/data-list';\nimport { TuiLoader } from '@taiga-ui/core/components/loader';\nimport { PolymorpheusOutlet } from '@taiga-ui/polymorpheus';\nimport { EMPTY_QUERY } from '@taiga-ui/cdk/constants';\nimport { tuiIsNativeFocused } from '@taiga-ui/cdk/utils/focus';\nimport { tuiIsPresent } from '@taiga-ui/cdk/utils/miscellaneous';\nimport { TUI_ITEMS_HANDLERS } from '@taiga-ui/kit/tokens';\nfunction TuiDataListWrapperComponent_tui_data_list_0_button_1_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const text_r4 = ctx.polymorpheusOutlet;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", text_r4, \" \");\n  }\n}\nfunction TuiDataListWrapperComponent_tui_data_list_0_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 5, 1);\n    i0.ɵɵlistener(\"click\", function TuiDataListWrapperComponent_tui_data_list_0_button_1_Template_button_click_0_listener() {\n      const item_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.itemClick.emit(item_r2));\n    });\n    i0.ɵɵelementStart(2, \"span\", 6);\n    i0.ɵɵtemplate(3, TuiDataListWrapperComponent_tui_data_list_0_button_1_ng_container_3_Template, 2, 1, \"ng-container\", 7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    const elementRef_r5 = i0.ɵɵreference(1);\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r2.disabledItemHandler(item_r2))(\"value\", item_r2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"polymorpheusOutlet\", ctx_r2.itemContent)(\"polymorpheusOutletContext\", ctx_r2.getContext(item_r2, elementRef_r5));\n  }\n}\nfunction TuiDataListWrapperComponent_tui_data_list_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tui-data-list\", 3);\n    i0.ɵɵtemplate(1, TuiDataListWrapperComponent_tui_data_list_0_button_1_Template, 4, 4, \"button\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"emptyContent\", ctx_r2.emptyContent)(\"size\", ctx_r2.size);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.$cast(ctx_r2.items));\n  }\n}\nfunction TuiDataListWrapperComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tui-loader\", 8);\n  }\n}\nconst _c0 = [\"labels\", \"\"];\nfunction TuiDataListGroupWrapperComponent_tui_data_list_0_tui_opt_group_1_button_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const text_r4 = ctx.polymorpheusOutlet;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", text_r4, \" \");\n  }\n}\nfunction TuiDataListGroupWrapperComponent_tui_data_list_0_tui_opt_group_1_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 7, 1);\n    i0.ɵɵlistener(\"click\", function TuiDataListGroupWrapperComponent_tui_data_list_0_tui_opt_group_1_button_1_Template_button_click_0_listener() {\n      const item_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r2.itemClick.emit(item_r2));\n    });\n    i0.ɵɵtemplate(2, TuiDataListGroupWrapperComponent_tui_data_list_0_tui_opt_group_1_button_1_ng_container_2_Template, 2, 1, \"ng-container\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    const elementRef_r5 = i0.ɵɵreference(1);\n    const ctx_r2 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"disabled\", ctx_r2.disabledItemHandler(item_r2))(\"value\", item_r2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"polymorpheusOutlet\", ctx_r2.itemContent)(\"polymorpheusOutletContext\", ctx_r2.getContext(item_r2, elementRef_r5));\n  }\n}\nfunction TuiDataListGroupWrapperComponent_tui_data_list_0_tui_opt_group_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tui-opt-group\", 5);\n    i0.ɵɵtemplate(1, TuiDataListGroupWrapperComponent_tui_data_list_0_tui_opt_group_1_button_1_Template, 3, 4, \"button\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const group_r6 = ctx.$implicit;\n    const index_r7 = ctx.index;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"label\", ctx_r2.labels[index_r7]);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", group_r6);\n  }\n}\nfunction TuiDataListGroupWrapperComponent_tui_data_list_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tui-data-list\", 3);\n    i0.ɵɵtemplate(1, TuiDataListGroupWrapperComponent_tui_data_list_0_tui_opt_group_1_Template, 2, 2, \"tui-opt-group\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"emptyContent\", ctx_r2.emptyContent)(\"size\", ctx_r2.size);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.items);\n  }\n}\nfunction TuiDataListGroupWrapperComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tui-loader\", 9);\n  }\n}\nconst _c1 = \"[_nghost-%COMP%]{display:block}.t-content[_ngcontent-%COMP%]{flex:1;min-inline-size:0}.t-loader[_ngcontent-%COMP%]{margin:.75rem 0}\";\nclass TuiDataListWrapperComponent {\n  constructor() {\n    this.itemsHandlers = inject(TUI_ITEMS_HANDLERS);\n    this.optionsQuery = EMPTY_QUERY;\n    this.items = [];\n    this.disabledItemHandler = this.itemsHandlers.disabledItemHandler;\n    this.size = tuiInjectDataListSize();\n    this.itemClick = new EventEmitter();\n    this.itemContent = ({\n      $implicit\n    }) => this.itemsHandlers.stringify($implicit);\n  }\n  getContext($implicit, {\n    nativeElement\n  }) {\n    return {\n      $implicit,\n      active: tuiIsNativeFocused(nativeElement)\n    };\n  }\n  getOptions(includeDisabled = false) {\n    return this.optionsQuery.filter(({\n      disabled\n    }) => includeDisabled || !disabled).map(({\n      value\n    }) => value).filter(tuiIsPresent);\n  }\n  $cast(items) {\n    return items;\n  }\n  static {\n    this.ɵfac = function TuiDataListWrapperComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiDataListWrapperComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: TuiDataListWrapperComponent,\n      selectors: [[\"tui-data-list-wrapper\", 3, \"labels\", \"\"]],\n      viewQuery: function TuiDataListWrapperComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(TuiOption, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.optionsQuery = _t);\n        }\n      },\n      inputs: {\n        items: \"items\",\n        disabledItemHandler: \"disabledItemHandler\",\n        emptyContent: \"emptyContent\",\n        size: \"size\",\n        itemContent: \"itemContent\"\n      },\n      outputs: {\n        itemClick: \"itemClick\"\n      },\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([tuiAsDataListAccessor(TuiDataListWrapperComponent)]), i0.ɵɵStandaloneFeature],\n      decls: 3,\n      vars: 2,\n      consts: [[\"loading\", \"\"], [\"elementRef\", \"elementRef\"], [3, \"emptyContent\", \"size\", 4, \"ngIf\", \"ngIfElse\"], [3, \"emptyContent\", \"size\"], [\"automation-id\", \"tui-data-list-wrapper__option\", \"tuiElement\", \"\", \"tuiOption\", \"\", \"type\", \"button\", 3, \"disabled\", \"value\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"automation-id\", \"tui-data-list-wrapper__option\", \"tuiElement\", \"\", \"tuiOption\", \"\", \"type\", \"button\", 3, \"click\", \"disabled\", \"value\"], [1, \"t-content\"], [4, \"polymorpheusOutlet\", \"polymorpheusOutletContext\"], [\"automation-id\", \"tui-data-list-wrapper__loader\", 1, \"t-loader\"]],\n      template: function TuiDataListWrapperComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, TuiDataListWrapperComponent_tui_data_list_0_Template, 2, 3, \"tui-data-list\", 2)(1, TuiDataListWrapperComponent_ng_template_1_Template, 1, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n        }\n        if (rf & 2) {\n          const loading_r6 = i0.ɵɵreference(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.items)(\"ngIfElse\", loading_r6);\n        }\n      },\n      dependencies: [NgForOf, NgIf, PolymorpheusOutlet, i1.TuiDataListComponent, i1.TuiOption, TuiElement, TuiLoader],\n      styles: [\"[_nghost-%COMP%]{display:block}.t-content[_ngcontent-%COMP%]{flex:1;min-inline-size:0}.t-loader[_ngcontent-%COMP%]{margin:.75rem 0}\"],\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiDataListWrapperComponent, [{\n    type: Component,\n    args: [{\n      standalone: true,\n      selector: 'tui-data-list-wrapper:not([labels])',\n      imports: [NgForOf, NgIf, PolymorpheusOutlet, TuiDataList, TuiElement, TuiLoader],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [tuiAsDataListAccessor(TuiDataListWrapperComponent)],\n      template: \"<tui-data-list\\n    *ngIf=\\\"items; else loading\\\"\\n    [emptyContent]=\\\"emptyContent\\\"\\n    [size]=\\\"size\\\"\\n>\\n    <button\\n        *ngFor=\\\"let item of $cast(items)\\\"\\n        #elementRef=\\\"elementRef\\\"\\n        automation-id=\\\"tui-data-list-wrapper__option\\\"\\n        tuiElement\\n        tuiOption\\n        type=\\\"button\\\"\\n        [disabled]=\\\"disabledItemHandler(item)\\\"\\n        [value]=\\\"item\\\"\\n        (click)=\\\"itemClick.emit(item)\\\"\\n    >\\n        <span class=\\\"t-content\\\">\\n            <ng-container *polymorpheusOutlet=\\\"itemContent as text; context: getContext(item, elementRef)\\\">\\n                {{ text }}\\n            </ng-container>\\n        </span>\\n    </button>\\n</tui-data-list>\\n<ng-template #loading>\\n    <tui-loader\\n        automation-id=\\\"tui-data-list-wrapper__loader\\\"\\n        class=\\\"t-loader\\\"\\n    />\\n</ng-template>\\n\",\n      styles: [\":host{display:block}.t-content{flex:1;min-inline-size:0}.t-loader{margin:.75rem 0}\\n\"]\n    }]\n  }], null, {\n    optionsQuery: [{\n      type: ViewChildren,\n      args: [forwardRef(() => TuiOption)]\n    }],\n    items: [{\n      type: Input\n    }],\n    disabledItemHandler: [{\n      type: Input\n    }],\n    emptyContent: [{\n      type: Input\n    }],\n    size: [{\n      type: Input\n    }],\n    itemClick: [{\n      type: Output\n    }],\n    itemContent: [{\n      type: Input\n    }]\n  });\n})();\nclass TuiDataListGroupWrapperComponent extends TuiDataListWrapperComponent {\n  constructor() {\n    super(...arguments);\n    this.labels = [];\n  }\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵTuiDataListGroupWrapperComponent_BaseFactory;\n      return function TuiDataListGroupWrapperComponent_Factory(__ngFactoryType__) {\n        return (ɵTuiDataListGroupWrapperComponent_BaseFactory || (ɵTuiDataListGroupWrapperComponent_BaseFactory = i0.ɵɵgetInheritedFactory(TuiDataListGroupWrapperComponent)))(__ngFactoryType__ || TuiDataListGroupWrapperComponent);\n      };\n    })();\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: TuiDataListGroupWrapperComponent,\n      selectors: [[\"tui-data-list-wrapper\", \"labels\", \"\"]],\n      inputs: {\n        labels: \"labels\"\n      },\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([tuiAsDataListAccessor(TuiDataListGroupWrapperComponent)]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n      attrs: _c0,\n      decls: 3,\n      vars: 2,\n      consts: [[\"loading\", \"\"], [\"elementRef\", \"elementRef\"], [3, \"emptyContent\", \"size\", 4, \"ngIf\", \"ngIfElse\"], [3, \"emptyContent\", \"size\"], [3, \"label\", 4, \"ngFor\", \"ngForOf\"], [3, \"label\"], [\"automation-id\", \"tui-data-list-wrapper__option\", \"tuiElement\", \"\", \"tuiOption\", \"\", \"type\", \"button\", 3, \"disabled\", \"value\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"automation-id\", \"tui-data-list-wrapper__option\", \"tuiElement\", \"\", \"tuiOption\", \"\", \"type\", \"button\", 3, \"click\", \"disabled\", \"value\"], [4, \"polymorpheusOutlet\", \"polymorpheusOutletContext\"], [1, \"t-loader\"]],\n      template: function TuiDataListGroupWrapperComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, TuiDataListGroupWrapperComponent_tui_data_list_0_Template, 2, 3, \"tui-data-list\", 2)(1, TuiDataListGroupWrapperComponent_ng_template_1_Template, 1, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n        }\n        if (rf & 2) {\n          const loading_r8 = i0.ɵɵreference(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.items)(\"ngIfElse\", loading_r8);\n        }\n      },\n      dependencies: [NgForOf, NgIf, PolymorpheusOutlet, i1.TuiDataListComponent, i1.TuiOption, i1.TuiOptGroup, TuiElement, TuiLoader],\n      styles: [_c1],\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiDataListGroupWrapperComponent, [{\n    type: Component,\n    args: [{\n      standalone: true,\n      selector: 'tui-data-list-wrapper[labels]',\n      imports: [NgForOf, NgIf, PolymorpheusOutlet, TuiDataList, TuiElement, TuiLoader],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [tuiAsDataListAccessor(TuiDataListGroupWrapperComponent)],\n      template: \"<tui-data-list\\n    *ngIf=\\\"items; else loading\\\"\\n    [emptyContent]=\\\"emptyContent\\\"\\n    [size]=\\\"size\\\"\\n>\\n    <tui-opt-group\\n        *ngFor=\\\"let group of items; let index = index\\\"\\n        [label]=\\\"labels[index]\\\"\\n    >\\n        <button\\n            *ngFor=\\\"let item of group\\\"\\n            #elementRef=\\\"elementRef\\\"\\n            automation-id=\\\"tui-data-list-wrapper__option\\\"\\n            tuiElement\\n            tuiOption\\n            type=\\\"button\\\"\\n            [disabled]=\\\"disabledItemHandler(item)\\\"\\n            [value]=\\\"item\\\"\\n            (click)=\\\"itemClick.emit(item)\\\"\\n        >\\n            <ng-container *polymorpheusOutlet=\\\"itemContent as text; context: getContext(item, elementRef)\\\">\\n                {{ text }}\\n            </ng-container>\\n        </button>\\n    </tui-opt-group>\\n</tui-data-list>\\n<ng-template #loading>\\n    <tui-loader class=\\\"t-loader\\\" />\\n</ng-template>\\n\",\n      styles: [\":host{display:block}.t-content{flex:1;min-inline-size:0}.t-loader{margin:.75rem 0}\\n\"]\n    }]\n  }], null, {\n    labels: [{\n      type: Input\n    }]\n  });\n})();\nconst TuiDataListWrapper = [TuiDataListWrapperComponent, TuiDataListGroupWrapperComponent, TuiDataListDirective];\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiDataListGroupWrapperComponent, TuiDataListWrapper, TuiDataListWrapperComponent };","map":{"version":3,"names":["NgForOf","NgIf","i0","inject","EventEmitter","Component","ChangeDetectionStrategy","ViewChildren","forwardRef","Input","Output","TuiElement","i1","tuiInjectDataListSize","tuiAsDataListAccessor","TuiOption","TuiDataList","TuiDataListDirective","TuiLoader","PolymorpheusOutlet","EMPTY_QUERY","tuiIsNativeFocused","tuiIsPresent","TUI_ITEMS_HANDLERS","TuiDataListWrapperComponent_tui_data_list_0_button_1_ng_container_3_Template","rf","ctx","ɵɵelementContainerStart","ɵɵtext","ɵɵelementContainerEnd","text_r4","polymorpheusOutlet","ɵɵadvance","ɵɵtextInterpolate1","TuiDataListWrapperComponent_tui_data_list_0_button_1_Template","_r1","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","TuiDataListWrapperComponent_tui_data_list_0_button_1_Template_button_click_0_listener","item_r2","ɵɵrestoreView","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","itemClick","emit","ɵɵtemplate","ɵɵelementEnd","elementRef_r5","ɵɵreference","ɵɵproperty","disabledItemHandler","itemContent","getContext","TuiDataListWrapperComponent_tui_data_list_0_Template","emptyContent","size","$cast","items","TuiDataListWrapperComponent_ng_template_1_Template","ɵɵelement","_c0","TuiDataListGroupWrapperComponent_tui_data_list_0_tui_opt_group_1_button_1_ng_container_2_Template","TuiDataListGroupWrapperComponent_tui_data_list_0_tui_opt_group_1_button_1_Template","TuiDataListGroupWrapperComponent_tui_data_list_0_tui_opt_group_1_button_1_Template_button_click_0_listener","TuiDataListGroupWrapperComponent_tui_data_list_0_tui_opt_group_1_Template","group_r6","index_r7","index","labels","TuiDataListGroupWrapperComponent_tui_data_list_0_Template","TuiDataListGroupWrapperComponent_ng_template_1_Template","_c1","TuiDataListWrapperComponent","constructor","itemsHandlers","optionsQuery","stringify","nativeElement","active","getOptions","includeDisabled","filter","disabled","map","value","ɵfac","TuiDataListWrapperComponent_Factory","__ngFactoryType__","ɵcmp","ɵɵdefineComponent","type","selectors","viewQuery","TuiDataListWrapperComponent_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","inputs","outputs","standalone","features","ɵɵProvidersFeature","ɵɵStandaloneFeature","decls","vars","consts","template","TuiDataListWrapperComponent_Template","ɵɵtemplateRefExtractor","loading_r6","dependencies","TuiDataListComponent","styles","changeDetection","ngDevMode","ɵsetClassMetadata","args","selector","imports","OnPush","providers","TuiDataListGroupWrapperComponent","arguments","ɵTuiDataListGroupWrapperComponent_BaseFactory","TuiDataListGroupWrapperComponent_Factory","ɵɵgetInheritedFactory","ɵɵInheritDefinitionFeature","attrs","TuiDataListGroupWrapperComponent_Template","loading_r8","TuiOptGroup","TuiDataListWrapper"],"sources":["C:/Users/Asus-PC/Downloads/WebLibraryNew/WebLibrary/WebLibraryApp/Frontend/node_modules/@taiga-ui/kit/fesm2022/taiga-ui-kit-components-data-list-wrapper.mjs"],"sourcesContent":["import { NgForOf, NgIf } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { inject, EventEmitter, Component, ChangeDetectionStrategy, ViewChildren, forwardRef, Input, Output } from '@angular/core';\nimport { TuiElement } from '@taiga-ui/cdk/directives/element';\nimport * as i1 from '@taiga-ui/core/components/data-list';\nimport { tuiInjectDataListSize, tuiAsDataListAccessor, TuiOption, TuiDataList, TuiDataListDirective } from '@taiga-ui/core/components/data-list';\nimport { TuiLoader } from '@taiga-ui/core/components/loader';\nimport { PolymorpheusOutlet } from '@taiga-ui/polymorpheus';\nimport { EMPTY_QUERY } from '@taiga-ui/cdk/constants';\nimport { tuiIsNativeFocused } from '@taiga-ui/cdk/utils/focus';\nimport { tuiIsPresent } from '@taiga-ui/cdk/utils/miscellaneous';\nimport { TUI_ITEMS_HANDLERS } from '@taiga-ui/kit/tokens';\n\nclass TuiDataListWrapperComponent {\n    constructor() {\n        this.itemsHandlers = inject(TUI_ITEMS_HANDLERS);\n        this.optionsQuery = EMPTY_QUERY;\n        this.items = [];\n        this.disabledItemHandler = this.itemsHandlers.disabledItemHandler;\n        this.size = tuiInjectDataListSize();\n        this.itemClick = new EventEmitter();\n        this.itemContent = ({ $implicit }) => this.itemsHandlers.stringify($implicit);\n    }\n    getContext($implicit, { nativeElement }) {\n        return { $implicit, active: tuiIsNativeFocused(nativeElement) };\n    }\n    getOptions(includeDisabled = false) {\n        return this.optionsQuery\n            .filter(({ disabled }) => includeDisabled || !disabled)\n            .map(({ value }) => value)\n            .filter(tuiIsPresent);\n    }\n    $cast(items) {\n        return items;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiDataListWrapperComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiDataListWrapperComponent, isStandalone: true, selector: \"tui-data-list-wrapper:not([labels])\", inputs: { items: \"items\", disabledItemHandler: \"disabledItemHandler\", emptyContent: \"emptyContent\", size: \"size\", itemContent: \"itemContent\" }, outputs: { itemClick: \"itemClick\" }, providers: [tuiAsDataListAccessor(TuiDataListWrapperComponent)], viewQueries: [{ propertyName: \"optionsQuery\", predicate: i0.forwardRef(function () { return TuiOption; }), descendants: true }], ngImport: i0, template: \"<tui-data-list\\n    *ngIf=\\\"items; else loading\\\"\\n    [emptyContent]=\\\"emptyContent\\\"\\n    [size]=\\\"size\\\"\\n>\\n    <button\\n        *ngFor=\\\"let item of $cast(items)\\\"\\n        #elementRef=\\\"elementRef\\\"\\n        automation-id=\\\"tui-data-list-wrapper__option\\\"\\n        tuiElement\\n        tuiOption\\n        type=\\\"button\\\"\\n        [disabled]=\\\"disabledItemHandler(item)\\\"\\n        [value]=\\\"item\\\"\\n        (click)=\\\"itemClick.emit(item)\\\"\\n    >\\n        <span class=\\\"t-content\\\">\\n            <ng-container *polymorpheusOutlet=\\\"itemContent as text; context: getContext(item, elementRef)\\\">\\n                {{ text }}\\n            </ng-container>\\n        </span>\\n    </button>\\n</tui-data-list>\\n<ng-template #loading>\\n    <tui-loader\\n        automation-id=\\\"tui-data-list-wrapper__loader\\\"\\n        class=\\\"t-loader\\\"\\n    />\\n</ng-template>\\n\", styles: [\":host{display:block}.t-content{flex:1;min-inline-size:0}.t-loader{margin:.75rem 0}\\n\"], dependencies: [{ kind: \"directive\", type: NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: PolymorpheusOutlet, selector: \"[polymorpheusOutlet]\", inputs: [\"polymorpheusOutlet\", \"polymorpheusOutletContext\"] }, { kind: \"component\", type: i1.TuiDataListComponent, selector: \"tui-data-list\", inputs: [\"emptyContent\", \"size\"] }, { kind: \"component\", type: i1.TuiOption, selector: \"button[tuiOption], a[tuiOption], label[tuiOption]\", inputs: [\"disabled\", \"value\"] }, { kind: \"directive\", type: TuiElement, selector: \"[tuiElement]\", exportAs: [\"elementRef\"] }, { kind: \"component\", type: TuiLoader, selector: \"tui-loader\", inputs: [\"size\", \"inheritColor\", \"overlay\", \"textContent\", \"showLoader\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiDataListWrapperComponent, decorators: [{\n            type: Component,\n            args: [{ standalone: true, selector: 'tui-data-list-wrapper:not([labels])', imports: [NgForOf, NgIf, PolymorpheusOutlet, TuiDataList, TuiElement, TuiLoader], changeDetection: ChangeDetectionStrategy.OnPush, providers: [tuiAsDataListAccessor(TuiDataListWrapperComponent)], template: \"<tui-data-list\\n    *ngIf=\\\"items; else loading\\\"\\n    [emptyContent]=\\\"emptyContent\\\"\\n    [size]=\\\"size\\\"\\n>\\n    <button\\n        *ngFor=\\\"let item of $cast(items)\\\"\\n        #elementRef=\\\"elementRef\\\"\\n        automation-id=\\\"tui-data-list-wrapper__option\\\"\\n        tuiElement\\n        tuiOption\\n        type=\\\"button\\\"\\n        [disabled]=\\\"disabledItemHandler(item)\\\"\\n        [value]=\\\"item\\\"\\n        (click)=\\\"itemClick.emit(item)\\\"\\n    >\\n        <span class=\\\"t-content\\\">\\n            <ng-container *polymorpheusOutlet=\\\"itemContent as text; context: getContext(item, elementRef)\\\">\\n                {{ text }}\\n            </ng-container>\\n        </span>\\n    </button>\\n</tui-data-list>\\n<ng-template #loading>\\n    <tui-loader\\n        automation-id=\\\"tui-data-list-wrapper__loader\\\"\\n        class=\\\"t-loader\\\"\\n    />\\n</ng-template>\\n\", styles: [\":host{display:block}.t-content{flex:1;min-inline-size:0}.t-loader{margin:.75rem 0}\\n\"] }]\n        }], propDecorators: { optionsQuery: [{\n                type: ViewChildren,\n                args: [forwardRef(() => TuiOption)]\n            }], items: [{\n                type: Input\n            }], disabledItemHandler: [{\n                type: Input\n            }], emptyContent: [{\n                type: Input\n            }], size: [{\n                type: Input\n            }], itemClick: [{\n                type: Output\n            }], itemContent: [{\n                type: Input\n            }] } });\n\nclass TuiDataListGroupWrapperComponent extends TuiDataListWrapperComponent {\n    constructor() {\n        super(...arguments);\n        this.labels = [];\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiDataListGroupWrapperComponent, deps: null, target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiDataListGroupWrapperComponent, isStandalone: true, selector: \"tui-data-list-wrapper[labels]\", inputs: { labels: \"labels\" }, providers: [tuiAsDataListAccessor(TuiDataListGroupWrapperComponent)], usesInheritance: true, ngImport: i0, template: \"<tui-data-list\\n    *ngIf=\\\"items; else loading\\\"\\n    [emptyContent]=\\\"emptyContent\\\"\\n    [size]=\\\"size\\\"\\n>\\n    <tui-opt-group\\n        *ngFor=\\\"let group of items; let index = index\\\"\\n        [label]=\\\"labels[index]\\\"\\n    >\\n        <button\\n            *ngFor=\\\"let item of group\\\"\\n            #elementRef=\\\"elementRef\\\"\\n            automation-id=\\\"tui-data-list-wrapper__option\\\"\\n            tuiElement\\n            tuiOption\\n            type=\\\"button\\\"\\n            [disabled]=\\\"disabledItemHandler(item)\\\"\\n            [value]=\\\"item\\\"\\n            (click)=\\\"itemClick.emit(item)\\\"\\n        >\\n            <ng-container *polymorpheusOutlet=\\\"itemContent as text; context: getContext(item, elementRef)\\\">\\n                {{ text }}\\n            </ng-container>\\n        </button>\\n    </tui-opt-group>\\n</tui-data-list>\\n<ng-template #loading>\\n    <tui-loader class=\\\"t-loader\\\" />\\n</ng-template>\\n\", styles: [\":host{display:block}.t-content{flex:1;min-inline-size:0}.t-loader{margin:.75rem 0}\\n\"], dependencies: [{ kind: \"directive\", type: NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: PolymorpheusOutlet, selector: \"[polymorpheusOutlet]\", inputs: [\"polymorpheusOutlet\", \"polymorpheusOutletContext\"] }, { kind: \"component\", type: i1.TuiDataListComponent, selector: \"tui-data-list\", inputs: [\"emptyContent\", \"size\"] }, { kind: \"component\", type: i1.TuiOption, selector: \"button[tuiOption], a[tuiOption], label[tuiOption]\", inputs: [\"disabled\", \"value\"] }, { kind: \"directive\", type: i1.TuiOptGroup, selector: \"tui-opt-group\", inputs: [\"label\"] }, { kind: \"directive\", type: TuiElement, selector: \"[tuiElement]\", exportAs: [\"elementRef\"] }, { kind: \"component\", type: TuiLoader, selector: \"tui-loader\", inputs: [\"size\", \"inheritColor\", \"overlay\", \"textContent\", \"showLoader\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiDataListGroupWrapperComponent, decorators: [{\n            type: Component,\n            args: [{ standalone: true, selector: 'tui-data-list-wrapper[labels]', imports: [NgForOf, NgIf, PolymorpheusOutlet, TuiDataList, TuiElement, TuiLoader], changeDetection: ChangeDetectionStrategy.OnPush, providers: [tuiAsDataListAccessor(TuiDataListGroupWrapperComponent)], template: \"<tui-data-list\\n    *ngIf=\\\"items; else loading\\\"\\n    [emptyContent]=\\\"emptyContent\\\"\\n    [size]=\\\"size\\\"\\n>\\n    <tui-opt-group\\n        *ngFor=\\\"let group of items; let index = index\\\"\\n        [label]=\\\"labels[index]\\\"\\n    >\\n        <button\\n            *ngFor=\\\"let item of group\\\"\\n            #elementRef=\\\"elementRef\\\"\\n            automation-id=\\\"tui-data-list-wrapper__option\\\"\\n            tuiElement\\n            tuiOption\\n            type=\\\"button\\\"\\n            [disabled]=\\\"disabledItemHandler(item)\\\"\\n            [value]=\\\"item\\\"\\n            (click)=\\\"itemClick.emit(item)\\\"\\n        >\\n            <ng-container *polymorpheusOutlet=\\\"itemContent as text; context: getContext(item, elementRef)\\\">\\n                {{ text }}\\n            </ng-container>\\n        </button>\\n    </tui-opt-group>\\n</tui-data-list>\\n<ng-template #loading>\\n    <tui-loader class=\\\"t-loader\\\" />\\n</ng-template>\\n\", styles: [\":host{display:block}.t-content{flex:1;min-inline-size:0}.t-loader{margin:.75rem 0}\\n\"] }]\n        }], propDecorators: { labels: [{\n                type: Input\n            }] } });\n\nconst TuiDataListWrapper = [\n    TuiDataListWrapperComponent,\n    TuiDataListGroupWrapperComponent,\n    TuiDataListDirective,\n];\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiDataListGroupWrapperComponent, TuiDataListWrapper, TuiDataListWrapperComponent };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}