{"ast":null,"code":"import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { inject, ElementRef, Component, ChangeDetectionStrategy, ViewChildren, ViewChild, Input, NgModule } from '@angular/core';\nimport { EMPTY_QUERY } from '@taiga-ui/cdk/constants';\nimport { TUI_IS_MOBILE } from '@taiga-ui/cdk/tokens';\nimport { tuiInjectElement } from '@taiga-ui/cdk/utils/dom';\nimport { tuiIsNativeFocusedIn, tuiIsNativeFocused } from '@taiga-ui/cdk/utils/focus';\nimport { tuiRound, tuiClamp } from '@taiga-ui/cdk/utils/math';\nimport { tuiPure } from '@taiga-ui/cdk/utils/miscellaneous';\nimport { tuiGetFractionPartPadded } from '@taiga-ui/core/utils/format';\nimport * as i6 from '@taiga-ui/kit/components/range';\nimport { TuiRange } from '@taiga-ui/kit/components/range';\nimport { TUI_FLOATING_PRECISION, tuiSliderOptionsProvider } from '@taiga-ui/kit/components/slider';\nimport { AbstractTuiControl, tuiAsControl } from '@taiga-ui/legacy/classes';\nimport * as i5 from '@taiga-ui/legacy/components/input-number';\nimport { TuiInputNumberComponent, TuiInputNumberModule } from '@taiga-ui/legacy/components/input-number';\nimport * as i7 from '@taiga-ui/legacy/directives';\nimport { TUI_TEXTFIELD_WATCHED_CONTROLLER, TEXTFIELD_CONTROLLER_PROVIDER, TuiWrapperModule, TuiTextfieldControllerModule } from '@taiga-ui/legacy/directives';\nimport { tuiAsFocusableItemAccessor } from '@taiga-ui/legacy/tokens';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i2 from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport * as i3 from '@taiga-ui/polymorpheus';\nimport { PolymorpheusOutlet, PolymorpheusTemplate } from '@taiga-ui/polymorpheus';\nimport * as i4 from '@taiga-ui/cdk/directives/active-zone';\nimport { TuiActiveZone } from '@taiga-ui/cdk/directives/active-zone';\nimport * as i8 from '@taiga-ui/core/directives/number-format';\nimport { TuiNumberFormat } from '@taiga-ui/core/directives/number-format';\nconst _c0 = [\"*\"];\nconst _c1 = () => ({\n  standalone: true\n});\nconst _c2 = a0 => ({\n  precision: a0\n});\nconst _c3 = a0 => ({\n  $implicit: a0\n});\nfunction TuiInputRangeComponent_div_4_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const text_r1 = ctx.polymorpheusOutlet;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", text_r1, \" \");\n  }\n}\nfunction TuiInputRangeComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵtemplate(1, TuiInputRangeComponent_div_4_ng_container_1_Template, 2, 1, \"ng-container\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"polymorpheusOutlet\", ctx_r1.leftValueContent)(\"polymorpheusOutletContext\", i0.ɵɵpureFunction1(2, _c3, ctx_r1.value[0]));\n  }\n}\nfunction TuiInputRangeComponent_div_7_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const text_r3 = ctx.polymorpheusOutlet;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", text_r3, \" \");\n  }\n}\nfunction TuiInputRangeComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵtemplate(1, TuiInputRangeComponent_div_7_ng_container_1_Template, 2, 1, \"ng-container\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"polymorpheusOutlet\", ctx_r1.rightValueContent)(\"polymorpheusOutletContext\", i0.ɵɵpureFunction1(2, _c3, ctx_r1.value[1]));\n  }\n}\nclass TuiInputRangeComponent extends AbstractTuiControl {\n  constructor() {\n    super(...arguments);\n    this.inputNumberRefs = EMPTY_QUERY;\n    this.isMobile = inject(TUI_IS_MOBILE);\n    this.el = tuiInjectElement();\n    this.leftTextfieldValue = this.safeCurrentValue[0];\n    this.rightTextfieldValue = this.safeCurrentValue[1];\n    this.lastActiveSide = 'left';\n    this.controller = inject(TUI_TEXTFIELD_WATCHED_CONTROLLER);\n    this.min = 0;\n    this.max = 100;\n    this.quantum = 1;\n    this.steps = 0;\n    this.segments = 1;\n    this.keySteps = null;\n    this.pluralize = null;\n  }\n  get nativeFocusableElement() {\n    return this.disabled ? null : this.leftFocusableElement || this.rightFocusableElement;\n  }\n  get focused() {\n    return tuiIsNativeFocusedIn(this.el);\n  }\n  writeValue(value) {\n    super.writeValue(value);\n    this.updateTextfieldValues(this.value);\n  }\n  get leftFocusableElement() {\n    return this.inputNumberRefs.first?.nativeFocusableElement || null;\n  }\n  get rightFocusableElement() {\n    return this.inputNumberRefs.last?.nativeFocusableElement || null;\n  }\n  get appearance() {\n    return this.controller.appearance;\n  }\n  get showLeftValueContent() {\n    return Boolean(this.leftValueContent && !tuiIsNativeFocused(this.leftFocusableElement) && !(tuiIsNativeFocusedIn(this.range?.nativeElement) && this.lastActiveSide === 'left'));\n  }\n  get showRightValueContent() {\n    return Boolean(this.rightValueContent && !tuiIsNativeFocused(this.rightFocusableElement) && !(tuiIsNativeFocusedIn(this.range?.nativeElement) && this.lastActiveSide === 'right'));\n  }\n  get precision() {\n    return tuiGetFractionPartPadded(this.quantum).length;\n  }\n  get computedSteps() {\n    return this.steps || (this.max - this.min) / this.quantum;\n  }\n  get step() {\n    return (this.max - this.min) / this.computedSteps;\n  }\n  computeKeySteps(keySteps, min, max) {\n    return keySteps || [[0, min], [100, max]];\n  }\n  onActiveZone(active) {\n    this.updateFocused(active);\n  }\n  onTextInputFocused(focused) {\n    if (!focused) {\n      this.updateTextfieldValues(this.value);\n    }\n  }\n  changeByStep(event, [leftCoefficient, rightCoefficient]) {\n    if (this.readOnly) {\n      return;\n    }\n    event.preventDefault();\n    const newValue = this.valueGuard([this.value[0] + leftCoefficient * this.step, this.value[1] + rightCoefficient * this.step]);\n    if (newValue[0] !== this.value[0] || newValue[1] !== this.value[1]) {\n      this.onExternalValueUpdate(newValue);\n    }\n  }\n  onInputLeft(value) {\n    this.safelyUpdateValue([value ?? this.safeCurrentValue[0], this.value[1]]);\n  }\n  onInputRight(value) {\n    this.safelyUpdateValue([this.value[0], value ?? this.safeCurrentValue[1]]);\n  }\n  onExternalValueUpdate(value) {\n    this.safelyUpdateValue(value);\n    this.updateTextfieldValues(this.value);\n  }\n  focusToTextInput() {\n    const element = this.lastActiveSide === 'left' ? this.leftFocusableElement : this.rightFocusableElement;\n    if (!this.isMobile && element) {\n      element.focus();\n    }\n  }\n  onActiveThumbChange(activeThumb) {\n    this.lastActiveSide = activeThumb;\n  }\n  getFallbackValue() {\n    return [0, 0];\n  }\n  safelyUpdateValue(value) {\n    this.value = this.valueGuard(value);\n  }\n  valueGuard([leftValue, rightValue]) {\n    const leftCalibratedValue = this.calibrate(leftValue);\n    const rightCalibratedValue = this.calibrate(rightValue);\n    return [Math.min(leftCalibratedValue, this.value[1]), Math.max(rightCalibratedValue, this.value[0])];\n  }\n  calibrate(value) {\n    const roundedValue = tuiRound(Math.round(value / this.quantum) * this.quantum, TUI_FLOATING_PRECISION);\n    return tuiClamp(roundedValue, this.min, this.max);\n  }\n  updateTextfieldValues([leftValue, rightValue]) {\n    this.leftTextfieldValue = leftValue;\n    this.rightTextfieldValue = rightValue;\n  }\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵTuiInputRangeComponent_BaseFactory;\n      return function TuiInputRangeComponent_Factory(__ngFactoryType__) {\n        return (ɵTuiInputRangeComponent_BaseFactory || (ɵTuiInputRangeComponent_BaseFactory = i0.ɵɵgetInheritedFactory(TuiInputRangeComponent)))(__ngFactoryType__ || TuiInputRangeComponent);\n      };\n    })();\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: TuiInputRangeComponent,\n      selectors: [[\"tui-input-range\"]],\n      viewQuery: function TuiInputRangeComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(TuiRange, 5, ElementRef);\n          i0.ɵɵviewQuery(TuiInputNumberComponent, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.range = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.inputNumberRefs = _t);\n        }\n      },\n      hostVars: 3,\n      hostBindings: function TuiInputRangeComponent_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"data-size\", ctx.controller.size);\n          i0.ɵɵclassProp(\"_label-outside\", ctx.controller.labelOutside);\n        }\n      },\n      inputs: {\n        min: \"min\",\n        max: \"max\",\n        quantum: \"quantum\",\n        steps: \"steps\",\n        segments: \"segments\",\n        keySteps: \"keySteps\",\n        leftValueContent: \"leftValueContent\",\n        rightValueContent: \"rightValueContent\",\n        pluralize: \"pluralize\"\n      },\n      features: [i0.ɵɵProvidersFeature([tuiAsFocusableItemAccessor(TuiInputRangeComponent), tuiAsControl(TuiInputRangeComponent), tuiSliderOptionsProvider({\n        trackColor: 'transparent'\n      }), TEXTFIELD_CONTROLLER_PROVIDER]), i0.ɵɵInheritDefinitionFeature],\n      ngContentSelectors: _c0,\n      decls: 9,\n      vars: 46,\n      consts: [[\"tuiWrapper\", \"\", 1, \"t-wrapper\", 3, \"tuiActiveZoneChange\", \"appearance\", \"disabled\", \"focus\", \"hover\", \"invalid\", \"readOnly\"], [\"automation-id\", \"tui-input-range__left-input\", \"tuiTextfieldAppearance\", \"none\", 1, \"t-left\", 3, \"ngModelChange\", \"focusedChange\", \"keydown.arrowDown\", \"keydown.arrowUp\", \"disabled\", \"max\", \"min\", \"ngModelOptions\", \"readOnly\", \"tuiNumberFormat\", \"tuiTextfieldPostfix\", \"ngModel\"], [\"ngProjectAs\", \"tuiContent\", 5, [\"tuiContent\"], 4, \"ngIf\"], [\"automation-id\", \"tui-input-range__right-input\", \"tuiTextfieldAppearance\", \"none\", 1, \"t-right\", 3, \"ngModelChange\", \"focusedChange\", \"keydown.arrowDown\", \"keydown.arrowUp\", \"disabled\", \"max\", \"min\", \"ngModelOptions\", \"readOnly\", \"tuiNumberFormat\", \"tuiTextfieldPostfix\", \"ngModel\"], [1, \"t-range\", 3, \"activeThumbChange\", \"mousedown.prevent\", \"ngModelChange\", \"disabled\", \"focusable\", \"keySteps\", \"max\", \"min\", \"ngModel\", \"ngModelOptions\", \"segments\", \"step\"], [\"ngProjectAs\", \"tuiContent\", 5, [\"tuiContent\"]], [4, \"polymorpheusOutlet\", \"polymorpheusOutletContext\"]],\n      template: function TuiInputRangeComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵlistener(\"tuiActiveZoneChange\", function TuiInputRangeComponent_Template_div_tuiActiveZoneChange_0_listener($event) {\n            return ctx.onActiveZone($event);\n          });\n          i0.ɵɵelementStart(1, \"tui-input-number\", 1);\n          i0.ɵɵpipe(2, \"i18nPlural\");\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function TuiInputRangeComponent_Template_tui_input_number_ngModelChange_1_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.leftTextfieldValue, $event) || (ctx.leftTextfieldValue = $event);\n            return $event;\n          });\n          i0.ɵɵlistener(\"focusedChange\", function TuiInputRangeComponent_Template_tui_input_number_focusedChange_1_listener($event) {\n            return ctx.onTextInputFocused($event);\n          })(\"keydown.arrowDown\", function TuiInputRangeComponent_Template_tui_input_number_keydown_arrowDown_1_listener($event) {\n            return ctx.changeByStep($event, [-1, 0]);\n          })(\"keydown.arrowUp\", function TuiInputRangeComponent_Template_tui_input_number_keydown_arrowUp_1_listener($event) {\n            return ctx.changeByStep($event, [1, 0]);\n          })(\"ngModelChange\", function TuiInputRangeComponent_Template_tui_input_number_ngModelChange_1_listener($event) {\n            return ctx.onInputLeft($event);\n          });\n          i0.ɵɵprojection(3);\n          i0.ɵɵtemplate(4, TuiInputRangeComponent_div_4_Template, 2, 4, \"div\", 2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"tui-input-number\", 3);\n          i0.ɵɵpipe(6, \"i18nPlural\");\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function TuiInputRangeComponent_Template_tui_input_number_ngModelChange_5_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.rightTextfieldValue, $event) || (ctx.rightTextfieldValue = $event);\n            return $event;\n          });\n          i0.ɵɵlistener(\"focusedChange\", function TuiInputRangeComponent_Template_tui_input_number_focusedChange_5_listener($event) {\n            return ctx.onTextInputFocused($event);\n          })(\"keydown.arrowDown\", function TuiInputRangeComponent_Template_tui_input_number_keydown_arrowDown_5_listener($event) {\n            return ctx.changeByStep($event, [0, -1]);\n          })(\"keydown.arrowUp\", function TuiInputRangeComponent_Template_tui_input_number_keydown_arrowUp_5_listener($event) {\n            return ctx.changeByStep($event, [0, 1]);\n          })(\"ngModelChange\", function TuiInputRangeComponent_Template_tui_input_number_ngModelChange_5_listener($event) {\n            return ctx.onInputRight($event);\n          });\n          i0.ɵɵtemplate(7, TuiInputRangeComponent_div_7_Template, 2, 4, \"div\", 2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"tui-range\", 4);\n          i0.ɵɵlistener(\"activeThumbChange\", function TuiInputRangeComponent_Template_tui_range_activeThumbChange_8_listener($event) {\n            return ctx.onActiveThumbChange($event);\n          })(\"mousedown.prevent\", function TuiInputRangeComponent_Template_tui_range_mousedown_prevent_8_listener() {\n            return ctx.focusToTextInput();\n          })(\"ngModelChange\", function TuiInputRangeComponent_Template_tui_range_ngModelChange_8_listener($event) {\n            return ctx.onExternalValueUpdate($event);\n          });\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"appearance\", ctx.appearance)(\"disabled\", ctx.disabled)(\"focus\", ctx.computedFocused)(\"hover\", ctx.pseudoHover)(\"invalid\", ctx.computedInvalid)(\"readOnly\", ctx.readOnly);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"disabled\", ctx.computedDisabled)(\"max\", ctx.value[1])(\"min\", ctx.min)(\"ngModelOptions\", i0.ɵɵpureFunction0(39, _c1))(\"readOnly\", ctx.readOnly)(\"tuiNumberFormat\", i0.ɵɵpureFunction1(40, _c2, ctx.precision))(\"tuiTextfieldPostfix\", ctx.pluralize ? i0.ɵɵpipeBind2(2, 33, ctx.value[0], ctx.pluralize) : \"\");\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.leftTextfieldValue);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.showLeftValueContent);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"disabled\", ctx.computedDisabled)(\"max\", ctx.max)(\"min\", ctx.value[0])(\"ngModelOptions\", i0.ɵɵpureFunction0(42, _c1))(\"readOnly\", ctx.readOnly)(\"tuiNumberFormat\", i0.ɵɵpureFunction1(43, _c2, ctx.precision))(\"tuiTextfieldPostfix\", ctx.pluralize ? i0.ɵɵpipeBind2(6, 36, ctx.value[1], ctx.pluralize) : \"\");\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.rightTextfieldValue);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.showRightValueContent);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"disabled\", ctx.readOnly || ctx.disabled)(\"focusable\", false)(\"keySteps\", ctx.computeKeySteps(ctx.keySteps, ctx.min, ctx.max))(\"max\", ctx.max)(\"min\", ctx.min)(\"ngModel\", ctx.value)(\"ngModelOptions\", i0.ɵɵpureFunction0(45, _c1))(\"segments\", ctx.segments)(\"step\", ctx.step);\n        }\n      },\n      dependencies: [i1.NgIf, i2.NgControlStatus, i2.NgModel, i3.PolymorpheusOutlet, i4.TuiActiveZone, i5.TuiInputNumberComponent, i5.TuiInputNumberDirective, i6.TuiRange, i7.TuiWrapperDirective, i7.TuiTextfieldAppearanceDirective, i7.TuiTextfieldPostfixDirective, i8.TuiNumberFormat, i1.I18nPluralPipe],\n      styles: [\".t-wrapper[_ngcontent-%COMP%]{position:relative}.t-left[_ngcontent-%COMP%]{inline-size:100%}.t-right[_ngcontent-%COMP%]{position:absolute;right:0;top:0;display:flex;inline-size:50%;block-size:100%;text-align:end}[_nghost-%COMP%]{display:block;border-radius:var(--tui-radius-m)}[_nghost-%COMP%]   *:disabled[_nghost-%COMP%], *:disabled   [_nghost-%COMP%]{pointer-events:none}.t-range[_ngcontent-%COMP%]{position:absolute;top:100%;left:0;right:0;z-index:1;margin:-.125rem 0 0}\"],\n      changeDetection: 0\n    });\n  }\n}\n__decorate([tuiPure], TuiInputRangeComponent.prototype, \"computeKeySteps\", null);\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiInputRangeComponent, [{\n    type: Component,\n    args: [{\n      standalone: false,\n      selector: 'tui-input-range',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [tuiAsFocusableItemAccessor(TuiInputRangeComponent), tuiAsControl(TuiInputRangeComponent), tuiSliderOptionsProvider({\n        trackColor: 'transparent'\n      }), TEXTFIELD_CONTROLLER_PROVIDER],\n      host: {\n        '[attr.data-size]': 'controller.size',\n        '[class._label-outside]': 'controller.labelOutside'\n      },\n      template: \"<div\\n    tuiWrapper\\n    class=\\\"t-wrapper\\\"\\n    [appearance]=\\\"appearance\\\"\\n    [disabled]=\\\"disabled\\\"\\n    [focus]=\\\"computedFocused\\\"\\n    [hover]=\\\"pseudoHover\\\"\\n    [invalid]=\\\"computedInvalid\\\"\\n    [readOnly]=\\\"readOnly\\\"\\n    (tuiActiveZoneChange)=\\\"onActiveZone($event)\\\"\\n>\\n    <tui-input-number\\n        automation-id=\\\"tui-input-range__left-input\\\"\\n        tuiTextfieldAppearance=\\\"none\\\"\\n        class=\\\"t-left\\\"\\n        [disabled]=\\\"computedDisabled\\\"\\n        [max]=\\\"value[1]\\\"\\n        [min]=\\\"min\\\"\\n        [ngModelOptions]=\\\"{standalone: true}\\\"\\n        [readOnly]=\\\"readOnly\\\"\\n        [tuiNumberFormat]=\\\"{precision}\\\"\\n        [tuiTextfieldPostfix]=\\\"pluralize ? (value[0] | i18nPlural: pluralize) : ''\\\"\\n        [(ngModel)]=\\\"leftTextfieldValue\\\"\\n        (focusedChange)=\\\"onTextInputFocused($event)\\\"\\n        (keydown.arrowDown)=\\\"changeByStep($event, [-1, 0])\\\"\\n        (keydown.arrowUp)=\\\"changeByStep($event, [1, 0])\\\"\\n        (ngModelChange)=\\\"onInputLeft($event)\\\"\\n    >\\n        <ng-content />\\n        <div\\n            *ngIf=\\\"showLeftValueContent\\\"\\n            ngProjectAs=\\\"tuiContent\\\"\\n        >\\n            <ng-container *polymorpheusOutlet=\\\"leftValueContent as text; context: {$implicit: value[0]}\\\">\\n                {{ text }}\\n            </ng-container>\\n        </div>\\n    </tui-input-number>\\n\\n    <tui-input-number\\n        automation-id=\\\"tui-input-range__right-input\\\"\\n        tuiTextfieldAppearance=\\\"none\\\"\\n        class=\\\"t-right\\\"\\n        [disabled]=\\\"computedDisabled\\\"\\n        [max]=\\\"max\\\"\\n        [min]=\\\"value[0]\\\"\\n        [ngModelOptions]=\\\"{standalone: true}\\\"\\n        [readOnly]=\\\"readOnly\\\"\\n        [tuiNumberFormat]=\\\"{precision}\\\"\\n        [tuiTextfieldPostfix]=\\\"pluralize ? (value[1] | i18nPlural: pluralize) : ''\\\"\\n        [(ngModel)]=\\\"rightTextfieldValue\\\"\\n        (focusedChange)=\\\"onTextInputFocused($event)\\\"\\n        (keydown.arrowDown)=\\\"changeByStep($event, [0, -1])\\\"\\n        (keydown.arrowUp)=\\\"changeByStep($event, [0, 1])\\\"\\n        (ngModelChange)=\\\"onInputRight($event)\\\"\\n    >\\n        <div\\n            *ngIf=\\\"showRightValueContent\\\"\\n            ngProjectAs=\\\"tuiContent\\\"\\n        >\\n            <ng-container *polymorpheusOutlet=\\\"rightValueContent as text; context: {$implicit: value[1]}\\\">\\n                {{ text }}\\n            </ng-container>\\n        </div>\\n    </tui-input-number>\\n\\n    <tui-range\\n        class=\\\"t-range\\\"\\n        [disabled]=\\\"readOnly || disabled\\\"\\n        [focusable]=\\\"false\\\"\\n        [keySteps]=\\\"computeKeySteps(keySteps, min, max)\\\"\\n        [max]=\\\"max\\\"\\n        [min]=\\\"min\\\"\\n        [ngModel]=\\\"value\\\"\\n        [ngModelOptions]=\\\"{standalone: true}\\\"\\n        [segments]=\\\"segments\\\"\\n        [step]=\\\"step\\\"\\n        (activeThumbChange)=\\\"onActiveThumbChange($event)\\\"\\n        (mousedown.prevent)=\\\"focusToTextInput()\\\"\\n        (ngModelChange)=\\\"onExternalValueUpdate($event)\\\"\\n    />\\n</div>\\n\",\n      styles: [\".t-wrapper{position:relative}.t-left{inline-size:100%}.t-right{position:absolute;right:0;top:0;display:flex;inline-size:50%;block-size:100%;text-align:end}:host{display:block;border-radius:var(--tui-radius-m)}:host :host-context(*:disabled){pointer-events:none}.t-range{position:absolute;top:100%;left:0;right:0;z-index:1;margin:-.125rem 0 0}\\n\"]\n    }]\n  }], null, {\n    inputNumberRefs: [{\n      type: ViewChildren,\n      args: [TuiInputNumberComponent]\n    }],\n    range: [{\n      type: ViewChild,\n      args: [TuiRange, {\n        read: ElementRef\n      }]\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    quantum: [{\n      type: Input\n    }],\n    steps: [{\n      type: Input\n    }],\n    segments: [{\n      type: Input\n    }],\n    keySteps: [{\n      type: Input\n    }],\n    leftValueContent: [{\n      type: Input\n    }],\n    rightValueContent: [{\n      type: Input\n    }],\n    pluralize: [{\n      type: Input\n    }],\n    computeKeySteps: []\n  });\n})();\nclass TuiInputRangeModule {\n  static {\n    this.ɵfac = function TuiInputRangeModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiInputRangeModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: TuiInputRangeModule,\n      declarations: [TuiInputRangeComponent],\n      imports: [CommonModule, FormsModule, PolymorpheusOutlet, PolymorpheusTemplate, TuiActiveZone, TuiInputNumberModule, TuiRange, TuiWrapperModule, TuiTextfieldControllerModule, TuiNumberFormat],\n      exports: [TuiInputRangeComponent]\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [CommonModule, FormsModule, TuiInputNumberModule, TuiRange, TuiWrapperModule, TuiTextfieldControllerModule]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiInputRangeModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, FormsModule, PolymorpheusOutlet, PolymorpheusTemplate, TuiActiveZone, TuiInputNumberModule, TuiRange, TuiWrapperModule, TuiTextfieldControllerModule, TuiNumberFormat],\n      declarations: [TuiInputRangeComponent],\n      exports: [TuiInputRangeComponent]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiInputRangeComponent, TuiInputRangeModule };","map":{"version":3,"names":["__decorate","i0","inject","ElementRef","Component","ChangeDetectionStrategy","ViewChildren","ViewChild","Input","NgModule","EMPTY_QUERY","TUI_IS_MOBILE","tuiInjectElement","tuiIsNativeFocusedIn","tuiIsNativeFocused","tuiRound","tuiClamp","tuiPure","tuiGetFractionPartPadded","i6","TuiRange","TUI_FLOATING_PRECISION","tuiSliderOptionsProvider","AbstractTuiControl","tuiAsControl","i5","TuiInputNumberComponent","TuiInputNumberModule","i7","TUI_TEXTFIELD_WATCHED_CONTROLLER","TEXTFIELD_CONTROLLER_PROVIDER","TuiWrapperModule","TuiTextfieldControllerModule","tuiAsFocusableItemAccessor","i1","CommonModule","i2","FormsModule","i3","PolymorpheusOutlet","PolymorpheusTemplate","i4","TuiActiveZone","i8","TuiNumberFormat","_c0","_c1","standalone","_c2","a0","precision","_c3","$implicit","TuiInputRangeComponent_div_4_ng_container_1_Template","rf","ctx","ɵɵelementContainerStart","ɵɵtext","ɵɵelementContainerEnd","text_r1","polymorpheusOutlet","ɵɵadvance","ɵɵtextInterpolate1","TuiInputRangeComponent_div_4_Template","ɵɵelementStart","ɵɵtemplate","ɵɵelementEnd","ctx_r1","ɵɵnextContext","ɵɵproperty","leftValueContent","ɵɵpureFunction1","value","TuiInputRangeComponent_div_7_ng_container_1_Template","text_r3","TuiInputRangeComponent_div_7_Template","rightValueContent","TuiInputRangeComponent","constructor","arguments","inputNumberRefs","isMobile","el","leftTextfieldValue","safeCurrentValue","rightTextfieldValue","lastActiveSide","controller","min","max","quantum","steps","segments","keySteps","pluralize","nativeFocusableElement","disabled","leftFocusableElement","rightFocusableElement","focused","writeValue","updateTextfieldValues","first","last","appearance","showLeftValueContent","Boolean","range","nativeElement","showRightValueContent","length","computedSteps","step","computeKeySteps","onActiveZone","active","updateFocused","onTextInputFocused","changeByStep","event","leftCoefficient","rightCoefficient","readOnly","preventDefault","newValue","valueGuard","onExternalValueUpdate","onInputLeft","safelyUpdateValue","onInputRight","focusToTextInput","element","focus","onActiveThumbChange","activeThumb","getFallbackValue","leftValue","rightValue","leftCalibratedValue","calibrate","rightCalibratedValue","Math","roundedValue","round","ɵfac","ɵTuiInputRangeComponent_BaseFactory","TuiInputRangeComponent_Factory","__ngFactoryType__","ɵɵgetInheritedFactory","ɵcmp","ɵɵdefineComponent","type","selectors","viewQuery","TuiInputRangeComponent_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","hostVars","hostBindings","TuiInputRangeComponent_HostBindings","ɵɵattribute","size","ɵɵclassProp","labelOutside","inputs","features","ɵɵProvidersFeature","trackColor","ɵɵInheritDefinitionFeature","ngContentSelectors","decls","vars","consts","template","TuiInputRangeComponent_Template","ɵɵprojectionDef","ɵɵlistener","TuiInputRangeComponent_Template_div_tuiActiveZoneChange_0_listener","$event","ɵɵpipe","ɵɵtwoWayListener","TuiInputRangeComponent_Template_tui_input_number_ngModelChange_1_listener","ɵɵtwoWayBindingSet","TuiInputRangeComponent_Template_tui_input_number_focusedChange_1_listener","TuiInputRangeComponent_Template_tui_input_number_keydown_arrowDown_1_listener","TuiInputRangeComponent_Template_tui_input_number_keydown_arrowUp_1_listener","ɵɵprojection","TuiInputRangeComponent_Template_tui_input_number_ngModelChange_5_listener","TuiInputRangeComponent_Template_tui_input_number_focusedChange_5_listener","TuiInputRangeComponent_Template_tui_input_number_keydown_arrowDown_5_listener","TuiInputRangeComponent_Template_tui_input_number_keydown_arrowUp_5_listener","TuiInputRangeComponent_Template_tui_range_activeThumbChange_8_listener","TuiInputRangeComponent_Template_tui_range_mousedown_prevent_8_listener","TuiInputRangeComponent_Template_tui_range_ngModelChange_8_listener","computedFocused","pseudoHover","computedInvalid","computedDisabled","ɵɵpureFunction0","ɵɵpipeBind2","ɵɵtwoWayProperty","dependencies","NgIf","NgControlStatus","NgModel","TuiInputNumberDirective","TuiWrapperDirective","TuiTextfieldAppearanceDirective","TuiTextfieldPostfixDirective","I18nPluralPipe","styles","changeDetection","prototype","ngDevMode","ɵsetClassMetadata","args","selector","OnPush","providers","host","read","TuiInputRangeModule","TuiInputRangeModule_Factory","ɵmod","ɵɵdefineNgModule","declarations","imports","exports","ɵinj","ɵɵdefineInjector"],"sources":["C:/Users/Asus-PC/Downloads/WebLibraryNew/WebLibrary/WebLibraryApp/Frontend/node_modules/@taiga-ui/legacy/fesm2022/taiga-ui-legacy-components-input-range.mjs"],"sourcesContent":["import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { inject, ElementRef, Component, ChangeDetectionStrategy, ViewChildren, ViewChild, Input, NgModule } from '@angular/core';\nimport { EMPTY_QUERY } from '@taiga-ui/cdk/constants';\nimport { TUI_IS_MOBILE } from '@taiga-ui/cdk/tokens';\nimport { tuiInjectElement } from '@taiga-ui/cdk/utils/dom';\nimport { tuiIsNativeFocusedIn, tuiIsNativeFocused } from '@taiga-ui/cdk/utils/focus';\nimport { tuiRound, tuiClamp } from '@taiga-ui/cdk/utils/math';\nimport { tuiPure } from '@taiga-ui/cdk/utils/miscellaneous';\nimport { tuiGetFractionPartPadded } from '@taiga-ui/core/utils/format';\nimport * as i6 from '@taiga-ui/kit/components/range';\nimport { TuiRange } from '@taiga-ui/kit/components/range';\nimport { TUI_FLOATING_PRECISION, tuiSliderOptionsProvider } from '@taiga-ui/kit/components/slider';\nimport { AbstractTuiControl, tuiAsControl } from '@taiga-ui/legacy/classes';\nimport * as i5 from '@taiga-ui/legacy/components/input-number';\nimport { TuiInputNumberComponent, TuiInputNumberModule } from '@taiga-ui/legacy/components/input-number';\nimport * as i7 from '@taiga-ui/legacy/directives';\nimport { TUI_TEXTFIELD_WATCHED_CONTROLLER, TEXTFIELD_CONTROLLER_PROVIDER, TuiWrapperModule, TuiTextfieldControllerModule } from '@taiga-ui/legacy/directives';\nimport { tuiAsFocusableItemAccessor } from '@taiga-ui/legacy/tokens';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i2 from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport * as i3 from '@taiga-ui/polymorpheus';\nimport { PolymorpheusOutlet, PolymorpheusTemplate } from '@taiga-ui/polymorpheus';\nimport * as i4 from '@taiga-ui/cdk/directives/active-zone';\nimport { TuiActiveZone } from '@taiga-ui/cdk/directives/active-zone';\nimport * as i8 from '@taiga-ui/core/directives/number-format';\nimport { TuiNumberFormat } from '@taiga-ui/core/directives/number-format';\n\nclass TuiInputRangeComponent extends AbstractTuiControl {\n    constructor() {\n        super(...arguments);\n        this.inputNumberRefs = EMPTY_QUERY;\n        this.isMobile = inject(TUI_IS_MOBILE);\n        this.el = tuiInjectElement();\n        this.leftTextfieldValue = this.safeCurrentValue[0];\n        this.rightTextfieldValue = this.safeCurrentValue[1];\n        this.lastActiveSide = 'left';\n        this.controller = inject(TUI_TEXTFIELD_WATCHED_CONTROLLER);\n        this.min = 0;\n        this.max = 100;\n        this.quantum = 1;\n        this.steps = 0;\n        this.segments = 1;\n        this.keySteps = null;\n        this.pluralize = null;\n    }\n    get nativeFocusableElement() {\n        return this.disabled\n            ? null\n            : this.leftFocusableElement || this.rightFocusableElement;\n    }\n    get focused() {\n        return tuiIsNativeFocusedIn(this.el);\n    }\n    writeValue(value) {\n        super.writeValue(value);\n        this.updateTextfieldValues(this.value);\n    }\n    get leftFocusableElement() {\n        return this.inputNumberRefs.first?.nativeFocusableElement || null;\n    }\n    get rightFocusableElement() {\n        return this.inputNumberRefs.last?.nativeFocusableElement || null;\n    }\n    get appearance() {\n        return this.controller.appearance;\n    }\n    get showLeftValueContent() {\n        return Boolean(this.leftValueContent &&\n            !tuiIsNativeFocused(this.leftFocusableElement) &&\n            !(tuiIsNativeFocusedIn(this.range?.nativeElement) &&\n                this.lastActiveSide === 'left'));\n    }\n    get showRightValueContent() {\n        return Boolean(this.rightValueContent &&\n            !tuiIsNativeFocused(this.rightFocusableElement) &&\n            !(tuiIsNativeFocusedIn(this.range?.nativeElement) &&\n                this.lastActiveSide === 'right'));\n    }\n    get precision() {\n        return tuiGetFractionPartPadded(this.quantum).length;\n    }\n    get computedSteps() {\n        return this.steps || (this.max - this.min) / this.quantum;\n    }\n    get step() {\n        return (this.max - this.min) / this.computedSteps;\n    }\n    computeKeySteps(keySteps, min, max) {\n        return (keySteps || [\n            [0, min],\n            [100, max],\n        ]);\n    }\n    onActiveZone(active) {\n        this.updateFocused(active);\n    }\n    onTextInputFocused(focused) {\n        if (!focused) {\n            this.updateTextfieldValues(this.value);\n        }\n    }\n    changeByStep(event, [leftCoefficient, rightCoefficient]) {\n        if (this.readOnly) {\n            return;\n        }\n        event.preventDefault();\n        const newValue = this.valueGuard([\n            this.value[0] + leftCoefficient * this.step,\n            this.value[1] + rightCoefficient * this.step,\n        ]);\n        if (newValue[0] !== this.value[0] || newValue[1] !== this.value[1]) {\n            this.onExternalValueUpdate(newValue);\n        }\n    }\n    onInputLeft(value) {\n        this.safelyUpdateValue([value ?? this.safeCurrentValue[0], this.value[1]]);\n    }\n    onInputRight(value) {\n        this.safelyUpdateValue([this.value[0], value ?? this.safeCurrentValue[1]]);\n    }\n    onExternalValueUpdate(value) {\n        this.safelyUpdateValue(value);\n        this.updateTextfieldValues(this.value);\n    }\n    focusToTextInput() {\n        const element = this.lastActiveSide === 'left'\n            ? this.leftFocusableElement\n            : this.rightFocusableElement;\n        if (!this.isMobile && element) {\n            element.focus();\n        }\n    }\n    onActiveThumbChange(activeThumb) {\n        this.lastActiveSide = activeThumb;\n    }\n    getFallbackValue() {\n        return [0, 0];\n    }\n    safelyUpdateValue(value) {\n        this.value = this.valueGuard(value);\n    }\n    valueGuard([leftValue, rightValue]) {\n        const leftCalibratedValue = this.calibrate(leftValue);\n        const rightCalibratedValue = this.calibrate(rightValue);\n        return [\n            Math.min(leftCalibratedValue, this.value[1]),\n            Math.max(rightCalibratedValue, this.value[0]),\n        ];\n    }\n    calibrate(value) {\n        const roundedValue = tuiRound(Math.round(value / this.quantum) * this.quantum, TUI_FLOATING_PRECISION);\n        return tuiClamp(roundedValue, this.min, this.max);\n    }\n    updateTextfieldValues([leftValue, rightValue]) {\n        this.leftTextfieldValue = leftValue;\n        this.rightTextfieldValue = rightValue;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiInputRangeComponent, deps: null, target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiInputRangeComponent, selector: \"tui-input-range\", inputs: { min: \"min\", max: \"max\", quantum: \"quantum\", steps: \"steps\", segments: \"segments\", keySteps: \"keySteps\", leftValueContent: \"leftValueContent\", rightValueContent: \"rightValueContent\", pluralize: \"pluralize\" }, host: { properties: { \"attr.data-size\": \"controller.size\", \"class._label-outside\": \"controller.labelOutside\" } }, providers: [\n            tuiAsFocusableItemAccessor(TuiInputRangeComponent),\n            tuiAsControl(TuiInputRangeComponent),\n            tuiSliderOptionsProvider({ trackColor: 'transparent' }),\n            TEXTFIELD_CONTROLLER_PROVIDER,\n        ], viewQueries: [{ propertyName: \"range\", first: true, predicate: TuiRange, descendants: true, read: ElementRef }, { propertyName: \"inputNumberRefs\", predicate: TuiInputNumberComponent, descendants: true }], usesInheritance: true, ngImport: i0, template: \"<div\\n    tuiWrapper\\n    class=\\\"t-wrapper\\\"\\n    [appearance]=\\\"appearance\\\"\\n    [disabled]=\\\"disabled\\\"\\n    [focus]=\\\"computedFocused\\\"\\n    [hover]=\\\"pseudoHover\\\"\\n    [invalid]=\\\"computedInvalid\\\"\\n    [readOnly]=\\\"readOnly\\\"\\n    (tuiActiveZoneChange)=\\\"onActiveZone($event)\\\"\\n>\\n    <tui-input-number\\n        automation-id=\\\"tui-input-range__left-input\\\"\\n        tuiTextfieldAppearance=\\\"none\\\"\\n        class=\\\"t-left\\\"\\n        [disabled]=\\\"computedDisabled\\\"\\n        [max]=\\\"value[1]\\\"\\n        [min]=\\\"min\\\"\\n        [ngModelOptions]=\\\"{standalone: true}\\\"\\n        [readOnly]=\\\"readOnly\\\"\\n        [tuiNumberFormat]=\\\"{precision}\\\"\\n        [tuiTextfieldPostfix]=\\\"pluralize ? (value[0] | i18nPlural: pluralize) : ''\\\"\\n        [(ngModel)]=\\\"leftTextfieldValue\\\"\\n        (focusedChange)=\\\"onTextInputFocused($event)\\\"\\n        (keydown.arrowDown)=\\\"changeByStep($event, [-1, 0])\\\"\\n        (keydown.arrowUp)=\\\"changeByStep($event, [1, 0])\\\"\\n        (ngModelChange)=\\\"onInputLeft($event)\\\"\\n    >\\n        <ng-content />\\n        <div\\n            *ngIf=\\\"showLeftValueContent\\\"\\n            ngProjectAs=\\\"tuiContent\\\"\\n        >\\n            <ng-container *polymorpheusOutlet=\\\"leftValueContent as text; context: {$implicit: value[0]}\\\">\\n                {{ text }}\\n            </ng-container>\\n        </div>\\n    </tui-input-number>\\n\\n    <tui-input-number\\n        automation-id=\\\"tui-input-range__right-input\\\"\\n        tuiTextfieldAppearance=\\\"none\\\"\\n        class=\\\"t-right\\\"\\n        [disabled]=\\\"computedDisabled\\\"\\n        [max]=\\\"max\\\"\\n        [min]=\\\"value[0]\\\"\\n        [ngModelOptions]=\\\"{standalone: true}\\\"\\n        [readOnly]=\\\"readOnly\\\"\\n        [tuiNumberFormat]=\\\"{precision}\\\"\\n        [tuiTextfieldPostfix]=\\\"pluralize ? (value[1] | i18nPlural: pluralize) : ''\\\"\\n        [(ngModel)]=\\\"rightTextfieldValue\\\"\\n        (focusedChange)=\\\"onTextInputFocused($event)\\\"\\n        (keydown.arrowDown)=\\\"changeByStep($event, [0, -1])\\\"\\n        (keydown.arrowUp)=\\\"changeByStep($event, [0, 1])\\\"\\n        (ngModelChange)=\\\"onInputRight($event)\\\"\\n    >\\n        <div\\n            *ngIf=\\\"showRightValueContent\\\"\\n            ngProjectAs=\\\"tuiContent\\\"\\n        >\\n            <ng-container *polymorpheusOutlet=\\\"rightValueContent as text; context: {$implicit: value[1]}\\\">\\n                {{ text }}\\n            </ng-container>\\n        </div>\\n    </tui-input-number>\\n\\n    <tui-range\\n        class=\\\"t-range\\\"\\n        [disabled]=\\\"readOnly || disabled\\\"\\n        [focusable]=\\\"false\\\"\\n        [keySteps]=\\\"computeKeySteps(keySteps, min, max)\\\"\\n        [max]=\\\"max\\\"\\n        [min]=\\\"min\\\"\\n        [ngModel]=\\\"value\\\"\\n        [ngModelOptions]=\\\"{standalone: true}\\\"\\n        [segments]=\\\"segments\\\"\\n        [step]=\\\"step\\\"\\n        (activeThumbChange)=\\\"onActiveThumbChange($event)\\\"\\n        (mousedown.prevent)=\\\"focusToTextInput()\\\"\\n        (ngModelChange)=\\\"onExternalValueUpdate($event)\\\"\\n    />\\n</div>\\n\", styles: [\".t-wrapper{position:relative}.t-left{inline-size:100%}.t-right{position:absolute;right:0;top:0;display:flex;inline-size:50%;block-size:100%;text-align:end}:host{display:block;border-radius:var(--tui-radius-m)}:host :host-context(*:disabled){pointer-events:none}.t-range{position:absolute;top:100%;left:0;right:0;z-index:1;margin:-.125rem 0 0}\\n\"], dependencies: [{ kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { kind: \"directive\", type: i3.PolymorpheusOutlet, selector: \"[polymorpheusOutlet]\", inputs: [\"polymorpheusOutlet\", \"polymorpheusOutletContext\"] }, { kind: \"directive\", type: i4.TuiActiveZone, selector: \"[tuiActiveZone]:not(ng-container), [tuiActiveZoneChange]:not(ng-container), [tuiActiveZoneParent]:not(ng-container)\", inputs: [\"tuiActiveZoneParent\"], outputs: [\"tuiActiveZoneChange\"], exportAs: [\"tuiActiveZone\"] }, { kind: \"component\", type: i5.TuiInputNumberComponent, selector: \"tui-input-number\", inputs: [\"min\", \"max\", \"step\"] }, { kind: \"directive\", type: i5.TuiInputNumberDirective, selector: \"tui-input-number\" }, { kind: \"component\", type: i6.TuiRange, selector: \"tui-range\", inputs: [\"min\", \"max\", \"step\", \"size\", \"segments\", \"keySteps\", \"focusable\", \"margin\", \"limit\"] }, { kind: \"directive\", type: i7.TuiWrapperDirective, selector: \"[tuiWrapper]\", inputs: [\"disabled\", \"readOnly\", \"hover\", \"active\", \"focus\", \"invalid\", \"appearance\"] }, { kind: \"directive\", type: i7.TuiTextfieldAppearanceDirective, selector: \"[tuiTextfieldAppearance]\", inputs: [\"tuiTextfieldAppearance\"] }, { kind: \"directive\", type: i7.TuiTextfieldPostfixDirective, selector: \"[tuiTextfieldPostfix]\", inputs: [\"tuiTextfieldPostfix\"] }, { kind: \"directive\", type: i8.TuiNumberFormat, selector: \"[tuiNumberFormat]\", inputs: [\"tuiNumberFormat\"] }, { kind: \"pipe\", type: i1.I18nPluralPipe, name: \"i18nPlural\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\n__decorate([\n    tuiPure\n], TuiInputRangeComponent.prototype, \"computeKeySteps\", null);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiInputRangeComponent, decorators: [{\n            type: Component,\n            args: [{ standalone: false, selector: 'tui-input-range', changeDetection: ChangeDetectionStrategy.OnPush, providers: [\n                        tuiAsFocusableItemAccessor(TuiInputRangeComponent),\n                        tuiAsControl(TuiInputRangeComponent),\n                        tuiSliderOptionsProvider({ trackColor: 'transparent' }),\n                        TEXTFIELD_CONTROLLER_PROVIDER,\n                    ], host: {\n                        '[attr.data-size]': 'controller.size',\n                        '[class._label-outside]': 'controller.labelOutside',\n                    }, template: \"<div\\n    tuiWrapper\\n    class=\\\"t-wrapper\\\"\\n    [appearance]=\\\"appearance\\\"\\n    [disabled]=\\\"disabled\\\"\\n    [focus]=\\\"computedFocused\\\"\\n    [hover]=\\\"pseudoHover\\\"\\n    [invalid]=\\\"computedInvalid\\\"\\n    [readOnly]=\\\"readOnly\\\"\\n    (tuiActiveZoneChange)=\\\"onActiveZone($event)\\\"\\n>\\n    <tui-input-number\\n        automation-id=\\\"tui-input-range__left-input\\\"\\n        tuiTextfieldAppearance=\\\"none\\\"\\n        class=\\\"t-left\\\"\\n        [disabled]=\\\"computedDisabled\\\"\\n        [max]=\\\"value[1]\\\"\\n        [min]=\\\"min\\\"\\n        [ngModelOptions]=\\\"{standalone: true}\\\"\\n        [readOnly]=\\\"readOnly\\\"\\n        [tuiNumberFormat]=\\\"{precision}\\\"\\n        [tuiTextfieldPostfix]=\\\"pluralize ? (value[0] | i18nPlural: pluralize) : ''\\\"\\n        [(ngModel)]=\\\"leftTextfieldValue\\\"\\n        (focusedChange)=\\\"onTextInputFocused($event)\\\"\\n        (keydown.arrowDown)=\\\"changeByStep($event, [-1, 0])\\\"\\n        (keydown.arrowUp)=\\\"changeByStep($event, [1, 0])\\\"\\n        (ngModelChange)=\\\"onInputLeft($event)\\\"\\n    >\\n        <ng-content />\\n        <div\\n            *ngIf=\\\"showLeftValueContent\\\"\\n            ngProjectAs=\\\"tuiContent\\\"\\n        >\\n            <ng-container *polymorpheusOutlet=\\\"leftValueContent as text; context: {$implicit: value[0]}\\\">\\n                {{ text }}\\n            </ng-container>\\n        </div>\\n    </tui-input-number>\\n\\n    <tui-input-number\\n        automation-id=\\\"tui-input-range__right-input\\\"\\n        tuiTextfieldAppearance=\\\"none\\\"\\n        class=\\\"t-right\\\"\\n        [disabled]=\\\"computedDisabled\\\"\\n        [max]=\\\"max\\\"\\n        [min]=\\\"value[0]\\\"\\n        [ngModelOptions]=\\\"{standalone: true}\\\"\\n        [readOnly]=\\\"readOnly\\\"\\n        [tuiNumberFormat]=\\\"{precision}\\\"\\n        [tuiTextfieldPostfix]=\\\"pluralize ? (value[1] | i18nPlural: pluralize) : ''\\\"\\n        [(ngModel)]=\\\"rightTextfieldValue\\\"\\n        (focusedChange)=\\\"onTextInputFocused($event)\\\"\\n        (keydown.arrowDown)=\\\"changeByStep($event, [0, -1])\\\"\\n        (keydown.arrowUp)=\\\"changeByStep($event, [0, 1])\\\"\\n        (ngModelChange)=\\\"onInputRight($event)\\\"\\n    >\\n        <div\\n            *ngIf=\\\"showRightValueContent\\\"\\n            ngProjectAs=\\\"tuiContent\\\"\\n        >\\n            <ng-container *polymorpheusOutlet=\\\"rightValueContent as text; context: {$implicit: value[1]}\\\">\\n                {{ text }}\\n            </ng-container>\\n        </div>\\n    </tui-input-number>\\n\\n    <tui-range\\n        class=\\\"t-range\\\"\\n        [disabled]=\\\"readOnly || disabled\\\"\\n        [focusable]=\\\"false\\\"\\n        [keySteps]=\\\"computeKeySteps(keySteps, min, max)\\\"\\n        [max]=\\\"max\\\"\\n        [min]=\\\"min\\\"\\n        [ngModel]=\\\"value\\\"\\n        [ngModelOptions]=\\\"{standalone: true}\\\"\\n        [segments]=\\\"segments\\\"\\n        [step]=\\\"step\\\"\\n        (activeThumbChange)=\\\"onActiveThumbChange($event)\\\"\\n        (mousedown.prevent)=\\\"focusToTextInput()\\\"\\n        (ngModelChange)=\\\"onExternalValueUpdate($event)\\\"\\n    />\\n</div>\\n\", styles: [\".t-wrapper{position:relative}.t-left{inline-size:100%}.t-right{position:absolute;right:0;top:0;display:flex;inline-size:50%;block-size:100%;text-align:end}:host{display:block;border-radius:var(--tui-radius-m)}:host :host-context(*:disabled){pointer-events:none}.t-range{position:absolute;top:100%;left:0;right:0;z-index:1;margin:-.125rem 0 0}\\n\"] }]\n        }], propDecorators: { inputNumberRefs: [{\n                type: ViewChildren,\n                args: [TuiInputNumberComponent]\n            }], range: [{\n                type: ViewChild,\n                args: [TuiRange, { read: ElementRef }]\n            }], min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], quantum: [{\n                type: Input\n            }], steps: [{\n                type: Input\n            }], segments: [{\n                type: Input\n            }], keySteps: [{\n                type: Input\n            }], leftValueContent: [{\n                type: Input\n            }], rightValueContent: [{\n                type: Input\n            }], pluralize: [{\n                type: Input\n            }], computeKeySteps: [] } });\n\nclass TuiInputRangeModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiInputRangeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiInputRangeModule, declarations: [TuiInputRangeComponent], imports: [CommonModule,\n            FormsModule,\n            PolymorpheusOutlet,\n            PolymorpheusTemplate,\n            TuiActiveZone,\n            TuiInputNumberModule,\n            TuiRange,\n            TuiWrapperModule,\n            TuiTextfieldControllerModule,\n            TuiNumberFormat], exports: [TuiInputRangeComponent] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiInputRangeModule, imports: [CommonModule,\n            FormsModule,\n            TuiInputNumberModule,\n            TuiRange,\n            TuiWrapperModule,\n            TuiTextfieldControllerModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiInputRangeModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        FormsModule,\n                        PolymorpheusOutlet,\n                        PolymorpheusTemplate,\n                        TuiActiveZone,\n                        TuiInputNumberModule,\n                        TuiRange,\n                        TuiWrapperModule,\n                        TuiTextfieldControllerModule,\n                        TuiNumberFormat,\n                    ],\n                    declarations: [TuiInputRangeComponent],\n                    exports: [TuiInputRangeComponent],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiInputRangeComponent, TuiInputRangeModule };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}