{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { inject, Directive, Output } from '@angular/core';\nimport { ControlContainer, NgControl } from '@angular/forms';\nimport { Subject, distinctUntilChanged, switchAll, EMPTY } from 'rxjs';\nclass TuiValueChanges {\n  constructor() {\n    this.container = inject(ControlContainer, {\n      optional: true\n    });\n    this.control = inject(NgControl, {\n      optional: true\n    });\n    this.refresh$ = new Subject();\n    this.tuiValueChanges = this.refresh$.pipe(distinctUntilChanged(), switchAll(), distinctUntilChanged());\n  }\n  ngDoCheck() {\n    this.refresh$.next(this.control?.valueChanges || this.container?.valueChanges || EMPTY);\n  }\n  static {\n    this.ɵfac = function TuiValueChanges_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiValueChanges)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: TuiValueChanges,\n      selectors: [[\"\", \"tuiValueChanges\", \"\"]],\n      outputs: {\n        tuiValueChanges: \"tuiValueChanges\"\n      },\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiValueChanges, [{\n    type: Directive,\n    args: [{\n      standalone: true,\n      selector: '[tuiValueChanges]'\n    }]\n  }], null, {\n    tuiValueChanges: [{\n      type: Output\n    }]\n  });\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiValueChanges };","map":{"version":3,"names":["i0","inject","Directive","Output","ControlContainer","NgControl","Subject","distinctUntilChanged","switchAll","EMPTY","TuiValueChanges","constructor","container","optional","control","refresh$","tuiValueChanges","pipe","ngDoCheck","next","valueChanges","ɵfac","TuiValueChanges_Factory","__ngFactoryType__","ɵdir","ɵɵdefineDirective","type","selectors","outputs","standalone","ngDevMode","ɵsetClassMetadata","args","selector"],"sources":["C:/Users/Asus-PC/Downloads/WebLibraryNew/WebLibrary/WebLibraryApp/Frontend/node_modules/@taiga-ui/cdk/fesm2022/taiga-ui-cdk-directives-value-changes.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { inject, Directive, Output } from '@angular/core';\nimport { ControlContainer, NgControl } from '@angular/forms';\nimport { Subject, distinctUntilChanged, switchAll, EMPTY } from 'rxjs';\n\nclass TuiValueChanges {\n    constructor() {\n        this.container = inject(ControlContainer, { optional: true });\n        this.control = inject(NgControl, { optional: true });\n        this.refresh$ = new Subject();\n        this.tuiValueChanges = this.refresh$.pipe(distinctUntilChanged(), switchAll(), distinctUntilChanged());\n    }\n    ngDoCheck() {\n        this.refresh$.next(this.control?.valueChanges || this.container?.valueChanges || EMPTY);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiValueChanges, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiValueChanges, isStandalone: true, selector: \"[tuiValueChanges]\", outputs: { tuiValueChanges: \"tuiValueChanges\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiValueChanges, decorators: [{\n            type: Directive,\n            args: [{\n                    standalone: true,\n                    selector: '[tuiValueChanges]',\n                }]\n        }], propDecorators: { tuiValueChanges: [{\n                type: Output\n            }] } });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiValueChanges };\n"],"mappings":"AAAA,OAAO,KAAKA,EAAE,MAAM,eAAe;AACnC,SAASC,MAAM,EAAEC,SAAS,EAAEC,MAAM,QAAQ,eAAe;AACzD,SAASC,gBAAgB,EAAEC,SAAS,QAAQ,gBAAgB;AAC5D,SAASC,OAAO,EAAEC,oBAAoB,EAAEC,SAAS,EAAEC,KAAK,QAAQ,MAAM;AAEtE,MAAMC,eAAe,CAAC;EAClBC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,SAAS,GAAGX,MAAM,CAACG,gBAAgB,EAAE;MAAES,QAAQ,EAAE;IAAK,CAAC,CAAC;IAC7D,IAAI,CAACC,OAAO,GAAGb,MAAM,CAACI,SAAS,EAAE;MAAEQ,QAAQ,EAAE;IAAK,CAAC,CAAC;IACpD,IAAI,CAACE,QAAQ,GAAG,IAAIT,OAAO,CAAC,CAAC;IAC7B,IAAI,CAACU,eAAe,GAAG,IAAI,CAACD,QAAQ,CAACE,IAAI,CAACV,oBAAoB,CAAC,CAAC,EAAEC,SAAS,CAAC,CAAC,EAAED,oBAAoB,CAAC,CAAC,CAAC;EAC1G;EACAW,SAASA,CAAA,EAAG;IACR,IAAI,CAACH,QAAQ,CAACI,IAAI,CAAC,IAAI,CAACL,OAAO,EAAEM,YAAY,IAAI,IAAI,CAACR,SAAS,EAAEQ,YAAY,IAAIX,KAAK,CAAC;EAC3F;EACA;IAAS,IAAI,CAACY,IAAI,YAAAC,wBAAAC,iBAAA;MAAA,YAAAA,iBAAA,IAAyFb,eAAe;IAAA,CAAmD;EAAE;EAC/K;IAAS,IAAI,CAACc,IAAI,kBAD+ExB,EAAE,CAAAyB,iBAAA;MAAAC,IAAA,EACJhB,eAAe;MAAAiB,SAAA;MAAAC,OAAA;QAAAZ,eAAA;MAAA;MAAAa,UAAA;IAAA,EAAqH;EAAE;AACzO;AACA;EAAA,QAAAC,SAAA,oBAAAA,SAAA,KAHqG9B,EAAE,CAAA+B,iBAAA,CAGXrB,eAAe,EAAc,CAAC;IAC9GgB,IAAI,EAAExB,SAAS;IACf8B,IAAI,EAAE,CAAC;MACCH,UAAU,EAAE,IAAI;MAChBI,QAAQ,EAAE;IACd,CAAC;EACT,CAAC,CAAC,QAAkB;IAAEjB,eAAe,EAAE,CAAC;MAChCU,IAAI,EAAEvB;IACV,CAAC;EAAE,CAAC;AAAA;;AAEhB;AACA;AACA;;AAEA,SAASO,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}