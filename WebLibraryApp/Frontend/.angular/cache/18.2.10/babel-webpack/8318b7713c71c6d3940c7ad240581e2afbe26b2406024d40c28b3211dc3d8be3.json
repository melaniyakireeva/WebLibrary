{"ast":null,"code":"import { Router } from '@angular/router';\nimport { AuthService } from '../../services/auth/auth-service.service';\nimport { inject } from '@angular/core';\nimport _ from 'lodash';\nexport const userGuard = (route, state) => {\n  const authService = inject(AuthService);\n  const router = inject(Router);\n  const authInfo = authService.getUserInfo();\n  if (!_.isNil(authInfo)) {\n    return true;\n  } else {\n    router.navigate(['/auth']);\n    return false;\n  }\n};","map":{"version":3,"names":["Router","AuthService","inject","_","userGuard","route","state","authService","router","authInfo","getUserInfo","isNil","navigate"],"sources":["C:\\Users\\Asus-PC\\Downloads\\WebLibraryNew\\WebLibrary\\WebLibraryApp\\Frontend\\src\\app\\guard\\user\\user.guard.ts"],"sourcesContent":["import { CanActivateFn, Router } from '@angular/router';\r\nimport { AuthService } from '../../services/auth/auth-service.service';\r\nimport { inject } from '@angular/core';\r\nimport _ from 'lodash';\r\n\r\nexport const userGuard: CanActivateFn = (route, state) => {\r\n  const authService: AuthService = inject(AuthService);\r\n  const router = inject(Router);\r\n  const authInfo = authService.getUserInfo();\r\n  if (!_.isNil(authInfo)) {\r\n    return true;\r\n  } else {\r\n    router.navigate(['/auth']);\r\n    return false;\r\n  }\r\n};\r\n"],"mappings":"AAAA,SAAwBA,MAAM,QAAQ,iBAAiB;AACvD,SAASC,WAAW,QAAQ,0CAA0C;AACtE,SAASC,MAAM,QAAQ,eAAe;AACtC,OAAOC,CAAC,MAAM,QAAQ;AAEtB,OAAO,MAAMC,SAAS,GAAkBA,CAACC,KAAK,EAAEC,KAAK,KAAI;EACvD,MAAMC,WAAW,GAAgBL,MAAM,CAACD,WAAW,CAAC;EACpD,MAAMO,MAAM,GAAGN,MAAM,CAACF,MAAM,CAAC;EAC7B,MAAMS,QAAQ,GAAGF,WAAW,CAACG,WAAW,EAAE;EAC1C,IAAI,CAACP,CAAC,CAACQ,KAAK,CAACF,QAAQ,CAAC,EAAE;IACtB,OAAO,IAAI;EACb,CAAC,MAAM;IACLD,MAAM,CAACI,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;IAC1B,OAAO,KAAK;EACd;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}