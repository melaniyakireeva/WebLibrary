{"ast":null,"code":"import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { Directive, inject, EventEmitter, TemplateRef, Component, ChangeDetectionStrategy, ContentChild, ViewChild, Input, Output, Pipe, ContentChildren, Optional, forwardRef, NgModule } from '@angular/core';\nimport { tuiCreateToken, tuiProvideOptions, tuiIsString, tuiArrayToggle, tuiPure, tuiIsPresent, tuiGetOriginalArrayFromQueryList, tuiProvide } from '@taiga-ui/cdk/utils/miscellaneous';\nimport { tuiIsFlat } from '@taiga-ui/kit/utils';\nimport { TUI_TRUE_HANDLER, EMPTY_ARRAY, EMPTY_QUERY, TUI_DEFAULT_IDENTITY_MATCHER, EMPTY_FUNCTION } from '@taiga-ui/cdk/constants';\nimport { TUI_IS_MOBILE } from '@taiga-ui/cdk/tokens';\nimport { tuiGetClipboardDataText } from '@taiga-ui/cdk/utils/dom';\nimport { tuiIsNativeFocused } from '@taiga-ui/cdk/utils/focus';\nimport * as i2$2 from '@taiga-ui/core/components/data-list';\nimport { tuiAsDataListHost, TUI_DATA_LIST_ACCESSOR, TuiDataListDirective, TUI_DATA_LIST_HOST, TuiOption, tuiAsOptionContent, tuiAsDataList, TuiDataList } from '@taiga-ui/core/components/data-list';\nimport * as i1 from '@taiga-ui/core/directives/dropdown';\nimport { TuiDropdownOpen, TuiDropdownFixed, TuiDropdown } from '@taiga-ui/core/directives/dropdown';\nimport { TUI_ITEMS_HANDLERS, TUI_MULTI_SELECT_TEXTS } from '@taiga-ui/kit/tokens';\nimport { AbstractTuiNativeSelect, AbstractTuiMultipleControl, TuiStringifiableItem, tuiAsControl, AbstractTuiTextfieldHost } from '@taiga-ui/legacy/classes';\nimport { TUI_ARROW_MODE, TuiArrowComponent } from '@taiga-ui/legacy/components/arrow';\nimport * as i6 from '@taiga-ui/legacy/components/input-tag';\nimport { TUI_INPUT_TAG_OPTIONS, TuiInputTagComponent, TuiInputTagModule } from '@taiga-ui/legacy/components/input-tag';\nimport * as i5 from '@taiga-ui/legacy/directives';\nimport { TUI_TEXTFIELD_WATCHED_CONTROLLER, TEXTFIELD_CONTROLLER_PROVIDER, TuiWrapperModule, TuiTextfieldControllerModule, TuiLegacyDropdownOpenMonitorDirective } from '@taiga-ui/legacy/directives';\nimport { tuiAsFocusableItemAccessor, tuiAsTextfieldHost } from '@taiga-ui/legacy/tokens';\nimport * as i1$1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i2 from '@angular/forms';\nimport { NgControl, NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport * as i4 from '@taiga-ui/polymorpheus';\nimport { PolymorpheusComponent, PolymorpheusOutlet, PolymorpheusTemplate } from '@taiga-ui/polymorpheus';\nimport * as i6$1 from '@taiga-ui/cdk/pipes/mapper';\nimport { TuiMapperPipe } from '@taiga-ui/cdk/pipes/mapper';\nimport * as i2$1 from '@taiga-ui/cdk/directives/let';\nimport { TuiLet } from '@taiga-ui/cdk/directives/let';\nimport * as i3 from '@taiga-ui/core/components/link';\nimport { TuiLink } from '@taiga-ui/core/components/link';\nimport * as i3$1 from '@taiga-ui/kit/components/data-list-wrapper';\nimport { TuiDataListWrapper } from '@taiga-ui/kit/components/data-list-wrapper';\nimport * as i7 from '@taiga-ui/kit/pipes/stringify-content';\nimport { TuiStringifyContentPipe } from '@taiga-ui/kit/pipes/stringify-content';\nimport { TuiMultiSelectOptionComponent, TuiMultiSelectOptionModule } from '@taiga-ui/legacy/components/multi-select-option';\nimport { tuiQueryListChanges, tuiControlValue } from '@taiga-ui/cdk/observables';\nimport { map, combineLatest } from 'rxjs';\nconst _c0 = [\"*\", [[\"select\"]]];\nconst _c1 = [\"*\", \"select\"];\nconst _c2 = () => ({\n  standalone: true\n});\nconst _c3 = a0 => ({\n  $implicit: a0\n});\nfunction TuiMultiSelectComponent_ng_template_7_ng_content_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 1, [\"*ngIf\", \"isMobile\"]);\n  }\n}\nfunction TuiMultiSelectComponent_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TuiMultiSelectComponent_ng_template_7_ng_content_0_Template, 1, 0, \"ng-content\", 7);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.isMobile);\n  }\n}\nfunction TuiMultiSelectComponent_ng_container_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 8);\n  }\n}\nfunction TuiMultiSelectComponent_div_10_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const text_r4 = ctx.polymorpheusOutlet;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", text_r4, \" \");\n  }\n}\nfunction TuiMultiSelectComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtemplate(1, TuiMultiSelectComponent_div_10_span_1_Template, 2, 1, \"span\", 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    const inputTag_r2 = i0.ɵɵreference(2);\n    i0.ɵɵclassProp(\"t-content_fullsize\", inputTag_r2.labelOutside);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"polymorpheusOutlet\", ctx_r2.valueContent)(\"polymorpheusOutletContext\", i0.ɵɵpureFunction1(4, _c3, ctx_r2.value));\n  }\n}\nfunction TuiMultiSelectComponent_ng_template_11_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const text_r6 = ctx.polymorpheusOutlet;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", text_r6, \" \");\n  }\n}\nfunction TuiMultiSelectComponent_ng_template_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵlistener(\"mousedown.prevent.silent\", function TuiMultiSelectComponent_ng_template_11_Template_div_mousedown_prevent_silent_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      return i0.ɵɵresetView(0);\n    });\n    i0.ɵɵtemplate(1, TuiMultiSelectComponent_ng_template_11_ng_container_1_Template, 2, 1, \"ng-container\", 13);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"t-arrow_native-dropdown\", ctx_r2.nativeDropdownMode);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"polymorpheusOutlet\", ctx_r2.arrow);\n  }\n}\nconst _c4 = [\"tuiMultiSelectGroup\", \"\"];\nconst _c5 = [\"*\"];\nfunction TuiMultiSelectGroupComponent_span_0_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 4);\n    i0.ɵɵpipe(1, \"async\");\n    i0.ɵɵlistener(\"click\", function TuiMultiSelectGroupComponent_span_0_button_3_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const value_r2 = i0.ɵɵnextContext().tuiLet;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onClick(value_r2));\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"async\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    let tmp_4_0;\n    const value_r2 = i0.ɵɵnextContext().tuiLet;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", !!i0.ɵɵpipeBind1(1, 2, ctx_r2.disabled$));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", (tmp_4_0 = i0.ɵɵpipeBind1(3, 4, ctx_r2.multiSelectTexts$)) == null ? null : tmp_4_0[value_r2 ? \"none\" : \"all\"], \" \");\n  }\n}\nfunction TuiMultiSelectGroupComponent_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 1)(1, \"span\", 2);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, TuiMultiSelectGroupComponent_span_0_button_3_Template, 4, 6, \"button\", 3);\n    i0.ɵɵpipe(4, \"async\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r2.label);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.label && !i0.ɵɵpipeBind1(4, 2, ctx_r2.empty$));\n  }\n}\nconst _c6 = [\"multiple\", \"\", \"tuiSelect\", \"\"];\nfunction TuiNativeMultiSelectComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction TuiNativeMultiSelectComponent_tui_data_list_wrapper_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tui-data-list-wrapper\", 3);\n    i0.ɵɵpipe(1, \"tuiStringifyContent\");\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabledItemHandler\", ctx_r0.disabledItemHandler || ctx_r0.host.disableItemHandler)(\"itemContent\", i0.ɵɵpipeBind1(1, 3, ctx_r0.stringify))(\"items\", ctx_r0.items);\n  }\n}\nfunction TuiNativeMultiSelectComponent_option_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 4);\n    i0.ɵɵpipe(1, \"tuiMapper\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r2 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", ctx_r0.disabledItemHandler ? ctx_r0.disabledItemHandler(option_r2) : ctx_r0.host.disableItemHandler(option_r2))(\"selected\", i0.ɵɵpipeBind3(1, 4, option_r2, ctx_r0.selectedMapper, ctx_r0.control.value))(\"value\", ctx_r0.stringify(option_r2));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.stringify(option_r2), \"\\n\");\n  }\n}\nconst _c7 = [\"multiple\", \"\", \"tuiSelect\", \"\", \"labels\", \"\"];\nfunction TuiNativeMultiSelectGroupComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction TuiNativeMultiSelectGroupComponent_tui_data_list_wrapper_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tui-data-list-wrapper\", 3);\n    i0.ɵɵpipe(1, \"tuiStringifyContent\");\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabledItemHandler\", ctx_r0.disabledItemHandler || ctx_r0.host.disableItemHandler)(\"itemContent\", i0.ɵɵpipeBind1(1, 4, ctx_r0.stringify))(\"items\", ctx_r0.items)(\"labels\", ctx_r0.labels);\n  }\n}\nfunction TuiNativeMultiSelectGroupComponent_optgroup_3_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 6);\n    i0.ɵɵpipe(1, \"tuiMapper\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r2 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.disabledItemHandler ? ctx_r0.disabledItemHandler(option_r2) : ctx_r0.host.disableItemHandler(option_r2))(\"selected\", i0.ɵɵpipeBind3(1, 4, option_r2, ctx_r0.selectedMapper, ctx_r0.control.value))(\"value\", ctx_r0.stringify(option_r2));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.stringify(option_r2), \" \");\n  }\n}\nfunction TuiNativeMultiSelectGroupComponent_optgroup_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"optgroup\", 4);\n    i0.ɵɵtemplate(1, TuiNativeMultiSelectGroupComponent_optgroup_3_option_1_Template, 3, 8, \"option\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const group_r3 = ctx.$implicit;\n    const index_r4 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"label\", ctx_r0.labels[index_r4]);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", group_r3);\n  }\n}\nconst _c8 = \"[_nghost-%COMP%]{position:absolute;top:0;left:0;inline-size:100%;block-size:100%;opacity:0}\";\nconst TUI_MULTI_SELECT_DEFAULT_OPTIONS = {\n  rows: Infinity,\n  valueContent: ''\n};\n/**\n * @deprecated: drop in v5.0\n * Default parameters for MultiSelect component\n */\nconst TUI_MULTI_SELECT_OPTIONS = tuiCreateToken(TUI_MULTI_SELECT_DEFAULT_OPTIONS);\nfunction tuiMultiSelectOptionsProvider(options) {\n  return tuiProvideOptions(TUI_MULTI_SELECT_OPTIONS, options, TUI_MULTI_SELECT_DEFAULT_OPTIONS);\n}\nclass AbstractTuiNativeMultiSelect extends AbstractTuiNativeSelect {\n  constructor() {\n    super(...arguments);\n    this.selectedMapper = (option, value) => value.includes(option);\n  }\n  get stringify() {\n    return this.host.stringify;\n  }\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵAbstractTuiNativeMultiSelect_BaseFactory;\n      return function AbstractTuiNativeMultiSelect_Factory(__ngFactoryType__) {\n        return (ɵAbstractTuiNativeMultiSelect_BaseFactory || (ɵAbstractTuiNativeMultiSelect_BaseFactory = i0.ɵɵgetInheritedFactory(AbstractTuiNativeMultiSelect)))(__ngFactoryType__ || AbstractTuiNativeMultiSelect);\n      };\n    })();\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: AbstractTuiNativeMultiSelect,\n      features: [i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AbstractTuiNativeMultiSelect, [{\n    type: Directive\n  }], null, null);\n})();\nclass TuiMultiSelectComponent extends AbstractTuiMultipleControl {\n  constructor() {\n    super(...arguments);\n    this.arrowMode = inject(TUI_ARROW_MODE);\n    this.itemsHandlers = inject(TUI_ITEMS_HANDLERS);\n    this.options = inject(TUI_MULTI_SELECT_OPTIONS);\n    this.inputTagOptions = inject(TUI_INPUT_TAG_OPTIONS);\n    this.open = false;\n    this.controller = inject(TUI_TEXTFIELD_WATCHED_CONTROLLER);\n    this.isMobile = inject(TUI_IS_MOBILE);\n    this.stringify = this.itemsHandlers.stringify;\n    this.identityMatcher = this.itemsHandlers.identityMatcher;\n    this.search = '';\n    this.placeholder = '';\n    this.editable = true;\n    this.disabledItemHandler = this.itemsHandlers.disabledItemHandler;\n    this.valueContent = this.options.valueContent;\n    this.tagValidator = TUI_TRUE_HANDLER;\n    this.rows = this.options.rows;\n    this.autoColor = false;\n    this.searchChange = new EventEmitter();\n    this.valueMapper = (value, stringify, group) => group ? EMPTY_ARRAY : value.map(item => new TuiStringifiableItem(item, stringify));\n    this.disabledItemHandlerWrapper = handler => stringifiable => tuiIsString(stringifiable) || handler(stringifiable.item);\n  }\n  get size() {\n    return this.controller.size;\n  }\n  get nativeFocusableElement() {\n    return this.input?.nativeFocusableElement ?? null;\n  }\n  get focused() {\n    return !!this.input?.focused || !!this.dropdown?.tuiDropdownOpen;\n  }\n  onValueChange(value) {\n    this.value = value;\n  }\n  onSearch(search) {\n    // Clearing sets the empty value, the dropdown should not be opened on clear.\n    if (search !== '') {\n      this.open = true;\n    }\n    this.updateSearch(search);\n  }\n  setDisabledState() {\n    super.setDisabledState();\n    this.open = false;\n  }\n  handleOption(option) {\n    const {\n      value,\n      identityMatcher\n    } = this;\n    const index = value.findIndex(item => identityMatcher(item, option));\n    this.value = index === -1 ? [...value, option] : value.filter((_, i) => i !== index);\n    this.updateSearch(null);\n  }\n  get arrow() {\n    return this.interactive ? this.arrowMode.interactive : this.arrowMode.disabled;\n  }\n  get nativeDropdownMode() {\n    return !!this.nativeSelect && this.isMobile && !this.editable;\n  }\n  get computedValue() {\n    return this.computedGroup ? EMPTY_ARRAY : this.value;\n  }\n  // @bad TODO: think of a better way\n  get searchOrSpace() {\n    return this.computedGroup ? ' ' : this.searchString;\n  }\n  get searchString() {\n    return this.search === null ? '' : this.search;\n  }\n  get computedGroup() {\n    return !!this.valueContent && this.value.length > 0 && (!this.focused || !this.editable);\n  }\n  getStringifier(stringify) {\n    return ({\n      $implicit\n    }) => stringify($implicit);\n  }\n  onSpace(event) {\n    if (!this.editable) {\n      event.preventDefault();\n    }\n    if (!this.readOnly) {\n      this.open = true;\n    }\n  }\n  onEnter(event) {\n    const {\n      value\n    } = this;\n    const options = this.accessor ? this.accessor.getOptions() : [];\n    if (options.length !== 1) {\n      return;\n    }\n    event.preventDefault();\n    this.value = options[0] ? tuiArrayToggle(value, options[0]) : value;\n    this.updateSearch(null);\n  }\n  onKeyDown(event) {\n    if (event.key === this.inputTagOptions.separator) {\n      this.onEnter(event);\n    }\n  }\n  onPaste(event) {\n    const pasted = tuiGetClipboardDataText(event);\n    const tags = pasted.split(this.inputTagOptions.separator).map(tag => tag.trim());\n    const options = this.accessor?.getOptions() ?? [];\n    const separator = tuiIsString(this.inputTagOptions.separator) ? this.inputTagOptions.separator : ',';\n    const matches = options?.filter(option => tags.includes(this.stringify(option))) ?? [];\n    const matchingStrings = matches.map(v => String(v));\n    const invalid = tags.filter(value => !matchingStrings.includes(value));\n    this.value = this.filterValue([...this.value, ...matches]);\n    this.updateSearch(invalid.length ? invalid.join(separator) : null);\n  }\n  onClick({\n    nativeFocusableElement\n  }) {\n    if (this.interactive && nativeFocusableElement && tuiIsNativeFocused(nativeFocusableElement)) {\n      this.open = !this.open;\n    }\n  }\n  onInput(value) {\n    this.value = value.map(({\n      item\n    }) => item);\n  }\n  onActiveZone(active) {\n    this.updateFocused(active);\n  }\n  filterValue(value) {\n    const seen = new Set();\n    return value.reverse().filter(item => item && !seen.has(item) && seen.add(item)).reverse();\n  }\n  updateSearch(search) {\n    if (this.search === search) {\n      return;\n    }\n    this.search = search;\n    this.searchChange.emit(search);\n  }\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵTuiMultiSelectComponent_BaseFactory;\n      return function TuiMultiSelectComponent_Factory(__ngFactoryType__) {\n        return (ɵTuiMultiSelectComponent_BaseFactory || (ɵTuiMultiSelectComponent_BaseFactory = i0.ɵɵgetInheritedFactory(TuiMultiSelectComponent)))(__ngFactoryType__ || TuiMultiSelectComponent);\n      };\n    })();\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: TuiMultiSelectComponent,\n      selectors: [[\"tui-multi-select\"]],\n      contentQueries: function TuiMultiSelectComponent_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, TUI_DATA_LIST_ACCESSOR, 5);\n          i0.ɵɵcontentQuery(dirIndex, AbstractTuiNativeMultiSelect, 7);\n          i0.ɵɵcontentQuery(dirIndex, TuiDataListDirective, 5, TemplateRef);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.accessor = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.nativeSelect = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.datalist = _t.first);\n        }\n      },\n      viewQuery: function TuiMultiSelectComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(TuiDropdownOpen, 5);\n          i0.ɵɵviewQuery(TuiInputTagComponent, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dropdown = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.input = _t.first);\n        }\n      },\n      hostVars: 5,\n      hostBindings: function TuiMultiSelectComponent_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"data-size\", ctx.size);\n          i0.ɵɵclassProp(\"_editable\", ctx.editable)(\"_expandable\", ctx.rows > 1);\n        }\n      },\n      inputs: {\n        stringify: \"stringify\",\n        identityMatcher: \"identityMatcher\",\n        search: \"search\",\n        placeholder: \"placeholder\",\n        editable: \"editable\",\n        disabledItemHandler: \"disabledItemHandler\",\n        valueContent: \"valueContent\",\n        tagValidator: \"tagValidator\",\n        rows: \"rows\",\n        autoColor: \"autoColor\"\n      },\n      outputs: {\n        searchChange: \"searchChange\"\n      },\n      features: [i0.ɵɵProvidersFeature([tuiAsFocusableItemAccessor(TuiMultiSelectComponent), tuiAsControl(TuiMultiSelectComponent), tuiAsDataListHost(TuiMultiSelectComponent), TEXTFIELD_CONTROLLER_PROVIDER]), i0.ɵɵHostDirectivesFeature([i1.TuiDropdownFixed]), i0.ɵɵInheritDefinitionFeature],\n      ngContentSelectors: _c1,\n      decls: 13,\n      vars: 35,\n      consts: [[\"inputTag\", \"\"], [\"select\", \"\"], [\"icon\", \"\"], [\"tuiDropdownOpenMonitor\", \"\", 1, \"t-hosted\", 3, \"tuiDropdownOpenChange\", \"tuiActiveZoneChange\", \"tuiDropdown\", \"tuiDropdownEnabled\", \"tuiDropdownOpen\"], [\"automation-id\", \"tui-multi-select__input\", 1, \"t-input\", 3, \"click.prevent\", \"keydown.enter\", \"keydown.space\", \"keydown\", \"ngModelChange\", \"paste.capture.stop.prevent\", \"searchChange\", \"autoColor\", \"disabled\", \"disabledItemHandler\", \"editable\", \"inputHidden\", \"nativeId\", \"ngModel\", \"ngModelOptions\", \"placeholder\", \"pseudoFocus\", \"pseudoHover\", \"pseudoInvalid\", \"pseudoOpen\", \"readOnly\", \"removable\", \"rows\", \"search\", \"tagValidator\", \"tuiTextfieldIcon\"], [\"ngProjectAs\", \"select\", 5, [\"select\"], 4, \"ngTemplateOutlet\"], [\"ngProjectAs\", \"tuiContent\", \"class\", \"t-content\", 5, [\"tuiContent\"], 3, \"t-content_fullsize\", 4, \"ngIf\"], [4, \"ngIf\"], [\"ngProjectAs\", \"select\", 5, [\"select\"]], [\"ngProjectAs\", \"tuiContent\", 5, [\"tuiContent\"], 1, \"t-content\"], [\"class\", \"t-primitive\", 4, \"polymorpheusOutlet\", \"polymorpheusOutletContext\"], [1, \"t-primitive\"], [\"appearance\", \"icon\", \"automation-id\", \"tui-multi-select__arrow\", \"tuiWrapper\", \"\", 1, \"t-arrow\", 3, \"mousedown.prevent.silent\"], [4, \"polymorpheusOutlet\"]],\n      template: function TuiMultiSelectComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵprojectionDef(_c0);\n          i0.ɵɵelementStart(0, \"div\", 3);\n          i0.ɵɵtwoWayListener(\"tuiDropdownOpenChange\", function TuiMultiSelectComponent_Template_div_tuiDropdownOpenChange_0_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            i0.ɵɵtwoWayBindingSet(ctx.open, $event) || (ctx.open = $event);\n            return i0.ɵɵresetView($event);\n          });\n          i0.ɵɵlistener(\"tuiActiveZoneChange\", function TuiMultiSelectComponent_Template_div_tuiActiveZoneChange_0_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.onActiveZone($event));\n          });\n          i0.ɵɵelementStart(1, \"tui-input-tag\", 4, 0);\n          i0.ɵɵpipe(3, \"tuiMapper\");\n          i0.ɵɵpipe(4, \"tuiMapper\");\n          i0.ɵɵpipe(5, \"tuiMapper\");\n          i0.ɵɵlistener(\"click.prevent\", function TuiMultiSelectComponent_Template_tui_input_tag_click_prevent_1_listener() {\n            i0.ɵɵrestoreView(_r1);\n            const inputTag_r2 = i0.ɵɵreference(2);\n            return i0.ɵɵresetView(ctx.onClick(inputTag_r2));\n          })(\"keydown.enter\", function TuiMultiSelectComponent_Template_tui_input_tag_keydown_enter_1_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.onEnter($event));\n          })(\"keydown.space\", function TuiMultiSelectComponent_Template_tui_input_tag_keydown_space_1_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.onSpace($event));\n          })(\"keydown\", function TuiMultiSelectComponent_Template_tui_input_tag_keydown_1_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.onKeyDown($event));\n          })(\"ngModelChange\", function TuiMultiSelectComponent_Template_tui_input_tag_ngModelChange_1_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.onInput($event));\n          })(\"paste.capture.stop.prevent\", function TuiMultiSelectComponent_Template_tui_input_tag_paste_capture_stop_prevent_1_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.onPaste($event));\n          })(\"searchChange\", function TuiMultiSelectComponent_Template_tui_input_tag_searchChange_1_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.onSearch($event));\n          });\n          i0.ɵɵprojection(6);\n          i0.ɵɵtemplate(7, TuiMultiSelectComponent_ng_template_7_Template, 1, 1, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor)(9, TuiMultiSelectComponent_ng_container_9_Template, 1, 0, \"ng-container\", 5)(10, TuiMultiSelectComponent_div_10_Template, 2, 6, \"div\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(11, TuiMultiSelectComponent_ng_template_11_Template, 2, 3, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          const select_r7 = i0.ɵɵreference(8);\n          const icon_r8 = i0.ɵɵreference(12);\n          i0.ɵɵproperty(\"tuiDropdown\", ctx.datalist || \"\")(\"tuiDropdownEnabled\", ctx.interactive && !ctx.nativeDropdownMode);\n          i0.ɵɵtwoWayProperty(\"tuiDropdownOpen\", ctx.open);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"autoColor\", ctx.autoColor)(\"disabled\", ctx.disabled)(\"disabledItemHandler\", i0.ɵɵpipeBind2(3, 24, ctx.disabledItemHandler, ctx.disabledItemHandlerWrapper))(\"editable\", false)(\"inputHidden\", !ctx.editable)(\"nativeId\", ctx.nativeId)(\"ngModel\", i0.ɵɵpipeBind3(4, 27, ctx.computedValue, ctx.valueMapper, ctx.stringify))(\"ngModelOptions\", i0.ɵɵpureFunction0(34, _c2))(\"placeholder\", ctx.placeholder)(\"pseudoFocus\", ctx.computedFocused)(\"pseudoHover\", ctx.pseudoHover)(\"pseudoInvalid\", ctx.computedInvalid)(\"pseudoOpen\", ctx.open)(\"readOnly\", ctx.readOnly)(\"removable\", !ctx.nativeDropdownMode)(\"rows\", ctx.rows)(\"search\", ctx.searchOrSpace)(\"tagValidator\", i0.ɵɵpipeBind2(5, 31, ctx.tagValidator, ctx.disabledItemHandlerWrapper))(\"tuiTextfieldIcon\", ctx.arrow ? icon_r8 : \"\");\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"ngTemplateOutlet\", select_r7);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.computedGroup);\n        }\n      },\n      dependencies: [i1$1.NgIf, i1$1.NgTemplateOutlet, i2.NgControlStatus, i2.NgModel, i4.PolymorpheusOutlet, i5.TuiWrapperDirective, i6.TuiInputTagComponent, i1.TuiDropdownDirective, i1.TuiDropdownOpen, i5.TuiTextfieldIconDirective, i5.TuiLegacyDropdownOpenMonitorDirective, i6$1.TuiMapperPipe],\n      styles: [\"[_nghost-%COMP%]{position:relative;display:block;border-radius:var(--tui-radius-m)}._disabled[_nghost-%COMP%], [_nghost-%COMP%]   *:disabled[_nghost-%COMP%], *:disabled   [_nghost-%COMP%]{pointer-events:none}.t-hosted[_ngcontent-%COMP%]{display:block;border-radius:inherit}.t-input[_ngcontent-%COMP%]{border-radius:inherit}[_nghost-%COMP%]:not(._editable):not(._readonly)   .t-input[_ngcontent-%COMP%]{cursor:pointer}.t-content[_ngcontent-%COMP%]{display:flex;align-items:center;pointer-events:none;box-sizing:border-box}.t-primitive[_ngcontent-%COMP%]{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.t-arrow[_ngcontent-%COMP%]{pointer-events:auto;cursor:pointer}.t-arrow_native-dropdown[_ngcontent-%COMP%]{pointer-events:none}\"],\n      changeDetection: 0\n    });\n  }\n}\n__decorate([tuiPure], TuiMultiSelectComponent.prototype, \"getStringifier\", null);\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiMultiSelectComponent, [{\n    type: Component,\n    args: [{\n      standalone: false,\n      selector: 'tui-multi-select',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [tuiAsFocusableItemAccessor(TuiMultiSelectComponent), tuiAsControl(TuiMultiSelectComponent), tuiAsDataListHost(TuiMultiSelectComponent), TEXTFIELD_CONTROLLER_PROVIDER],\n      hostDirectives: [TuiDropdownFixed],\n      host: {\n        '[attr.data-size]': 'size',\n        '[class._editable]': 'editable',\n        '[class._expandable]': 'rows > 1'\n      },\n      template: \"<div\\n    tuiDropdownOpenMonitor\\n    class=\\\"t-hosted\\\"\\n    [tuiDropdown]=\\\"datalist || ''\\\"\\n    [tuiDropdownEnabled]=\\\"interactive && !nativeDropdownMode\\\"\\n    [(tuiDropdownOpen)]=\\\"open\\\"\\n    (tuiActiveZoneChange)=\\\"onActiveZone($event)\\\"\\n>\\n    <tui-input-tag\\n        #inputTag\\n        automation-id=\\\"tui-multi-select__input\\\"\\n        class=\\\"t-input\\\"\\n        [autoColor]=\\\"autoColor\\\"\\n        [disabled]=\\\"disabled\\\"\\n        [disabledItemHandler]=\\\"disabledItemHandler | tuiMapper: disabledItemHandlerWrapper\\\"\\n        [editable]=\\\"false\\\"\\n        [inputHidden]=\\\"!editable\\\"\\n        [nativeId]=\\\"nativeId\\\"\\n        [ngModel]=\\\"computedValue | tuiMapper: valueMapper : stringify\\\"\\n        [ngModelOptions]=\\\"{standalone: true}\\\"\\n        [placeholder]=\\\"placeholder\\\"\\n        [pseudoFocus]=\\\"computedFocused\\\"\\n        [pseudoHover]=\\\"pseudoHover\\\"\\n        [pseudoInvalid]=\\\"computedInvalid\\\"\\n        [pseudoOpen]=\\\"open\\\"\\n        [readOnly]=\\\"readOnly\\\"\\n        [removable]=\\\"!nativeDropdownMode\\\"\\n        [rows]=\\\"rows\\\"\\n        [search]=\\\"searchOrSpace\\\"\\n        [tagValidator]=\\\"tagValidator | tuiMapper: disabledItemHandlerWrapper\\\"\\n        [tuiTextfieldIcon]=\\\"arrow ? icon : ''\\\"\\n        (click.prevent)=\\\"onClick(inputTag)\\\"\\n        (keydown.enter)=\\\"onEnter($event)\\\"\\n        (keydown.space)=\\\"onSpace($event)\\\"\\n        (keydown)=\\\"onKeyDown($event)\\\"\\n        (ngModelChange)=\\\"onInput($event)\\\"\\n        (paste.capture.stop.prevent)=\\\"onPaste($event)\\\"\\n        (searchChange)=\\\"onSearch($event)\\\"\\n    >\\n        <ng-content />\\n        <ng-template #select>\\n            <ng-content\\n                *ngIf=\\\"isMobile\\\"\\n                select=\\\"select\\\"\\n            />\\n        </ng-template>\\n\\n        <ng-container\\n            *ngTemplateOutlet=\\\"select\\\"\\n            ngProjectAs=\\\"select\\\"\\n        />\\n\\n        <div\\n            *ngIf=\\\"computedGroup\\\"\\n            ngProjectAs=\\\"tuiContent\\\"\\n            class=\\\"t-content\\\"\\n            [class.t-content_fullsize]=\\\"inputTag.labelOutside\\\"\\n        >\\n            <span\\n                *polymorpheusOutlet=\\\"valueContent as text; context: {$implicit: value}\\\"\\n                class=\\\"t-primitive\\\"\\n            >\\n                {{ text }}\\n            </span>\\n        </div>\\n    </tui-input-tag>\\n\\n    <ng-template #icon>\\n        <div\\n            appearance=\\\"icon\\\"\\n            automation-id=\\\"tui-multi-select__arrow\\\"\\n            tuiWrapper\\n            class=\\\"t-arrow\\\"\\n            [class.t-arrow_native-dropdown]=\\\"nativeDropdownMode\\\"\\n            (mousedown.prevent.silent)=\\\"(0)\\\"\\n        >\\n            <ng-container *polymorpheusOutlet=\\\"arrow as text\\\">\\n                {{ text }}\\n            </ng-container>\\n        </div>\\n    </ng-template>\\n</div>\\n\",\n      styles: [\":host{position:relative;display:block;border-radius:var(--tui-radius-m)}:host._disabled,:host :host-context(*:disabled){pointer-events:none}.t-hosted{display:block;border-radius:inherit}.t-input{border-radius:inherit}:host:not(._editable):not(._readonly) .t-input{cursor:pointer}.t-content{display:flex;align-items:center;pointer-events:none;box-sizing:border-box}.t-primitive{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.t-arrow{pointer-events:auto;cursor:pointer}.t-arrow_native-dropdown{pointer-events:none}\\n\"]\n    }]\n  }], null, {\n    accessor: [{\n      type: ContentChild,\n      args: [TUI_DATA_LIST_ACCESSOR]\n    }],\n    nativeSelect: [{\n      type: ContentChild,\n      args: [AbstractTuiNativeMultiSelect, {\n        static: true\n      }]\n    }],\n    dropdown: [{\n      type: ViewChild,\n      args: [TuiDropdownOpen]\n    }],\n    input: [{\n      type: ViewChild,\n      args: [TuiInputTagComponent]\n    }],\n    datalist: [{\n      type: ContentChild,\n      args: [TuiDataListDirective, {\n        read: TemplateRef\n      }]\n    }],\n    stringify: [{\n      type: Input\n    }],\n    identityMatcher: [{\n      type: Input\n    }],\n    search: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    editable: [{\n      type: Input\n    }],\n    disabledItemHandler: [{\n      type: Input\n    }],\n    valueContent: [{\n      type: Input\n    }],\n    tagValidator: [{\n      type: Input\n    }],\n    rows: [{\n      type: Input\n    }],\n    autoColor: [{\n      type: Input\n    }],\n    searchChange: [{\n      type: Output\n    }],\n    getStringifier: []\n  });\n})();\nclass TuiHideSelectedPipe {\n  constructor() {\n    this.component = inject(TuiMultiSelectComponent);\n  }\n  transform(items) {\n    const {\n      value,\n      identityMatcher\n    } = this.component;\n    if (!items) {\n      return null;\n    }\n    return tuiIsFlat(items) ? this.filter(items, value, identityMatcher) : this.filter2d(items, value, identityMatcher);\n  }\n  filter2d(items, value, matcher) {\n    return items.map(subItems => this.filter(subItems, value, matcher));\n  }\n  filter(items, value, matcher) {\n    return items.filter(item => value.every(selected => !matcher(selected, item)));\n  }\n  static {\n    this.ɵfac = function TuiHideSelectedPipe_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiHideSelectedPipe)();\n    };\n  }\n  static {\n    this.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n      name: \"tuiHideSelected\",\n      type: TuiHideSelectedPipe,\n      pure: false\n    });\n  }\n}\n__decorate([tuiPure], TuiHideSelectedPipe.prototype, \"filter2d\", null);\n__decorate([tuiPure], TuiHideSelectedPipe.prototype, \"filter\", null);\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiHideSelectedPipe, [{\n    type: Pipe,\n    args: [{\n      standalone: false,\n      name: 'tuiHideSelected',\n      pure: false\n    }]\n  }], null, {\n    filter2d: [],\n    filter: []\n  });\n})();\nclass TuiMultiSelectDirective extends AbstractTuiTextfieldHost {\n  constructor() {\n    super(...arguments);\n    this.disableItemHandler = item => this.host.disabledItemHandler(item);\n  }\n  get readOnly() {\n    return true;\n  }\n  get stringify() {\n    return this.host.stringify;\n  }\n  onValueChange() {}\n  onSelectionChange(value) {\n    this.host.onValueChange(value);\n  }\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵTuiMultiSelectDirective_BaseFactory;\n      return function TuiMultiSelectDirective_Factory(__ngFactoryType__) {\n        return (ɵTuiMultiSelectDirective_BaseFactory || (ɵTuiMultiSelectDirective_BaseFactory = i0.ɵɵgetInheritedFactory(TuiMultiSelectDirective)))(__ngFactoryType__ || TuiMultiSelectDirective);\n      };\n    })();\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: TuiMultiSelectDirective,\n      selectors: [[\"tui-multi-select\"]],\n      features: [i0.ɵɵProvidersFeature([tuiAsTextfieldHost(TuiMultiSelectDirective)]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiMultiSelectDirective, [{\n    type: Directive,\n    args: [{\n      standalone: false,\n      selector: 'tui-multi-select',\n      providers: [tuiAsTextfieldHost(TuiMultiSelectDirective)]\n    }]\n  }], null, null);\n})();\nclass TuiMultiSelectGroupComponent {\n  constructor() {\n    this.options = EMPTY_QUERY;\n    this.host = inject(TUI_DATA_LIST_HOST);\n    this.control = inject(NgControl);\n    this.multiSelectTexts$ = inject(TUI_MULTI_SELECT_TEXTS);\n    this.label = '';\n  }\n  get empty$() {\n    return tuiQueryListChanges(this.options).pipe(map(({\n      length\n    }) => !length));\n  }\n  get disabled$() {\n    return tuiQueryListChanges(this.options).pipe(map(items => items.every(({\n      disabled\n    }) => disabled)));\n  }\n  get value$() {\n    return combineLatest([this.items$, this.valueChanges$]).pipe(map(([items, current]) => {\n      let result = false;\n      for (let i = 0; i < items.length; i++) {\n        const selected = current.some(selected => this.matcher(selected, items[i]));\n        if (!selected && result || selected && !result && i) {\n          return null;\n        }\n        result = selected;\n      }\n      return result;\n    }));\n  }\n  onClick(checked) {\n    if (!this.control.control) {\n      return;\n    }\n    const controlValue = this.control.value || [];\n    const {\n      values\n    } = this;\n    const filtered = controlValue.filter(current => values.every(item => !this.matcher(current, item)));\n    this.control.control.setValue(checked ? filtered : [...filtered, ...values]);\n  }\n  get items$() {\n    return tuiQueryListChanges(this.options).pipe(map(options => options.map(({\n      value\n    }) => value).filter(tuiIsPresent)));\n  }\n  get valueChanges$() {\n    return tuiControlValue(this.control).pipe(map(value => value || []));\n  }\n  get values() {\n    return this.filter(tuiGetOriginalArrayFromQueryList(this.options));\n  }\n  get matcher() {\n    return this.host.identityMatcher || TUI_DEFAULT_IDENTITY_MATCHER;\n  }\n  filter(items) {\n    return items.map(({\n      value\n    }) => value).filter(tuiIsPresent);\n  }\n  static {\n    this.ɵfac = function TuiMultiSelectGroupComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiMultiSelectGroupComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: TuiMultiSelectGroupComponent,\n      selectors: [[\"tui-opt-group\", \"tuiMultiSelectGroup\", \"\"]],\n      contentQueries: function TuiMultiSelectGroupComponent_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, TuiOption, 4);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.options = _t);\n        }\n      },\n      hostVars: 2,\n      hostBindings: function TuiMultiSelectGroupComponent_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"_label\", ctx.label);\n        }\n      },\n      inputs: {\n        label: \"label\"\n      },\n      attrs: _c4,\n      ngContentSelectors: _c5,\n      decls: 3,\n      vars: 3,\n      consts: [[\"class\", \"t-wrapper\", 4, \"tuiLet\"], [1, \"t-wrapper\"], [1, \"t-label\"], [\"tuiLink\", \"\", \"type\", \"button\", \"class\", \"t-button\", 3, \"disabled\", \"click\", 4, \"ngIf\"], [\"tuiLink\", \"\", \"type\", \"button\", 1, \"t-button\", 3, \"click\", \"disabled\"]],\n      template: function TuiMultiSelectGroupComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵtemplate(0, TuiMultiSelectGroupComponent_span_0_Template, 5, 4, \"span\", 0);\n          i0.ɵɵpipe(1, \"async\");\n          i0.ɵɵprojection(2);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"tuiLet\", i0.ɵɵpipeBind1(1, 1, ctx.value$));\n        }\n      },\n      dependencies: [i1$1.NgIf, i2$1.TuiLet, i3.TuiLink, i1$1.AsyncPipe],\n      styles: [\"._label[_nghost-%COMP%]:before{display:none}[_nghost-%COMP%]:not(:first-of-type)   .t-label[_ngcontent-%COMP%]:not(:empty){padding-top:1.25rem}[_nghost-%COMP%]:not(:first-of-type)   .t-button[_ngcontent-%COMP%]{margin-top:1.25rem}.t-wrapper[_ngcontent-%COMP%]{display:flex;align-items:flex-start}.t-label[_ngcontent-%COMP%]:not(:empty){flex:1;padding:.75rem 1rem .25rem .625rem}.t-button[_ngcontent-%COMP%]{margin:.75rem 1rem 0 auto}\"],\n      changeDetection: 0\n    });\n  }\n}\n__decorate([tuiPure], TuiMultiSelectGroupComponent.prototype, \"empty$\", null);\n__decorate([tuiPure], TuiMultiSelectGroupComponent.prototype, \"disabled$\", null);\n__decorate([tuiPure], TuiMultiSelectGroupComponent.prototype, \"value$\", null);\n__decorate([tuiPure], TuiMultiSelectGroupComponent.prototype, \"items$\", null);\n__decorate([tuiPure], TuiMultiSelectGroupComponent.prototype, \"valueChanges$\", null);\n__decorate([tuiPure], TuiMultiSelectGroupComponent.prototype, \"filter\", null);\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiMultiSelectGroupComponent, [{\n    type: Component,\n    args: [{\n      standalone: false,\n      selector: 'tui-opt-group[tuiMultiSelectGroup]',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        '[class._label]': 'label'\n      },\n      template: \"<span\\n    *tuiLet=\\\"value$ | async as value\\\"\\n    class=\\\"t-wrapper\\\"\\n>\\n    <span class=\\\"t-label\\\">{{ label }}</span>\\n    <button\\n        *ngIf=\\\"label && !(empty$ | async)\\\"\\n        tuiLink\\n        type=\\\"button\\\"\\n        class=\\\"t-button\\\"\\n        [disabled]=\\\"!!(disabled$ | async)\\\"\\n        (click)=\\\"onClick(value)\\\"\\n    >\\n        {{ (multiSelectTexts$ | async)?.[value ? 'none' : 'all'] }}\\n    </button>\\n</span>\\n<ng-content />\\n\",\n      styles: [\":host._label:before{display:none}:host:not(:first-of-type) .t-label:not(:empty){padding-top:1.25rem}:host:not(:first-of-type) .t-button{margin-top:1.25rem}.t-wrapper{display:flex;align-items:flex-start}.t-label:not(:empty){flex:1;padding:.75rem 1rem .25rem .625rem}.t-button{margin:.75rem 1rem 0 auto}\\n\"]\n    }]\n  }], null, {\n    options: [{\n      type: ContentChildren,\n      args: [TuiOption]\n    }],\n    label: [{\n      type: Input\n    }],\n    empty$: [],\n    disabled$: [],\n    value$: [],\n    items$: [],\n    valueChanges$: [],\n    filter: []\n  });\n})();\nconst TUI_MULTI_SELECT_OPTION = new PolymorpheusComponent(TuiMultiSelectOptionComponent);\nclass TuiMultiSelectGroupDirective {\n  static {\n    this.ɵfac = function TuiMultiSelectGroupDirective_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiMultiSelectGroupDirective)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: TuiMultiSelectGroupDirective,\n      selectors: [[\"\", \"tuiMultiSelectGroup\", \"\"]],\n      features: [i0.ɵɵProvidersFeature([tuiAsOptionContent(TUI_MULTI_SELECT_OPTION), {\n        provide: TUI_DATA_LIST_HOST,\n        deps: [NgControl, [new Optional(), forwardRef(() => TuiMultiSelectComponent)]],\n        useFactory: (control, host) => host || {\n          handleOption: option => control.control?.setValue(tuiArrayToggle(control.value || [], option))\n        }\n      }, {\n        provide: NG_VALUE_ACCESSOR,\n        multi: true,\n        useValue: {\n          writeValue: EMPTY_FUNCTION,\n          registerOnChange: EMPTY_FUNCTION,\n          registerOnTouched: EMPTY_FUNCTION\n        }\n      }])]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiMultiSelectGroupDirective, [{\n    type: Directive,\n    args: [{\n      standalone: false,\n      selector: '[tuiMultiSelectGroup]',\n      providers: [tuiAsOptionContent(TUI_MULTI_SELECT_OPTION), {\n        provide: TUI_DATA_LIST_HOST,\n        deps: [NgControl, [new Optional(), forwardRef(() => TuiMultiSelectComponent)]],\n        useFactory: (control, host) => host || {\n          handleOption: option => control.control?.setValue(tuiArrayToggle(control.value || [], option))\n        }\n      }, {\n        provide: NG_VALUE_ACCESSOR,\n        multi: true,\n        useValue: {\n          writeValue: EMPTY_FUNCTION,\n          registerOnChange: EMPTY_FUNCTION,\n          registerOnTouched: EMPTY_FUNCTION\n        }\n      }]\n    }]\n  }], null, null);\n})();\nclass TuiNativeMultiSelectComponent extends AbstractTuiNativeMultiSelect {\n  constructor() {\n    super(...arguments);\n    this.items = [];\n  }\n  onValueChange(selectedOptions) {\n    const selected = Array.from(selectedOptions).map(option => option.index);\n    const value = this.items?.filter((_, index) => selected.includes(index)) || [];\n    this.host.onSelectionChange(value);\n  }\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵTuiNativeMultiSelectComponent_BaseFactory;\n      return function TuiNativeMultiSelectComponent_Factory(__ngFactoryType__) {\n        return (ɵTuiNativeMultiSelectComponent_BaseFactory || (ɵTuiNativeMultiSelectComponent_BaseFactory = i0.ɵɵgetInheritedFactory(TuiNativeMultiSelectComponent)))(__ngFactoryType__ || TuiNativeMultiSelectComponent);\n      };\n    })();\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: TuiNativeMultiSelectComponent,\n      selectors: [[\"select\", \"multiple\", \"\", \"tuiSelect\", \"\", 3, \"labels\", \"\"]],\n      hostVars: 3,\n      hostBindings: function TuiNativeMultiSelectComponent_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"change\", function TuiNativeMultiSelectComponent_change_HostBindingHandler($event) {\n            return ctx.onValueChange($event.target.selectedOptions);\n          })(\"click.stop.silent\", function TuiNativeMultiSelectComponent_click_stop_silent_HostBindingHandler() {\n            return 0;\n          })(\"mousedown.stop.silent\", function TuiNativeMultiSelectComponent_mousedown_stop_silent_HostBindingHandler() {\n            return 0;\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵhostProperty(\"disabled\", ctx.host.disabled || ctx.control.readOnly)(\"tabIndex\", ctx.host.focusable ? 0 : -1);\n          i0.ɵɵattribute(\"aria-invalid\", ctx.host.invalid);\n        }\n      },\n      inputs: {\n        items: \"items\"\n      },\n      features: [i0.ɵɵProvidersFeature([tuiAsDataList(TuiNativeMultiSelectComponent), tuiProvide(AbstractTuiNativeMultiSelect, TuiNativeMultiSelectComponent), {\n        provide: TemplateRef,\n        deps: [TuiNativeMultiSelectComponent],\n        useFactory: ({\n          datalist\n        }) => datalist\n      }]), i0.ɵɵInheritDefinitionFeature],\n      attrs: _c6,\n      decls: 4,\n      vars: 4,\n      consts: [[4, \"ngIf\"], [\"tuiMultiSelectGroup\", \"\", 3, \"disabledItemHandler\", \"itemContent\", \"items\", 4, \"tuiDataList\"], [3, \"disabled\", \"selected\", \"value\", 4, \"ngFor\", \"ngForOf\"], [\"tuiMultiSelectGroup\", \"\", 3, \"disabledItemHandler\", \"itemContent\", \"items\"], [3, \"disabled\", \"selected\", \"value\"]],\n      template: function TuiNativeMultiSelectComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, TuiNativeMultiSelectComponent_ng_container_0_Template, 1, 0, \"ng-container\", 0);\n          i0.ɵɵpipe(1, \"async\");\n          i0.ɵɵtemplate(2, TuiNativeMultiSelectComponent_tui_data_list_wrapper_2_Template, 2, 5, \"tui-data-list-wrapper\", 1)(3, TuiNativeMultiSelectComponent_option_3_Template, 3, 8, \"option\", 2);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(1, 2, ctx.control.control == null ? null : ctx.control.control.valueChanges));\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngForOf\", ctx.items);\n        }\n      },\n      dependencies: [i1$1.NgForOf, i1$1.NgIf, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2$2.TuiDataListDirective, i3$1.TuiDataListWrapperComponent, TuiMultiSelectGroupDirective, i1$1.AsyncPipe, i6$1.TuiMapperPipe, i7.TuiStringifyContentPipe],\n      styles: [\"[_nghost-%COMP%]{position:absolute;top:0;left:0;inline-size:100%;block-size:100%;opacity:0}\"],\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiNativeMultiSelectComponent, [{\n    type: Component,\n    args: [{\n      standalone: false,\n      selector: 'select[multiple][tuiSelect]:not([labels])',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [tuiAsDataList(TuiNativeMultiSelectComponent), tuiProvide(AbstractTuiNativeMultiSelect, TuiNativeMultiSelectComponent), {\n        provide: TemplateRef,\n        deps: [TuiNativeMultiSelectComponent],\n        useFactory: ({\n          datalist\n        }) => datalist\n      }],\n      host: {\n        '[attr.aria-invalid]': 'host.invalid',\n        '[disabled]': 'host.disabled || control.readOnly',\n        '[tabIndex]': 'host.focusable ? 0 : -1',\n        '(change)': 'onValueChange($event.target.selectedOptions)',\n        '(click.stop.silent)': '0',\n        '(mousedown.stop.silent)': '0'\n      },\n      template: \"<ng-container *ngIf=\\\"control.control?.valueChanges | async\\\" />\\n\\n<tui-data-list-wrapper\\n    *tuiDataList\\n    tuiMultiSelectGroup\\n    [disabledItemHandler]=\\\"disabledItemHandler || host.disableItemHandler\\\"\\n    [itemContent]=\\\"stringify | tuiStringifyContent\\\"\\n    [items]=\\\"items\\\"\\n/>\\n<option\\n    *ngFor=\\\"let option of items\\\"\\n    [disabled]=\\\"disabledItemHandler ? disabledItemHandler(option) : host.disableItemHandler(option)\\\"\\n    [selected]=\\\"option | tuiMapper: selectedMapper : control.value\\\"\\n    [value]=\\\"stringify(option)\\\"\\n>\\n    {{ stringify(option) }}\\n</option>\\n\",\n      styles: [\":host{position:absolute;top:0;left:0;inline-size:100%;block-size:100%;opacity:0}\\n\"]\n    }]\n  }], null, {\n    items: [{\n      type: Input\n    }]\n  });\n})();\nclass TuiNativeMultiSelectGroupComponent extends AbstractTuiNativeMultiSelect {\n  constructor() {\n    super(...arguments);\n    this.items = [];\n    this.labels = [];\n  }\n  onValueChange(selectedOptions) {\n    const selected = Array.from(selectedOptions).map(option => option.index);\n    const flatItems = this.items?.reduce((acc, val) => acc.concat(val), []) || [];\n    const value = flatItems.filter((_, index) => selected.includes(index));\n    this.host.onSelectionChange(value);\n  }\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵTuiNativeMultiSelectGroupComponent_BaseFactory;\n      return function TuiNativeMultiSelectGroupComponent_Factory(__ngFactoryType__) {\n        return (ɵTuiNativeMultiSelectGroupComponent_BaseFactory || (ɵTuiNativeMultiSelectGroupComponent_BaseFactory = i0.ɵɵgetInheritedFactory(TuiNativeMultiSelectGroupComponent)))(__ngFactoryType__ || TuiNativeMultiSelectGroupComponent);\n      };\n    })();\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: TuiNativeMultiSelectGroupComponent,\n      selectors: [[\"select\", \"multiple\", \"\", \"tuiSelect\", \"\", \"labels\", \"\"]],\n      hostVars: 3,\n      hostBindings: function TuiNativeMultiSelectGroupComponent_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"change\", function TuiNativeMultiSelectGroupComponent_change_HostBindingHandler($event) {\n            return ctx.onValueChange($event.target.selectedOptions);\n          })(\"click.stop.silent\", function TuiNativeMultiSelectGroupComponent_click_stop_silent_HostBindingHandler() {\n            return 0;\n          })(\"mousedown.stop.silent\", function TuiNativeMultiSelectGroupComponent_mousedown_stop_silent_HostBindingHandler() {\n            return 0;\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵhostProperty(\"disabled\", ctx.host.disabled || ctx.control.readOnly)(\"tabIndex\", ctx.host.focusable ? 0 : -1);\n          i0.ɵɵattribute(\"aria-invalid\", ctx.host.invalid);\n        }\n      },\n      inputs: {\n        items: \"items\",\n        labels: \"labels\"\n      },\n      features: [i0.ɵɵProvidersFeature([tuiAsDataList(TuiNativeMultiSelectGroupComponent), tuiProvide(AbstractTuiNativeMultiSelect, TuiNativeMultiSelectGroupComponent), {\n        provide: TemplateRef,\n        deps: [TuiNativeMultiSelectGroupComponent],\n        useFactory: ({\n          datalist\n        }) => datalist\n      }]), i0.ɵɵInheritDefinitionFeature],\n      attrs: _c7,\n      decls: 4,\n      vars: 4,\n      consts: [[4, \"ngIf\"], [\"tuiMultiSelectGroup\", \"\", 3, \"disabledItemHandler\", \"itemContent\", \"items\", \"labels\", 4, \"tuiDataList\"], [3, \"label\", 4, \"ngFor\", \"ngForOf\"], [\"tuiMultiSelectGroup\", \"\", 3, \"disabledItemHandler\", \"itemContent\", \"items\", \"labels\"], [3, \"label\"], [3, \"disabled\", \"selected\", \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"disabled\", \"selected\", \"value\"]],\n      template: function TuiNativeMultiSelectGroupComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, TuiNativeMultiSelectGroupComponent_ng_container_0_Template, 1, 0, \"ng-container\", 0);\n          i0.ɵɵpipe(1, \"async\");\n          i0.ɵɵtemplate(2, TuiNativeMultiSelectGroupComponent_tui_data_list_wrapper_2_Template, 2, 6, \"tui-data-list-wrapper\", 1)(3, TuiNativeMultiSelectGroupComponent_optgroup_3_Template, 2, 2, \"optgroup\", 2);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(1, 2, ctx.control.control == null ? null : ctx.control.control.valueChanges));\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngForOf\", ctx.items);\n        }\n      },\n      dependencies: [i1$1.NgForOf, i1$1.NgIf, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2$2.TuiDataListDirective, i3$1.TuiDataListGroupWrapperComponent, TuiMultiSelectGroupDirective, i1$1.AsyncPipe, i6$1.TuiMapperPipe, i7.TuiStringifyContentPipe],\n      styles: [_c8],\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiNativeMultiSelectGroupComponent, [{\n    type: Component,\n    args: [{\n      standalone: false,\n      selector: 'select[multiple][tuiSelect][labels]',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [tuiAsDataList(TuiNativeMultiSelectGroupComponent), tuiProvide(AbstractTuiNativeMultiSelect, TuiNativeMultiSelectGroupComponent), {\n        provide: TemplateRef,\n        deps: [TuiNativeMultiSelectGroupComponent],\n        useFactory: ({\n          datalist\n        }) => datalist\n      }],\n      host: {\n        '[attr.aria-invalid]': 'host.invalid',\n        '[disabled]': 'host.disabled || control.readOnly',\n        '[tabIndex]': 'host.focusable ? 0 : -1',\n        '(change)': 'onValueChange($event.target.selectedOptions)',\n        '(click.stop.silent)': '0',\n        '(mousedown.stop.silent)': '0'\n      },\n      template: \"<ng-container *ngIf=\\\"control.control?.valueChanges | async\\\" />\\n\\n<tui-data-list-wrapper\\n    *tuiDataList\\n    tuiMultiSelectGroup\\n    [disabledItemHandler]=\\\"disabledItemHandler || host.disableItemHandler\\\"\\n    [itemContent]=\\\"stringify | tuiStringifyContent\\\"\\n    [items]=\\\"items\\\"\\n    [labels]=\\\"labels\\\"\\n/>\\n<optgroup\\n    *ngFor=\\\"let group of items; let index = index\\\"\\n    [label]=\\\"labels[index]\\\"\\n>\\n    <option\\n        *ngFor=\\\"let option of group\\\"\\n        [disabled]=\\\"disabledItemHandler ? disabledItemHandler(option) : host.disableItemHandler(option)\\\"\\n        [selected]=\\\"option | tuiMapper: selectedMapper : control.value\\\"\\n        [value]=\\\"stringify(option)\\\"\\n    >\\n        {{ stringify(option) }}\\n    </option>\\n</optgroup>\\n\",\n      styles: [\":host{position:absolute;top:0;left:0;inline-size:100%;block-size:100%;opacity:0}\\n\"]\n    }]\n  }], null, {\n    items: [{\n      type: Input\n    }],\n    labels: [{\n      type: Input\n    }]\n  });\n})();\nclass TuiMultiSelectModule {\n  static {\n    this.ɵfac = function TuiMultiSelectModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiMultiSelectModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: TuiMultiSelectModule,\n      declarations: [TuiMultiSelectComponent, TuiMultiSelectGroupComponent, TuiMultiSelectGroupDirective, TuiHideSelectedPipe, TuiNativeMultiSelectComponent, TuiNativeMultiSelectGroupComponent, TuiMultiSelectDirective],\n      imports: [CommonModule, FormsModule, PolymorpheusOutlet, PolymorpheusTemplate, TuiWrapperModule, TuiArrowComponent, TuiLet, TuiMapperPipe, TuiInputTagModule, TuiMultiSelectOptionModule, TuiMapperPipe, TuiLink, TuiTextfieldControllerModule, TuiStringifyContentPipe, TuiLegacyDropdownOpenMonitorDirective, i1.TuiDropdownOptionsDirective, i1.TuiDropdownDriverDirective, i1.TuiDropdownDirective, i1.TuiDropdownComponent, i1.TuiDropdownOpen, i1.TuiDropdownOpenLegacy, i1.TuiDropdownPortal, i1.TuiDropdownManual, i1.TuiDropdownHover, i1.TuiDropdownContext, i1.TuiDropdownPosition, i1.TuiDropdownPositionSided, i1.TuiDropdownSelection, i2$2.TuiDataListComponent, i2$2.TuiDataListDirective, i2$2.TuiOption, i2$2.TuiOptGroup, i3$1.TuiDataListWrapperComponent, i3$1.TuiDataListGroupWrapperComponent, i2$2.TuiDataListDirective],\n      exports: [TuiMultiSelectComponent, TuiMultiSelectGroupComponent, TuiMultiSelectGroupDirective, TuiHideSelectedPipe, TuiMultiSelectDirective, TuiNativeMultiSelectComponent, TuiNativeMultiSelectGroupComponent, i1.TuiDropdownOptionsDirective, i1.TuiDropdownDriverDirective, i1.TuiDropdownDirective, i1.TuiDropdownComponent, i1.TuiDropdownOpen, i1.TuiDropdownOpenLegacy, i1.TuiDropdownPortal, i1.TuiDropdownManual, i1.TuiDropdownHover, i1.TuiDropdownContext, i1.TuiDropdownPosition, i1.TuiDropdownPositionSided, i1.TuiDropdownSelection, i2$2.TuiDataListComponent, i2$2.TuiDataListDirective, i2$2.TuiOption, i2$2.TuiOptGroup, i3$1.TuiDataListWrapperComponent, i3$1.TuiDataListGroupWrapperComponent, i2$2.TuiDataListDirective]\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [CommonModule, FormsModule, TuiWrapperModule, TuiArrowComponent, TuiInputTagModule, TuiMultiSelectOptionModule, TuiTextfieldControllerModule, i1.TuiDropdownComponent, i2$2.TuiDataListComponent, i2$2.TuiOption, i3$1.TuiDataListWrapperComponent, i3$1.TuiDataListGroupWrapperComponent]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiMultiSelectModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, FormsModule, PolymorpheusOutlet, PolymorpheusTemplate, TuiWrapperModule, TuiArrowComponent, TuiLet, TuiMapperPipe, TuiInputTagModule, TuiMultiSelectOptionModule, TuiMapperPipe, TuiLink, TuiTextfieldControllerModule, TuiStringifyContentPipe, TuiLegacyDropdownOpenMonitorDirective, ...TuiDropdown, ...TuiDataList, ...TuiDataListWrapper],\n      declarations: [TuiMultiSelectComponent, TuiMultiSelectGroupComponent, TuiMultiSelectGroupDirective, TuiHideSelectedPipe, TuiNativeMultiSelectComponent, TuiNativeMultiSelectGroupComponent, TuiMultiSelectDirective],\n      exports: [TuiMultiSelectComponent, TuiMultiSelectGroupComponent, TuiMultiSelectGroupDirective, TuiHideSelectedPipe, TuiMultiSelectDirective, TuiNativeMultiSelectComponent, TuiNativeMultiSelectGroupComponent, ...TuiDropdown, ...TuiDataList, ...TuiDataListWrapper]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AbstractTuiNativeMultiSelect, TUI_MULTI_SELECT_DEFAULT_OPTIONS, TUI_MULTI_SELECT_OPTION, TUI_MULTI_SELECT_OPTIONS, TuiHideSelectedPipe, TuiMultiSelectComponent, TuiMultiSelectDirective, TuiMultiSelectGroupComponent, TuiMultiSelectGroupDirective, TuiMultiSelectModule, TuiNativeMultiSelectComponent, TuiNativeMultiSelectGroupComponent, tuiMultiSelectOptionsProvider };","map":{"version":3,"names":["__decorate","i0","Directive","inject","EventEmitter","TemplateRef","Component","ChangeDetectionStrategy","ContentChild","ViewChild","Input","Output","Pipe","ContentChildren","Optional","forwardRef","NgModule","tuiCreateToken","tuiProvideOptions","tuiIsString","tuiArrayToggle","tuiPure","tuiIsPresent","tuiGetOriginalArrayFromQueryList","tuiProvide","tuiIsFlat","TUI_TRUE_HANDLER","EMPTY_ARRAY","EMPTY_QUERY","TUI_DEFAULT_IDENTITY_MATCHER","EMPTY_FUNCTION","TUI_IS_MOBILE","tuiGetClipboardDataText","tuiIsNativeFocused","i2$2","tuiAsDataListHost","TUI_DATA_LIST_ACCESSOR","TuiDataListDirective","TUI_DATA_LIST_HOST","TuiOption","tuiAsOptionContent","tuiAsDataList","TuiDataList","i1","TuiDropdownOpen","TuiDropdownFixed","TuiDropdown","TUI_ITEMS_HANDLERS","TUI_MULTI_SELECT_TEXTS","AbstractTuiNativeSelect","AbstractTuiMultipleControl","TuiStringifiableItem","tuiAsControl","AbstractTuiTextfieldHost","TUI_ARROW_MODE","TuiArrowComponent","i6","TUI_INPUT_TAG_OPTIONS","TuiInputTagComponent","TuiInputTagModule","i5","TUI_TEXTFIELD_WATCHED_CONTROLLER","TEXTFIELD_CONTROLLER_PROVIDER","TuiWrapperModule","TuiTextfieldControllerModule","TuiLegacyDropdownOpenMonitorDirective","tuiAsFocusableItemAccessor","tuiAsTextfieldHost","i1$1","CommonModule","i2","NgControl","NG_VALUE_ACCESSOR","FormsModule","i4","PolymorpheusComponent","PolymorpheusOutlet","PolymorpheusTemplate","i6$1","TuiMapperPipe","i2$1","TuiLet","i3","TuiLink","i3$1","TuiDataListWrapper","i7","TuiStringifyContentPipe","TuiMultiSelectOptionComponent","TuiMultiSelectOptionModule","tuiQueryListChanges","tuiControlValue","map","combineLatest","_c0","_c1","_c2","standalone","_c3","a0","$implicit","TuiMultiSelectComponent_ng_template_7_ng_content_0_Template","rf","ctx","ɵɵprojection","TuiMultiSelectComponent_ng_template_7_Template","ɵɵtemplate","ctx_r2","ɵɵnextContext","ɵɵproperty","isMobile","TuiMultiSelectComponent_ng_container_9_Template","ɵɵelementContainer","TuiMultiSelectComponent_div_10_span_1_Template","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","text_r4","polymorpheusOutlet","ɵɵadvance","ɵɵtextInterpolate1","TuiMultiSelectComponent_div_10_Template","inputTag_r2","ɵɵreference","ɵɵclassProp","labelOutside","valueContent","ɵɵpureFunction1","value","TuiMultiSelectComponent_ng_template_11_ng_container_1_Template","ɵɵelementContainerStart","ɵɵelementContainerEnd","text_r6","TuiMultiSelectComponent_ng_template_11_Template","_r5","ɵɵgetCurrentView","ɵɵlistener","TuiMultiSelectComponent_ng_template_11_Template_div_mousedown_prevent_silent_0_listener","ɵɵrestoreView","ɵɵresetView","nativeDropdownMode","arrow","_c4","_c5","TuiMultiSelectGroupComponent_span_0_button_3_Template","_r1","ɵɵpipe","TuiMultiSelectGroupComponent_span_0_button_3_Template_button_click_0_listener","value_r2","tuiLet","onClick","tmp_4_0","ɵɵpipeBind1","disabled$","multiSelectTexts$","TuiMultiSelectGroupComponent_span_0_Template","ɵɵtextInterpolate","label","empty$","_c6","TuiNativeMultiSelectComponent_ng_container_0_Template","TuiNativeMultiSelectComponent_tui_data_list_wrapper_2_Template","ɵɵelement","ctx_r0","disabledItemHandler","host","disableItemHandler","stringify","items","TuiNativeMultiSelectComponent_option_3_Template","option_r2","ɵɵpipeBind3","selectedMapper","control","_c7","TuiNativeMultiSelectGroupComponent_ng_container_0_Template","TuiNativeMultiSelectGroupComponent_tui_data_list_wrapper_2_Template","labels","TuiNativeMultiSelectGroupComponent_optgroup_3_option_1_Template","TuiNativeMultiSelectGroupComponent_optgroup_3_Template","group_r3","index_r4","index","_c8","TUI_MULTI_SELECT_DEFAULT_OPTIONS","rows","Infinity","TUI_MULTI_SELECT_OPTIONS","tuiMultiSelectOptionsProvider","options","AbstractTuiNativeMultiSelect","constructor","arguments","option","includes","ɵfac","ɵAbstractTuiNativeMultiSelect_BaseFactory","AbstractTuiNativeMultiSelect_Factory","__ngFactoryType__","ɵɵgetInheritedFactory","ɵdir","ɵɵdefineDirective","type","features","ɵɵInheritDefinitionFeature","ngDevMode","ɵsetClassMetadata","TuiMultiSelectComponent","arrowMode","itemsHandlers","inputTagOptions","open","controller","identityMatcher","search","placeholder","editable","tagValidator","autoColor","searchChange","valueMapper","group","item","disabledItemHandlerWrapper","handler","stringifiable","size","nativeFocusableElement","input","focused","dropdown","tuiDropdownOpen","onValueChange","onSearch","updateSearch","setDisabledState","handleOption","findIndex","filter","_","i","interactive","disabled","nativeSelect","computedValue","computedGroup","searchOrSpace","searchString","length","getStringifier","onSpace","event","preventDefault","readOnly","onEnter","accessor","getOptions","onKeyDown","key","separator","onPaste","pasted","tags","split","tag","trim","matches","matchingStrings","v","String","invalid","filterValue","join","onInput","onActiveZone","active","updateFocused","seen","Set","reverse","has","add","emit","ɵTuiMultiSelectComponent_BaseFactory","TuiMultiSelectComponent_Factory","ɵcmp","ɵɵdefineComponent","selectors","contentQueries","TuiMultiSelectComponent_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","datalist","viewQuery","TuiMultiSelectComponent_Query","ɵɵviewQuery","hostVars","hostBindings","TuiMultiSelectComponent_HostBindings","ɵɵattribute","inputs","outputs","ɵɵProvidersFeature","ɵɵHostDirectivesFeature","ngContentSelectors","decls","vars","consts","template","TuiMultiSelectComponent_Template","ɵɵprojectionDef","ɵɵtwoWayListener","TuiMultiSelectComponent_Template_div_tuiDropdownOpenChange_0_listener","$event","ɵɵtwoWayBindingSet","TuiMultiSelectComponent_Template_div_tuiActiveZoneChange_0_listener","TuiMultiSelectComponent_Template_tui_input_tag_click_prevent_1_listener","TuiMultiSelectComponent_Template_tui_input_tag_keydown_enter_1_listener","TuiMultiSelectComponent_Template_tui_input_tag_keydown_space_1_listener","TuiMultiSelectComponent_Template_tui_input_tag_keydown_1_listener","TuiMultiSelectComponent_Template_tui_input_tag_ngModelChange_1_listener","TuiMultiSelectComponent_Template_tui_input_tag_paste_capture_stop_prevent_1_listener","TuiMultiSelectComponent_Template_tui_input_tag_searchChange_1_listener","ɵɵtemplateRefExtractor","select_r7","icon_r8","ɵɵtwoWayProperty","ɵɵpipeBind2","nativeId","ɵɵpureFunction0","computedFocused","pseudoHover","computedInvalid","dependencies","NgIf","NgTemplateOutlet","NgControlStatus","NgModel","TuiWrapperDirective","TuiDropdownDirective","TuiTextfieldIconDirective","styles","changeDetection","prototype","args","selector","OnPush","providers","hostDirectives","static","read","TuiHideSelectedPipe","component","transform","filter2d","matcher","subItems","every","selected","TuiHideSelectedPipe_Factory","ɵpipe","ɵɵdefinePipe","name","pure","TuiMultiSelectDirective","onSelectionChange","ɵTuiMultiSelectDirective_BaseFactory","TuiMultiSelectDirective_Factory","TuiMultiSelectGroupComponent","pipe","value$","items$","valueChanges$","current","result","some","checked","controlValue","values","filtered","setValue","TuiMultiSelectGroupComponent_Factory","TuiMultiSelectGroupComponent_ContentQueries","TuiMultiSelectGroupComponent_HostBindings","attrs","TuiMultiSelectGroupComponent_Template","AsyncPipe","TUI_MULTI_SELECT_OPTION","TuiMultiSelectGroupDirective","TuiMultiSelectGroupDirective_Factory","provide","deps","useFactory","multi","useValue","writeValue","registerOnChange","registerOnTouched","TuiNativeMultiSelectComponent","selectedOptions","Array","from","ɵTuiNativeMultiSelectComponent_BaseFactory","TuiNativeMultiSelectComponent_Factory","TuiNativeMultiSelectComponent_HostBindings","TuiNativeMultiSelectComponent_change_HostBindingHandler","target","TuiNativeMultiSelectComponent_click_stop_silent_HostBindingHandler","TuiNativeMultiSelectComponent_mousedown_stop_silent_HostBindingHandler","ɵɵhostProperty","focusable","TuiNativeMultiSelectComponent_Template","valueChanges","NgForOf","NgSelectOption","ɵNgSelectMultipleOption","TuiDataListWrapperComponent","TuiNativeMultiSelectGroupComponent","flatItems","reduce","acc","val","concat","ɵTuiNativeMultiSelectGroupComponent_BaseFactory","TuiNativeMultiSelectGroupComponent_Factory","TuiNativeMultiSelectGroupComponent_HostBindings","TuiNativeMultiSelectGroupComponent_change_HostBindingHandler","TuiNativeMultiSelectGroupComponent_click_stop_silent_HostBindingHandler","TuiNativeMultiSelectGroupComponent_mousedown_stop_silent_HostBindingHandler","TuiNativeMultiSelectGroupComponent_Template","TuiDataListGroupWrapperComponent","TuiMultiSelectModule","TuiMultiSelectModule_Factory","ɵmod","ɵɵdefineNgModule","declarations","imports","TuiDropdownOptionsDirective","TuiDropdownDriverDirective","TuiDropdownComponent","TuiDropdownOpenLegacy","TuiDropdownPortal","TuiDropdownManual","TuiDropdownHover","TuiDropdownContext","TuiDropdownPosition","TuiDropdownPositionSided","TuiDropdownSelection","TuiDataListComponent","TuiOptGroup","exports","ɵinj","ɵɵdefineInjector"],"sources":["C:/Users/Asus-PC/Downloads/WebLibraryNew/WebLibrary/WebLibraryApp/Frontend/node_modules/@taiga-ui/legacy/fesm2022/taiga-ui-legacy-components-multi-select.mjs"],"sourcesContent":["import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { Directive, inject, EventEmitter, TemplateRef, Component, ChangeDetectionStrategy, ContentChild, ViewChild, Input, Output, Pipe, ContentChildren, Optional, forwardRef, NgModule } from '@angular/core';\nimport { tuiCreateToken, tuiProvideOptions, tuiIsString, tuiArrayToggle, tuiPure, tuiIsPresent, tuiGetOriginalArrayFromQueryList, tuiProvide } from '@taiga-ui/cdk/utils/miscellaneous';\nimport { tuiIsFlat } from '@taiga-ui/kit/utils';\nimport { TUI_TRUE_HANDLER, EMPTY_ARRAY, EMPTY_QUERY, TUI_DEFAULT_IDENTITY_MATCHER, EMPTY_FUNCTION } from '@taiga-ui/cdk/constants';\nimport { TUI_IS_MOBILE } from '@taiga-ui/cdk/tokens';\nimport { tuiGetClipboardDataText } from '@taiga-ui/cdk/utils/dom';\nimport { tuiIsNativeFocused } from '@taiga-ui/cdk/utils/focus';\nimport * as i2$2 from '@taiga-ui/core/components/data-list';\nimport { tuiAsDataListHost, TUI_DATA_LIST_ACCESSOR, TuiDataListDirective, TUI_DATA_LIST_HOST, TuiOption, tuiAsOptionContent, tuiAsDataList, TuiDataList } from '@taiga-ui/core/components/data-list';\nimport * as i1 from '@taiga-ui/core/directives/dropdown';\nimport { TuiDropdownOpen, TuiDropdownFixed, TuiDropdown } from '@taiga-ui/core/directives/dropdown';\nimport { TUI_ITEMS_HANDLERS, TUI_MULTI_SELECT_TEXTS } from '@taiga-ui/kit/tokens';\nimport { AbstractTuiNativeSelect, AbstractTuiMultipleControl, TuiStringifiableItem, tuiAsControl, AbstractTuiTextfieldHost } from '@taiga-ui/legacy/classes';\nimport { TUI_ARROW_MODE, TuiArrowComponent } from '@taiga-ui/legacy/components/arrow';\nimport * as i6 from '@taiga-ui/legacy/components/input-tag';\nimport { TUI_INPUT_TAG_OPTIONS, TuiInputTagComponent, TuiInputTagModule } from '@taiga-ui/legacy/components/input-tag';\nimport * as i5 from '@taiga-ui/legacy/directives';\nimport { TUI_TEXTFIELD_WATCHED_CONTROLLER, TEXTFIELD_CONTROLLER_PROVIDER, TuiWrapperModule, TuiTextfieldControllerModule, TuiLegacyDropdownOpenMonitorDirective } from '@taiga-ui/legacy/directives';\nimport { tuiAsFocusableItemAccessor, tuiAsTextfieldHost } from '@taiga-ui/legacy/tokens';\nimport * as i1$1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i2 from '@angular/forms';\nimport { NgControl, NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport * as i4 from '@taiga-ui/polymorpheus';\nimport { PolymorpheusComponent, PolymorpheusOutlet, PolymorpheusTemplate } from '@taiga-ui/polymorpheus';\nimport * as i6$1 from '@taiga-ui/cdk/pipes/mapper';\nimport { TuiMapperPipe } from '@taiga-ui/cdk/pipes/mapper';\nimport * as i2$1 from '@taiga-ui/cdk/directives/let';\nimport { TuiLet } from '@taiga-ui/cdk/directives/let';\nimport * as i3 from '@taiga-ui/core/components/link';\nimport { TuiLink } from '@taiga-ui/core/components/link';\nimport * as i3$1 from '@taiga-ui/kit/components/data-list-wrapper';\nimport { TuiDataListWrapper } from '@taiga-ui/kit/components/data-list-wrapper';\nimport * as i7 from '@taiga-ui/kit/pipes/stringify-content';\nimport { TuiStringifyContentPipe } from '@taiga-ui/kit/pipes/stringify-content';\nimport { TuiMultiSelectOptionComponent, TuiMultiSelectOptionModule } from '@taiga-ui/legacy/components/multi-select-option';\nimport { tuiQueryListChanges, tuiControlValue } from '@taiga-ui/cdk/observables';\nimport { map, combineLatest } from 'rxjs';\n\nconst TUI_MULTI_SELECT_DEFAULT_OPTIONS = {\n    rows: Infinity,\n    valueContent: '',\n};\n/**\n * @deprecated: drop in v5.0\n * Default parameters for MultiSelect component\n */\nconst TUI_MULTI_SELECT_OPTIONS = tuiCreateToken(TUI_MULTI_SELECT_DEFAULT_OPTIONS);\nfunction tuiMultiSelectOptionsProvider(options) {\n    return tuiProvideOptions(TUI_MULTI_SELECT_OPTIONS, options, TUI_MULTI_SELECT_DEFAULT_OPTIONS);\n}\n\nclass AbstractTuiNativeMultiSelect extends AbstractTuiNativeSelect {\n    constructor() {\n        super(...arguments);\n        this.selectedMapper = (option, value) => value.includes(option);\n    }\n    get stringify() {\n        return this.host.stringify;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: AbstractTuiNativeMultiSelect, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.12\", type: AbstractTuiNativeMultiSelect, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: AbstractTuiNativeMultiSelect, decorators: [{\n            type: Directive\n        }] });\n\nclass TuiMultiSelectComponent extends AbstractTuiMultipleControl {\n    constructor() {\n        super(...arguments);\n        this.arrowMode = inject(TUI_ARROW_MODE);\n        this.itemsHandlers = inject(TUI_ITEMS_HANDLERS);\n        this.options = inject(TUI_MULTI_SELECT_OPTIONS);\n        this.inputTagOptions = inject(TUI_INPUT_TAG_OPTIONS);\n        this.open = false;\n        this.controller = inject(TUI_TEXTFIELD_WATCHED_CONTROLLER);\n        this.isMobile = inject(TUI_IS_MOBILE);\n        this.stringify = this.itemsHandlers.stringify;\n        this.identityMatcher = this.itemsHandlers.identityMatcher;\n        this.search = '';\n        this.placeholder = '';\n        this.editable = true;\n        this.disabledItemHandler = this.itemsHandlers.disabledItemHandler;\n        this.valueContent = this.options.valueContent;\n        this.tagValidator = TUI_TRUE_HANDLER;\n        this.rows = this.options.rows;\n        this.autoColor = false;\n        this.searchChange = new EventEmitter();\n        this.valueMapper = (value, stringify, group) => group\n            ? EMPTY_ARRAY\n            : value.map((item) => new TuiStringifiableItem(item, stringify));\n        this.disabledItemHandlerWrapper = (handler) => (stringifiable) => tuiIsString(stringifiable) || handler(stringifiable.item);\n    }\n    get size() {\n        return this.controller.size;\n    }\n    get nativeFocusableElement() {\n        return this.input?.nativeFocusableElement ?? null;\n    }\n    get focused() {\n        return !!this.input?.focused || !!this.dropdown?.tuiDropdownOpen;\n    }\n    onValueChange(value) {\n        this.value = value;\n    }\n    onSearch(search) {\n        // Clearing sets the empty value, the dropdown should not be opened on clear.\n        if (search !== '') {\n            this.open = true;\n        }\n        this.updateSearch(search);\n    }\n    setDisabledState() {\n        super.setDisabledState();\n        this.open = false;\n    }\n    handleOption(option) {\n        const { value, identityMatcher } = this;\n        const index = value.findIndex((item) => identityMatcher(item, option));\n        this.value =\n            index === -1 ? [...value, option] : value.filter((_, i) => i !== index);\n        this.updateSearch(null);\n    }\n    get arrow() {\n        return this.interactive ? this.arrowMode.interactive : this.arrowMode.disabled;\n    }\n    get nativeDropdownMode() {\n        return !!this.nativeSelect && this.isMobile && !this.editable;\n    }\n    get computedValue() {\n        return this.computedGroup ? EMPTY_ARRAY : this.value;\n    }\n    // @bad TODO: think of a better way\n    get searchOrSpace() {\n        return this.computedGroup ? ' ' : this.searchString;\n    }\n    get searchString() {\n        return this.search === null ? '' : this.search;\n    }\n    get computedGroup() {\n        return (!!this.valueContent &&\n            this.value.length > 0 &&\n            (!this.focused || !this.editable));\n    }\n    getStringifier(stringify) {\n        return ({ $implicit }) => stringify($implicit);\n    }\n    onSpace(event) {\n        if (!this.editable) {\n            event.preventDefault();\n        }\n        if (!this.readOnly) {\n            this.open = true;\n        }\n    }\n    onEnter(event) {\n        const { value } = this;\n        const options = this.accessor ? this.accessor.getOptions() : [];\n        if (options.length !== 1) {\n            return;\n        }\n        event.preventDefault();\n        this.value = options[0] ? tuiArrayToggle(value, options[0]) : value;\n        this.updateSearch(null);\n    }\n    onKeyDown(event) {\n        if (event.key === this.inputTagOptions.separator) {\n            this.onEnter(event);\n        }\n    }\n    onPaste(event) {\n        const pasted = tuiGetClipboardDataText(event);\n        const tags = pasted\n            .split(this.inputTagOptions.separator)\n            .map((tag) => tag.trim());\n        const options = this.accessor?.getOptions() ?? [];\n        const separator = tuiIsString(this.inputTagOptions.separator)\n            ? this.inputTagOptions.separator\n            : ',';\n        const matches = options?.filter((option) => tags.includes(this.stringify(option))) ?? [];\n        const matchingStrings = matches.map((v) => String(v));\n        const invalid = tags.filter((value) => !matchingStrings.includes(value));\n        this.value = this.filterValue([...this.value, ...matches]);\n        this.updateSearch(invalid.length ? invalid.join(separator) : null);\n    }\n    onClick({ nativeFocusableElement }) {\n        if (this.interactive &&\n            nativeFocusableElement &&\n            tuiIsNativeFocused(nativeFocusableElement)) {\n            this.open = !this.open;\n        }\n    }\n    onInput(value) {\n        this.value = value.map(({ item }) => item);\n    }\n    onActiveZone(active) {\n        this.updateFocused(active);\n    }\n    filterValue(value) {\n        const seen = new Set();\n        return value\n            .reverse()\n            .filter((item) => item && !seen.has(item) && seen.add(item))\n            .reverse();\n    }\n    updateSearch(search) {\n        if (this.search === search) {\n            return;\n        }\n        this.search = search;\n        this.searchChange.emit(search);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiMultiSelectComponent, deps: null, target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiMultiSelectComponent, selector: \"tui-multi-select\", inputs: { stringify: \"stringify\", identityMatcher: \"identityMatcher\", search: \"search\", placeholder: \"placeholder\", editable: \"editable\", disabledItemHandler: \"disabledItemHandler\", valueContent: \"valueContent\", tagValidator: \"tagValidator\", rows: \"rows\", autoColor: \"autoColor\" }, outputs: { searchChange: \"searchChange\" }, host: { properties: { \"attr.data-size\": \"size\", \"class._editable\": \"editable\", \"class._expandable\": \"rows > 1\" } }, providers: [\n            tuiAsFocusableItemAccessor(TuiMultiSelectComponent),\n            tuiAsControl(TuiMultiSelectComponent),\n            tuiAsDataListHost(TuiMultiSelectComponent),\n            TEXTFIELD_CONTROLLER_PROVIDER,\n        ], queries: [{ propertyName: \"accessor\", first: true, predicate: TUI_DATA_LIST_ACCESSOR, descendants: true }, { propertyName: \"nativeSelect\", first: true, predicate: AbstractTuiNativeMultiSelect, descendants: true, static: true }, { propertyName: \"datalist\", first: true, predicate: TuiDataListDirective, descendants: true, read: TemplateRef }], viewQueries: [{ propertyName: \"dropdown\", first: true, predicate: TuiDropdownOpen, descendants: true }, { propertyName: \"input\", first: true, predicate: TuiInputTagComponent, descendants: true }], usesInheritance: true, hostDirectives: [{ directive: i1.TuiDropdownFixed }], ngImport: i0, template: \"<div\\n    tuiDropdownOpenMonitor\\n    class=\\\"t-hosted\\\"\\n    [tuiDropdown]=\\\"datalist || ''\\\"\\n    [tuiDropdownEnabled]=\\\"interactive && !nativeDropdownMode\\\"\\n    [(tuiDropdownOpen)]=\\\"open\\\"\\n    (tuiActiveZoneChange)=\\\"onActiveZone($event)\\\"\\n>\\n    <tui-input-tag\\n        #inputTag\\n        automation-id=\\\"tui-multi-select__input\\\"\\n        class=\\\"t-input\\\"\\n        [autoColor]=\\\"autoColor\\\"\\n        [disabled]=\\\"disabled\\\"\\n        [disabledItemHandler]=\\\"disabledItemHandler | tuiMapper: disabledItemHandlerWrapper\\\"\\n        [editable]=\\\"false\\\"\\n        [inputHidden]=\\\"!editable\\\"\\n        [nativeId]=\\\"nativeId\\\"\\n        [ngModel]=\\\"computedValue | tuiMapper: valueMapper : stringify\\\"\\n        [ngModelOptions]=\\\"{standalone: true}\\\"\\n        [placeholder]=\\\"placeholder\\\"\\n        [pseudoFocus]=\\\"computedFocused\\\"\\n        [pseudoHover]=\\\"pseudoHover\\\"\\n        [pseudoInvalid]=\\\"computedInvalid\\\"\\n        [pseudoOpen]=\\\"open\\\"\\n        [readOnly]=\\\"readOnly\\\"\\n        [removable]=\\\"!nativeDropdownMode\\\"\\n        [rows]=\\\"rows\\\"\\n        [search]=\\\"searchOrSpace\\\"\\n        [tagValidator]=\\\"tagValidator | tuiMapper: disabledItemHandlerWrapper\\\"\\n        [tuiTextfieldIcon]=\\\"arrow ? icon : ''\\\"\\n        (click.prevent)=\\\"onClick(inputTag)\\\"\\n        (keydown.enter)=\\\"onEnter($event)\\\"\\n        (keydown.space)=\\\"onSpace($event)\\\"\\n        (keydown)=\\\"onKeyDown($event)\\\"\\n        (ngModelChange)=\\\"onInput($event)\\\"\\n        (paste.capture.stop.prevent)=\\\"onPaste($event)\\\"\\n        (searchChange)=\\\"onSearch($event)\\\"\\n    >\\n        <ng-content />\\n        <ng-template #select>\\n            <ng-content\\n                *ngIf=\\\"isMobile\\\"\\n                select=\\\"select\\\"\\n            />\\n        </ng-template>\\n\\n        <ng-container\\n            *ngTemplateOutlet=\\\"select\\\"\\n            ngProjectAs=\\\"select\\\"\\n        />\\n\\n        <div\\n            *ngIf=\\\"computedGroup\\\"\\n            ngProjectAs=\\\"tuiContent\\\"\\n            class=\\\"t-content\\\"\\n            [class.t-content_fullsize]=\\\"inputTag.labelOutside\\\"\\n        >\\n            <span\\n                *polymorpheusOutlet=\\\"valueContent as text; context: {$implicit: value}\\\"\\n                class=\\\"t-primitive\\\"\\n            >\\n                {{ text }}\\n            </span>\\n        </div>\\n    </tui-input-tag>\\n\\n    <ng-template #icon>\\n        <div\\n            appearance=\\\"icon\\\"\\n            automation-id=\\\"tui-multi-select__arrow\\\"\\n            tuiWrapper\\n            class=\\\"t-arrow\\\"\\n            [class.t-arrow_native-dropdown]=\\\"nativeDropdownMode\\\"\\n            (mousedown.prevent.silent)=\\\"(0)\\\"\\n        >\\n            <ng-container *polymorpheusOutlet=\\\"arrow as text\\\">\\n                {{ text }}\\n            </ng-container>\\n        </div>\\n    </ng-template>\\n</div>\\n\", styles: [\":host{position:relative;display:block;border-radius:var(--tui-radius-m)}:host._disabled,:host :host-context(*:disabled){pointer-events:none}.t-hosted{display:block;border-radius:inherit}.t-input{border-radius:inherit}:host:not(._editable):not(._readonly) .t-input{cursor:pointer}.t-content{display:flex;align-items:center;pointer-events:none;box-sizing:border-box}.t-primitive{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.t-arrow{pointer-events:auto;cursor:pointer}.t-arrow_native-dropdown{pointer-events:none}\\n\"], dependencies: [{ kind: \"directive\", type: i1$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1$1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { kind: \"directive\", type: i4.PolymorpheusOutlet, selector: \"[polymorpheusOutlet]\", inputs: [\"polymorpheusOutlet\", \"polymorpheusOutletContext\"] }, { kind: \"directive\", type: i5.TuiWrapperDirective, selector: \"[tuiWrapper]\", inputs: [\"disabled\", \"readOnly\", \"hover\", \"active\", \"focus\", \"invalid\", \"appearance\"] }, { kind: \"component\", type: i6.TuiInputTagComponent, selector: \"tui-input-tag\", inputs: [\"separator\", \"search\", \"editable\", \"tagValidator\", \"rows\", \"inputHidden\", \"uniqueTags\", \"autoColor\", \"maxLength\", \"placeholder\", \"removable\", \"pseudoOpen\", \"disabledItemHandler\", \"pseudoFocused\"], outputs: [\"searchChange\"] }, { kind: \"directive\", type: i1.TuiDropdownDirective, selector: \"[tuiDropdown]:not(ng-container):not(ng-template)\", inputs: [\"tuiDropdown\"], exportAs: [\"tuiDropdown\"] }, { kind: \"directive\", type: i1.TuiDropdownOpen, selector: \"[tuiDropdown][tuiDropdownOpen],[tuiDropdown][tuiDropdownOpenChange]\", inputs: [\"tuiDropdownEnabled\", \"tuiDropdownOpen\"], outputs: [\"tuiDropdownOpenChange\"] }, { kind: \"directive\", type: i5.TuiTextfieldIconDirective, selector: \"[tuiTextfieldIcon]\", inputs: [\"tuiTextfieldIcon\"] }, { kind: \"directive\", type: i5.TuiLegacyDropdownOpenMonitorDirective, selector: \"[tuiDropdownOpenMonitor]\" }, { kind: \"pipe\", type: i6$1.TuiMapperPipe, name: \"tuiMapper\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\n__decorate([\n    tuiPure\n], TuiMultiSelectComponent.prototype, \"getStringifier\", null);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiMultiSelectComponent, decorators: [{\n            type: Component,\n            args: [{ standalone: false, selector: 'tui-multi-select', changeDetection: ChangeDetectionStrategy.OnPush, providers: [\n                        tuiAsFocusableItemAccessor(TuiMultiSelectComponent),\n                        tuiAsControl(TuiMultiSelectComponent),\n                        tuiAsDataListHost(TuiMultiSelectComponent),\n                        TEXTFIELD_CONTROLLER_PROVIDER,\n                    ], hostDirectives: [TuiDropdownFixed], host: {\n                        '[attr.data-size]': 'size',\n                        '[class._editable]': 'editable',\n                        '[class._expandable]': 'rows > 1',\n                    }, template: \"<div\\n    tuiDropdownOpenMonitor\\n    class=\\\"t-hosted\\\"\\n    [tuiDropdown]=\\\"datalist || ''\\\"\\n    [tuiDropdownEnabled]=\\\"interactive && !nativeDropdownMode\\\"\\n    [(tuiDropdownOpen)]=\\\"open\\\"\\n    (tuiActiveZoneChange)=\\\"onActiveZone($event)\\\"\\n>\\n    <tui-input-tag\\n        #inputTag\\n        automation-id=\\\"tui-multi-select__input\\\"\\n        class=\\\"t-input\\\"\\n        [autoColor]=\\\"autoColor\\\"\\n        [disabled]=\\\"disabled\\\"\\n        [disabledItemHandler]=\\\"disabledItemHandler | tuiMapper: disabledItemHandlerWrapper\\\"\\n        [editable]=\\\"false\\\"\\n        [inputHidden]=\\\"!editable\\\"\\n        [nativeId]=\\\"nativeId\\\"\\n        [ngModel]=\\\"computedValue | tuiMapper: valueMapper : stringify\\\"\\n        [ngModelOptions]=\\\"{standalone: true}\\\"\\n        [placeholder]=\\\"placeholder\\\"\\n        [pseudoFocus]=\\\"computedFocused\\\"\\n        [pseudoHover]=\\\"pseudoHover\\\"\\n        [pseudoInvalid]=\\\"computedInvalid\\\"\\n        [pseudoOpen]=\\\"open\\\"\\n        [readOnly]=\\\"readOnly\\\"\\n        [removable]=\\\"!nativeDropdownMode\\\"\\n        [rows]=\\\"rows\\\"\\n        [search]=\\\"searchOrSpace\\\"\\n        [tagValidator]=\\\"tagValidator | tuiMapper: disabledItemHandlerWrapper\\\"\\n        [tuiTextfieldIcon]=\\\"arrow ? icon : ''\\\"\\n        (click.prevent)=\\\"onClick(inputTag)\\\"\\n        (keydown.enter)=\\\"onEnter($event)\\\"\\n        (keydown.space)=\\\"onSpace($event)\\\"\\n        (keydown)=\\\"onKeyDown($event)\\\"\\n        (ngModelChange)=\\\"onInput($event)\\\"\\n        (paste.capture.stop.prevent)=\\\"onPaste($event)\\\"\\n        (searchChange)=\\\"onSearch($event)\\\"\\n    >\\n        <ng-content />\\n        <ng-template #select>\\n            <ng-content\\n                *ngIf=\\\"isMobile\\\"\\n                select=\\\"select\\\"\\n            />\\n        </ng-template>\\n\\n        <ng-container\\n            *ngTemplateOutlet=\\\"select\\\"\\n            ngProjectAs=\\\"select\\\"\\n        />\\n\\n        <div\\n            *ngIf=\\\"computedGroup\\\"\\n            ngProjectAs=\\\"tuiContent\\\"\\n            class=\\\"t-content\\\"\\n            [class.t-content_fullsize]=\\\"inputTag.labelOutside\\\"\\n        >\\n            <span\\n                *polymorpheusOutlet=\\\"valueContent as text; context: {$implicit: value}\\\"\\n                class=\\\"t-primitive\\\"\\n            >\\n                {{ text }}\\n            </span>\\n        </div>\\n    </tui-input-tag>\\n\\n    <ng-template #icon>\\n        <div\\n            appearance=\\\"icon\\\"\\n            automation-id=\\\"tui-multi-select__arrow\\\"\\n            tuiWrapper\\n            class=\\\"t-arrow\\\"\\n            [class.t-arrow_native-dropdown]=\\\"nativeDropdownMode\\\"\\n            (mousedown.prevent.silent)=\\\"(0)\\\"\\n        >\\n            <ng-container *polymorpheusOutlet=\\\"arrow as text\\\">\\n                {{ text }}\\n            </ng-container>\\n        </div>\\n    </ng-template>\\n</div>\\n\", styles: [\":host{position:relative;display:block;border-radius:var(--tui-radius-m)}:host._disabled,:host :host-context(*:disabled){pointer-events:none}.t-hosted{display:block;border-radius:inherit}.t-input{border-radius:inherit}:host:not(._editable):not(._readonly) .t-input{cursor:pointer}.t-content{display:flex;align-items:center;pointer-events:none;box-sizing:border-box}.t-primitive{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.t-arrow{pointer-events:auto;cursor:pointer}.t-arrow_native-dropdown{pointer-events:none}\\n\"] }]\n        }], propDecorators: { accessor: [{\n                type: ContentChild,\n                args: [TUI_DATA_LIST_ACCESSOR]\n            }], nativeSelect: [{\n                type: ContentChild,\n                args: [AbstractTuiNativeMultiSelect, { static: true }]\n            }], dropdown: [{\n                type: ViewChild,\n                args: [TuiDropdownOpen]\n            }], input: [{\n                type: ViewChild,\n                args: [TuiInputTagComponent]\n            }], datalist: [{\n                type: ContentChild,\n                args: [TuiDataListDirective, { read: TemplateRef }]\n            }], stringify: [{\n                type: Input\n            }], identityMatcher: [{\n                type: Input\n            }], search: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], editable: [{\n                type: Input\n            }], disabledItemHandler: [{\n                type: Input\n            }], valueContent: [{\n                type: Input\n            }], tagValidator: [{\n                type: Input\n            }], rows: [{\n                type: Input\n            }], autoColor: [{\n                type: Input\n            }], searchChange: [{\n                type: Output\n            }], getStringifier: [] } });\n\nclass TuiHideSelectedPipe {\n    constructor() {\n        this.component = inject(TuiMultiSelectComponent);\n    }\n    transform(items) {\n        const { value, identityMatcher } = this.component;\n        if (!items) {\n            return null;\n        }\n        return tuiIsFlat(items)\n            ? this.filter(items, value, identityMatcher)\n            : this.filter2d(items, value, identityMatcher);\n    }\n    filter2d(items, value, matcher) {\n        return items.map((subItems) => this.filter(subItems, value, matcher));\n    }\n    filter(items, value, matcher) {\n        return items.filter((item) => value.every((selected) => !matcher(selected, item)));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiHideSelectedPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe }); }\n    static { this.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"14.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiHideSelectedPipe, name: \"tuiHideSelected\", pure: false }); }\n}\n__decorate([\n    tuiPure\n], TuiHideSelectedPipe.prototype, \"filter2d\", null);\n__decorate([\n    tuiPure\n], TuiHideSelectedPipe.prototype, \"filter\", null);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiHideSelectedPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    standalone: false,\n                    name: 'tuiHideSelected',\n                    pure: false,\n                }]\n        }], propDecorators: { filter2d: [], filter: [] } });\n\nclass TuiMultiSelectDirective extends AbstractTuiTextfieldHost {\n    constructor() {\n        super(...arguments);\n        this.disableItemHandler = (item) => this.host.disabledItemHandler(item);\n    }\n    get readOnly() {\n        return true;\n    }\n    get stringify() {\n        return this.host.stringify;\n    }\n    onValueChange() { }\n    onSelectionChange(value) {\n        this.host.onValueChange(value);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiMultiSelectDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiMultiSelectDirective, selector: \"tui-multi-select\", providers: [tuiAsTextfieldHost(TuiMultiSelectDirective)], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiMultiSelectDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    standalone: false,\n                    selector: 'tui-multi-select',\n                    providers: [tuiAsTextfieldHost(TuiMultiSelectDirective)],\n                }]\n        }] });\n\nclass TuiMultiSelectGroupComponent {\n    constructor() {\n        this.options = EMPTY_QUERY;\n        this.host = inject(TUI_DATA_LIST_HOST);\n        this.control = inject(NgControl);\n        this.multiSelectTexts$ = inject(TUI_MULTI_SELECT_TEXTS);\n        this.label = '';\n    }\n    get empty$() {\n        return tuiQueryListChanges(this.options).pipe(map(({ length }) => !length));\n    }\n    get disabled$() {\n        return tuiQueryListChanges(this.options).pipe(map((items) => items.every(({ disabled }) => disabled)));\n    }\n    get value$() {\n        return combineLatest([this.items$, this.valueChanges$]).pipe(map(([items, current]) => {\n            let result = false;\n            for (let i = 0; i < items.length; i++) {\n                const selected = current.some((selected) => this.matcher(selected, items[i]));\n                if ((!selected && result) || (selected && !result && i)) {\n                    return null;\n                }\n                result = selected;\n            }\n            return result;\n        }));\n    }\n    onClick(checked) {\n        if (!this.control.control) {\n            return;\n        }\n        const controlValue = this.control.value || [];\n        const { values } = this;\n        const filtered = controlValue.filter((current) => values.every((item) => !this.matcher(current, item)));\n        this.control.control.setValue(checked ? filtered : [...filtered, ...values]);\n    }\n    get items$() {\n        return tuiQueryListChanges(this.options).pipe(map((options) => options.map(({ value }) => value).filter(tuiIsPresent)));\n    }\n    get valueChanges$() {\n        return tuiControlValue(this.control).pipe(map((value) => value || []));\n    }\n    get values() {\n        return this.filter(tuiGetOriginalArrayFromQueryList(this.options));\n    }\n    get matcher() {\n        return this.host.identityMatcher || TUI_DEFAULT_IDENTITY_MATCHER;\n    }\n    filter(items) {\n        return items.map(({ value }) => value).filter(tuiIsPresent);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiMultiSelectGroupComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiMultiSelectGroupComponent, selector: \"tui-opt-group[tuiMultiSelectGroup]\", inputs: { label: \"label\" }, host: { properties: { \"class._label\": \"label\" } }, queries: [{ propertyName: \"options\", predicate: TuiOption }], ngImport: i0, template: \"<span\\n    *tuiLet=\\\"value$ | async as value\\\"\\n    class=\\\"t-wrapper\\\"\\n>\\n    <span class=\\\"t-label\\\">{{ label }}</span>\\n    <button\\n        *ngIf=\\\"label && !(empty$ | async)\\\"\\n        tuiLink\\n        type=\\\"button\\\"\\n        class=\\\"t-button\\\"\\n        [disabled]=\\\"!!(disabled$ | async)\\\"\\n        (click)=\\\"onClick(value)\\\"\\n    >\\n        {{ (multiSelectTexts$ | async)?.[value ? 'none' : 'all'] }}\\n    </button>\\n</span>\\n<ng-content />\\n\", styles: [\":host._label:before{display:none}:host:not(:first-of-type) .t-label:not(:empty){padding-top:1.25rem}:host:not(:first-of-type) .t-button{margin-top:1.25rem}.t-wrapper{display:flex;align-items:flex-start}.t-label:not(:empty){flex:1;padding:.75rem 1rem .25rem .625rem}.t-button{margin:.75rem 1rem 0 auto}\\n\"], dependencies: [{ kind: \"directive\", type: i1$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2$1.TuiLet, selector: \"[tuiLet]\", inputs: [\"tuiLet\"] }, { kind: \"directive\", type: i3.TuiLink, selector: \"a[tuiLink], button[tuiLink]\", inputs: [\"pseudo\"] }, { kind: \"pipe\", type: i1$1.AsyncPipe, name: \"async\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\n__decorate([\n    tuiPure\n], TuiMultiSelectGroupComponent.prototype, \"empty$\", null);\n__decorate([\n    tuiPure\n], TuiMultiSelectGroupComponent.prototype, \"disabled$\", null);\n__decorate([\n    tuiPure\n], TuiMultiSelectGroupComponent.prototype, \"value$\", null);\n__decorate([\n    tuiPure\n], TuiMultiSelectGroupComponent.prototype, \"items$\", null);\n__decorate([\n    tuiPure\n], TuiMultiSelectGroupComponent.prototype, \"valueChanges$\", null);\n__decorate([\n    tuiPure\n], TuiMultiSelectGroupComponent.prototype, \"filter\", null);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiMultiSelectGroupComponent, decorators: [{\n            type: Component,\n            args: [{ standalone: false, selector: 'tui-opt-group[tuiMultiSelectGroup]', changeDetection: ChangeDetectionStrategy.OnPush, host: {\n                        '[class._label]': 'label',\n                    }, template: \"<span\\n    *tuiLet=\\\"value$ | async as value\\\"\\n    class=\\\"t-wrapper\\\"\\n>\\n    <span class=\\\"t-label\\\">{{ label }}</span>\\n    <button\\n        *ngIf=\\\"label && !(empty$ | async)\\\"\\n        tuiLink\\n        type=\\\"button\\\"\\n        class=\\\"t-button\\\"\\n        [disabled]=\\\"!!(disabled$ | async)\\\"\\n        (click)=\\\"onClick(value)\\\"\\n    >\\n        {{ (multiSelectTexts$ | async)?.[value ? 'none' : 'all'] }}\\n    </button>\\n</span>\\n<ng-content />\\n\", styles: [\":host._label:before{display:none}:host:not(:first-of-type) .t-label:not(:empty){padding-top:1.25rem}:host:not(:first-of-type) .t-button{margin-top:1.25rem}.t-wrapper{display:flex;align-items:flex-start}.t-label:not(:empty){flex:1;padding:.75rem 1rem .25rem .625rem}.t-button{margin:.75rem 1rem 0 auto}\\n\"] }]\n        }], propDecorators: { options: [{\n                type: ContentChildren,\n                args: [TuiOption]\n            }], label: [{\n                type: Input\n            }], empty$: [], disabled$: [], value$: [], items$: [], valueChanges$: [], filter: [] } });\n\nconst TUI_MULTI_SELECT_OPTION = new PolymorpheusComponent(TuiMultiSelectOptionComponent);\nclass TuiMultiSelectGroupDirective {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiMultiSelectGroupDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiMultiSelectGroupDirective, selector: \"[tuiMultiSelectGroup]\", providers: [\n            tuiAsOptionContent(TUI_MULTI_SELECT_OPTION),\n            {\n                provide: TUI_DATA_LIST_HOST,\n                deps: [\n                    NgControl,\n                    [new Optional(), forwardRef(() => TuiMultiSelectComponent)],\n                ],\n                useFactory: (control, host) => host || {\n                    handleOption: (option) => control.control?.setValue(tuiArrayToggle(control.value || [], option)),\n                },\n            },\n            {\n                provide: NG_VALUE_ACCESSOR,\n                multi: true,\n                useValue: {\n                    writeValue: EMPTY_FUNCTION,\n                    registerOnChange: EMPTY_FUNCTION,\n                    registerOnTouched: EMPTY_FUNCTION,\n                },\n            },\n        ], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiMultiSelectGroupDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    standalone: false,\n                    selector: '[tuiMultiSelectGroup]',\n                    providers: [\n                        tuiAsOptionContent(TUI_MULTI_SELECT_OPTION),\n                        {\n                            provide: TUI_DATA_LIST_HOST,\n                            deps: [\n                                NgControl,\n                                [new Optional(), forwardRef(() => TuiMultiSelectComponent)],\n                            ],\n                            useFactory: (control, host) => host || {\n                                handleOption: (option) => control.control?.setValue(tuiArrayToggle(control.value || [], option)),\n                            },\n                        },\n                        {\n                            provide: NG_VALUE_ACCESSOR,\n                            multi: true,\n                            useValue: {\n                                writeValue: EMPTY_FUNCTION,\n                                registerOnChange: EMPTY_FUNCTION,\n                                registerOnTouched: EMPTY_FUNCTION,\n                            },\n                        },\n                    ],\n                }]\n        }] });\n\nclass TuiNativeMultiSelectComponent extends AbstractTuiNativeMultiSelect {\n    constructor() {\n        super(...arguments);\n        this.items = [];\n    }\n    onValueChange(selectedOptions) {\n        const selected = Array.from(selectedOptions).map((option) => option.index);\n        const value = this.items?.filter((_, index) => selected.includes(index)) || [];\n        this.host.onSelectionChange(value);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiNativeMultiSelectComponent, deps: null, target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiNativeMultiSelectComponent, selector: \"select[multiple][tuiSelect]:not([labels])\", inputs: { items: \"items\" }, host: { listeners: { \"change\": \"onValueChange($event.target.selectedOptions)\", \"click.stop.silent\": \"0\", \"mousedown.stop.silent\": \"0\" }, properties: { \"attr.aria-invalid\": \"host.invalid\", \"disabled\": \"host.disabled || control.readOnly\", \"tabIndex\": \"host.focusable ? 0 : -1\" } }, providers: [\n            tuiAsDataList(TuiNativeMultiSelectComponent),\n            tuiProvide(AbstractTuiNativeMultiSelect, TuiNativeMultiSelectComponent),\n            {\n                provide: TemplateRef,\n                deps: [TuiNativeMultiSelectComponent],\n                useFactory: ({ datalist }) => datalist,\n            },\n        ], usesInheritance: true, ngImport: i0, template: \"<ng-container *ngIf=\\\"control.control?.valueChanges | async\\\" />\\n\\n<tui-data-list-wrapper\\n    *tuiDataList\\n    tuiMultiSelectGroup\\n    [disabledItemHandler]=\\\"disabledItemHandler || host.disableItemHandler\\\"\\n    [itemContent]=\\\"stringify | tuiStringifyContent\\\"\\n    [items]=\\\"items\\\"\\n/>\\n<option\\n    *ngFor=\\\"let option of items\\\"\\n    [disabled]=\\\"disabledItemHandler ? disabledItemHandler(option) : host.disableItemHandler(option)\\\"\\n    [selected]=\\\"option | tuiMapper: selectedMapper : control.value\\\"\\n    [value]=\\\"stringify(option)\\\"\\n>\\n    {{ stringify(option) }}\\n</option>\\n\", styles: [\":host{position:absolute;top:0;left:0;inline-size:100%;block-size:100%;opacity:0}\\n\"], dependencies: [{ kind: \"directive\", type: i1$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i1$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.NgSelectOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { kind: \"directive\", type: i2.ɵNgSelectMultipleOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { kind: \"directive\", type: i2$2.TuiDataListDirective, selector: \"ng-template[tuiDataList]\" }, { kind: \"component\", type: i3$1.TuiDataListWrapperComponent, selector: \"tui-data-list-wrapper:not([labels])\", inputs: [\"items\", \"disabledItemHandler\", \"emptyContent\", \"size\", \"itemContent\"], outputs: [\"itemClick\"] }, { kind: \"directive\", type: TuiMultiSelectGroupDirective, selector: \"[tuiMultiSelectGroup]\" }, { kind: \"pipe\", type: i1$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i6$1.TuiMapperPipe, name: \"tuiMapper\" }, { kind: \"pipe\", type: i7.TuiStringifyContentPipe, name: \"tuiStringifyContent\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiNativeMultiSelectComponent, decorators: [{\n            type: Component,\n            args: [{ standalone: false, selector: 'select[multiple][tuiSelect]:not([labels])', changeDetection: ChangeDetectionStrategy.OnPush, providers: [\n                        tuiAsDataList(TuiNativeMultiSelectComponent),\n                        tuiProvide(AbstractTuiNativeMultiSelect, TuiNativeMultiSelectComponent),\n                        {\n                            provide: TemplateRef,\n                            deps: [TuiNativeMultiSelectComponent],\n                            useFactory: ({ datalist }) => datalist,\n                        },\n                    ], host: {\n                        '[attr.aria-invalid]': 'host.invalid',\n                        '[disabled]': 'host.disabled || control.readOnly',\n                        '[tabIndex]': 'host.focusable ? 0 : -1',\n                        '(change)': 'onValueChange($event.target.selectedOptions)',\n                        '(click.stop.silent)': '0',\n                        '(mousedown.stop.silent)': '0',\n                    }, template: \"<ng-container *ngIf=\\\"control.control?.valueChanges | async\\\" />\\n\\n<tui-data-list-wrapper\\n    *tuiDataList\\n    tuiMultiSelectGroup\\n    [disabledItemHandler]=\\\"disabledItemHandler || host.disableItemHandler\\\"\\n    [itemContent]=\\\"stringify | tuiStringifyContent\\\"\\n    [items]=\\\"items\\\"\\n/>\\n<option\\n    *ngFor=\\\"let option of items\\\"\\n    [disabled]=\\\"disabledItemHandler ? disabledItemHandler(option) : host.disableItemHandler(option)\\\"\\n    [selected]=\\\"option | tuiMapper: selectedMapper : control.value\\\"\\n    [value]=\\\"stringify(option)\\\"\\n>\\n    {{ stringify(option) }}\\n</option>\\n\", styles: [\":host{position:absolute;top:0;left:0;inline-size:100%;block-size:100%;opacity:0}\\n\"] }]\n        }], propDecorators: { items: [{\n                type: Input\n            }] } });\n\nclass TuiNativeMultiSelectGroupComponent extends AbstractTuiNativeMultiSelect {\n    constructor() {\n        super(...arguments);\n        this.items = [];\n        this.labels = [];\n    }\n    onValueChange(selectedOptions) {\n        const selected = Array.from(selectedOptions).map((option) => option.index);\n        const flatItems = this.items?.reduce((acc, val) => acc.concat(val), []) || [];\n        const value = flatItems.filter((_, index) => selected.includes(index));\n        this.host.onSelectionChange(value);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiNativeMultiSelectGroupComponent, deps: null, target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiNativeMultiSelectGroupComponent, selector: \"select[multiple][tuiSelect][labels]\", inputs: { items: \"items\", labels: \"labels\" }, host: { listeners: { \"change\": \"onValueChange($event.target.selectedOptions)\", \"click.stop.silent\": \"0\", \"mousedown.stop.silent\": \"0\" }, properties: { \"attr.aria-invalid\": \"host.invalid\", \"disabled\": \"host.disabled || control.readOnly\", \"tabIndex\": \"host.focusable ? 0 : -1\" } }, providers: [\n            tuiAsDataList(TuiNativeMultiSelectGroupComponent),\n            tuiProvide(AbstractTuiNativeMultiSelect, TuiNativeMultiSelectGroupComponent),\n            {\n                provide: TemplateRef,\n                deps: [TuiNativeMultiSelectGroupComponent],\n                useFactory: ({ datalist }) => datalist,\n            },\n        ], usesInheritance: true, ngImport: i0, template: \"<ng-container *ngIf=\\\"control.control?.valueChanges | async\\\" />\\n\\n<tui-data-list-wrapper\\n    *tuiDataList\\n    tuiMultiSelectGroup\\n    [disabledItemHandler]=\\\"disabledItemHandler || host.disableItemHandler\\\"\\n    [itemContent]=\\\"stringify | tuiStringifyContent\\\"\\n    [items]=\\\"items\\\"\\n    [labels]=\\\"labels\\\"\\n/>\\n<optgroup\\n    *ngFor=\\\"let group of items; let index = index\\\"\\n    [label]=\\\"labels[index]\\\"\\n>\\n    <option\\n        *ngFor=\\\"let option of group\\\"\\n        [disabled]=\\\"disabledItemHandler ? disabledItemHandler(option) : host.disableItemHandler(option)\\\"\\n        [selected]=\\\"option | tuiMapper: selectedMapper : control.value\\\"\\n        [value]=\\\"stringify(option)\\\"\\n    >\\n        {{ stringify(option) }}\\n    </option>\\n</optgroup>\\n\", styles: [\":host{position:absolute;top:0;left:0;inline-size:100%;block-size:100%;opacity:0}\\n\"], dependencies: [{ kind: \"directive\", type: i1$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i1$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.NgSelectOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { kind: \"directive\", type: i2.ɵNgSelectMultipleOption, selector: \"option\", inputs: [\"ngValue\", \"value\"] }, { kind: \"directive\", type: i2$2.TuiDataListDirective, selector: \"ng-template[tuiDataList]\" }, { kind: \"component\", type: i3$1.TuiDataListGroupWrapperComponent, selector: \"tui-data-list-wrapper[labels]\", inputs: [\"labels\"] }, { kind: \"directive\", type: TuiMultiSelectGroupDirective, selector: \"[tuiMultiSelectGroup]\" }, { kind: \"pipe\", type: i1$1.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i6$1.TuiMapperPipe, name: \"tuiMapper\" }, { kind: \"pipe\", type: i7.TuiStringifyContentPipe, name: \"tuiStringifyContent\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiNativeMultiSelectGroupComponent, decorators: [{\n            type: Component,\n            args: [{ standalone: false, selector: 'select[multiple][tuiSelect][labels]', changeDetection: ChangeDetectionStrategy.OnPush, providers: [\n                        tuiAsDataList(TuiNativeMultiSelectGroupComponent),\n                        tuiProvide(AbstractTuiNativeMultiSelect, TuiNativeMultiSelectGroupComponent),\n                        {\n                            provide: TemplateRef,\n                            deps: [TuiNativeMultiSelectGroupComponent],\n                            useFactory: ({ datalist }) => datalist,\n                        },\n                    ], host: {\n                        '[attr.aria-invalid]': 'host.invalid',\n                        '[disabled]': 'host.disabled || control.readOnly',\n                        '[tabIndex]': 'host.focusable ? 0 : -1',\n                        '(change)': 'onValueChange($event.target.selectedOptions)',\n                        '(click.stop.silent)': '0',\n                        '(mousedown.stop.silent)': '0',\n                    }, template: \"<ng-container *ngIf=\\\"control.control?.valueChanges | async\\\" />\\n\\n<tui-data-list-wrapper\\n    *tuiDataList\\n    tuiMultiSelectGroup\\n    [disabledItemHandler]=\\\"disabledItemHandler || host.disableItemHandler\\\"\\n    [itemContent]=\\\"stringify | tuiStringifyContent\\\"\\n    [items]=\\\"items\\\"\\n    [labels]=\\\"labels\\\"\\n/>\\n<optgroup\\n    *ngFor=\\\"let group of items; let index = index\\\"\\n    [label]=\\\"labels[index]\\\"\\n>\\n    <option\\n        *ngFor=\\\"let option of group\\\"\\n        [disabled]=\\\"disabledItemHandler ? disabledItemHandler(option) : host.disableItemHandler(option)\\\"\\n        [selected]=\\\"option | tuiMapper: selectedMapper : control.value\\\"\\n        [value]=\\\"stringify(option)\\\"\\n    >\\n        {{ stringify(option) }}\\n    </option>\\n</optgroup>\\n\", styles: [\":host{position:absolute;top:0;left:0;inline-size:100%;block-size:100%;opacity:0}\\n\"] }]\n        }], propDecorators: { items: [{\n                type: Input\n            }], labels: [{\n                type: Input\n            }] } });\n\nclass TuiMultiSelectModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiMultiSelectModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiMultiSelectModule, declarations: [TuiMultiSelectComponent,\n            TuiMultiSelectGroupComponent,\n            TuiMultiSelectGroupDirective,\n            TuiHideSelectedPipe,\n            TuiNativeMultiSelectComponent,\n            TuiNativeMultiSelectGroupComponent,\n            TuiMultiSelectDirective], imports: [CommonModule,\n            FormsModule,\n            PolymorpheusOutlet,\n            PolymorpheusTemplate,\n            TuiWrapperModule,\n            TuiArrowComponent,\n            TuiLet,\n            TuiMapperPipe,\n            TuiInputTagModule,\n            TuiMultiSelectOptionModule,\n            TuiMapperPipe,\n            TuiLink,\n            TuiTextfieldControllerModule,\n            TuiStringifyContentPipe,\n            TuiLegacyDropdownOpenMonitorDirective, i1.TuiDropdownOptionsDirective, i1.TuiDropdownDriverDirective, i1.TuiDropdownDirective, i1.TuiDropdownComponent, i1.TuiDropdownOpen, i1.TuiDropdownOpenLegacy, i1.TuiDropdownPortal, i1.TuiDropdownManual, i1.TuiDropdownHover, i1.TuiDropdownContext, i1.TuiDropdownPosition, i1.TuiDropdownPositionSided, i1.TuiDropdownSelection, i2$2.TuiDataListComponent, i2$2.TuiDataListDirective, i2$2.TuiOption, i2$2.TuiOptGroup, i3$1.TuiDataListWrapperComponent, i3$1.TuiDataListGroupWrapperComponent, i2$2.TuiDataListDirective], exports: [TuiMultiSelectComponent,\n            TuiMultiSelectGroupComponent,\n            TuiMultiSelectGroupDirective,\n            TuiHideSelectedPipe,\n            TuiMultiSelectDirective,\n            TuiNativeMultiSelectComponent,\n            TuiNativeMultiSelectGroupComponent, i1.TuiDropdownOptionsDirective, i1.TuiDropdownDriverDirective, i1.TuiDropdownDirective, i1.TuiDropdownComponent, i1.TuiDropdownOpen, i1.TuiDropdownOpenLegacy, i1.TuiDropdownPortal, i1.TuiDropdownManual, i1.TuiDropdownHover, i1.TuiDropdownContext, i1.TuiDropdownPosition, i1.TuiDropdownPositionSided, i1.TuiDropdownSelection, i2$2.TuiDataListComponent, i2$2.TuiDataListDirective, i2$2.TuiOption, i2$2.TuiOptGroup, i3$1.TuiDataListWrapperComponent, i3$1.TuiDataListGroupWrapperComponent, i2$2.TuiDataListDirective] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiMultiSelectModule, imports: [CommonModule,\n            FormsModule,\n            TuiWrapperModule,\n            TuiArrowComponent,\n            TuiInputTagModule,\n            TuiMultiSelectOptionModule,\n            TuiTextfieldControllerModule, i1.TuiDropdownComponent, i2$2.TuiDataListComponent, i2$2.TuiOption, i3$1.TuiDataListWrapperComponent, i3$1.TuiDataListGroupWrapperComponent] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiMultiSelectModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        FormsModule,\n                        PolymorpheusOutlet,\n                        PolymorpheusTemplate,\n                        TuiWrapperModule,\n                        TuiArrowComponent,\n                        TuiLet,\n                        TuiMapperPipe,\n                        TuiInputTagModule,\n                        TuiMultiSelectOptionModule,\n                        TuiMapperPipe,\n                        TuiLink,\n                        TuiTextfieldControllerModule,\n                        TuiStringifyContentPipe,\n                        TuiLegacyDropdownOpenMonitorDirective,\n                        ...TuiDropdown,\n                        ...TuiDataList,\n                        ...TuiDataListWrapper,\n                    ],\n                    declarations: [\n                        TuiMultiSelectComponent,\n                        TuiMultiSelectGroupComponent,\n                        TuiMultiSelectGroupDirective,\n                        TuiHideSelectedPipe,\n                        TuiNativeMultiSelectComponent,\n                        TuiNativeMultiSelectGroupComponent,\n                        TuiMultiSelectDirective,\n                    ],\n                    exports: [\n                        TuiMultiSelectComponent,\n                        TuiMultiSelectGroupComponent,\n                        TuiMultiSelectGroupDirective,\n                        TuiHideSelectedPipe,\n                        TuiMultiSelectDirective,\n                        TuiNativeMultiSelectComponent,\n                        TuiNativeMultiSelectGroupComponent,\n                        ...TuiDropdown,\n                        ...TuiDataList,\n                        ...TuiDataListWrapper,\n                    ],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AbstractTuiNativeMultiSelect, TUI_MULTI_SELECT_DEFAULT_OPTIONS, TUI_MULTI_SELECT_OPTION, TUI_MULTI_SELECT_OPTIONS, TuiHideSelectedPipe, TuiMultiSelectComponent, TuiMultiSelectDirective, TuiMultiSelectGroupComponent, TuiMultiSelectGroupDirective, TuiMultiSelectModule, TuiNativeMultiSelectComponent, TuiNativeMultiSelectGroupComponent, tuiMultiSelectOptionsProvider };\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,OAAO,KAAKC,EAAE,MAAM,eAAe;AACnC,SAASC,SAAS,EAAEC,MAAM,EAAEC,YAAY,EAAEC,WAAW,EAAEC,SAAS,EAAEC,uBAAuB,EAAEC,YAAY,EAAEC,SAAS,EAAEC,KAAK,EAAEC,MAAM,EAAEC,IAAI,EAAEC,eAAe,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,eAAe;AAC/M,SAASC,cAAc,EAAEC,iBAAiB,EAAEC,WAAW,EAAEC,cAAc,EAAEC,OAAO,EAAEC,YAAY,EAAEC,gCAAgC,EAAEC,UAAU,QAAQ,mCAAmC;AACvL,SAASC,SAAS,QAAQ,qBAAqB;AAC/C,SAASC,gBAAgB,EAAEC,WAAW,EAAEC,WAAW,EAAEC,4BAA4B,EAAEC,cAAc,QAAQ,yBAAyB;AAClI,SAASC,aAAa,QAAQ,sBAAsB;AACpD,SAASC,uBAAuB,QAAQ,yBAAyB;AACjE,SAASC,kBAAkB,QAAQ,2BAA2B;AAC9D,OAAO,KAAKC,IAAI,MAAM,qCAAqC;AAC3D,SAASC,iBAAiB,EAAEC,sBAAsB,EAAEC,oBAAoB,EAAEC,kBAAkB,EAAEC,SAAS,EAAEC,kBAAkB,EAAEC,aAAa,EAAEC,WAAW,QAAQ,qCAAqC;AACpM,OAAO,KAAKC,EAAE,MAAM,oCAAoC;AACxD,SAASC,eAAe,EAAEC,gBAAgB,EAAEC,WAAW,QAAQ,oCAAoC;AACnG,SAASC,kBAAkB,EAAEC,sBAAsB,QAAQ,sBAAsB;AACjF,SAASC,uBAAuB,EAAEC,0BAA0B,EAAEC,oBAAoB,EAAEC,YAAY,EAAEC,wBAAwB,QAAQ,0BAA0B;AAC5J,SAASC,cAAc,EAAEC,iBAAiB,QAAQ,mCAAmC;AACrF,OAAO,KAAKC,EAAE,MAAM,uCAAuC;AAC3D,SAASC,qBAAqB,EAAEC,oBAAoB,EAAEC,iBAAiB,QAAQ,uCAAuC;AACtH,OAAO,KAAKC,EAAE,MAAM,6BAA6B;AACjD,SAASC,gCAAgC,EAAEC,6BAA6B,EAAEC,gBAAgB,EAAEC,4BAA4B,EAAEC,qCAAqC,QAAQ,6BAA6B;AACpM,SAASC,0BAA0B,EAAEC,kBAAkB,QAAQ,yBAAyB;AACxF,OAAO,KAAKC,IAAI,MAAM,iBAAiB;AACvC,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,OAAO,KAAKC,EAAE,MAAM,gBAAgB;AACpC,SAASC,SAAS,EAAEC,iBAAiB,EAAEC,WAAW,QAAQ,gBAAgB;AAC1E,OAAO,KAAKC,EAAE,MAAM,wBAAwB;AAC5C,SAASC,qBAAqB,EAAEC,kBAAkB,EAAEC,oBAAoB,QAAQ,wBAAwB;AACxG,OAAO,KAAKC,IAAI,MAAM,4BAA4B;AAClD,SAASC,aAAa,QAAQ,4BAA4B;AAC1D,OAAO,KAAKC,IAAI,MAAM,8BAA8B;AACpD,SAASC,MAAM,QAAQ,8BAA8B;AACrD,OAAO,KAAKC,EAAE,MAAM,gCAAgC;AACpD,SAASC,OAAO,QAAQ,gCAAgC;AACxD,OAAO,KAAKC,IAAI,MAAM,4CAA4C;AAClE,SAASC,kBAAkB,QAAQ,4CAA4C;AAC/E,OAAO,KAAKC,EAAE,MAAM,uCAAuC;AAC3D,SAASC,uBAAuB,QAAQ,uCAAuC;AAC/E,SAASC,6BAA6B,EAAEC,0BAA0B,QAAQ,iDAAiD;AAC3H,SAASC,mBAAmB,EAAEC,eAAe,QAAQ,2BAA2B;AAChF,SAASC,GAAG,EAAEC,aAAa,QAAQ,MAAM;AAAC,MAAAC,GAAA;AAAA,MAAAC,GAAA;AAAA,MAAAC,GAAA,GAAAA,CAAA;EAAAC,UAAA;AAAA;AAAA,MAAAC,GAAA,GAAAC,EAAA;EAAAC,SAAA,EAAAD;AAAA;AAAA,SAAAE,4DAAAC,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAuB2DrG,EAAE,CAAAuG,YAAA,4BA8J2tE,CAAC;EAAA;AAAA;AAAA,SAAAC,+CAAAH,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA9J9tErG,EAAE,CAAAyG,UAAA,IAAAL,2DAAA,uBA8J2tE,CAAC;EAAA;EAAA,IAAAC,EAAA;IAAA,MAAAK,MAAA,GA9J9tE1G,EAAE,CAAA2G,aAAA;IAAF3G,EAAE,CAAA4G,UAAA,SAAAF,MAAA,CAAAG,QA8JsqE,CAAC;EAAA;AAAA;AAAA,SAAAC,gDAAAT,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA9JzqErG,EAAE,CAAA+G,kBAAA,KA8Js2E,CAAC;EAAA;AAAA;AAAA,SAAAC,+CAAAX,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA9Jz2ErG,EAAE,CAAAiH,cAAA,cA8JqtF,CAAC;IA9JxtFjH,EAAE,CAAAkH,MAAA,EA8J+vF,CAAC;IA9JlwFlH,EAAE,CAAAmH,YAAA,CA8JswF,CAAC;EAAA;EAAA,IAAAd,EAAA;IAAA,MAAAe,OAAA,GAAAd,GAAA,CAAAe,kBAAA;IA9JzwFrH,EAAE,CAAAsH,SAAA,CA8J+vF,CAAC;IA9JlwFtH,EAAE,CAAAuH,kBAAA,MAAAH,OAAA,KA8J+vF,CAAC;EAAA;AAAA;AAAA,SAAAI,wCAAAnB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA9JlwFrG,EAAE,CAAAiH,cAAA,YA8JijF,CAAC;IA9JpjFjH,EAAE,CAAAyG,UAAA,IAAAO,8CAAA,kBA8JqtF,CAAC;IA9JxtFhH,EAAE,CAAAmH,YAAA,CA8JsxF,CAAC;EAAA;EAAA,IAAAd,EAAA;IAAA,MAAAK,MAAA,GA9JzxF1G,EAAE,CAAA2G,aAAA;IAAA,MAAAc,WAAA,GAAFzH,EAAE,CAAA0H,WAAA;IAAF1H,EAAE,CAAA2H,WAAA,uBAAAF,WAAA,CAAAG,YA8JsiF,CAAC;IA9JziF5H,EAAE,CAAAsH,SAAA,CA8JynF,CAAC;IA9J5nFtH,EAAE,CAAA4G,UAAA,uBAAAF,MAAA,CAAAmB,YA8JynF,CAAC,8BA9J5nF7H,EAAE,CAAA8H,eAAA,IAAA7B,GAAA,EAAAS,MAAA,CAAAqB,KAAA,CA8J6pF,CAAC;EAAA;AAAA;AAAA,SAAAC,+DAAA3B,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA9JhqFrG,EAAE,CAAAiI,uBAAA,EA8JqqG,CAAC;IA9JxqGjI,EAAE,CAAAkH,MAAA,EA8J+sG,CAAC;IA9JltGlH,EAAE,CAAAkI,qBAAA;EAAA;EAAA,IAAA7B,EAAA;IAAA,MAAA8B,OAAA,GAAA7B,GAAA,CAAAe,kBAAA;IAAFrH,EAAE,CAAAsH,SAAA,CA8J+sG,CAAC;IA9JltGtH,EAAE,CAAAuH,kBAAA,MAAAY,OAAA,KA8J+sG,CAAC;EAAA;AAAA;AAAA,SAAAC,gDAAA/B,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAgC,GAAA,GA9JltGrI,EAAE,CAAAsI,gBAAA;IAAFtI,EAAE,CAAAiH,cAAA,aA8JmmG,CAAC;IA9JtmGjH,EAAE,CAAAuI,UAAA,sCAAAC,wFAAA;MAAFxI,EAAE,CAAAyI,aAAA,CAAAJ,GAAA;MAAA,OAAFrI,EAAE,CAAA0I,WAAA,CA8JqlG,CAAC;IAAA,CAAE,CAAC;IA9J3lG1I,EAAE,CAAAyG,UAAA,IAAAuB,8DAAA,0BA8JqqG,CAAC;IA9JxqGhI,EAAE,CAAAmH,YAAA,CA8J8uG,CAAC;EAAA;EAAA,IAAAd,EAAA;IAAA,MAAAK,MAAA,GA9JjvG1G,EAAE,CAAA2G,aAAA;IAAF3G,EAAE,CAAA2H,WAAA,4BAAAjB,MAAA,CAAAiC,kBA8JwiG,CAAC;IA9J3iG3I,EAAE,CAAAsH,SAAA,CA8J2pG,CAAC;IA9J9pGtH,EAAE,CAAA4G,UAAA,uBAAAF,MAAA,CAAAkC,KA8J2pG,CAAC;EAAA;AAAA;AAAA,MAAAC,GAAA;AAAA,MAAAC,GAAA;AAAA,SAAAC,sDAAA1C,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAA2C,GAAA,GA9J9pGhJ,EAAE,CAAAsI,gBAAA;IAAFtI,EAAE,CAAAiH,cAAA,eA0UmkB,CAAC;IA1UtkBjH,EAAE,CAAAiJ,MAAA;IAAFjJ,EAAE,CAAAuI,UAAA,mBAAAW,8EAAA;MAAFlJ,EAAE,CAAAyI,aAAA,CAAAO,GAAA;MAAA,MAAAG,QAAA,GAAFnJ,EAAE,CAAA2G,aAAA,GAAAyC,MAAA;MAAA,MAAA1C,MAAA,GAAF1G,EAAE,CAAA2G,aAAA;MAAA,OAAF3G,EAAE,CAAA0I,WAAA,CA0U6iBhC,MAAA,CAAA2C,OAAA,CAAAF,QAAa,CAAC;IAAA,CAAC,CAAC;IA1U/jBnJ,EAAE,CAAAkH,MAAA,EA0U8oB,CAAC;IA1UjpBlH,EAAE,CAAAiJ,MAAA;IAAFjJ,EAAE,CAAAmH,YAAA,CA0UupB,CAAC;EAAA;EAAA,IAAAd,EAAA;IAAA,IAAAiD,OAAA;IAAA,MAAAH,QAAA,GA1U1pBnJ,EAAE,CAAA2G,aAAA,GAAAyC,MAAA;IAAA,MAAA1C,MAAA,GAAF1G,EAAE,CAAA2G,aAAA;IAAF3G,EAAE,CAAA4G,UAAA,eAAF5G,EAAE,CAAAuJ,WAAA,OAAA7C,MAAA,CAAA8C,SAAA,CA0UwhB,CAAC;IA1U3hBxJ,EAAE,CAAAsH,SAAA,EA0U8oB,CAAC;IA1UjpBtH,EAAE,CAAAuH,kBAAA,OAAA+B,OAAA,GAAFtJ,EAAE,CAAAuJ,WAAA,OAAA7C,MAAA,CAAA+C,iBAAA,oBAAAH,OAAA,CAAAH,QAAA,uBA0U8oB,CAAC;EAAA;AAAA;AAAA,SAAAO,6CAAArD,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA1UjpBrG,EAAE,CAAAiH,cAAA,aA0UyT,CAAC,aAA6B,CAAC;IA1U1VjH,EAAE,CAAAkH,MAAA,EA0UkW,CAAC;IA1UrWlH,EAAE,CAAAmH,YAAA,CA0UyW,CAAC;IA1U5WnH,EAAE,CAAAyG,UAAA,IAAAsC,qDAAA,mBA0UmkB,CAAC;IA1UtkB/I,EAAE,CAAAiJ,MAAA;IAAFjJ,EAAE,CAAAmH,YAAA,CA0UgqB,CAAC;EAAA;EAAA,IAAAd,EAAA;IAAA,MAAAK,MAAA,GA1UnqB1G,EAAE,CAAA2G,aAAA;IAAF3G,EAAE,CAAAsH,SAAA,EA0UkW,CAAC;IA1UrWtH,EAAE,CAAA2J,iBAAA,CAAAjD,MAAA,CAAAkD,KA0UkW,CAAC;IA1UrW5J,EAAE,CAAAsH,SAAA,CA0Uka,CAAC;IA1UratH,EAAE,CAAA4G,UAAA,SAAAF,MAAA,CAAAkD,KAAA,KAAF5J,EAAE,CAAAuJ,WAAA,OAAA7C,MAAA,CAAAmD,MAAA,CA0Uka,CAAC;EAAA;AAAA;AAAA,MAAAC,GAAA;AAAA,SAAAC,sDAAA1D,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA1UrarG,EAAE,CAAA+G,kBAAA,EAqbmB,CAAC;EAAA;AAAA;AAAA,SAAAiD,+DAAA3D,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IArbtBrG,EAAE,CAAAiK,SAAA,8BAqbwP,CAAC;IArb3PjK,EAAE,CAAAiJ,MAAA;EAAA;EAAA,IAAA5C,EAAA;IAAA,MAAA6D,MAAA,GAAFlK,EAAE,CAAA2G,aAAA;IAAF3G,EAAE,CAAA4G,UAAA,wBAAAsD,MAAA,CAAAC,mBAAA,IAAAD,MAAA,CAAAE,IAAA,CAAAC,kBAqbsK,CAAC,gBArbzKrK,EAAE,CAAAuJ,WAAA,OAAAW,MAAA,CAAAI,SAAA,CAqb6N,CAAC,UAAAJ,MAAA,CAAAK,KAAsB,CAAC;EAAA;AAAA;AAAA,SAAAC,gDAAAnE,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IArbvPrG,EAAE,CAAAiH,cAAA,eAqb0f,CAAC;IArb7fjH,EAAE,CAAAiJ,MAAA;IAAFjJ,EAAE,CAAAkH,MAAA,EAqbyhB,CAAC;IArb5hBlH,EAAE,CAAAmH,YAAA,CAqbkiB,CAAC;EAAA;EAAA,IAAAd,EAAA;IAAA,MAAAoE,SAAA,GAAAnE,GAAA,CAAAH,SAAA;IAAA,MAAA+D,MAAA,GArbriBlK,EAAE,CAAA2G,aAAA;IAAF3G,EAAE,CAAA4G,UAAA,aAAAsD,MAAA,CAAAC,mBAAA,GAAAD,MAAA,CAAAC,mBAAA,CAAAM,SAAA,IAAAP,MAAA,CAAAE,IAAA,CAAAC,kBAAA,CAAAI,SAAA,CAqb6Y,CAAC,aArbhZzK,EAAE,CAAA0K,WAAA,OAAAD,SAAA,EAAAP,MAAA,CAAAS,cAAA,EAAAT,MAAA,CAAAU,OAAA,CAAA7C,KAAA,CAqbod,CAAC,UAAAmC,MAAA,CAAAI,SAAA,CAAAG,SAAA,CAAkC,CAAC;IArb1fzK,EAAE,CAAAsH,SAAA,EAqbyhB,CAAC;IArb5hBtH,EAAE,CAAAuH,kBAAA,MAAA2C,MAAA,CAAAI,SAAA,CAAAG,SAAA,OAqbyhB,CAAC;EAAA;AAAA;AAAA,MAAAI,GAAA;AAAA,SAAAC,2DAAAzE,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IArb5hBrG,EAAE,CAAA+G,kBAAA,EAkemB,CAAC;EAAA;AAAA;AAAA,SAAAgE,oEAAA1E,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAletBrG,EAAE,CAAAiK,SAAA,8BAkeiR,CAAC;IAlepRjK,EAAE,CAAAiJ,MAAA;EAAA;EAAA,IAAA5C,EAAA;IAAA,MAAA6D,MAAA,GAAFlK,EAAE,CAAA2G,aAAA;IAAF3G,EAAE,CAAA4G,UAAA,wBAAAsD,MAAA,CAAAC,mBAAA,IAAAD,MAAA,CAAAE,IAAA,CAAAC,kBAkesK,CAAC,gBAlezKrK,EAAE,CAAAuJ,WAAA,OAAAW,MAAA,CAAAI,SAAA,CAke6N,CAAC,UAAAJ,MAAA,CAAAK,KAAsB,CAAC,WAAAL,MAAA,CAAAc,MAAwB,CAAC;EAAA;AAAA;AAAA,SAAAC,gEAAA5E,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAlehRrG,EAAE,CAAAiH,cAAA,eAke8oB,CAAC;IAlejpBjH,EAAE,CAAAiJ,MAAA;IAAFjJ,EAAE,CAAAkH,MAAA,EAkeqrB,CAAC;IAlexrBlH,EAAE,CAAAmH,YAAA,CAke8rB,CAAC;EAAA;EAAA,IAAAd,EAAA;IAAA,MAAAoE,SAAA,GAAAnE,GAAA,CAAAH,SAAA;IAAA,MAAA+D,MAAA,GAlejsBlK,EAAE,CAAA2G,aAAA;IAAF3G,EAAE,CAAA4G,UAAA,aAAAsD,MAAA,CAAAC,mBAAA,GAAAD,MAAA,CAAAC,mBAAA,CAAAM,SAAA,IAAAP,MAAA,CAAAE,IAAA,CAAAC,kBAAA,CAAAI,SAAA,CAkeqhB,CAAC,aAlexhBzK,EAAE,CAAA0K,WAAA,OAAAD,SAAA,EAAAP,MAAA,CAAAS,cAAA,EAAAT,MAAA,CAAAU,OAAA,CAAA7C,KAAA,CAkegmB,CAAC,UAAAmC,MAAA,CAAAI,SAAA,CAAAG,SAAA,CAAsC,CAAC;IAle1oBzK,EAAE,CAAAsH,SAAA,EAkeqrB,CAAC;IAlexrBtH,EAAE,CAAAuH,kBAAA,MAAA2C,MAAA,CAAAI,SAAA,CAAAG,SAAA,MAkeqrB,CAAC;EAAA;AAAA;AAAA,SAAAS,uDAAA7E,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAlexrBrG,EAAE,CAAAiH,cAAA,iBAkeoX,CAAC;IAlevXjH,EAAE,CAAAyG,UAAA,IAAAwE,+DAAA,mBAke8oB,CAAC;IAlejpBjL,EAAE,CAAAmH,YAAA,CAke2sB,CAAC;EAAA;EAAA,IAAAd,EAAA;IAAA,MAAA8E,QAAA,GAAA7E,GAAA,CAAAH,SAAA;IAAA,MAAAiF,QAAA,GAAA9E,GAAA,CAAA+E,KAAA;IAAA,MAAAnB,MAAA,GAle9sBlK,EAAE,CAAA2G,aAAA;IAAF3G,EAAE,CAAA4G,UAAA,UAAAsD,MAAA,CAAAc,MAAA,CAAAI,QAAA,CAkeiX,CAAC;IAlepXpL,EAAE,CAAAsH,SAAA,CAkeua,CAAC;IAle1atH,EAAE,CAAA4G,UAAA,YAAAuE,QAkeua,CAAC;EAAA;AAAA;AAAA,MAAAG,GAAA;AAvf/gB,MAAMC,gCAAgC,GAAG;EACrCC,IAAI,EAAEC,QAAQ;EACd5D,YAAY,EAAE;AAClB,CAAC;AACD;AACA;AACA;AACA;AACA,MAAM6D,wBAAwB,GAAG1K,cAAc,CAACuK,gCAAgC,CAAC;AACjF,SAASI,6BAA6BA,CAACC,OAAO,EAAE;EAC5C,OAAO3K,iBAAiB,CAACyK,wBAAwB,EAAEE,OAAO,EAAEL,gCAAgC,CAAC;AACjG;AAEA,MAAMM,4BAA4B,SAAS7I,uBAAuB,CAAC;EAC/D8I,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC,GAAGC,SAAS,CAAC;IACnB,IAAI,CAACpB,cAAc,GAAG,CAACqB,MAAM,EAAEjE,KAAK,KAAKA,KAAK,CAACkE,QAAQ,CAACD,MAAM,CAAC;EACnE;EACA,IAAI1B,SAASA,CAAA,EAAG;IACZ,OAAO,IAAI,CAACF,IAAI,CAACE,SAAS;EAC9B;EACA;IAAS,IAAI,CAAC4B,IAAI;MAAA,IAAAC,yCAAA;MAAA,gBAAAC,qCAAAC,iBAAA;QAAA,QAAAF,yCAAA,KAAAA,yCAAA,GAA+EnM,EAAE,CAAAsM,qBAAA,CAAQT,4BAA4B,IAAAQ,iBAAA,IAA5BR,4BAA4B;MAAA;IAAA,IAAqD;EAAE;EAC9L;IAAS,IAAI,CAACU,IAAI,kBAD+EvM,EAAE,CAAAwM,iBAAA;MAAAC,IAAA,EACJZ,4BAA4B;MAAAa,QAAA,GAD1B1M,EAAE,CAAA2M,0BAAA;IAAA,EACgE;EAAE;AACzK;AACA;EAAA,QAAAC,SAAA,oBAAAA,SAAA,KAHqG5M,EAAE,CAAA6M,iBAAA,CAGXhB,4BAA4B,EAAc,CAAC;IAC3HY,IAAI,EAAExM;EACV,CAAC,CAAC;AAAA;AAEV,MAAM6M,uBAAuB,SAAS7J,0BAA0B,CAAC;EAC7D6I,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC,GAAGC,SAAS,CAAC;IACnB,IAAI,CAACgB,SAAS,GAAG7M,MAAM,CAACmD,cAAc,CAAC;IACvC,IAAI,CAAC2J,aAAa,GAAG9M,MAAM,CAAC4C,kBAAkB,CAAC;IAC/C,IAAI,CAAC8I,OAAO,GAAG1L,MAAM,CAACwL,wBAAwB,CAAC;IAC/C,IAAI,CAACuB,eAAe,GAAG/M,MAAM,CAACsD,qBAAqB,CAAC;IACpD,IAAI,CAAC0J,IAAI,GAAG,KAAK;IACjB,IAAI,CAACC,UAAU,GAAGjN,MAAM,CAAC0D,gCAAgC,CAAC;IAC1D,IAAI,CAACiD,QAAQ,GAAG3G,MAAM,CAAC4B,aAAa,CAAC;IACrC,IAAI,CAACwI,SAAS,GAAG,IAAI,CAAC0C,aAAa,CAAC1C,SAAS;IAC7C,IAAI,CAAC8C,eAAe,GAAG,IAAI,CAACJ,aAAa,CAACI,eAAe;IACzD,IAAI,CAACC,MAAM,GAAG,EAAE;IAChB,IAAI,CAACC,WAAW,GAAG,EAAE;IACrB,IAAI,CAACC,QAAQ,GAAG,IAAI;IACpB,IAAI,CAACpD,mBAAmB,GAAG,IAAI,CAAC6C,aAAa,CAAC7C,mBAAmB;IACjE,IAAI,CAACtC,YAAY,GAAG,IAAI,CAAC+D,OAAO,CAAC/D,YAAY;IAC7C,IAAI,CAAC2F,YAAY,GAAG/L,gBAAgB;IACpC,IAAI,CAAC+J,IAAI,GAAG,IAAI,CAACI,OAAO,CAACJ,IAAI;IAC7B,IAAI,CAACiC,SAAS,GAAG,KAAK;IACtB,IAAI,CAACC,YAAY,GAAG,IAAIvN,YAAY,CAAC,CAAC;IACtC,IAAI,CAACwN,WAAW,GAAG,CAAC5F,KAAK,EAAEuC,SAAS,EAAEsD,KAAK,KAAKA,KAAK,GAC/ClM,WAAW,GACXqG,KAAK,CAACpC,GAAG,CAAEkI,IAAI,IAAK,IAAI3K,oBAAoB,CAAC2K,IAAI,EAAEvD,SAAS,CAAC,CAAC;IACpE,IAAI,CAACwD,0BAA0B,GAAIC,OAAO,IAAMC,aAAa,IAAK9M,WAAW,CAAC8M,aAAa,CAAC,IAAID,OAAO,CAACC,aAAa,CAACH,IAAI,CAAC;EAC/H;EACA,IAAII,IAAIA,CAAA,EAAG;IACP,OAAO,IAAI,CAACd,UAAU,CAACc,IAAI;EAC/B;EACA,IAAIC,sBAAsBA,CAAA,EAAG;IACzB,OAAO,IAAI,CAACC,KAAK,EAAED,sBAAsB,IAAI,IAAI;EACrD;EACA,IAAIE,OAAOA,CAAA,EAAG;IACV,OAAO,CAAC,CAAC,IAAI,CAACD,KAAK,EAAEC,OAAO,IAAI,CAAC,CAAC,IAAI,CAACC,QAAQ,EAAEC,eAAe;EACpE;EACAC,aAAaA,CAACxG,KAAK,EAAE;IACjB,IAAI,CAACA,KAAK,GAAGA,KAAK;EACtB;EACAyG,QAAQA,CAACnB,MAAM,EAAE;IACb;IACA,IAAIA,MAAM,KAAK,EAAE,EAAE;MACf,IAAI,CAACH,IAAI,GAAG,IAAI;IACpB;IACA,IAAI,CAACuB,YAAY,CAACpB,MAAM,CAAC;EAC7B;EACAqB,gBAAgBA,CAAA,EAAG;IACf,KAAK,CAACA,gBAAgB,CAAC,CAAC;IACxB,IAAI,CAACxB,IAAI,GAAG,KAAK;EACrB;EACAyB,YAAYA,CAAC3C,MAAM,EAAE;IACjB,MAAM;MAAEjE,KAAK;MAAEqF;IAAgB,CAAC,GAAG,IAAI;IACvC,MAAM/B,KAAK,GAAGtD,KAAK,CAAC6G,SAAS,CAAEf,IAAI,IAAKT,eAAe,CAACS,IAAI,EAAE7B,MAAM,CAAC,CAAC;IACtE,IAAI,CAACjE,KAAK,GACNsD,KAAK,KAAK,CAAC,CAAC,GAAG,CAAC,GAAGtD,KAAK,EAAEiE,MAAM,CAAC,GAAGjE,KAAK,CAAC8G,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,KAAK1D,KAAK,CAAC;IAC3E,IAAI,CAACoD,YAAY,CAAC,IAAI,CAAC;EAC3B;EACA,IAAI7F,KAAKA,CAAA,EAAG;IACR,OAAO,IAAI,CAACoG,WAAW,GAAG,IAAI,CAACjC,SAAS,CAACiC,WAAW,GAAG,IAAI,CAACjC,SAAS,CAACkC,QAAQ;EAClF;EACA,IAAItG,kBAAkBA,CAAA,EAAG;IACrB,OAAO,CAAC,CAAC,IAAI,CAACuG,YAAY,IAAI,IAAI,CAACrI,QAAQ,IAAI,CAAC,IAAI,CAAC0G,QAAQ;EACjE;EACA,IAAI4B,aAAaA,CAAA,EAAG;IAChB,OAAO,IAAI,CAACC,aAAa,GAAG1N,WAAW,GAAG,IAAI,CAACqG,KAAK;EACxD;EACA;EACA,IAAIsH,aAAaA,CAAA,EAAG;IAChB,OAAO,IAAI,CAACD,aAAa,GAAG,GAAG,GAAG,IAAI,CAACE,YAAY;EACvD;EACA,IAAIA,YAAYA,CAAA,EAAG;IACf,OAAO,IAAI,CAACjC,MAAM,KAAK,IAAI,GAAG,EAAE,GAAG,IAAI,CAACA,MAAM;EAClD;EACA,IAAI+B,aAAaA,CAAA,EAAG;IAChB,OAAQ,CAAC,CAAC,IAAI,CAACvH,YAAY,IACvB,IAAI,CAACE,KAAK,CAACwH,MAAM,GAAG,CAAC,KACpB,CAAC,IAAI,CAACnB,OAAO,IAAI,CAAC,IAAI,CAACb,QAAQ,CAAC;EACzC;EACAiC,cAAcA,CAAClF,SAAS,EAAE;IACtB,OAAO,CAAC;MAAEnE;IAAU,CAAC,KAAKmE,SAAS,CAACnE,SAAS,CAAC;EAClD;EACAsJ,OAAOA,CAACC,KAAK,EAAE;IACX,IAAI,CAAC,IAAI,CAACnC,QAAQ,EAAE;MAChBmC,KAAK,CAACC,cAAc,CAAC,CAAC;IAC1B;IACA,IAAI,CAAC,IAAI,CAACC,QAAQ,EAAE;MAChB,IAAI,CAAC1C,IAAI,GAAG,IAAI;IACpB;EACJ;EACA2C,OAAOA,CAACH,KAAK,EAAE;IACX,MAAM;MAAE3H;IAAM,CAAC,GAAG,IAAI;IACtB,MAAM6D,OAAO,GAAG,IAAI,CAACkE,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACC,UAAU,CAAC,CAAC,GAAG,EAAE;IAC/D,IAAInE,OAAO,CAAC2D,MAAM,KAAK,CAAC,EAAE;MACtB;IACJ;IACAG,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,IAAI,CAAC5H,KAAK,GAAG6D,OAAO,CAAC,CAAC,CAAC,GAAGzK,cAAc,CAAC4G,KAAK,EAAE6D,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG7D,KAAK;IACnE,IAAI,CAAC0G,YAAY,CAAC,IAAI,CAAC;EAC3B;EACAuB,SAASA,CAACN,KAAK,EAAE;IACb,IAAIA,KAAK,CAACO,GAAG,KAAK,IAAI,CAAChD,eAAe,CAACiD,SAAS,EAAE;MAC9C,IAAI,CAACL,OAAO,CAACH,KAAK,CAAC;IACvB;EACJ;EACAS,OAAOA,CAACT,KAAK,EAAE;IACX,MAAMU,MAAM,GAAGrO,uBAAuB,CAAC2N,KAAK,CAAC;IAC7C,MAAMW,IAAI,GAAGD,MAAM,CACdE,KAAK,CAAC,IAAI,CAACrD,eAAe,CAACiD,SAAS,CAAC,CACrCvK,GAAG,CAAE4K,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC;IAC7B,MAAM5E,OAAO,GAAG,IAAI,CAACkE,QAAQ,EAAEC,UAAU,CAAC,CAAC,IAAI,EAAE;IACjD,MAAMG,SAAS,GAAGhP,WAAW,CAAC,IAAI,CAAC+L,eAAe,CAACiD,SAAS,CAAC,GACvD,IAAI,CAACjD,eAAe,CAACiD,SAAS,GAC9B,GAAG;IACT,MAAMO,OAAO,GAAG7E,OAAO,EAAEiD,MAAM,CAAE7C,MAAM,IAAKqE,IAAI,CAACpE,QAAQ,CAAC,IAAI,CAAC3B,SAAS,CAAC0B,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE;IACxF,MAAM0E,eAAe,GAAGD,OAAO,CAAC9K,GAAG,CAAEgL,CAAC,IAAKC,MAAM,CAACD,CAAC,CAAC,CAAC;IACrD,MAAME,OAAO,GAAGR,IAAI,CAACxB,MAAM,CAAE9G,KAAK,IAAK,CAAC2I,eAAe,CAACzE,QAAQ,CAAClE,KAAK,CAAC,CAAC;IACxE,IAAI,CAACA,KAAK,GAAG,IAAI,CAAC+I,WAAW,CAAC,CAAC,GAAG,IAAI,CAAC/I,KAAK,EAAE,GAAG0I,OAAO,CAAC,CAAC;IAC1D,IAAI,CAAChC,YAAY,CAACoC,OAAO,CAACtB,MAAM,GAAGsB,OAAO,CAACE,IAAI,CAACb,SAAS,CAAC,GAAG,IAAI,CAAC;EACtE;EACA7G,OAAOA,CAAC;IAAE6E;EAAuB,CAAC,EAAE;IAChC,IAAI,IAAI,CAACc,WAAW,IAChBd,sBAAsB,IACtBlM,kBAAkB,CAACkM,sBAAsB,CAAC,EAAE;MAC5C,IAAI,CAAChB,IAAI,GAAG,CAAC,IAAI,CAACA,IAAI;IAC1B;EACJ;EACA8D,OAAOA,CAACjJ,KAAK,EAAE;IACX,IAAI,CAACA,KAAK,GAAGA,KAAK,CAACpC,GAAG,CAAC,CAAC;MAAEkI;IAAK,CAAC,KAAKA,IAAI,CAAC;EAC9C;EACAoD,YAAYA,CAACC,MAAM,EAAE;IACjB,IAAI,CAACC,aAAa,CAACD,MAAM,CAAC;EAC9B;EACAJ,WAAWA,CAAC/I,KAAK,EAAE;IACf,MAAMqJ,IAAI,GAAG,IAAIC,GAAG,CAAC,CAAC;IACtB,OAAOtJ,KAAK,CACPuJ,OAAO,CAAC,CAAC,CACTzC,MAAM,CAAEhB,IAAI,IAAKA,IAAI,IAAI,CAACuD,IAAI,CAACG,GAAG,CAAC1D,IAAI,CAAC,IAAIuD,IAAI,CAACI,GAAG,CAAC3D,IAAI,CAAC,CAAC,CAC3DyD,OAAO,CAAC,CAAC;EAClB;EACA7C,YAAYA,CAACpB,MAAM,EAAE;IACjB,IAAI,IAAI,CAACA,MAAM,KAAKA,MAAM,EAAE;MACxB;IACJ;IACA,IAAI,CAACA,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACK,YAAY,CAAC+D,IAAI,CAACpE,MAAM,CAAC;EAClC;EACA;IAAS,IAAI,CAACnB,IAAI;MAAA,IAAAwF,oCAAA;MAAA,gBAAAC,gCAAAtF,iBAAA;QAAA,QAAAqF,oCAAA,KAAAA,oCAAA,GAxJ+E1R,EAAE,CAAAsM,qBAAA,CAwJQQ,uBAAuB,IAAAT,iBAAA,IAAvBS,uBAAuB;MAAA;IAAA,IAAqD;EAAE;EACzL;IAAS,IAAI,CAAC8E,IAAI,kBAzJ+E5R,EAAE,CAAA6R,iBAAA;MAAApF,IAAA,EAyJJK,uBAAuB;MAAAgF,SAAA;MAAAC,cAAA,WAAAC,uCAAA3L,EAAA,EAAAC,GAAA,EAAA2L,QAAA;QAAA,IAAA5L,EAAA;UAzJrBrG,EAAE,CAAAkS,cAAA,CAAAD,QAAA,EA8J9B9P,sBAAsB;UA9JMnC,EAAE,CAAAkS,cAAA,CAAAD,QAAA,EA8JuEpG,4BAA4B;UA9JrG7L,EAAE,CAAAkS,cAAA,CAAAD,QAAA,EA8J4L7P,oBAAoB,KAA2BhC,WAAW;QAAA;QAAA,IAAAiG,EAAA;UAAA,IAAA8L,EAAA;UA9JxPnS,EAAE,CAAAoS,cAAA,CAAAD,EAAA,GAAFnS,EAAE,CAAAqS,WAAA,QAAA/L,GAAA,CAAAwJ,QAAA,GAAAqC,EAAA,CAAAG,KAAA;UAAFtS,EAAE,CAAAoS,cAAA,CAAAD,EAAA,GAAFnS,EAAE,CAAAqS,WAAA,QAAA/L,GAAA,CAAA4I,YAAA,GAAAiD,EAAA,CAAAG,KAAA;UAAFtS,EAAE,CAAAoS,cAAA,CAAAD,EAAA,GAAFnS,EAAE,CAAAqS,WAAA,QAAA/L,GAAA,CAAAiM,QAAA,GAAAJ,EAAA,CAAAG,KAAA;QAAA;MAAA;MAAAE,SAAA,WAAAC,8BAAApM,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UAAFrG,EAAE,CAAA0S,WAAA,CA8J6T/P,eAAe;UA9J9U3C,EAAE,CAAA0S,WAAA,CA8JoZjP,oBAAoB;QAAA;QAAA,IAAA4C,EAAA;UAAA,IAAA8L,EAAA;UA9J1anS,EAAE,CAAAoS,cAAA,CAAAD,EAAA,GAAFnS,EAAE,CAAAqS,WAAA,QAAA/L,GAAA,CAAA+H,QAAA,GAAA8D,EAAA,CAAAG,KAAA;UAAFtS,EAAE,CAAAoS,cAAA,CAAAD,EAAA,GAAFnS,EAAE,CAAAqS,WAAA,QAAA/L,GAAA,CAAA6H,KAAA,GAAAgE,EAAA,CAAAG,KAAA;QAAA;MAAA;MAAAK,QAAA;MAAAC,YAAA,WAAAC,qCAAAxM,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UAAFrG,EAAE,CAAA8S,WAAA,cAAAxM,GAAA,CAAA2H,IAAA;UAAFjO,EAAE,CAAA2H,WAAA,cAAArB,GAAA,CAAAiH,QAyJkB,CAAC,gBAAAjH,GAAA,CAAAkF,IAAA,GAAhB,CAAe,CAAC;QAAA;MAAA;MAAAuH,MAAA;QAAAzI,SAAA;QAAA8C,eAAA;QAAAC,MAAA;QAAAC,WAAA;QAAAC,QAAA;QAAApD,mBAAA;QAAAtC,YAAA;QAAA2F,YAAA;QAAAhC,IAAA;QAAAiC,SAAA;MAAA;MAAAuF,OAAA;QAAAtF,YAAA;MAAA;MAAAhB,QAAA,GAzJrB1M,EAAE,CAAAiT,kBAAA,CAyJuf,CACllBhP,0BAA0B,CAAC6I,uBAAuB,CAAC,EACnD3J,YAAY,CAAC2J,uBAAuB,CAAC,EACrC5K,iBAAiB,CAAC4K,uBAAuB,CAAC,EAC1CjJ,6BAA6B,CAChC,GA9J4F7D,EAAE,CAAAkT,uBAAA,EA8JqfxQ,EAAE,CAACE,gBAAgB,IA9J1gB5C,EAAE,CAAA2M,0BAAA;MAAAwG,kBAAA,EAAArN,GAAA;MAAAsN,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,iCAAAnN,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UAAA,MAAA2C,GAAA,GAAFhJ,EAAE,CAAAsI,gBAAA;UAAFtI,EAAE,CAAAyT,eAAA,CAAA5N,GAAA;UAAF7F,EAAE,CAAAiH,cAAA,YA8J6xB,CAAC;UA9JhyBjH,EAAE,CAAA0T,gBAAA,mCAAAC,sEAAAC,MAAA;YAAF5T,EAAE,CAAAyI,aAAA,CAAAO,GAAA;YAAFhJ,EAAE,CAAA6T,kBAAA,CAAAvN,GAAA,CAAA4G,IAAA,EAAA0G,MAAA,MAAAtN,GAAA,CAAA4G,IAAA,GAAA0G,MAAA;YAAA,OAAF5T,EAAE,CAAA0I,WAAA,CAAAkL,MAAA;UAAA,CA8JsuB,CAAC;UA9JzuB5T,EAAE,CAAAuI,UAAA,iCAAAuL,oEAAAF,MAAA;YAAF5T,EAAE,CAAAyI,aAAA,CAAAO,GAAA;YAAA,OAAFhJ,EAAE,CAAA0I,WAAA,CA8JqwBpC,GAAA,CAAA2K,YAAA,CAAA2C,MAAmB,CAAC;UAAA,CAAC,CAAC;UA9J7xB5T,EAAE,CAAAiH,cAAA,yBA8JojE,CAAC;UA9JvjEjH,EAAE,CAAAiJ,MAAA;UAAFjJ,EAAE,CAAAiJ,MAAA;UAAFjJ,EAAE,CAAAiJ,MAAA;UAAFjJ,EAAE,CAAAuI,UAAA,2BAAAwL,wEAAA;YAAF/T,EAAE,CAAAyI,aAAA,CAAAO,GAAA;YAAA,MAAAvB,WAAA,GAAFzH,EAAE,CAAA0H,WAAA;YAAA,OAAF1H,EAAE,CAAA0I,WAAA,CA8JowDpC,GAAA,CAAA+C,OAAA,CAAA5B,WAAgB,CAAC;UAAA,CAAC,CAAC,2BAAAuM,wEAAAJ,MAAA;YA9JzxD5T,EAAE,CAAAyI,aAAA,CAAAO,GAAA;YAAA,OAAFhJ,EAAE,CAAA0I,WAAA,CA8JmzDpC,GAAA,CAAAuJ,OAAA,CAAA+D,MAAc,CAAC;UAAA,CAAC,CAAC,2BAAAK,wEAAAL,MAAA;YA9Jt0D5T,EAAE,CAAAyI,aAAA,CAAAO,GAAA;YAAA,OAAFhJ,EAAE,CAAA0I,WAAA,CA8Jg2DpC,GAAA,CAAAmJ,OAAA,CAAAmE,MAAc,CAAC;UAAA,CAAC,CAAC,qBAAAM,kEAAAN,MAAA;YA9Jn3D5T,EAAE,CAAAyI,aAAA,CAAAO,GAAA;YAAA,OAAFhJ,EAAE,CAAA0I,WAAA,CA8Ju4DpC,GAAA,CAAA0J,SAAA,CAAA4D,MAAgB,CAAC;UAAA,CAAC,CAAC,2BAAAO,wEAAAP,MAAA;YA9J55D5T,EAAE,CAAAyI,aAAA,CAAAO,GAAA;YAAA,OAAFhJ,EAAE,CAAA0I,WAAA,CA8Js7DpC,GAAA,CAAA0K,OAAA,CAAA4C,MAAc,CAAC;UAAA,CAAC,CAAC,wCAAAQ,qFAAAR,MAAA;YA9Jz8D5T,EAAE,CAAAyI,aAAA,CAAAO,GAAA;YAAA,OAAFhJ,EAAE,CAAA0I,WAAA,CA8Jg/DpC,GAAA,CAAA6J,OAAA,CAAAyD,MAAc,CAAC;UAAA,CAAC,CAAC,0BAAAS,uEAAAT,MAAA;YA9JngE5T,EAAE,CAAAyI,aAAA,CAAAO,GAAA;YAAA,OAAFhJ,EAAE,CAAA0I,WAAA,CA8J4hEpC,GAAA,CAAAkI,QAAA,CAAAoF,MAAe,CAAC;UAAA,CAAC,CAAC;UA9JhjE5T,EAAE,CAAAuG,YAAA,EA8J4kE,CAAC;UA9J/kEvG,EAAE,CAAAyG,UAAA,IAAAD,8CAAA,gCAAFxG,EAAE,CAAAsU,sBA8J2mE,CAAC,IAAAxN,+CAAA,yBAA0P,CAAC,KAAAU,uCAAA,gBAA0M,CAAC;UA9JpjFxH,EAAE,CAAAmH,YAAA,CA8J4yF,CAAC;UA9J/yFnH,EAAE,CAAAyG,UAAA,KAAA2B,+CAAA,gCAAFpI,EAAE,CAAAsU,sBA8Ju0F,CAAC;UA9J10FtU,EAAE,CAAAmH,YAAA,CA8J0wG,CAAC;QAAA;QAAA,IAAAd,EAAA;UAAA,MAAAkO,SAAA,GA9J7wGvU,EAAE,CAAA0H,WAAA;UAAA,MAAA8M,OAAA,GAAFxU,EAAE,CAAA0H,WAAA;UAAF1H,EAAE,CAAA4G,UAAA,gBAAAN,GAAA,CAAAiM,QAAA,MA8JmoB,CAAC,uBAAAjM,GAAA,CAAA0I,WAAA,KAAA1I,GAAA,CAAAqC,kBAAgE,CAAC;UA9JvsB3I,EAAE,CAAAyU,gBAAA,oBAAAnO,GAAA,CAAA4G,IA8JsuB,CAAC;UA9JzuBlN,EAAE,CAAAsH,SAAA,CA8Jq7B,CAAC;UA9Jx7BtH,EAAE,CAAA4G,UAAA,cAAAN,GAAA,CAAAmH,SA8Jq7B,CAAC,aAAAnH,GAAA,CAAA2I,QAAgC,CAAC,wBA9Jz9BjP,EAAE,CAAA0U,WAAA,QAAApO,GAAA,CAAA6D,mBAAA,EAAA7D,GAAA,CAAAwH,0BAAA,CA8JqjC,CAAC,kBAA6B,CAAC,iBAAAxH,GAAA,CAAAiH,QAAoC,CAAC,aAAAjH,GAAA,CAAAqO,QAAgC,CAAC,YA9J5pC3U,EAAE,CAAA0K,WAAA,QAAApE,GAAA,CAAA6I,aAAA,EAAA7I,GAAA,CAAAqH,WAAA,EAAArH,GAAA,CAAAgE,SAAA,CA8JmuC,CAAC,mBA9JtuCtK,EAAE,CAAA4U,eAAA,KAAA7O,GAAA,CA8JoxC,CAAC,gBAAAO,GAAA,CAAAgH,WAAsC,CAAC,gBAAAhH,GAAA,CAAAuO,eAA0C,CAAC,gBAAAvO,GAAA,CAAAwO,WAAsC,CAAC,kBAAAxO,GAAA,CAAAyO,eAA4C,CAAC,eAAAzO,GAAA,CAAA4G,IAA8B,CAAC,aAAA5G,GAAA,CAAAsJ,QAAgC,CAAC,eAAAtJ,GAAA,CAAAqC,kBAA4C,CAAC,SAAArC,GAAA,CAAAkF,IAAwB,CAAC,WAAAlF,GAAA,CAAA+I,aAAmC,CAAC,iBA9JvmDrP,EAAE,CAAA0U,WAAA,QAAApO,GAAA,CAAAkH,YAAA,EAAAlH,GAAA,CAAAwH,0BAAA,CA8JqrD,CAAC,qBAAAxH,GAAA,CAAAsC,KAAA,GAAA4L,OAAA,KAAiD,CAAC;UA9J1uDxU,EAAE,CAAAsH,SAAA,EA8JozE,CAAC;UA9JvzEtH,EAAE,CAAA4G,UAAA,qBAAA2N,SA8JozE,CAAC;UA9JvzEvU,EAAE,CAAAsH,SAAA,CA8Jy5E,CAAC;UA9J55EtH,EAAE,CAAA4G,UAAA,SAAAN,GAAA,CAAA8I,aA8Jy5E,CAAC;QAAA;MAAA;MAAA4F,YAAA,GAA47C7Q,IAAI,CAAC8Q,IAAI,EAA6F9Q,IAAI,CAAC+Q,gBAAgB,EAAoJ7Q,EAAE,CAAC8Q,eAAe,EAAsF9Q,EAAE,CAAC+Q,OAAO,EAA8M3Q,EAAE,CAACE,kBAAkB,EAA8HhB,EAAE,CAAC0R,mBAAmB,EAAgJ9R,EAAE,CAACE,oBAAoB,EAAmSf,EAAE,CAAC4S,oBAAoB,EAAiJ5S,EAAE,CAACC,eAAe,EAAuMgB,EAAE,CAAC4R,yBAAyB,EAA6F5R,EAAE,CAACK,qCAAqC,EAAgEa,IAAI,CAACC,aAAa;MAAA0Q,MAAA;MAAAC,eAAA;IAAA,EAA6E;EAAE;AACl0L;AACA1V,UAAU,CAAC,CACPqB,OAAO,CACV,EAAE0L,uBAAuB,CAAC4I,SAAS,EAAE,gBAAgB,EAAE,IAAI,CAAC;AAC7D;EAAA,QAAA9I,SAAA,oBAAAA,SAAA,KAnKqG5M,EAAE,CAAA6M,iBAAA,CAmKXC,uBAAuB,EAAc,CAAC;IACtHL,IAAI,EAAEpM,SAAS;IACfsV,IAAI,EAAE,CAAC;MAAE3P,UAAU,EAAE,KAAK;MAAE4P,QAAQ,EAAE,kBAAkB;MAAEH,eAAe,EAAEnV,uBAAuB,CAACuV,MAAM;MAAEC,SAAS,EAAE,CAC1G7R,0BAA0B,CAAC6I,uBAAuB,CAAC,EACnD3J,YAAY,CAAC2J,uBAAuB,CAAC,EACrC5K,iBAAiB,CAAC4K,uBAAuB,CAAC,EAC1CjJ,6BAA6B,CAChC;MAAEkS,cAAc,EAAE,CAACnT,gBAAgB,CAAC;MAAEwH,IAAI,EAAE;QACzC,kBAAkB,EAAE,MAAM;QAC1B,mBAAmB,EAAE,UAAU;QAC/B,qBAAqB,EAAE;MAC3B,CAAC;MAAEmJ,QAAQ,EAAE,yuFAAyuF;MAAEiC,MAAM,EAAE,CAAC,ghBAAghB;IAAE,CAAC;EAChyG,CAAC,CAAC,QAAkB;IAAE1F,QAAQ,EAAE,CAAC;MACzBrD,IAAI,EAAElM,YAAY;MAClBoV,IAAI,EAAE,CAACxT,sBAAsB;IACjC,CAAC,CAAC;IAAE+M,YAAY,EAAE,CAAC;MACfzC,IAAI,EAAElM,YAAY;MAClBoV,IAAI,EAAE,CAAC9J,4BAA4B,EAAE;QAAEmK,MAAM,EAAE;MAAK,CAAC;IACzD,CAAC,CAAC;IAAE3H,QAAQ,EAAE,CAAC;MACX5B,IAAI,EAAEjM,SAAS;MACfmV,IAAI,EAAE,CAAChT,eAAe;IAC1B,CAAC,CAAC;IAAEwL,KAAK,EAAE,CAAC;MACR1B,IAAI,EAAEjM,SAAS;MACfmV,IAAI,EAAE,CAAClS,oBAAoB;IAC/B,CAAC,CAAC;IAAE8O,QAAQ,EAAE,CAAC;MACX9F,IAAI,EAAElM,YAAY;MAClBoV,IAAI,EAAE,CAACvT,oBAAoB,EAAE;QAAE6T,IAAI,EAAE7V;MAAY,CAAC;IACtD,CAAC,CAAC;IAAEkK,SAAS,EAAE,CAAC;MACZmC,IAAI,EAAEhM;IACV,CAAC,CAAC;IAAE2M,eAAe,EAAE,CAAC;MAClBX,IAAI,EAAEhM;IACV,CAAC,CAAC;IAAE4M,MAAM,EAAE,CAAC;MACTZ,IAAI,EAAEhM;IACV,CAAC,CAAC;IAAE6M,WAAW,EAAE,CAAC;MACdb,IAAI,EAAEhM;IACV,CAAC,CAAC;IAAE8M,QAAQ,EAAE,CAAC;MACXd,IAAI,EAAEhM;IACV,CAAC,CAAC;IAAE0J,mBAAmB,EAAE,CAAC;MACtBsC,IAAI,EAAEhM;IACV,CAAC,CAAC;IAAEoH,YAAY,EAAE,CAAC;MACf4E,IAAI,EAAEhM;IACV,CAAC,CAAC;IAAE+M,YAAY,EAAE,CAAC;MACff,IAAI,EAAEhM;IACV,CAAC,CAAC;IAAE+K,IAAI,EAAE,CAAC;MACPiB,IAAI,EAAEhM;IACV,CAAC,CAAC;IAAEgN,SAAS,EAAE,CAAC;MACZhB,IAAI,EAAEhM;IACV,CAAC,CAAC;IAAEiN,YAAY,EAAE,CAAC;MACfjB,IAAI,EAAE/L;IACV,CAAC,CAAC;IAAE8O,cAAc,EAAE;EAAG,CAAC;AAAA;AAEpC,MAAM0G,mBAAmB,CAAC;EACtBpK,WAAWA,CAAA,EAAG;IACV,IAAI,CAACqK,SAAS,GAAGjW,MAAM,CAAC4M,uBAAuB,CAAC;EACpD;EACAsJ,SAASA,CAAC7L,KAAK,EAAE;IACb,MAAM;MAAExC,KAAK;MAAEqF;IAAgB,CAAC,GAAG,IAAI,CAAC+I,SAAS;IACjD,IAAI,CAAC5L,KAAK,EAAE;MACR,OAAO,IAAI;IACf;IACA,OAAO/I,SAAS,CAAC+I,KAAK,CAAC,GACjB,IAAI,CAACsE,MAAM,CAACtE,KAAK,EAAExC,KAAK,EAAEqF,eAAe,CAAC,GAC1C,IAAI,CAACiJ,QAAQ,CAAC9L,KAAK,EAAExC,KAAK,EAAEqF,eAAe,CAAC;EACtD;EACAiJ,QAAQA,CAAC9L,KAAK,EAAExC,KAAK,EAAEuO,OAAO,EAAE;IAC5B,OAAO/L,KAAK,CAAC5E,GAAG,CAAE4Q,QAAQ,IAAK,IAAI,CAAC1H,MAAM,CAAC0H,QAAQ,EAAExO,KAAK,EAAEuO,OAAO,CAAC,CAAC;EACzE;EACAzH,MAAMA,CAACtE,KAAK,EAAExC,KAAK,EAAEuO,OAAO,EAAE;IAC1B,OAAO/L,KAAK,CAACsE,MAAM,CAAEhB,IAAI,IAAK9F,KAAK,CAACyO,KAAK,CAAEC,QAAQ,IAAK,CAACH,OAAO,CAACG,QAAQ,EAAE5I,IAAI,CAAC,CAAC,CAAC;EACtF;EACA;IAAS,IAAI,CAAC3B,IAAI,YAAAwK,4BAAArK,iBAAA;MAAA,YAAAA,iBAAA,IAAyF6J,mBAAmB;IAAA,CAA8C;EAAE;EAC9K;IAAS,IAAI,CAACS,KAAK,kBA1O8E3W,EAAE,CAAA4W,YAAA;MAAAC,IAAA;MAAApK,IAAA,EA0OMyJ,mBAAmB;MAAAY,IAAA;IAAA,EAAyC;EAAE;AAC3K;AACA/W,UAAU,CAAC,CACPqB,OAAO,CACV,EAAE8U,mBAAmB,CAACR,SAAS,EAAE,UAAU,EAAE,IAAI,CAAC;AACnD3V,UAAU,CAAC,CACPqB,OAAO,CACV,EAAE8U,mBAAmB,CAACR,SAAS,EAAE,QAAQ,EAAE,IAAI,CAAC;AACjD;EAAA,QAAA9I,SAAA,oBAAAA,SAAA,KAlPqG5M,EAAE,CAAA6M,iBAAA,CAkPXqJ,mBAAmB,EAAc,CAAC;IAClHzJ,IAAI,EAAE9L,IAAI;IACVgV,IAAI,EAAE,CAAC;MACC3P,UAAU,EAAE,KAAK;MACjB6Q,IAAI,EAAE,iBAAiB;MACvBC,IAAI,EAAE;IACV,CAAC;EACT,CAAC,CAAC,QAAkB;IAAET,QAAQ,EAAE,EAAE;IAAExH,MAAM,EAAE;EAAG,CAAC;AAAA;AAExD,MAAMkI,uBAAuB,SAAS3T,wBAAwB,CAAC;EAC3D0I,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC,GAAGC,SAAS,CAAC;IACnB,IAAI,CAAC1B,kBAAkB,GAAIwD,IAAI,IAAK,IAAI,CAACzD,IAAI,CAACD,mBAAmB,CAAC0D,IAAI,CAAC;EAC3E;EACA,IAAI+B,QAAQA,CAAA,EAAG;IACX,OAAO,IAAI;EACf;EACA,IAAItF,SAASA,CAAA,EAAG;IACZ,OAAO,IAAI,CAACF,IAAI,CAACE,SAAS;EAC9B;EACAiE,aAAaA,CAAA,EAAG,CAAE;EAClByI,iBAAiBA,CAACjP,KAAK,EAAE;IACrB,IAAI,CAACqC,IAAI,CAACmE,aAAa,CAACxG,KAAK,CAAC;EAClC;EACA;IAAS,IAAI,CAACmE,IAAI;MAAA,IAAA+K,oCAAA;MAAA,gBAAAC,gCAAA7K,iBAAA;QAAA,QAAA4K,oCAAA,KAAAA,oCAAA,GA1Q+EjX,EAAE,CAAAsM,qBAAA,CA0QQyK,uBAAuB,IAAA1K,iBAAA,IAAvB0K,uBAAuB;MAAA;IAAA,IAAqD;EAAE;EACzL;IAAS,IAAI,CAACxK,IAAI,kBA3Q+EvM,EAAE,CAAAwM,iBAAA;MAAAC,IAAA,EA2QJsK,uBAAuB;MAAAjF,SAAA;MAAApF,QAAA,GA3QrB1M,EAAE,CAAAiT,kBAAA,CA2Q8D,CAAC/O,kBAAkB,CAAC6S,uBAAuB,CAAC,CAAC,GA3Q7G/W,EAAE,CAAA2M,0BAAA;IAAA,EA2QmJ;EAAE;AAC5P;AACA;EAAA,QAAAC,SAAA,oBAAAA,SAAA,KA7QqG5M,EAAE,CAAA6M,iBAAA,CA6QXkK,uBAAuB,EAAc,CAAC;IACtHtK,IAAI,EAAExM,SAAS;IACf0V,IAAI,EAAE,CAAC;MACC3P,UAAU,EAAE,KAAK;MACjB4P,QAAQ,EAAE,kBAAkB;MAC5BE,SAAS,EAAE,CAAC5R,kBAAkB,CAAC6S,uBAAuB,CAAC;IAC3D,CAAC;EACT,CAAC,CAAC;AAAA;AAEV,MAAMI,4BAA4B,CAAC;EAC/BrL,WAAWA,CAAA,EAAG;IACV,IAAI,CAACF,OAAO,GAAGjK,WAAW;IAC1B,IAAI,CAACyI,IAAI,GAAGlK,MAAM,CAACmC,kBAAkB,CAAC;IACtC,IAAI,CAACuI,OAAO,GAAG1K,MAAM,CAACoE,SAAS,CAAC;IAChC,IAAI,CAACmF,iBAAiB,GAAGvJ,MAAM,CAAC6C,sBAAsB,CAAC;IACvD,IAAI,CAAC6G,KAAK,GAAG,EAAE;EACnB;EACA,IAAIC,MAAMA,CAAA,EAAG;IACT,OAAOpE,mBAAmB,CAAC,IAAI,CAACmG,OAAO,CAAC,CAACwL,IAAI,CAACzR,GAAG,CAAC,CAAC;MAAE4J;IAAO,CAAC,KAAK,CAACA,MAAM,CAAC,CAAC;EAC/E;EACA,IAAI/F,SAASA,CAAA,EAAG;IACZ,OAAO/D,mBAAmB,CAAC,IAAI,CAACmG,OAAO,CAAC,CAACwL,IAAI,CAACzR,GAAG,CAAE4E,KAAK,IAAKA,KAAK,CAACiM,KAAK,CAAC,CAAC;MAAEvH;IAAS,CAAC,KAAKA,QAAQ,CAAC,CAAC,CAAC;EAC1G;EACA,IAAIoI,MAAMA,CAAA,EAAG;IACT,OAAOzR,aAAa,CAAC,CAAC,IAAI,CAAC0R,MAAM,EAAE,IAAI,CAACC,aAAa,CAAC,CAAC,CAACH,IAAI,CAACzR,GAAG,CAAC,CAAC,CAAC4E,KAAK,EAAEiN,OAAO,CAAC,KAAK;MACnF,IAAIC,MAAM,GAAG,KAAK;MAClB,KAAK,IAAI1I,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGxE,KAAK,CAACgF,MAAM,EAAER,CAAC,EAAE,EAAE;QACnC,MAAM0H,QAAQ,GAAGe,OAAO,CAACE,IAAI,CAAEjB,QAAQ,IAAK,IAAI,CAACH,OAAO,CAACG,QAAQ,EAAElM,KAAK,CAACwE,CAAC,CAAC,CAAC,CAAC;QAC7E,IAAK,CAAC0H,QAAQ,IAAIgB,MAAM,IAAMhB,QAAQ,IAAI,CAACgB,MAAM,IAAI1I,CAAE,EAAE;UACrD,OAAO,IAAI;QACf;QACA0I,MAAM,GAAGhB,QAAQ;MACrB;MACA,OAAOgB,MAAM;IACjB,CAAC,CAAC,CAAC;EACP;EACApO,OAAOA,CAACsO,OAAO,EAAE;IACb,IAAI,CAAC,IAAI,CAAC/M,OAAO,CAACA,OAAO,EAAE;MACvB;IACJ;IACA,MAAMgN,YAAY,GAAG,IAAI,CAAChN,OAAO,CAAC7C,KAAK,IAAI,EAAE;IAC7C,MAAM;MAAE8P;IAAO,CAAC,GAAG,IAAI;IACvB,MAAMC,QAAQ,GAAGF,YAAY,CAAC/I,MAAM,CAAE2I,OAAO,IAAKK,MAAM,CAACrB,KAAK,CAAE3I,IAAI,IAAK,CAAC,IAAI,CAACyI,OAAO,CAACkB,OAAO,EAAE3J,IAAI,CAAC,CAAC,CAAC;IACvG,IAAI,CAACjD,OAAO,CAACA,OAAO,CAACmN,QAAQ,CAACJ,OAAO,GAAGG,QAAQ,GAAG,CAAC,GAAGA,QAAQ,EAAE,GAAGD,MAAM,CAAC,CAAC;EAChF;EACA,IAAIP,MAAMA,CAAA,EAAG;IACT,OAAO7R,mBAAmB,CAAC,IAAI,CAACmG,OAAO,CAAC,CAACwL,IAAI,CAACzR,GAAG,CAAEiG,OAAO,IAAKA,OAAO,CAACjG,GAAG,CAAC,CAAC;MAAEoC;IAAM,CAAC,KAAKA,KAAK,CAAC,CAAC8G,MAAM,CAACxN,YAAY,CAAC,CAAC,CAAC;EAC3H;EACA,IAAIkW,aAAaA,CAAA,EAAG;IAChB,OAAO7R,eAAe,CAAC,IAAI,CAACkF,OAAO,CAAC,CAACwM,IAAI,CAACzR,GAAG,CAAEoC,KAAK,IAAKA,KAAK,IAAI,EAAE,CAAC,CAAC;EAC1E;EACA,IAAI8P,MAAMA,CAAA,EAAG;IACT,OAAO,IAAI,CAAChJ,MAAM,CAACvN,gCAAgC,CAAC,IAAI,CAACsK,OAAO,CAAC,CAAC;EACtE;EACA,IAAI0K,OAAOA,CAAA,EAAG;IACV,OAAO,IAAI,CAAClM,IAAI,CAACgD,eAAe,IAAIxL,4BAA4B;EACpE;EACAiN,MAAMA,CAACtE,KAAK,EAAE;IACV,OAAOA,KAAK,CAAC5E,GAAG,CAAC,CAAC;MAAEoC;IAAM,CAAC,KAAKA,KAAK,CAAC,CAAC8G,MAAM,CAACxN,YAAY,CAAC;EAC/D;EACA;IAAS,IAAI,CAAC6K,IAAI,YAAA8L,qCAAA3L,iBAAA;MAAA,YAAAA,iBAAA,IAAyF8K,4BAA4B;IAAA,CAAmD;EAAE;EAC5L;IAAS,IAAI,CAACvF,IAAI,kBA1U+E5R,EAAE,CAAA6R,iBAAA;MAAApF,IAAA,EA0UJ0K,4BAA4B;MAAArF,SAAA;MAAAC,cAAA,WAAAkG,4CAAA5R,EAAA,EAAAC,GAAA,EAAA2L,QAAA;QAAA,IAAA5L,EAAA;UA1U1BrG,EAAE,CAAAkS,cAAA,CAAAD,QAAA,EA0UyM3P,SAAS;QAAA;QAAA,IAAA+D,EAAA;UAAA,IAAA8L,EAAA;UA1UpNnS,EAAE,CAAAoS,cAAA,CAAAD,EAAA,GAAFnS,EAAE,CAAAqS,WAAA,QAAA/L,GAAA,CAAAsF,OAAA,GAAAuG,EAAA;QAAA;MAAA;MAAAQ,QAAA;MAAAC,YAAA,WAAAsF,0CAAA7R,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UAAFrG,EAAE,CAAA2H,WAAA,WAAArB,GAAA,CAAAsD,KA0UuB,CAAC;QAAA;MAAA;MAAAmJ,MAAA;QAAAnJ,KAAA;MAAA;MAAAuO,KAAA,EAAAtP,GAAA;MAAAsK,kBAAA,EAAArK,GAAA;MAAAsK,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAA6E,sCAAA/R,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UA1U1BrG,EAAE,CAAAyT,eAAA;UAAFzT,EAAE,CAAAyG,UAAA,IAAAiD,4CAAA,iBA0UyT,CAAC;UA1U5T1J,EAAE,CAAAiJ,MAAA;UAAFjJ,EAAE,CAAAuG,YAAA,EA0UgrB,CAAC;QAAA;QAAA,IAAAF,EAAA;UA1UnrBrG,EAAE,CAAA4G,UAAA,WAAF5G,EAAE,CAAAuJ,WAAA,OAAAjD,GAAA,CAAA+Q,MAAA,CA0UmR,CAAC;QAAA;MAAA;MAAArC,YAAA,GAAywB7Q,IAAI,CAAC8Q,IAAI,EAA6FlQ,IAAI,CAACC,MAAM,EAAyEC,EAAE,CAACC,OAAO,EAAuFf,IAAI,CAACkU,SAAS;MAAA7C,MAAA;MAAAC,eAAA;IAAA,EAAyE;EAAE;AACx/C;AACA1V,UAAU,CAAC,CACPqB,OAAO,CACV,EAAE+V,4BAA4B,CAACzB,SAAS,EAAE,QAAQ,EAAE,IAAI,CAAC;AAC1D3V,UAAU,CAAC,CACPqB,OAAO,CACV,EAAE+V,4BAA4B,CAACzB,SAAS,EAAE,WAAW,EAAE,IAAI,CAAC;AAC7D3V,UAAU,CAAC,CACPqB,OAAO,CACV,EAAE+V,4BAA4B,CAACzB,SAAS,EAAE,QAAQ,EAAE,IAAI,CAAC;AAC1D3V,UAAU,CAAC,CACPqB,OAAO,CACV,EAAE+V,4BAA4B,CAACzB,SAAS,EAAE,QAAQ,EAAE,IAAI,CAAC;AAC1D3V,UAAU,CAAC,CACPqB,OAAO,CACV,EAAE+V,4BAA4B,CAACzB,SAAS,EAAE,eAAe,EAAE,IAAI,CAAC;AACjE3V,UAAU,CAAC,CACPqB,OAAO,CACV,EAAE+V,4BAA4B,CAACzB,SAAS,EAAE,QAAQ,EAAE,IAAI,CAAC;AAC1D;EAAA,QAAA9I,SAAA,oBAAAA,SAAA,KA9VqG5M,EAAE,CAAA6M,iBAAA,CA8VXsK,4BAA4B,EAAc,CAAC;IAC3H1K,IAAI,EAAEpM,SAAS;IACfsV,IAAI,EAAE,CAAC;MAAE3P,UAAU,EAAE,KAAK;MAAE4P,QAAQ,EAAE,oCAAoC;MAAEH,eAAe,EAAEnV,uBAAuB,CAACuV,MAAM;MAAEzL,IAAI,EAAE;QACvH,gBAAgB,EAAE;MACtB,CAAC;MAAEmJ,QAAQ,EAAE,qcAAqc;MAAEiC,MAAM,EAAE,CAAC,iTAAiT;IAAE,CAAC;EAC7xB,CAAC,CAAC,QAAkB;IAAE5J,OAAO,EAAE,CAAC;MACxBa,IAAI,EAAE7L,eAAe;MACrB+U,IAAI,EAAE,CAACrT,SAAS;IACpB,CAAC,CAAC;IAAEsH,KAAK,EAAE,CAAC;MACR6C,IAAI,EAAEhM;IACV,CAAC,CAAC;IAAEoJ,MAAM,EAAE,EAAE;IAAEL,SAAS,EAAE,EAAE;IAAE6N,MAAM,EAAE,EAAE;IAAEC,MAAM,EAAE,EAAE;IAAEC,aAAa,EAAE,EAAE;IAAE1I,MAAM,EAAE;EAAG,CAAC;AAAA;AAElG,MAAMyJ,uBAAuB,GAAG,IAAI5T,qBAAqB,CAACa,6BAA6B,CAAC;AACxF,MAAMgT,4BAA4B,CAAC;EAC/B;IAAS,IAAI,CAACrM,IAAI,YAAAsM,qCAAAnM,iBAAA;MAAA,YAAAA,iBAAA,IAAyFkM,4BAA4B;IAAA,CAAmD;EAAE;EAC5L;IAAS,IAAI,CAAChM,IAAI,kBA7W+EvM,EAAE,CAAAwM,iBAAA;MAAAC,IAAA,EA6WJ8L,4BAA4B;MAAAzG,SAAA;MAAApF,QAAA,GA7W1B1M,EAAE,CAAAiT,kBAAA,CA6WwE,CACnK1Q,kBAAkB,CAAC+V,uBAAuB,CAAC,EAC3C;QACIG,OAAO,EAAEpW,kBAAkB;QAC3BqW,IAAI,EAAE,CACFpU,SAAS,EACT,CAAC,IAAIzD,QAAQ,CAAC,CAAC,EAAEC,UAAU,CAAC,MAAMgM,uBAAuB,CAAC,CAAC,CAC9D;QACD6L,UAAU,EAAEA,CAAC/N,OAAO,EAAER,IAAI,KAAKA,IAAI,IAAI;UACnCuE,YAAY,EAAG3C,MAAM,IAAKpB,OAAO,CAACA,OAAO,EAAEmN,QAAQ,CAAC5W,cAAc,CAACyJ,OAAO,CAAC7C,KAAK,IAAI,EAAE,EAAEiE,MAAM,CAAC;QACnG;MACJ,CAAC,EACD;QACIyM,OAAO,EAAElU,iBAAiB;QAC1BqU,KAAK,EAAE,IAAI;QACXC,QAAQ,EAAE;UACNC,UAAU,EAAEjX,cAAc;UAC1BkX,gBAAgB,EAAElX,cAAc;UAChCmX,iBAAiB,EAAEnX;QACvB;MACJ,CAAC,CACJ;IAAA,EAAiB;EAAE;AAC5B;AACA;EAAA,QAAA+K,SAAA,oBAAAA,SAAA,KApYqG5M,EAAE,CAAA6M,iBAAA,CAoYX0L,4BAA4B,EAAc,CAAC;IAC3H9L,IAAI,EAAExM,SAAS;IACf0V,IAAI,EAAE,CAAC;MACC3P,UAAU,EAAE,KAAK;MACjB4P,QAAQ,EAAE,uBAAuB;MACjCE,SAAS,EAAE,CACPvT,kBAAkB,CAAC+V,uBAAuB,CAAC,EAC3C;QACIG,OAAO,EAAEpW,kBAAkB;QAC3BqW,IAAI,EAAE,CACFpU,SAAS,EACT,CAAC,IAAIzD,QAAQ,CAAC,CAAC,EAAEC,UAAU,CAAC,MAAMgM,uBAAuB,CAAC,CAAC,CAC9D;QACD6L,UAAU,EAAEA,CAAC/N,OAAO,EAAER,IAAI,KAAKA,IAAI,IAAI;UACnCuE,YAAY,EAAG3C,MAAM,IAAKpB,OAAO,CAACA,OAAO,EAAEmN,QAAQ,CAAC5W,cAAc,CAACyJ,OAAO,CAAC7C,KAAK,IAAI,EAAE,EAAEiE,MAAM,CAAC;QACnG;MACJ,CAAC,EACD;QACIyM,OAAO,EAAElU,iBAAiB;QAC1BqU,KAAK,EAAE,IAAI;QACXC,QAAQ,EAAE;UACNC,UAAU,EAAEjX,cAAc;UAC1BkX,gBAAgB,EAAElX,cAAc;UAChCmX,iBAAiB,EAAEnX;QACvB;MACJ,CAAC;IAET,CAAC;EACT,CAAC,CAAC;AAAA;AAEV,MAAMoX,6BAA6B,SAASpN,4BAA4B,CAAC;EACrEC,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC,GAAGC,SAAS,CAAC;IACnB,IAAI,CAACxB,KAAK,GAAG,EAAE;EACnB;EACAgE,aAAaA,CAAC2K,eAAe,EAAE;IAC3B,MAAMzC,QAAQ,GAAG0C,KAAK,CAACC,IAAI,CAACF,eAAe,CAAC,CAACvT,GAAG,CAAEqG,MAAM,IAAKA,MAAM,CAACX,KAAK,CAAC;IAC1E,MAAMtD,KAAK,GAAG,IAAI,CAACwC,KAAK,EAAEsE,MAAM,CAAC,CAACC,CAAC,EAAEzD,KAAK,KAAKoL,QAAQ,CAACxK,QAAQ,CAACZ,KAAK,CAAC,CAAC,IAAI,EAAE;IAC9E,IAAI,CAACjB,IAAI,CAAC4M,iBAAiB,CAACjP,KAAK,CAAC;EACtC;EACA;IAAS,IAAI,CAACmE,IAAI;MAAA,IAAAmN,0CAAA;MAAA,gBAAAC,sCAAAjN,iBAAA;QAAA,QAAAgN,0CAAA,KAAAA,0CAAA,GA5a+ErZ,EAAE,CAAAsM,qBAAA,CA4aQ2M,6BAA6B,IAAA5M,iBAAA,IAA7B4M,6BAA6B;MAAA;IAAA,IAAqD;EAAE;EAC/L;IAAS,IAAI,CAACrH,IAAI,kBA7a+E5R,EAAE,CAAA6R,iBAAA;MAAApF,IAAA,EA6aJwM,6BAA6B;MAAAnH,SAAA;MAAAa,QAAA;MAAAC,YAAA,WAAA2G,2CAAAlT,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UA7a3BrG,EAAE,CAAAuI,UAAA,oBAAAiR,wDAAA5F,MAAA;YAAA,OA6aJtN,GAAA,CAAAiI,aAAA,CAAAqF,MAAA,CAAA6F,MAAA,CAAAP,eAA2C,CAAC;UAAA,CAAhB,CAAC,+BAAAQ,mEAAA;YAAA,OAA7B,CAAC;UAAA,CAA2B,CAAC,mCAAAC,uEAAA;YAAA,OAA7B,CAAC;UAAA,CAA2B,CAAC;QAAA;QAAA,IAAAtT,EAAA;UA7a3BrG,EAAE,CAAA4Z,cAAA,aAAAtT,GAAA,CAAA8D,IAAA,CAAA6E,QAAA,IAAA3I,GAAA,CAAAsE,OAAA,CAAAgF,QA6awB,CAAC,aAAAtJ,GAAA,CAAA8D,IAAA,CAAAyP,SAAA,GAAZ,CAAC,IAAI,CAAM,CAAC;UA7a3B7Z,EAAE,CAAA8S,WAAA,iBAAAxM,GAAA,CAAA8D,IAAA,CAAAyG,OAAA;QAAA;MAAA;MAAAkC,MAAA;QAAAxI,KAAA;MAAA;MAAAmC,QAAA,GAAF1M,EAAE,CAAAiT,kBAAA,CA6aiZ,CAC5ezQ,aAAa,CAACyW,6BAA6B,CAAC,EAC5C1X,UAAU,CAACsK,4BAA4B,EAAEoN,6BAA6B,CAAC,EACvE;QACIR,OAAO,EAAErY,WAAW;QACpBsY,IAAI,EAAE,CAACO,6BAA6B,CAAC;QACrCN,UAAU,EAAEA,CAAC;UAAEpG;QAAS,CAAC,KAAKA;MAClC,CAAC,CACJ,GArb4FvS,EAAE,CAAA2M,0BAAA;MAAAwL,KAAA,EAAArO,GAAA;MAAAsJ,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAuG,uCAAAzT,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UAAFrG,EAAE,CAAAyG,UAAA,IAAAsD,qDAAA,yBAqbmB,CAAC;UArbtB/J,EAAE,CAAAiJ,MAAA;UAAFjJ,EAAE,CAAAyG,UAAA,IAAAuD,8DAAA,kCAqbwP,CAAC,IAAAQ,+CAAA,mBAAiQ,CAAC;QAAA;QAAA,IAAAnE,EAAA;UArb7frG,EAAE,CAAA4G,UAAA,SAAF5G,EAAE,CAAAuJ,WAAA,OAAAjD,GAAA,CAAAsE,OAAA,CAAAA,OAAA,kBAAAtE,GAAA,CAAAsE,OAAA,CAAAA,OAAA,CAAAmP,YAAA,CAqbc,CAAC;UArbjB/Z,EAAE,CAAAsH,SAAA,EAqbmS,CAAC;UArbtStH,EAAE,CAAA4G,UAAA,YAAAN,GAAA,CAAAiE,KAqbmS,CAAC;QAAA;MAAA;MAAAyK,YAAA,GAA8Y7Q,IAAI,CAAC6V,OAAO,EAAmH7V,IAAI,CAAC8Q,IAAI,EAA6F5Q,EAAE,CAAC4V,cAAc,EAAiF5V,EAAE,CAAC6V,uBAAuB,EAAiFjY,IAAI,CAACG,oBAAoB,EAAqE+C,IAAI,CAACgV,2BAA2B,EAAyL5B,4BAA4B,EAA6DpU,IAAI,CAACkU,SAAS,EAAyCxT,IAAI,CAACC,aAAa,EAA6CO,EAAE,CAACC,uBAAuB;MAAAkQ,MAAA;MAAAC,eAAA;IAAA,EAAuF;EAAE;AACp0D;AACA;EAAA,QAAA7I,SAAA,oBAAAA,SAAA,KAvbqG5M,EAAE,CAAA6M,iBAAA,CAubXoM,6BAA6B,EAAc,CAAC;IAC5HxM,IAAI,EAAEpM,SAAS;IACfsV,IAAI,EAAE,CAAC;MAAE3P,UAAU,EAAE,KAAK;MAAE4P,QAAQ,EAAE,2CAA2C;MAAEH,eAAe,EAAEnV,uBAAuB,CAACuV,MAAM;MAAEC,SAAS,EAAE,CACnItT,aAAa,CAACyW,6BAA6B,CAAC,EAC5C1X,UAAU,CAACsK,4BAA4B,EAAEoN,6BAA6B,CAAC,EACvE;QACIR,OAAO,EAAErY,WAAW;QACpBsY,IAAI,EAAE,CAACO,6BAA6B,CAAC;QACrCN,UAAU,EAAEA,CAAC;UAAEpG;QAAS,CAAC,KAAKA;MAClC,CAAC,CACJ;MAAEnI,IAAI,EAAE;QACL,qBAAqB,EAAE,cAAc;QACrC,YAAY,EAAE,mCAAmC;QACjD,YAAY,EAAE,yBAAyB;QACvC,UAAU,EAAE,8CAA8C;QAC1D,qBAAqB,EAAE,GAAG;QAC1B,yBAAyB,EAAE;MAC/B,CAAC;MAAEmJ,QAAQ,EAAE,mlBAAmlB;MAAEiC,MAAM,EAAE,CAAC,oFAAoF;IAAE,CAAC;EAC9sB,CAAC,CAAC,QAAkB;IAAEjL,KAAK,EAAE,CAAC;MACtBkC,IAAI,EAAEhM;IACV,CAAC;EAAE,CAAC;AAAA;AAEhB,MAAM2Z,kCAAkC,SAASvO,4BAA4B,CAAC;EAC1EC,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC,GAAGC,SAAS,CAAC;IACnB,IAAI,CAACxB,KAAK,GAAG,EAAE;IACf,IAAI,CAACS,MAAM,GAAG,EAAE;EACpB;EACAuD,aAAaA,CAAC2K,eAAe,EAAE;IAC3B,MAAMzC,QAAQ,GAAG0C,KAAK,CAACC,IAAI,CAACF,eAAe,CAAC,CAACvT,GAAG,CAAEqG,MAAM,IAAKA,MAAM,CAACX,KAAK,CAAC;IAC1E,MAAMgP,SAAS,GAAG,IAAI,CAAC9P,KAAK,EAAE+P,MAAM,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAKD,GAAG,CAACE,MAAM,CAACD,GAAG,CAAC,EAAE,EAAE,CAAC,IAAI,EAAE;IAC7E,MAAMzS,KAAK,GAAGsS,SAAS,CAACxL,MAAM,CAAC,CAACC,CAAC,EAAEzD,KAAK,KAAKoL,QAAQ,CAACxK,QAAQ,CAACZ,KAAK,CAAC,CAAC;IACtE,IAAI,CAACjB,IAAI,CAAC4M,iBAAiB,CAACjP,KAAK,CAAC;EACtC;EACA;IAAS,IAAI,CAACmE,IAAI;MAAA,IAAAwO,+CAAA;MAAA,gBAAAC,2CAAAtO,iBAAA;QAAA,QAAAqO,+CAAA,KAAAA,+CAAA,GAzd+E1a,EAAE,CAAAsM,qBAAA,CAydQ8N,kCAAkC,IAAA/N,iBAAA,IAAlC+N,kCAAkC;MAAA;IAAA,IAAqD;EAAE;EACpM;IAAS,IAAI,CAACxI,IAAI,kBA1d+E5R,EAAE,CAAA6R,iBAAA;MAAApF,IAAA,EA0dJ2N,kCAAkC;MAAAtI,SAAA;MAAAa,QAAA;MAAAC,YAAA,WAAAgI,gDAAAvU,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UA1dhCrG,EAAE,CAAAuI,UAAA,oBAAAsS,6DAAAjH,MAAA;YAAA,OA0dJtN,GAAA,CAAAiI,aAAA,CAAAqF,MAAA,CAAA6F,MAAA,CAAAP,eAA2C,CAAC;UAAA,CAAX,CAAC,+BAAA4B,wEAAA;YAAA,OAAlC,CAAC;UAAA,CAAgC,CAAC,mCAAAC,4EAAA;YAAA,OAAlC,CAAC;UAAA,CAAgC,CAAC;QAAA;QAAA,IAAA1U,EAAA;UA1dhCrG,EAAE,CAAA4Z,cAAA,aAAAtT,GAAA,CAAA8D,IAAA,CAAA6E,QAAA,IAAA3I,GAAA,CAAAsE,OAAA,CAAAgF,QA0d6B,CAAC,aAAAtJ,GAAA,CAAA8D,IAAA,CAAAyP,SAAA,GAAjB,CAAC,IAAI,CAAW,CAAC;UA1dhC7Z,EAAE,CAAA8S,WAAA,iBAAAxM,GAAA,CAAA8D,IAAA,CAAAyG,OAAA;QAAA;MAAA;MAAAkC,MAAA;QAAAxI,KAAA;QAAAS,MAAA;MAAA;MAAA0B,QAAA,GAAF1M,EAAE,CAAAiT,kBAAA,CA0dka,CAC7fzQ,aAAa,CAAC4X,kCAAkC,CAAC,EACjD7Y,UAAU,CAACsK,4BAA4B,EAAEuO,kCAAkC,CAAC,EAC5E;QACI3B,OAAO,EAAErY,WAAW;QACpBsY,IAAI,EAAE,CAAC0B,kCAAkC,CAAC;QAC1CzB,UAAU,EAAEA,CAAC;UAAEpG;QAAS,CAAC,KAAKA;MAClC,CAAC,CACJ,GAle4FvS,EAAE,CAAA2M,0BAAA;MAAAwL,KAAA,EAAAtN,GAAA;MAAAuI,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAyH,4CAAA3U,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UAAFrG,EAAE,CAAAyG,UAAA,IAAAqE,0DAAA,yBAkemB,CAAC;UAletB9K,EAAE,CAAAiJ,MAAA;UAAFjJ,EAAE,CAAAyG,UAAA,IAAAsE,mEAAA,kCAkeiR,CAAC,IAAAG,sDAAA,qBAAkG,CAAC;QAAA;QAAA,IAAA7E,EAAA;UAlevXrG,EAAE,CAAA4G,UAAA,SAAF5G,EAAE,CAAAuJ,WAAA,OAAAjD,GAAA,CAAAsE,OAAA,CAAAA,OAAA,kBAAAtE,GAAA,CAAAsE,OAAA,CAAAA,OAAA,CAAAmP,YAAA,CAkec,CAAC;UAlejB/Z,EAAE,CAAAsH,SAAA,EAke+T,CAAC;UAlelUtH,EAAE,CAAA4G,UAAA,YAAAN,GAAA,CAAAiE,KAke+T,CAAC;QAAA;MAAA;MAAAyK,YAAA,GAA2hB7Q,IAAI,CAAC6V,OAAO,EAAmH7V,IAAI,CAAC8Q,IAAI,EAA6F5Q,EAAE,CAAC4V,cAAc,EAAiF5V,EAAE,CAAC6V,uBAAuB,EAAiFjY,IAAI,CAACG,oBAAoB,EAAqE+C,IAAI,CAAC8V,gCAAgC,EAA8F1C,4BAA4B,EAA6DpU,IAAI,CAACkU,SAAS,EAAyCxT,IAAI,CAACC,aAAa,EAA6CO,EAAE,CAACC,uBAAuB;MAAAkQ,MAAA,GAAAlK,GAAA;MAAAmK,eAAA;IAAA,EAAuF;EAAE;AACv5D;AACA;EAAA,QAAA7I,SAAA,oBAAAA,SAAA,KApeqG5M,EAAE,CAAA6M,iBAAA,CAoeXuN,kCAAkC,EAAc,CAAC;IACjI3N,IAAI,EAAEpM,SAAS;IACfsV,IAAI,EAAE,CAAC;MAAE3P,UAAU,EAAE,KAAK;MAAE4P,QAAQ,EAAE,qCAAqC;MAAEH,eAAe,EAAEnV,uBAAuB,CAACuV,MAAM;MAAEC,SAAS,EAAE,CAC7HtT,aAAa,CAAC4X,kCAAkC,CAAC,EACjD7Y,UAAU,CAACsK,4BAA4B,EAAEuO,kCAAkC,CAAC,EAC5E;QACI3B,OAAO,EAAErY,WAAW;QACpBsY,IAAI,EAAE,CAAC0B,kCAAkC,CAAC;QAC1CzB,UAAU,EAAEA,CAAC;UAAEpG;QAAS,CAAC,KAAKA;MAClC,CAAC,CACJ;MAAEnI,IAAI,EAAE;QACL,qBAAqB,EAAE,cAAc;QACrC,YAAY,EAAE,mCAAmC;QACjD,YAAY,EAAE,yBAAyB;QACvC,UAAU,EAAE,8CAA8C;QAC1D,qBAAqB,EAAE,GAAG;QAC1B,yBAAyB,EAAE;MAC/B,CAAC;MAAEmJ,QAAQ,EAAE,4vBAA4vB;MAAEiC,MAAM,EAAE,CAAC,oFAAoF;IAAE,CAAC;EACv3B,CAAC,CAAC,QAAkB;IAAEjL,KAAK,EAAE,CAAC;MACtBkC,IAAI,EAAEhM;IACV,CAAC,CAAC;IAAEuK,MAAM,EAAE,CAAC;MACTyB,IAAI,EAAEhM;IACV,CAAC;EAAE,CAAC;AAAA;AAEhB,MAAMya,oBAAoB,CAAC;EACvB;IAAS,IAAI,CAAChP,IAAI,YAAAiP,6BAAA9O,iBAAA;MAAA,YAAAA,iBAAA,IAAyF6O,oBAAoB;IAAA,CAAkD;EAAE;EACnL;IAAS,IAAI,CAACE,IAAI,kBA9f+Epb,EAAE,CAAAqb,gBAAA;MAAA5O,IAAA,EA8fSyO,oBAAoB;MAAAI,YAAA,GAAiBxO,uBAAuB,EAChKqK,4BAA4B,EAC5BoB,4BAA4B,EAC5BrC,mBAAmB,EACnB+C,6BAA6B,EAC7BmB,kCAAkC,EAClCrD,uBAAuB;MAAAwE,OAAA,GAAanX,YAAY,EAChDI,WAAW,EACXG,kBAAkB,EAClBC,oBAAoB,EACpBd,gBAAgB,EAChBR,iBAAiB,EACjB0B,MAAM,EACNF,aAAa,EACbpB,iBAAiB,EACjB8B,0BAA0B,EAC1BV,aAAa,EACbI,OAAO,EACPnB,4BAA4B,EAC5BuB,uBAAuB,EACvBtB,qCAAqC,EAAEtB,EAAE,CAAC8Y,2BAA2B,EAAE9Y,EAAE,CAAC+Y,0BAA0B,EAAE/Y,EAAE,CAAC4S,oBAAoB,EAAE5S,EAAE,CAACgZ,oBAAoB,EAAEhZ,EAAE,CAACC,eAAe,EAAED,EAAE,CAACiZ,qBAAqB,EAAEjZ,EAAE,CAACkZ,iBAAiB,EAAElZ,EAAE,CAACmZ,iBAAiB,EAAEnZ,EAAE,CAACoZ,gBAAgB,EAAEpZ,EAAE,CAACqZ,kBAAkB,EAAErZ,EAAE,CAACsZ,mBAAmB,EAAEtZ,EAAE,CAACuZ,wBAAwB,EAAEvZ,EAAE,CAACwZ,oBAAoB,EAAEja,IAAI,CAACka,oBAAoB,EAAEla,IAAI,CAACG,oBAAoB,EAAEH,IAAI,CAACK,SAAS,EAAEL,IAAI,CAACma,WAAW,EAAEjX,IAAI,CAACgV,2BAA2B,EAAEhV,IAAI,CAAC8V,gCAAgC,EAAEhZ,IAAI,CAACG,oBAAoB;MAAAia,OAAA,GAAavP,uBAAuB,EAC1kBqK,4BAA4B,EAC5BoB,4BAA4B,EAC5BrC,mBAAmB,EACnBa,uBAAuB,EACvBkC,6BAA6B,EAC7BmB,kCAAkC,EAAE1X,EAAE,CAAC8Y,2BAA2B,EAAE9Y,EAAE,CAAC+Y,0BAA0B,EAAE/Y,EAAE,CAAC4S,oBAAoB,EAAE5S,EAAE,CAACgZ,oBAAoB,EAAEhZ,EAAE,CAACC,eAAe,EAAED,EAAE,CAACiZ,qBAAqB,EAAEjZ,EAAE,CAACkZ,iBAAiB,EAAElZ,EAAE,CAACmZ,iBAAiB,EAAEnZ,EAAE,CAACoZ,gBAAgB,EAAEpZ,EAAE,CAACqZ,kBAAkB,EAAErZ,EAAE,CAACsZ,mBAAmB,EAAEtZ,EAAE,CAACuZ,wBAAwB,EAAEvZ,EAAE,CAACwZ,oBAAoB,EAAEja,IAAI,CAACka,oBAAoB,EAAEla,IAAI,CAACG,oBAAoB,EAAEH,IAAI,CAACK,SAAS,EAAEL,IAAI,CAACma,WAAW,EAAEjX,IAAI,CAACgV,2BAA2B,EAAEhV,IAAI,CAAC8V,gCAAgC,EAAEhZ,IAAI,CAACG,oBAAoB;IAAA,EAAI;EAAE;EACjjB;IAAS,IAAI,CAACka,IAAI,kBAzhB+Etc,EAAE,CAAAuc,gBAAA;MAAAhB,OAAA,GAyhByCnX,YAAY,EAChJI,WAAW,EACXV,gBAAgB,EAChBR,iBAAiB,EACjBI,iBAAiB,EACjB8B,0BAA0B,EAC1BzB,4BAA4B,EAAErB,EAAE,CAACgZ,oBAAoB,EAAEzZ,IAAI,CAACka,oBAAoB,EAAEla,IAAI,CAACK,SAAS,EAAE6C,IAAI,CAACgV,2BAA2B,EAAEhV,IAAI,CAAC8V,gCAAgC;IAAA,EAAI;EAAE;AAC3L;AACA;EAAA,QAAArO,SAAA,oBAAAA,SAAA,KAjiBqG5M,EAAE,CAAA6M,iBAAA,CAiiBXqO,oBAAoB,EAAc,CAAC;IACnHzO,IAAI,EAAE1L,QAAQ;IACd4U,IAAI,EAAE,CAAC;MACC4F,OAAO,EAAE,CACLnX,YAAY,EACZI,WAAW,EACXG,kBAAkB,EAClBC,oBAAoB,EACpBd,gBAAgB,EAChBR,iBAAiB,EACjB0B,MAAM,EACNF,aAAa,EACbpB,iBAAiB,EACjB8B,0BAA0B,EAC1BV,aAAa,EACbI,OAAO,EACPnB,4BAA4B,EAC5BuB,uBAAuB,EACvBtB,qCAAqC,EACrC,GAAGnB,WAAW,EACd,GAAGJ,WAAW,EACd,GAAG2C,kBAAkB,CACxB;MACDkW,YAAY,EAAE,CACVxO,uBAAuB,EACvBqK,4BAA4B,EAC5BoB,4BAA4B,EAC5BrC,mBAAmB,EACnB+C,6BAA6B,EAC7BmB,kCAAkC,EAClCrD,uBAAuB,CAC1B;MACDsF,OAAO,EAAE,CACLvP,uBAAuB,EACvBqK,4BAA4B,EAC5BoB,4BAA4B,EAC5BrC,mBAAmB,EACnBa,uBAAuB,EACvBkC,6BAA6B,EAC7BmB,kCAAkC,EAClC,GAAGvX,WAAW,EACd,GAAGJ,WAAW,EACd,GAAG2C,kBAAkB;IAE7B,CAAC;EACT,CAAC,CAAC;AAAA;;AAEV;AACA;AACA;;AAEA,SAASyG,4BAA4B,EAAEN,gCAAgC,EAAE+M,uBAAuB,EAAE5M,wBAAwB,EAAEwK,mBAAmB,EAAEpJ,uBAAuB,EAAEiK,uBAAuB,EAAEI,4BAA4B,EAAEoB,4BAA4B,EAAE2C,oBAAoB,EAAEjC,6BAA6B,EAAEmB,kCAAkC,EAAEzO,6BAA6B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}