{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Pipe } from '@angular/core';\nimport { CHAR_PLUS } from '@taiga-ui/cdk/constants';\nimport { tuiFormatPhone } from '@taiga-ui/legacy/utils';\n\n/// <reference types=\"@taiga-ui/tsconfig/ng-dev-mode\" />\n/**\n * @deprecated: drop in v5.0\n */\nclass TuiFormatPhonePipe {\n  /**\n   * Use {@link https://maskito.dev/frameworks/angular#pipe MaskitoPipe} instead!\n   * ```ts\n   * import {maskitoTransform} from '@maskito/core';\n   * import {maskitoPhoneOptionsGenerator} from '@maskito/phone';\n   * import metadata from 'libphonenumber-js/min/metadata';\n   *\n   * @Component({\n   *     standalone: true,\n   *     imports: [MaskitoPipe],\n   *     template: `\n   *         Phone: {{'12125552368' | maskito: options}}\n   *         <!-- Phone: +1 (212) 555-2368 -->\n   *     `,\n   * })\n   * export class YourComponent {\n   *     options = maskitoPhoneOptionsGenerator({countryIsoCode: 'US', metadata});\n   * }\n   * ```\n   * ___\n   * @deprecated Use {@link https://maskito.dev/frameworks/angular#pipe MaskitoPipe} instead!\n   * Formats phone number string of +7XXXXXXXXXX format with adding separator symbols\n   * @param value\n   * @param countryCode\n   * @param phoneMask\n   * @return formatted phone number string +7(XXX)XXX-XX-XX\n   */\n  transform(value, countryCode = `${CHAR_PLUS}7`, phoneMask = '(###) ###-##-##') {\n    ngDevMode && console.assert(value !== undefined, 'Undefined was passed to tuiFormatPhone pipe');\n    return tuiFormatPhone(value, countryCode, phoneMask);\n  }\n  static {\n    this.ɵfac = function TuiFormatPhonePipe_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiFormatPhonePipe)();\n    };\n  }\n  static {\n    this.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n      name: \"tuiFormatPhone\",\n      type: TuiFormatPhonePipe,\n      pure: true,\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiFormatPhonePipe, [{\n    type: Pipe,\n    args: [{\n      standalone: true,\n      name: 'tuiFormatPhone'\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiFormatPhonePipe };","map":{"version":3,"names":["i0","Pipe","CHAR_PLUS","tuiFormatPhone","TuiFormatPhonePipe","transform","value","countryCode","phoneMask","ngDevMode","console","assert","undefined","ɵfac","TuiFormatPhonePipe_Factory","__ngFactoryType__","ɵpipe","ɵɵdefinePipe","name","type","pure","standalone","ɵsetClassMetadata","args"],"sources":["C:/Users/Asus-PC/Downloads/WebLibraryNew/WebLibrary/WebLibraryApp/Frontend/node_modules/@taiga-ui/legacy/fesm2022/taiga-ui-legacy-pipes-format-phone.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Pipe } from '@angular/core';\nimport { CHAR_PLUS } from '@taiga-ui/cdk/constants';\nimport { tuiFormatPhone } from '@taiga-ui/legacy/utils';\n\n/// <reference types=\"@taiga-ui/tsconfig/ng-dev-mode\" />\n/**\n * @deprecated: drop in v5.0\n */\nclass TuiFormatPhonePipe {\n    /**\n     * Use {@link https://maskito.dev/frameworks/angular#pipe MaskitoPipe} instead!\n     * ```ts\n     * import {maskitoTransform} from '@maskito/core';\n     * import {maskitoPhoneOptionsGenerator} from '@maskito/phone';\n     * import metadata from 'libphonenumber-js/min/metadata';\n     *\n     * @Component({\n     *     standalone: true,\n     *     imports: [MaskitoPipe],\n     *     template: `\n     *         Phone: {{'12125552368' | maskito: options}}\n     *         <!-- Phone: +1 (212) 555-2368 -->\n     *     `,\n     * })\n     * export class YourComponent {\n     *     options = maskitoPhoneOptionsGenerator({countryIsoCode: 'US', metadata});\n     * }\n     * ```\n     * ___\n     * @deprecated Use {@link https://maskito.dev/frameworks/angular#pipe MaskitoPipe} instead!\n     * Formats phone number string of +7XXXXXXXXXX format with adding separator symbols\n     * @param value\n     * @param countryCode\n     * @param phoneMask\n     * @return formatted phone number string +7(XXX)XXX-XX-XX\n     */\n    transform(value, countryCode = `${CHAR_PLUS}7`, phoneMask = '(###) ###-##-##') {\n        ngDevMode &&\n            console.assert(value !== undefined, 'Undefined was passed to tuiFormatPhone pipe');\n        return tuiFormatPhone(value, countryCode, phoneMask);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiFormatPhonePipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe }); }\n    static { this.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"14.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiFormatPhonePipe, isStandalone: true, name: \"tuiFormatPhone\" }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiFormatPhonePipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    standalone: true,\n                    name: 'tuiFormatPhone',\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiFormatPhonePipe };\n"],"mappings":"AAAA,OAAO,KAAKA,EAAE,MAAM,eAAe;AACnC,SAASC,IAAI,QAAQ,eAAe;AACpC,SAASC,SAAS,QAAQ,yBAAyB;AACnD,SAASC,cAAc,QAAQ,wBAAwB;;AAEvD;AACA;AACA;AACA;AACA,MAAMC,kBAAkB,CAAC;EACrB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,SAASA,CAACC,KAAK,EAAEC,WAAW,GAAG,GAAGL,SAAS,GAAG,EAAEM,SAAS,GAAG,iBAAiB,EAAE;IAC3EC,SAAS,IACLC,OAAO,CAACC,MAAM,CAACL,KAAK,KAAKM,SAAS,EAAE,6CAA6C,CAAC;IACtF,OAAOT,cAAc,CAACG,KAAK,EAAEC,WAAW,EAAEC,SAAS,CAAC;EACxD;EACA;IAAS,IAAI,CAACK,IAAI,YAAAC,2BAAAC,iBAAA;MAAA,YAAAA,iBAAA,IAAyFX,kBAAkB;IAAA,CAA8C;EAAE;EAC7K;IAAS,IAAI,CAACY,KAAK,kBAD8EhB,EAAE,CAAAiB,YAAA;MAAAC,IAAA;MAAAC,IAAA,EACMf,kBAAkB;MAAAgB,IAAA;MAAAC,UAAA;IAAA,EAA+C;EAAE;AAChL;AACA;EAAA,QAAAZ,SAAA,oBAAAA,SAAA,KAHqGT,EAAE,CAAAsB,iBAAA,CAGXlB,kBAAkB,EAAc,CAAC;IACjHe,IAAI,EAAElB,IAAI;IACVsB,IAAI,EAAE,CAAC;MACCF,UAAU,EAAE,IAAI;MAChBH,IAAI,EAAE;IACV,CAAC;EACT,CAAC,CAAC;AAAA;;AAEV;AACA;AACA;;AAEA,SAASd,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}