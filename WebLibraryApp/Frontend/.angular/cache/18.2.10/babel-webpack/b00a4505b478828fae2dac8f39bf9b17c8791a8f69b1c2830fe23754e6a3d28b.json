{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Component, ChangeDetectionStrategy, Input, Output, NgModule, inject, Injectable } from '@angular/core';\nimport { tuiRgbToHex, tuiHexToRgb, tuiRgbToHsv, tuiHsvToRgb, tuiParseGradient, tuiGetGradientData, tuiParseColor } from '@taiga-ui/cdk/utils/color';\nimport * as i1 from '@angular/common';\nimport { CommonModule, DOCUMENT } from '@angular/common';\nimport * as i2 from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport * as i3 from '@maskito/angular';\nimport { MaskitoDirective } from '@maskito/angular';\nimport * as i4 from '@taiga-ui/legacy/components/primitive-textfield';\nimport { TuiPrimitiveTextfieldModule } from '@taiga-ui/legacy/components/primitive-textfield';\nimport * as i5 from '@taiga-ui/legacy/directives/textfield-controller';\nimport { TuiTextfieldControllerModule } from '@taiga-ui/legacy/directives/textfield-controller';\nimport * as i6 from '@taiga-ui/legacy/components/input-number';\nimport { TuiInputNumberModule } from '@taiga-ui/legacy/components/input-number';\nimport * as i7 from '@taiga-ui/legacy/components/select';\nimport { TuiSelectModule } from '@taiga-ui/legacy/components/select';\nimport * as i1$1 from '@taiga-ui/core/directives/dropdown';\nimport { TuiDropdown } from '@taiga-ui/core/directives/dropdown';\nimport * as i2$1 from '@taiga-ui/core/components/data-list';\nimport { TuiDataList } from '@taiga-ui/core/components/data-list';\nimport * as i2$2 from '@taiga-ui/core/components/button';\nimport { TuiButton } from '@taiga-ui/core/components/button';\nimport { __decorate } from 'tslib';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { tuiRound } from '@taiga-ui/cdk/utils/math';\nimport { tuiPure, tuiCreateToken, tuiProvideOptions, tuiDefaultSort } from '@taiga-ui/cdk/utils/miscellaneous';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { tuiTypedFromEvent, tuiPreventDefault } from '@taiga-ui/cdk/observables';\nimport { tuiInjectElement, tuiGetElementPoint } from '@taiga-ui/cdk/utils/dom';\nimport { Observable, switchMap, map, takeUntil, startWith } from 'rxjs';\nimport * as i8 from '@taiga-ui/core/directives/group';\nimport { TuiGroup } from '@taiga-ui/core/directives/group';\nimport * as i1$2 from '@taiga-ui/core/directives/hint';\nimport { TuiHint } from '@taiga-ui/core/directives/hint';\nimport * as i11 from '@taiga-ui/kit/directives/chevron';\nimport { TuiChevron } from '@taiga-ui/kit/directives/chevron';\nimport * as i12 from '@taiga-ui/core/components/icon';\nimport { TuiIcon } from '@taiga-ui/core/components/icon';\nimport { TuiActiveZone } from '@taiga-ui/cdk/directives/active-zone';\nimport { TuiSvgComponent } from '@taiga-ui/legacy/components/svg';\nconst _c0 = () => ({\n  standalone: true\n});\nfunction TuiColorEditComponent_tui_data_list_1_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", item_r2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", item_r2, \" \");\n  }\n}\nfunction TuiColorEditComponent_tui_data_list_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tui-data-list\", 5);\n    i0.ɵɵtemplate(1, TuiColorEditComponent_tui_data_list_1_button_1_Template, 2, 2, \"button\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.modes);\n  }\n}\nfunction TuiColorEditComponent_tui_primitive_textfield_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tui-primitive-textfield\", 8);\n    i0.ɵɵlistener(\"valueChange\", function TuiColorEditComponent_tui_primitive_textfield_2_Template_tui_primitive_textfield_valueChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onHexChange($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"maskito\", ctx_r2.hexMask)(\"tuiTextfieldLabelOutside\", true)(\"value\", ctx_r2.hex);\n  }\n}\nfunction TuiColorEditComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tui-input-number\", 9);\n    i0.ɵɵlistener(\"ngModelChange\", function TuiColorEditComponent_ng_template_3_Template_tui_input_number_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onRgbChange($event, ctx_r2.color[1], ctx_r2.color[2], ctx_r2.color[3]));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(1, \"tui-input-number\", 9);\n    i0.ɵɵlistener(\"ngModelChange\", function TuiColorEditComponent_ng_template_3_Template_tui_input_number_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onRgbChange(ctx_r2.color[0], $event, ctx_r2.color[2], ctx_r2.color[3]));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"tui-input-number\", 9);\n    i0.ɵɵlistener(\"ngModelChange\", function TuiColorEditComponent_ng_template_3_Template_tui_input_number_ngModelChange_2_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onRgbChange(ctx_r2.color[0], ctx_r2.color[1], $event, ctx_r2.color[3]));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"max\", 255)(\"min\", 0)(\"ngModel\", ctx_r2.color[0])(\"ngModelOptions\", i0.ɵɵpureFunction0(15, _c0))(\"tuiTextfieldLabelOutside\", true);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"max\", 255)(\"min\", 0)(\"ngModel\", ctx_r2.color[1])(\"ngModelOptions\", i0.ɵɵpureFunction0(16, _c0))(\"tuiTextfieldLabelOutside\", true);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"max\", 255)(\"min\", 0)(\"ngModel\", ctx_r2.color[2])(\"ngModelOptions\", i0.ɵɵpureFunction0(17, _c0))(\"tuiTextfieldLabelOutside\", true);\n  }\n}\nfunction TuiLinearMultiPickerComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵlistener(\"dblclick\", function TuiLinearMultiPickerComponent_div_0_Template_div_dblclick_0_listener() {\n      const index_r2 = i0.ɵɵrestoreView(_r1).index;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onClick(index_r2));\n    })(\"mousedown\", function TuiLinearMultiPickerComponent_div_0_Template_div_mousedown_0_listener() {\n      const index_r2 = i0.ɵɵrestoreView(_r1).index;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onMouseDown(index_r2));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r4 = ctx.$implicit;\n    i0.ɵɵstyleProp(\"left\", item_r4 * 100, \"%\");\n  }\n}\nconst _c1 = \"[_nghost-%COMP%]{position:relative;display:block;block-size:1rem;box-sizing:border-box}.t-circle[_ngcontent-%COMP%]{position:absolute;inline-size:1rem;block-size:1rem;border-radius:100%;margin:0 -.5rem;box-shadow:inset 0 0 0 2px var(--tui-base-01),0 0 0 1px var(--tui-base-03)}\";\nfunction TuiPaletteComponent_button_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 1);\n    i0.ɵɵlistener(\"click\", function TuiPaletteComponent_button_0_Template_button_click_0_listener() {\n      const color_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.selectedColor.emit(color_r2.value));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const color_r2 = ctx.$implicit;\n    i0.ɵɵstyleProp(\"background\", color_r2.value);\n    i0.ɵɵproperty(\"id\", color_r2.key)(\"tuiHint\", color_r2.key)(\"tuiHintDescribe\", color_r2.key);\n  }\n}\nfunction TuiColorSelectorComponent_ng_container_0_ng_template_4_button_1_tui_icon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tui-icon\", 12);\n  }\n}\nfunction TuiColorSelectorComponent_ng_container_0_ng_template_4_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function TuiColorSelectorComponent_ng_container_0_ng_template_4_button_1_Template_button_click_0_listener() {\n      const mode_r4 = i0.ɵɵrestoreView(_r3).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r1.onModeSelect(mode_r4));\n    })(\"keydown.enter.prevent\", function TuiColorSelectorComponent_ng_container_0_ng_template_4_button_1_Template_button_keydown_enter_prevent_0_listener() {\n      const mode_r4 = i0.ɵɵrestoreView(_r3).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r1.onModeSelect(mode_r4));\n    })(\"keydown.space.prevent\", function TuiColorSelectorComponent_ng_container_0_ng_template_4_button_1_Template_button_keydown_space_prevent_0_listener() {\n      const mode_r4 = i0.ɵɵrestoreView(_r3).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r1.onModeSelect(mode_r4));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵtemplate(2, TuiColorSelectorComponent_ng_container_0_ng_template_4_button_1_tui_icon_2_Template, 1, 0, \"tui-icon\", 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const mode_r4 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(3);\n    i0.ɵɵattribute(\"aria-checked\", ctx_r1.isModeActive(mode_r4));\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", mode_r4, \" \");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.isModeActive(mode_r4));\n  }\n}\nfunction TuiColorSelectorComponent_ng_container_0_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tui-data-list\", 8);\n    i0.ɵɵtemplate(1, TuiColorSelectorComponent_ng_container_0_ng_template_4_button_1_Template, 3, 3, \"button\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.modes);\n  }\n}\nfunction TuiColorSelectorComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 5);\n    i0.ɵɵtwoWayListener(\"tuiDropdownOpenChange\", function TuiColorSelectorComponent_ng_container_0_Template_div_tuiDropdownOpenChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r1.open, $event) || (ctx_r1.open = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementStart(2, \"button\", 6);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, TuiColorSelectorComponent_ng_container_0_ng_template_4_Template, 2, 1, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"hr\", 7);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const menu_r5 = i0.ɵɵreference(5);\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"tuiDropdown\", menu_r5);\n    i0.ɵɵtwoWayProperty(\"tuiDropdownOpen\", ctx_r1.open);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.currentMode, \" \");\n  }\n}\nfunction TuiColorSelectorComponent_ng_container_1_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function TuiColorSelectorComponent_ng_container_1_button_4_Template_button_click_0_listener() {\n      const button_r8 = i0.ɵɵrestoreView(_r7).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onDirectionChange(button_r8));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const button_r8 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassProp(\"t-direction_active\", ctx_r1.isDirectionActive(button_r8));\n    i0.ɵɵproperty(\"iconStart\", ctx_r1.getIcon(button_r8))(\"tuiHint\", button_r8);\n  }\n}\nfunction TuiColorSelectorComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 13)(2, \"tui-linear-multi-picker\", 14);\n    i0.ɵɵlistener(\"indexChange\", function TuiColorSelectorComponent_ng_container_1_Template_tui_linear_multi_picker_indexChange_2_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onIndexChange($event));\n    })(\"valueChange\", function TuiColorSelectorComponent_ng_container_1_Template_tui_linear_multi_picker_valueChange_2_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onStopsChange($event));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(3, \"div\", 15);\n    i0.ɵɵtemplate(4, TuiColorSelectorComponent_ng_container_1_button_4_Template, 1, 4, \"button\", 16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵstyleProp(\"background\", ctx_r1.gradient);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"value\", ctx_r1.stopsKeys);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.buttons);\n  }\n}\nfunction TuiColorSelectorComponent_tui_color_edit_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tui-color-edit\", 18);\n    i0.ɵɵlistener(\"colorChange\", function TuiColorSelectorComponent_tui_color_edit_3_Template_tui_color_edit_colorChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onColorChange($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"color\", ctx_r1.color);\n  }\n}\nfunction TuiColorSelectorComponent_tui_palette_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tui-palette\", 19);\n    i0.ɵɵlistener(\"selectedColor\", function TuiColorSelectorComponent_tui_palette_4_Template_tui_palette_selectedColor_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onPalettePick($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"colors\", ctx_r1.palette);\n  }\n}\nconst HEX_MODE_LENGTH = 6;\nclass TuiColorEditComponent {\n  constructor() {\n    this.color = [0, 0, 0, 1];\n    this.colorChange = new EventEmitter();\n    this.hexMask = {\n      mask: new RegExp(`^[A-F\\\\d]{0,${HEX_MODE_LENGTH}}$`, 'gi')\n    };\n    this.modes = ['HEX', 'RGB'];\n    this.mode = this.modes[0];\n  }\n  get isHex() {\n    return this.mode === this.modes[0];\n  }\n  get hex() {\n    return tuiRgbToHex(this.color[0], this.color[1], this.color[2]).replace('#', '');\n  }\n  get opacity() {\n    return Math.round(this.color[3] * 100);\n  }\n  onHexChange(hex) {\n    if (hex.length !== HEX_MODE_LENGTH) {\n      return;\n    }\n    const rgb = tuiHexToRgb(hex);\n    this.updateColor([rgb[0], rgb[1], rgb[2], this.color[3]]);\n  }\n  onRgbChange(...rgba) {\n    this.updateColor(rgba);\n  }\n  updateColor(color) {\n    this.color = color;\n    this.colorChange.emit(color);\n  }\n  static {\n    this.ɵfac = function TuiColorEditComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiColorEditComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: TuiColorEditComponent,\n      selectors: [[\"tui-color-edit\"]],\n      inputs: {\n        color: \"color\"\n      },\n      outputs: {\n        colorChange: \"colorChange\"\n      },\n      decls: 6,\n      vars: 16,\n      consts: [[\"rgb\", \"\"], [\"tuiDropdownAlign\", \"left\", \"tuiDropdownLimitWidth\", \"min\", \"tuiTextfieldSize\", \"m\", 1, \"t-select\", 3, \"ngModelChange\", \"ngModelOptions\", \"tuiTextfieldLabelOutside\", \"ngModel\"], [\"size\", \"s\", 4, \"tuiDataList\"], [\"tuiTextfieldSize\", \"m\", 3, \"maskito\", \"tuiTextfieldLabelOutside\", \"value\", \"valueChange\", 4, \"ngIf\", \"ngIfElse\"], [\"tuiTextfieldPostfix\", \"%\", \"tuiTextfieldSize\", \"m\", 1, \"t-opacity\", 3, \"ngModelChange\", \"max\", \"min\", \"ngModel\", \"ngModelOptions\", \"tuiTextfieldLabelOutside\"], [\"size\", \"s\"], [\"tuiOption\", \"\", \"type\", \"button\", 3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"tuiOption\", \"\", \"type\", \"button\", 3, \"value\"], [\"tuiTextfieldSize\", \"m\", 3, \"valueChange\", \"maskito\", \"tuiTextfieldLabelOutside\", \"value\"], [\"tuiTextfieldSize\", \"m\", 1, \"t-rgb\", 3, \"ngModelChange\", \"max\", \"min\", \"ngModel\", \"ngModelOptions\", \"tuiTextfieldLabelOutside\"]],\n      template: function TuiColorEditComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"tui-select\", 1);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function TuiColorEditComponent_Template_tui_select_ngModelChange_0_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            i0.ɵɵtwoWayBindingSet(ctx.mode, $event) || (ctx.mode = $event);\n            return i0.ɵɵresetView($event);\n          });\n          i0.ɵɵtemplate(1, TuiColorEditComponent_tui_data_list_1_Template, 2, 1, \"tui-data-list\", 2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(2, TuiColorEditComponent_tui_primitive_textfield_2_Template, 1, 3, \"tui-primitive-textfield\", 3)(3, TuiColorEditComponent_ng_template_3_Template, 3, 18, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n          i0.ɵɵelementStart(5, \"tui-input-number\", 4);\n          i0.ɵɵlistener(\"ngModelChange\", function TuiColorEditComponent_Template_tui_input_number_ngModelChange_5_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.onRgbChange(ctx.color[0], ctx.color[1], ctx.color[2], $event / 100));\n          });\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          const rgb_r6 = i0.ɵɵreference(4);\n          i0.ɵɵstyleProp(\"flex\", \"0 0 auto\");\n          i0.ɵɵproperty(\"ngModelOptions\", i0.ɵɵpureFunction0(14, _c0))(\"tuiTextfieldLabelOutside\", true);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.mode);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.isHex)(\"ngIfElse\", rgb_r6);\n          i0.ɵɵadvance(3);\n          i0.ɵɵstyleProp(\"flex\", \"0 0 auto\");\n          i0.ɵɵproperty(\"max\", 100)(\"min\", 0)(\"ngModel\", ctx.opacity)(\"ngModelOptions\", i0.ɵɵpureFunction0(15, _c0))(\"tuiTextfieldLabelOutside\", true);\n        }\n      },\n      dependencies: [i1.NgForOf, i1.NgIf, i2.NgControlStatus, i2.NgModel, i3.MaskitoDirective, i4.TuiPrimitiveTextfieldComponent, i4.TuiPrimitiveTextfieldDirective, i5.TuiTextfieldLabelOutsideDirective, i5.TuiTextfieldSizeDirective, i5.TuiTextfieldPostfixDirective, i6.TuiInputNumberComponent, i6.TuiInputNumberDirective, i7.TuiSelectComponent, i7.TuiSelectDirective, i1$1.TuiDropdownOptionsDirective, i2$1.TuiDataListComponent, i2$1.TuiDataListDirective, i2$1.TuiOption],\n      styles: [\"[_nghost-%COMP%]{display:flex}.t-select[_ngcontent-%COMP%]{inline-size:5.875rem}.t-opacity[_ngcontent-%COMP%]{inline-size:4.275rem}.t-rgb[_ngcontent-%COMP%], .t-opacity[_ngcontent-%COMP%]{text-align:center}\"],\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiColorEditComponent, [{\n    type: Component,\n    args: [{\n      standalone: false,\n      selector: 'tui-color-edit',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<tui-select\\n    tuiDropdownAlign=\\\"left\\\"\\n    tuiDropdownLimitWidth=\\\"min\\\"\\n    tuiTextfieldSize=\\\"m\\\"\\n    class=\\\"t-select\\\"\\n    [ngModelOptions]=\\\"{standalone: true}\\\"\\n    [style.flex]=\\\"'0 0 auto'\\\"\\n    [tuiTextfieldLabelOutside]=\\\"true\\\"\\n    [(ngModel)]=\\\"mode\\\"\\n>\\n    <tui-data-list\\n        *tuiDataList\\n        size=\\\"s\\\"\\n    >\\n        <button\\n            *ngFor=\\\"let item of modes\\\"\\n            tuiOption\\n            type=\\\"button\\\"\\n            [value]=\\\"item\\\"\\n        >\\n            {{ item }}\\n        </button>\\n    </tui-data-list>\\n</tui-select>\\n<tui-primitive-textfield\\n    *ngIf=\\\"isHex; else rgb\\\"\\n    tuiTextfieldSize=\\\"m\\\"\\n    [maskito]=\\\"hexMask\\\"\\n    [tuiTextfieldLabelOutside]=\\\"true\\\"\\n    [value]=\\\"hex\\\"\\n    (valueChange)=\\\"onHexChange($event)\\\"\\n/>\\n<ng-template #rgb>\\n    <tui-input-number\\n        tuiTextfieldSize=\\\"m\\\"\\n        class=\\\"t-rgb\\\"\\n        [max]=\\\"255\\\"\\n        [min]=\\\"0\\\"\\n        [ngModel]=\\\"color[0]\\\"\\n        [ngModelOptions]=\\\"{standalone: true}\\\"\\n        [tuiTextfieldLabelOutside]=\\\"true\\\"\\n        (ngModelChange)=\\\"onRgbChange($event, color[1], color[2], color[3])\\\"\\n    />\\n    <tui-input-number\\n        tuiTextfieldSize=\\\"m\\\"\\n        class=\\\"t-rgb\\\"\\n        [max]=\\\"255\\\"\\n        [min]=\\\"0\\\"\\n        [ngModel]=\\\"color[1]\\\"\\n        [ngModelOptions]=\\\"{standalone: true}\\\"\\n        [tuiTextfieldLabelOutside]=\\\"true\\\"\\n        (ngModelChange)=\\\"onRgbChange(color[0], $event, color[2], color[3])\\\"\\n    />\\n    <tui-input-number\\n        tuiTextfieldSize=\\\"m\\\"\\n        class=\\\"t-rgb\\\"\\n        [max]=\\\"255\\\"\\n        [min]=\\\"0\\\"\\n        [ngModel]=\\\"color[2]\\\"\\n        [ngModelOptions]=\\\"{standalone: true}\\\"\\n        [tuiTextfieldLabelOutside]=\\\"true\\\"\\n        (ngModelChange)=\\\"onRgbChange(color[0], color[1], $event, color[3])\\\"\\n    />\\n</ng-template>\\n<tui-input-number\\n    tuiTextfieldPostfix=\\\"%\\\"\\n    tuiTextfieldSize=\\\"m\\\"\\n    class=\\\"t-opacity\\\"\\n    [max]=\\\"100\\\"\\n    [min]=\\\"0\\\"\\n    [ngModel]=\\\"opacity\\\"\\n    [ngModelOptions]=\\\"{standalone: true}\\\"\\n    [style.flex]=\\\"'0 0 auto'\\\"\\n    [tuiTextfieldLabelOutside]=\\\"true\\\"\\n    (ngModelChange)=\\\"onRgbChange(color[0], color[1], color[2], $event / 100)\\\"\\n/>\\n\",\n      styles: [\":host{display:flex}.t-select{inline-size:5.875rem}.t-opacity{inline-size:4.275rem}.t-rgb,.t-opacity{text-align:center}\\n\"]\n    }]\n  }], null, {\n    color: [{\n      type: Input\n    }],\n    colorChange: [{\n      type: Output\n    }]\n  });\n})();\nclass TuiColorEditModule {\n  static {\n    this.ɵfac = function TuiColorEditModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiColorEditModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: TuiColorEditModule,\n      declarations: [TuiColorEditComponent],\n      imports: [CommonModule, FormsModule, MaskitoDirective, TuiPrimitiveTextfieldModule, TuiTextfieldControllerModule, TuiInputNumberModule, TuiSelectModule, i1$1.TuiDropdownOptionsDirective, i1$1.TuiDropdownDriverDirective, i1$1.TuiDropdownDirective, i1$1.TuiDropdownComponent, i1$1.TuiDropdownOpen, i1$1.TuiDropdownOpenLegacy, i1$1.TuiDropdownPortal, i1$1.TuiDropdownManual, i1$1.TuiDropdownHover, i1$1.TuiDropdownContext, i1$1.TuiDropdownPosition, i1$1.TuiDropdownPositionSided, i1$1.TuiDropdownSelection, i2$1.TuiDataListComponent, i2$1.TuiDataListDirective, i2$1.TuiOption, i2$1.TuiOptGroup, TuiButton],\n      exports: [TuiColorEditComponent, i1$1.TuiDropdownOptionsDirective, i1$1.TuiDropdownDriverDirective, i1$1.TuiDropdownDirective, i1$1.TuiDropdownComponent, i1$1.TuiDropdownOpen, i1$1.TuiDropdownOpenLegacy, i1$1.TuiDropdownPortal, i1$1.TuiDropdownManual, i1$1.TuiDropdownHover, i1$1.TuiDropdownContext, i1$1.TuiDropdownPosition, i1$1.TuiDropdownPositionSided, i1$1.TuiDropdownSelection, i2$1.TuiDataListComponent, i2$1.TuiDataListDirective, i2$1.TuiOption, i2$1.TuiOptGroup]\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [CommonModule, FormsModule, TuiPrimitiveTextfieldModule, TuiTextfieldControllerModule, TuiInputNumberModule, TuiSelectModule, i1$1.TuiDropdownComponent, i2$1.TuiDataListComponent, i2$1.TuiOption]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiColorEditModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, FormsModule, MaskitoDirective, TuiPrimitiveTextfieldModule, TuiTextfieldControllerModule, TuiInputNumberModule, TuiSelectModule, ...TuiDropdown, ...TuiDataList, TuiButton],\n      declarations: [TuiColorEditComponent],\n      exports: [TuiColorEditComponent, ...TuiDropdown, ...TuiDataList]\n    }]\n  }], null, null);\n})();\nclass TuiPickerService extends Observable {\n  constructor() {\n    super(subscriber => this.point$.subscribe(subscriber));\n    this.el = tuiInjectElement();\n    this.doc = inject(DOCUMENT);\n    this.point$ = tuiTypedFromEvent(this.el, 'mousedown').pipe(tuiPreventDefault(), switchMap(event => {\n      const mouseMove$ = tuiTypedFromEvent(this.doc, 'mousemove').pipe(map(({\n        clientX,\n        clientY\n      }) => tuiGetElementPoint(clientX, clientY, this.el)), takeUntil(tuiTypedFromEvent(this.doc, 'mouseup')));\n      return event.target === this.el ? mouseMove$.pipe(startWith(tuiGetElementPoint(event.clientX, event.clientY, this.el))) : mouseMove$;\n    }), takeUntilDestroyed());\n  }\n  static {\n    this.ɵfac = function TuiPickerService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiPickerService)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: TuiPickerService,\n      factory: TuiPickerService.ɵfac\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiPickerService, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\nclass TuiFlatPickerComponent {\n  constructor() {\n    this.$ = inject(TuiPickerService).pipe(takeUntilDestroyed()).subscribe(point => {\n      this.value = point;\n      this.valueChange.emit([point[0], point[1]]);\n    });\n    this.value = [0, 0];\n    this.valueChange = new EventEmitter();\n  }\n  get left() {\n    return this.value[0] * 100;\n  }\n  get top() {\n    return this.value[1] * 100;\n  }\n  static {\n    this.ɵfac = function TuiFlatPickerComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiFlatPickerComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: TuiFlatPickerComponent,\n      selectors: [[\"tui-flat-picker\"]],\n      inputs: {\n        value: \"value\"\n      },\n      outputs: {\n        valueChange: \"valueChange\"\n      },\n      features: [i0.ɵɵProvidersFeature([TuiPickerService])],\n      decls: 1,\n      vars: 4,\n      consts: [[1, \"t-circle\"]],\n      template: function TuiFlatPickerComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelement(0, \"div\", 0);\n        }\n        if (rf & 2) {\n          i0.ɵɵstyleProp(\"left\", ctx.left, \"%\")(\"top\", ctx.top, \"%\");\n        }\n      },\n      styles: [\"[_nghost-%COMP%]{position:relative;display:block}.t-circle[_ngcontent-%COMP%]{position:absolute;inline-size:1rem;block-size:1rem;border-radius:100%;margin:-.5rem 0 0 -.5rem;box-shadow:inset 0 0 0 1px var(--tui-base-01),0 0 0 1px var(--tui-base-03)}\"],\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiFlatPickerComponent, [{\n    type: Component,\n    args: [{\n      standalone: false,\n      selector: 'tui-flat-picker',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [TuiPickerService],\n      template: \"<div\\n    class=\\\"t-circle\\\"\\n    [style.left.%]=\\\"left\\\"\\n    [style.top.%]=\\\"top\\\"\\n></div>\\n\",\n      styles: [\":host{position:relative;display:block}.t-circle{position:absolute;inline-size:1rem;block-size:1rem;border-radius:100%;margin:-.5rem 0 0 -.5rem;box-shadow:inset 0 0 0 1px var(--tui-base-01),0 0 0 1px var(--tui-base-03)}\\n\"]\n    }]\n  }], null, {\n    value: [{\n      type: Input\n    }],\n    valueChange: [{\n      type: Output\n    }]\n  });\n})();\nclass TuiLinearPickerComponent {\n  constructor() {\n    this.$ = inject(TuiPickerService).pipe(takeUntilDestroyed()).subscribe(([x]) => {\n      this.value = x;\n      this.valueChange.emit(x);\n    });\n    this.value = 0;\n    this.valueChange = new EventEmitter();\n  }\n  get left() {\n    return this.value * 100;\n  }\n  static {\n    this.ɵfac = function TuiLinearPickerComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiLinearPickerComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: TuiLinearPickerComponent,\n      selectors: [[\"tui-linear-picker\"]],\n      inputs: {\n        value: \"value\"\n      },\n      outputs: {\n        valueChange: \"valueChange\"\n      },\n      features: [i0.ɵɵProvidersFeature([TuiPickerService])],\n      decls: 1,\n      vars: 2,\n      consts: [[1, \"t-circle\"]],\n      template: function TuiLinearPickerComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelement(0, \"div\", 0);\n        }\n        if (rf & 2) {\n          i0.ɵɵstyleProp(\"left\", ctx.left, \"%\");\n        }\n      },\n      styles: [\"[_nghost-%COMP%]{position:relative;display:block;block-size:1rem;box-sizing:border-box}.t-circle[_ngcontent-%COMP%]{position:absolute;inline-size:1rem;block-size:1rem;border-radius:100%;margin:0 -.5rem;box-shadow:inset 0 0 0 2px var(--tui-base-01),0 0 0 1px var(--tui-base-03)}\"],\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiLinearPickerComponent, [{\n    type: Component,\n    args: [{\n      standalone: false,\n      selector: 'tui-linear-picker',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [TuiPickerService],\n      template: \"<div\\n    class=\\\"t-circle\\\"\\n    [style.left.%]=\\\"left\\\"\\n></div>\\n\",\n      styles: [\":host{position:relative;display:block;block-size:1rem;box-sizing:border-box}.t-circle{position:absolute;inline-size:1rem;block-size:1rem;border-radius:100%;margin:0 -.5rem;box-shadow:inset 0 0 0 2px var(--tui-base-01),0 0 0 1px var(--tui-base-03)}\\n\"]\n    }]\n  }], null, {\n    value: [{\n      type: Input\n    }],\n    valueChange: [{\n      type: Output\n    }]\n  });\n})();\nclass TuiColorPickerComponent {\n  constructor() {\n    this.sanitizer = inject(DomSanitizer);\n    this.point = [0, 1];\n    this.hue = 0;\n    this.opacity = 1;\n    this.colorChange = new EventEmitter();\n  }\n  set color(color) {\n    if (this.currentColor.every((item, index) => item === color[index]) && color[3] === this.opacity) {\n      return;\n    }\n    const [h, s, v] = tuiRgbToHsv(color[0], color[1], color[2]);\n    this.opacity = color[3];\n    this.hue = h / 360;\n    this.point = [s, 1 - v / 255];\n  }\n  get currentColor() {\n    return this.getCurrentColor(this.hue, this.point);\n  }\n  get base() {\n    return `rgb(${tuiHsvToRgb(this.hue * 360, 1, 255)})`;\n  }\n  get gradient() {\n    return this.sanitizer.bypassSecurityTrustStyle(`linear-gradient(to right, rgba(${this.currentColor.join(',')}, 0), rgb(${this.currentColor.join(',')}))`);\n  }\n  onPointChange(point) {\n    this.point = point;\n    this.updateColor();\n  }\n  onHueChange(hue) {\n    this.hue = hue;\n    this.updateColor();\n  }\n  onOpacityChange(opacity) {\n    this.opacity = tuiRound(opacity, 2);\n    this.updateColor();\n  }\n  getCurrentColor(hue, point) {\n    return tuiHsvToRgb(hue * 360, point[0], (1 - point[1]) * 255);\n  }\n  updateColor() {\n    this.colorChange.emit([...this.currentColor, this.opacity]);\n  }\n  static {\n    this.ɵfac = function TuiColorPickerComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiColorPickerComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: TuiColorPickerComponent,\n      selectors: [[\"tui-color-picker\"]],\n      inputs: {\n        color: \"color\"\n      },\n      outputs: {\n        colorChange: \"colorChange\"\n      },\n      decls: 5,\n      vars: 7,\n      consts: [[1, \"t-flat\", 3, \"valueChange\", \"value\"], [1, \"t-wrapper\", \"t-wrapper_hue\"], [1, \"t-hue\", 3, \"valueChange\", \"value\"], [1, \"t-wrapper\", \"t-wrapper_opacity\"], [1, \"t-opacity\", 3, \"valueChange\", \"value\"]],\n      template: function TuiColorPickerComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"tui-flat-picker\", 0);\n          i0.ɵɵlistener(\"valueChange\", function TuiColorPickerComponent_Template_tui_flat_picker_valueChange_0_listener($event) {\n            return ctx.onPointChange($event);\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(1, \"div\", 1)(2, \"tui-linear-picker\", 2);\n          i0.ɵɵlistener(\"valueChange\", function TuiColorPickerComponent_Template_tui_linear_picker_valueChange_2_listener($event) {\n            return ctx.onHueChange($event);\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(3, \"div\", 3)(4, \"tui-linear-picker\", 4);\n          i0.ɵɵlistener(\"valueChange\", function TuiColorPickerComponent_Template_tui_linear_picker_valueChange_4_listener($event) {\n            return ctx.onOpacityChange($event);\n          });\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵstyleProp(\"background-color\", ctx.base);\n          i0.ɵɵproperty(\"value\", ctx.point);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"value\", ctx.hue);\n          i0.ɵɵadvance();\n          i0.ɵɵstyleProp(\"background\", ctx.gradient);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"value\", ctx.opacity);\n        }\n      },\n      dependencies: [TuiFlatPickerComponent, TuiLinearPickerComponent],\n      styles: [\"[_nghost-%COMP%]{position:relative;display:block;isolation:isolate}.t-flat[_ngcontent-%COMP%]{block-size:14rem;background:linear-gradient(#0000,#000),linear-gradient(to right,#fff,#fff0);margin-bottom:.25rem;overflow:hidden}.t-wrapper[_ngcontent-%COMP%]{position:relative;margin:1rem 1.25rem;border-radius:.5rem}.t-wrapper[_ngcontent-%COMP%]:after{position:absolute;top:0;left:0;inline-size:100%;block-size:100%;content:\\\"\\\";box-shadow:inset 0 0 0 1px #00000014;pointer-events:none;border-radius:inherit}.t-wrapper_hue[_ngcontent-%COMP%]{background:red}.t-wrapper_opacity[_ngcontent-%COMP%]:before{position:absolute;top:0;left:0;inline-size:100%;block-size:100%;content:\\\"\\\";z-index:-1;background-image:linear-gradient(45deg,var(--tui-base-03) 25%,transparent 25%,transparent 75%,var(--tui-base-03) 75%,var(--tui-base-03)),linear-gradient(45deg,var(--tui-base-03) 25%,transparent 25%,transparent 75%,var(--tui-base-03) 75%,var(--tui-base-03));background-size:.375rem .375rem;background-position:0 0,.1875rem .1875rem;border-radius:inherit}.t-hue[_ngcontent-%COMP%]{background:linear-gradient(to right,red,#ff0,#0f0,#0ff,#00f,#f0f,red);border-radius:inherit;margin:0 .5rem}.t-opacity[_ngcontent-%COMP%]{border-radius:inherit;margin:0 .5rem}\"],\n      changeDetection: 0\n    });\n  }\n}\n__decorate([tuiPure], TuiColorPickerComponent.prototype, \"getCurrentColor\", null);\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiColorPickerComponent, [{\n    type: Component,\n    args: [{\n      standalone: false,\n      selector: 'tui-color-picker',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<tui-flat-picker\\n    class=\\\"t-flat\\\"\\n    [style.backgroundColor]=\\\"base\\\"\\n    [value]=\\\"point\\\"\\n    (valueChange)=\\\"onPointChange($event)\\\"\\n/>\\n<div class=\\\"t-wrapper t-wrapper_hue\\\">\\n    <tui-linear-picker\\n        class=\\\"t-hue\\\"\\n        [value]=\\\"hue\\\"\\n        (valueChange)=\\\"onHueChange($event)\\\"\\n    />\\n</div>\\n<div\\n    class=\\\"t-wrapper t-wrapper_opacity\\\"\\n    [style.background]=\\\"gradient\\\"\\n>\\n    <tui-linear-picker\\n        class=\\\"t-opacity\\\"\\n        [value]=\\\"opacity\\\"\\n        (valueChange)=\\\"onOpacityChange($event)\\\"\\n    />\\n</div>\\n\",\n      styles: [\":host{position:relative;display:block;isolation:isolate}.t-flat{block-size:14rem;background:linear-gradient(#0000,#000),linear-gradient(to right,#fff,#fff0);margin-bottom:.25rem;overflow:hidden}.t-wrapper{position:relative;margin:1rem 1.25rem;border-radius:.5rem}.t-wrapper:after{position:absolute;top:0;left:0;inline-size:100%;block-size:100%;content:\\\"\\\";box-shadow:inset 0 0 0 1px #00000014;pointer-events:none;border-radius:inherit}.t-wrapper_hue{background:red}.t-wrapper_opacity:before{position:absolute;top:0;left:0;inline-size:100%;block-size:100%;content:\\\"\\\";z-index:-1;background-image:linear-gradient(45deg,var(--tui-base-03) 25%,transparent 25%,transparent 75%,var(--tui-base-03) 75%,var(--tui-base-03)),linear-gradient(45deg,var(--tui-base-03) 25%,transparent 25%,transparent 75%,var(--tui-base-03) 75%,var(--tui-base-03));background-size:.375rem .375rem;background-position:0 0,.1875rem .1875rem;border-radius:inherit}.t-hue{background:linear-gradient(to right,red,#ff0,#0f0,#0ff,#00f,#f0f,red);border-radius:inherit;margin:0 .5rem}.t-opacity{border-radius:inherit;margin:0 .5rem}\\n\"]\n    }]\n  }], null, {\n    colorChange: [{\n      type: Output\n    }],\n    color: [{\n      type: Input\n    }],\n    getCurrentColor: []\n  });\n})();\nclass TuiFlatPickerModule {\n  static {\n    this.ɵfac = function TuiFlatPickerModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiFlatPickerModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: TuiFlatPickerModule,\n      declarations: [TuiFlatPickerComponent],\n      imports: [CommonModule],\n      exports: [TuiFlatPickerComponent]\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [CommonModule]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiFlatPickerModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [TuiFlatPickerComponent],\n      exports: [TuiFlatPickerComponent]\n    }]\n  }], null, null);\n})();\nclass TuiLinearPickerModule {\n  static {\n    this.ɵfac = function TuiLinearPickerModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiLinearPickerModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: TuiLinearPickerModule,\n      declarations: [TuiLinearPickerComponent],\n      imports: [CommonModule],\n      exports: [TuiLinearPickerComponent]\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [CommonModule]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiLinearPickerModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [TuiLinearPickerComponent],\n      exports: [TuiLinearPickerComponent]\n    }]\n  }], null, null);\n})();\nclass TuiColorPickerModule {\n  static {\n    this.ɵfac = function TuiColorPickerModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiColorPickerModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: TuiColorPickerModule,\n      declarations: [TuiColorPickerComponent],\n      imports: [CommonModule, TuiFlatPickerModule, TuiLinearPickerModule],\n      exports: [TuiColorPickerComponent]\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [CommonModule, TuiFlatPickerModule, TuiLinearPickerModule]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiColorPickerModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, TuiFlatPickerModule, TuiLinearPickerModule],\n      declarations: [TuiColorPickerComponent],\n      exports: [TuiColorPickerComponent]\n    }]\n  }], null, null);\n})();\nconst TUI_COLOR_SELECTOR_MODE_NAMES = tuiCreateToken(['Solid color', 'Gradient']);\nconst TUI_DEFAULT_INPUT_COLORS = new Map([['color-black-100', '#909090'], ['color-black-200', '#666666'], ['color-black-300', '#333333'], ['color-blue-100', '#1771e6'], ['color-blue-200', '#1464cc'], ['color-blue-300', '#0953b3'], ['color-gray-100', '#f5f5f6'], ['color-gray-200', '#e7e8ea'], ['color-gray-300', '#cbcfd3'], ['color-gray-400', '#959ba4'], ['color-gray-500', '#79818c'], ['color-gray-600', '#616871'], ['color-green-100', '#39b54a'], ['color-green-200', '#2ca53a'], ['color-green-300', '#168a21'], ['color-light-blue-100', '#ecf1f7'], ['color-light-blue-200', '#e4ebf3'], ['color-light-blue-300', '#dde4ed'], ['color-red-100', '#e01f19'], ['color-red-200', '#d3120e'], ['color-red-300', '#c40b08'], ['color-yellow-100', '#FFDD2C'], ['color-yellow-200', '#FCC521'], ['color-yellow-300', '#FAB618'], ['transparent', 'transparent']]);\nconst TuiColorSelectorMode = {\n  SolidColor: 0,\n  Gradient: 1\n};\nconst TUI_COLOR_SELECTOR_DEFAULT_OPTIONS = {\n  selectorMode: true,\n  mode: TuiColorSelectorMode.SolidColor,\n  color: [0, 0, 0, 1],\n  colors: new Map(),\n  gradient: {\n    icons: {\n      'to top right': '@tui.move-up-right',\n      'to right': '@tui.move-right',\n      'to bottom right': '@tui.move-down-right',\n      'to bottom': '@tui.move-down',\n      'to bottom left': '@tui.move-down-left',\n      'to left': '@tui.move-left',\n      'to top left': '@tui.move-up-left',\n      'to top': '@tui.move-up'\n    },\n    steps: [[0, [0, 0, 0, 1]], [1, [255, 255, 255, 1]]],\n    stop: 0,\n    direction: 'to bottom',\n    emptyStop: [0, 0, 0, 0],\n    buttons: ['to top right', 'to right', 'to bottom right', 'to bottom', 'to bottom left', 'to left', 'to top left', 'to top']\n  }\n};\nconst TUI_COLOR_SELECTOR_OPTIONS = tuiCreateToken(TUI_COLOR_SELECTOR_DEFAULT_OPTIONS);\nfunction tuiColorSelectorOptionsProvider(options) {\n  return tuiProvideOptions(TUI_COLOR_SELECTOR_OPTIONS, options, TUI_COLOR_SELECTOR_DEFAULT_OPTIONS);\n}\nclass TuiLinearMultiPickerComponent {\n  constructor() {\n    this.$ = inject(TuiPickerService).pipe(takeUntilDestroyed()).subscribe(([x]) => this.onPicker(x));\n    this.value = [0, 1];\n    this.valueChange = new EventEmitter();\n    this.indexChange = new EventEmitter();\n    this.index = NaN;\n  }\n  onMouseUp() {\n    this.index = NaN;\n  }\n  onMouseDown(index) {\n    this.updateIndex(index);\n  }\n  onClick(index) {\n    if (this.value.length > 2) {\n      this.updateValue(this.value.filter((_, i) => i !== index));\n    }\n  }\n  onPicker(x) {\n    if (Number.isNaN(this.index)) {\n      this.updateIndex(this.value.length);\n      this.value = [...this.value, 0];\n    }\n    if (this.value.some((item, index) => item === x && index !== this.index)) {\n      return;\n    }\n    this.updateValue(this.value.map((item, index) => index === this.index ? x : item));\n  }\n  updateIndex(index) {\n    this.index = index;\n    this.indexChange.emit(index);\n  }\n  updateValue(value) {\n    this.value = value;\n    this.valueChange.emit(value);\n  }\n  static {\n    this.ɵfac = function TuiLinearMultiPickerComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiLinearMultiPickerComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: TuiLinearMultiPickerComponent,\n      selectors: [[\"tui-linear-multi-picker\"]],\n      hostBindings: function TuiLinearMultiPickerComponent_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"mouseup\", function TuiLinearMultiPickerComponent_mouseup_HostBindingHandler() {\n            return ctx.onMouseUp();\n          }, false, i0.ɵɵresolveDocument);\n        }\n      },\n      inputs: {\n        value: \"value\"\n      },\n      outputs: {\n        valueChange: \"valueChange\",\n        indexChange: \"indexChange\"\n      },\n      features: [i0.ɵɵProvidersFeature([TuiPickerService])],\n      decls: 1,\n      vars: 1,\n      consts: [[\"class\", \"t-circle\", 3, \"left\", \"dblclick\", \"mousedown\", 4, \"ngFor\", \"ngForOf\"], [1, \"t-circle\", 3, \"dblclick\", \"mousedown\"]],\n      template: function TuiLinearMultiPickerComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, TuiLinearMultiPickerComponent_div_0_Template, 1, 2, \"div\", 0);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngForOf\", ctx.value);\n        }\n      },\n      dependencies: [i1.NgForOf],\n      styles: [_c1],\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiLinearMultiPickerComponent, [{\n    type: Component,\n    args: [{\n      standalone: false,\n      selector: 'tui-linear-multi-picker',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [TuiPickerService],\n      host: {\n        '(document:mouseup)': 'onMouseUp()'\n      },\n      template: \"<div\\n    *ngFor=\\\"let item of value; let index = index\\\"\\n    class=\\\"t-circle\\\"\\n    [style.left.%]=\\\"item * 100\\\"\\n    (dblclick)=\\\"onClick(index)\\\"\\n    (mousedown)=\\\"onMouseDown(index)\\\"\\n></div>\\n\",\n      styles: [\":host{position:relative;display:block;block-size:1rem;box-sizing:border-box}.t-circle{position:absolute;inline-size:1rem;block-size:1rem;border-radius:100%;margin:0 -.5rem;box-shadow:inset 0 0 0 2px var(--tui-base-01),0 0 0 1px var(--tui-base-03)}\\n\"]\n    }]\n  }], null, {\n    value: [{\n      type: Input\n    }],\n    valueChange: [{\n      type: Output\n    }],\n    indexChange: [{\n      type: Output\n    }]\n  });\n})();\nclass TuiPaletteComponent {\n  constructor() {\n    this.colors = new Map();\n    this.selectedColor = new EventEmitter();\n    this.originalOrder = (_a, _b) => 0;\n  }\n  static {\n    this.ɵfac = function TuiPaletteComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiPaletteComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: TuiPaletteComponent,\n      selectors: [[\"tui-palette\"]],\n      inputs: {\n        colors: \"colors\"\n      },\n      outputs: {\n        selectedColor: \"selectedColor\"\n      },\n      decls: 2,\n      vars: 4,\n      consts: [[\"type\", \"button\", \"class\", \"t-button\", 3, \"id\", \"background\", \"tuiHint\", \"tuiHintDescribe\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 1, \"t-button\", 3, \"click\", \"id\", \"tuiHint\", \"tuiHintDescribe\"]],\n      template: function TuiPaletteComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, TuiPaletteComponent_button_0_Template, 1, 5, \"button\", 0);\n          i0.ɵɵpipe(1, \"keyvalue\");\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind2(1, 1, ctx.colors, ctx.originalOrder));\n        }\n      },\n      dependencies: [i1.NgForOf, i1$2.TuiHintDirective, i1$2.TuiHintDescribe, i1.KeyValuePipe],\n      styles: [\"[_nghost-%COMP%]{display:flex;flex-wrap:wrap;padding:.875rem}.t-button[_ngcontent-%COMP%]{-webkit-appearance:none;appearance:none;padding:0;background:none;font-size:inherit;line-height:inherit;inline-size:1.5625rem;block-size:1.5625rem;box-sizing:border-box;margin:.375rem;border-radius:var(--tui-radius-m);border:1px solid rgba(0,0,0,.08)}\"],\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiPaletteComponent, [{\n    type: Component,\n    args: [{\n      standalone: false,\n      selector: 'tui-palette',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<button\\n    *ngFor=\\\"let color of colors | keyvalue: originalOrder\\\"\\n    type=\\\"button\\\"\\n    class=\\\"t-button\\\"\\n    [id]=\\\"color.key\\\"\\n    [style.background]=\\\"color.value\\\"\\n    [tuiHint]=\\\"color.key\\\"\\n    [tuiHintDescribe]=\\\"color.key\\\"\\n    (click)=\\\"selectedColor.emit(color.value)\\\"\\n></button>\\n\",\n      styles: [\":host{display:flex;flex-wrap:wrap;padding:.875rem}.t-button{-webkit-appearance:none;appearance:none;padding:0;background:none;font-size:inherit;line-height:inherit;inline-size:1.5625rem;block-size:1.5625rem;box-sizing:border-box;margin:.375rem;border-radius:var(--tui-radius-m);border:1px solid rgba(0,0,0,.08)}\\n\"]\n    }]\n  }], null, {\n    colors: [{\n      type: Input\n    }],\n    selectedColor: [{\n      type: Output\n    }]\n  });\n})();\nclass TuiColorSelectorComponent {\n  constructor() {\n    this.selectorOptions = inject(TUI_COLOR_SELECTOR_OPTIONS);\n    this.stops = new Map(this.selectorOptions.gradient.steps);\n    this.currentStop = this.selectorOptions.gradient.stop;\n    this.direction = this.selectorOptions.gradient.direction;\n    this.sanitizer = inject(DomSanitizer);\n    this.open = false;\n    this.colors = this.selectorOptions.colors;\n    this.colorChange = new EventEmitter();\n    this.color = this.selectorOptions.color;\n    this.modes = inject(TUI_COLOR_SELECTOR_MODE_NAMES);\n    this.currentMode = this.modes[this.selectorOptions.mode];\n    this.buttons = this.selectorOptions.gradient.buttons;\n  }\n  set colorSetter(color) {\n    if (color.startsWith('linear-gradient')) {\n      this.parseGradient(color);\n    } else {\n      this.parseColor(color);\n    }\n  }\n  get selectorMode() {\n    return this.selectorOptions.selectorMode;\n  }\n  get palette() {\n    return this.filterPalette(this.colors, this.isGradient);\n  }\n  get stopsKeys() {\n    return this.getStopsKeys(this.stops);\n  }\n  get currentColor() {\n    return this.isGradient ? this.getStop(this.currentStop) : this.color;\n  }\n  get gradient() {\n    return this.sanitizer.bypassSecurityTrustStyle(this.getGradient('to right'));\n  }\n  get isGradient() {\n    return this.currentMode === this.modes[TuiColorSelectorMode.Gradient];\n  }\n  getIcon(direction) {\n    return this.selectorOptions.gradient.icons[direction];\n  }\n  isModeActive(mode) {\n    return this.currentMode === mode;\n  }\n  isDirectionActive(direction) {\n    return this.direction === direction;\n  }\n  onPalettePick(color) {\n    this.updateColor(color);\n  }\n  onDirectionChange(direction) {\n    this.direction = direction;\n    this.updateColor(this.getGradient(direction));\n  }\n  onModeSelect(mode) {\n    this.currentMode = mode;\n    this.open = false;\n    this.updateColor(mode === this.modes[TuiColorSelectorMode.SolidColor] ? `rgba(${this.color.join(', ')})` : this.getGradient(this.direction));\n  }\n  onIndexChange(index) {\n    this.currentStop = this.stopsKeys[index] ?? 0;\n  }\n  onColorChange(color) {\n    if (!this.isGradient) {\n      this.updateColor(`rgba(${color.join(', ')})`);\n      return;\n    }\n    this.stops.set(this.currentStop, color);\n    this.updateColor(this.getGradient(this.direction));\n  }\n  onStopsChange(stopsKeys) {\n    const removed = this.stopsKeys.find(item => !stopsKeys.includes(item));\n    const added = stopsKeys.find(item => !this.stopsKeys.includes(item));\n    if (removed === undefined && added !== undefined) {\n      this.addStop(added);\n    }\n    if (removed !== undefined && added === undefined) {\n      this.removeStop(removed);\n    }\n    if (removed !== undefined && added !== undefined) {\n      this.replaceStop(removed, added);\n    }\n    this.updateColor(this.getGradient(this.direction));\n  }\n  getStopsKeys(stops) {\n    return Array.from(stops.keys());\n  }\n  filterPalette(colors, isGradient) {\n    const map = new Map(colors);\n    map.forEach((value, key) => {\n      if (value.startsWith('linear-gradient') && !isGradient || !value.startsWith('linear-gradient') && isGradient) {\n        map.delete(key);\n      }\n    });\n    return map;\n  }\n  updateColor(color) {\n    this.colorChange.emit(color);\n  }\n  getGradient(direction) {\n    return `linear-gradient(${direction}, ${[...this.stopsKeys].sort(tuiDefaultSort).map(key => `rgba(${this.getStop(key).join(', ')}) ${key * 100}%`).join(', ')})`;\n  }\n  getStop(stop) {\n    return this.stops.get(stop) || this.selectorOptions.gradient.emptyStop;\n  }\n  addStop(stop) {\n    const closest = this.stopsKeys.reduce((prev, curr) => Math.abs(curr - stop) < Math.abs(prev - stop) ? curr : prev, this.stopsKeys[0] ?? 0);\n    this.stops.set(stop, this.getStop(closest));\n    this.stops = new Map(this.stops);\n    this.currentStop = stop;\n  }\n  removeStop(stop) {\n    this.stops.delete(stop);\n    this.stops = new Map(this.stops);\n    this.currentStop = this.stopsKeys[0] ?? 0;\n  }\n  replaceStop(removed, added) {\n    const value = this.getStop(removed);\n    this.currentStop = added;\n    this.stops = new Map(this.stopsKeys.map(key => key === removed ? [added, value] : [key, this.getStop(key)]));\n  }\n  parseGradient(color) {\n    if (color === this.getGradient(this.direction)) {\n      return;\n    }\n    const gradient = tuiParseGradient(tuiGetGradientData(color));\n    this.direction = gradient.side;\n    this.currentStop = this.selectorOptions.gradient.stop;\n    this.stops = new Map(gradient.stops.length ? gradient.stops.map(({\n      color,\n      position\n    }) => [parseFloat(position) / 100, tuiParseColor(color)]) : this.selectorOptions.gradient.steps);\n  }\n  parseColor(color) {\n    this.currentStop = this.selectorOptions.gradient.stop;\n    this.color = tuiParseColor(color);\n  }\n  static {\n    this.ɵfac = function TuiColorSelectorComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiColorSelectorComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: TuiColorSelectorComponent,\n      selectors: [[\"tui-color-selector\"]],\n      inputs: {\n        colors: \"colors\",\n        colorSetter: [0, \"color\", \"colorSetter\"]\n      },\n      outputs: {\n        colorChange: \"colorChange\"\n      },\n      decls: 5,\n      vars: 5,\n      consts: [[\"menu\", \"\"], [4, \"ngIf\"], [3, \"colorChange\", \"color\"], [\"tuiGroup\", \"\", \"class\", \"t-edit\", 3, \"color\", \"colorChange\", 4, \"ngIf\"], [\"class\", \"t-palette\", 3, \"colors\", \"selectedColor\", 4, \"ngIf\"], [1, \"t-select\", 3, \"tuiDropdownOpenChange\", \"tuiDropdown\", \"tuiDropdownOpen\"], [\"appearance\", \"\", \"size\", \"s\", \"tuiButton\", \"\", \"tuiChevron\", \"\", \"type\", \"button\"], [1, \"t-hr\"], [\"role\", \"menu\", \"size\", \"s\", 1, \"t-menu\"], [\"role\", \"menuitemradio\", \"tuiOption\", \"\", \"type\", \"button\", 3, \"click\", \"keydown.enter.prevent\", \"keydown.space.prevent\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"menuitemradio\", \"tuiOption\", \"\", \"type\", \"button\", 3, \"click\", \"keydown.enter.prevent\", \"keydown.space.prevent\"], [\"icon\", \"@tui.check\", \"class\", \"t-checkmark\", 4, \"ngIf\"], [\"icon\", \"@tui.check\", 1, \"t-checkmark\"], [1, \"t-wrapper\"], [1, \"t-gradient\", 3, \"indexChange\", \"valueChange\", \"value\"], [1, \"t-buttons\"], [\"appearance\", \"\", \"size\", \"xs\", \"tuiHintDescribe\", \"\", \"tuiIconButton\", \"\", \"type\", \"button\", \"class\", \"t-direction\", 3, \"t-direction_active\", \"iconStart\", \"tuiHint\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"appearance\", \"\", \"size\", \"xs\", \"tuiHintDescribe\", \"\", \"tuiIconButton\", \"\", \"type\", \"button\", 1, \"t-direction\", 3, \"click\", \"iconStart\", \"tuiHint\"], [\"tuiGroup\", \"\", 1, \"t-edit\", 3, \"colorChange\", \"color\"], [1, \"t-palette\", 3, \"selectedColor\", \"colors\"]],\n      template: function TuiColorSelectorComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, TuiColorSelectorComponent_ng_container_0_Template, 7, 3, \"ng-container\", 1)(1, TuiColorSelectorComponent_ng_container_1_Template, 5, 4, \"ng-container\", 1);\n          i0.ɵɵelementStart(2, \"tui-color-picker\", 2);\n          i0.ɵɵlistener(\"colorChange\", function TuiColorSelectorComponent_Template_tui_color_picker_colorChange_2_listener($event) {\n            return ctx.onColorChange($event);\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(3, TuiColorSelectorComponent_tui_color_edit_3_Template, 1, 1, \"tui-color-edit\", 3)(4, TuiColorSelectorComponent_tui_palette_4_Template, 1, 1, \"tui-palette\", 4);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngIf\", ctx.selectorMode);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.isGradient);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"color\", ctx.currentColor);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", !ctx.isGradient);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.palette.size);\n        }\n      },\n      dependencies: [i1.NgForOf, i1.NgIf, i2$2.TuiButton, TuiColorPickerComponent, TuiLinearMultiPickerComponent, TuiColorEditComponent, i1$1.TuiDropdownDirective, i1$1.TuiDropdownOpen, i2$1.TuiDataListComponent, i2$1.TuiOption, i8.TuiGroup, TuiPaletteComponent, i1$2.TuiHintDirective, i1$2.TuiHintDescribe, i11.TuiChevron, i12.TuiIcon],\n      styles: [\"[_nghost-%COMP%]{position:relative;display:block;isolation:isolate;inline-size:22.6rem}[_nghost-%COMP%]   *:disabled[_nghost-%COMP%], *:disabled   [_nghost-%COMP%]{pointer-events:none}.t-wrapper[_ngcontent-%COMP%]{position:relative;margin:1.25rem;border-radius:.5rem}.t-wrapper[_ngcontent-%COMP%]:after{position:absolute;top:0;left:0;inline-size:100%;block-size:100%;content:\\\"\\\";box-shadow:inset 0 0 0 1px #00000014;pointer-events:none;border-radius:inherit}.t-wrapper[_ngcontent-%COMP%]:before{position:absolute;top:0;left:0;inline-size:100%;block-size:100%;content:\\\"\\\";z-index:-1;background-image:linear-gradient(45deg,var(--tui-base-03) 25%,transparent 25%,transparent 75%,var(--tui-base-03) 75%,var(--tui-base-03)),linear-gradient(45deg,var(--tui-base-03) 25%,transparent 25%,transparent 75%,var(--tui-base-03) 75%,var(--tui-base-03));background-size:.375rem .375rem;background-position:0 0,.1875rem .1875rem;border-radius:inherit}.t-hr[_ngcontent-%COMP%]{block-size:1px;margin:0 0 0 -1px;border:none;background:var(--tui-base-03)}.t-gradient[_ngcontent-%COMP%]{margin:0 .5rem;border-radius:inherit}.t-select[_ngcontent-%COMP%]{margin:.75rem .5rem 0}.t-arrow[_ngcontent-%COMP%]{transition-property:transform;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out}.t-arrow_rotated[_ngcontent-%COMP%]{transform:rotate(180deg)}.t-menu[_ngcontent-%COMP%]{inline-size:11.25rem}.t-checkmark[_ngcontent-%COMP%]{margin-left:auto;inline-size:1rem;block-size:1rem}.t-buttons[_ngcontent-%COMP%]{display:flex;padding:0 .75rem 1.25rem;justify-content:space-between}.t-direction[_ngcontent-%COMP%]{color:var(--tui-text-02);margin:0 .375rem}.t-direction[_ngcontent-%COMP%]:hover, .t-direction_active[_ngcontent-%COMP%]{color:var(--tui-text-01);background:var(--tui-secondary-hover)}.t-edit[_ngcontent-%COMP%]{margin:1.25rem}.t-palette[_ngcontent-%COMP%]{box-sizing:border-box;box-shadow:inset 0 1px var(--tui-base-03)}\"],\n      changeDetection: 0\n    });\n  }\n}\n__decorate([tuiPure], TuiColorSelectorComponent.prototype, \"getStopsKeys\", null);\n__decorate([tuiPure], TuiColorSelectorComponent.prototype, \"filterPalette\", null);\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiColorSelectorComponent, [{\n    type: Component,\n    args: [{\n      standalone: false,\n      selector: 'tui-color-selector',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<ng-container *ngIf=\\\"selectorMode\\\">\\n    <div\\n        class=\\\"t-select\\\"\\n        [tuiDropdown]=\\\"menu\\\"\\n        [(tuiDropdownOpen)]=\\\"open\\\"\\n    >\\n        <button\\n            appearance=\\\"\\\"\\n            size=\\\"s\\\"\\n            tuiButton\\n            tuiChevron\\n            type=\\\"button\\\"\\n        >\\n            {{ currentMode }}\\n        </button>\\n\\n        <ng-template #menu>\\n            <tui-data-list\\n                role=\\\"menu\\\"\\n                size=\\\"s\\\"\\n                class=\\\"t-menu\\\"\\n            >\\n                <button\\n                    *ngFor=\\\"let mode of modes\\\"\\n                    role=\\\"menuitemradio\\\"\\n                    tuiOption\\n                    type=\\\"button\\\"\\n                    [attr.aria-checked]=\\\"isModeActive(mode)\\\"\\n                    (click)=\\\"onModeSelect(mode)\\\"\\n                    (keydown.enter.prevent)=\\\"onModeSelect(mode)\\\"\\n                    (keydown.space.prevent)=\\\"onModeSelect(mode)\\\"\\n                >\\n                    {{ mode }}\\n                    <tui-icon\\n                        *ngIf=\\\"isModeActive(mode)\\\"\\n                        icon=\\\"@tui.check\\\"\\n                        class=\\\"t-checkmark\\\"\\n                    />\\n                </button>\\n            </tui-data-list>\\n        </ng-template>\\n    </div>\\n    <hr class=\\\"t-hr\\\" />\\n</ng-container>\\n\\n<ng-container *ngIf=\\\"isGradient\\\">\\n    <div\\n        class=\\\"t-wrapper\\\"\\n        [style.background]=\\\"gradient\\\"\\n    >\\n        <tui-linear-multi-picker\\n            class=\\\"t-gradient\\\"\\n            [value]=\\\"stopsKeys\\\"\\n            (indexChange)=\\\"onIndexChange($event)\\\"\\n            (valueChange)=\\\"onStopsChange($event)\\\"\\n        />\\n    </div>\\n    <div class=\\\"t-buttons\\\">\\n        <!-- TODO: Change to `tuiHintDescribe` when figure tuiDriver order issue -->\\n        <button\\n            *ngFor=\\\"let button of buttons\\\"\\n            appearance=\\\"\\\"\\n            size=\\\"xs\\\"\\n            tuiHintDescribe\\n            tuiIconButton\\n            type=\\\"button\\\"\\n            class=\\\"t-direction\\\"\\n            [class.t-direction_active]=\\\"isDirectionActive(button)\\\"\\n            [iconStart]=\\\"getIcon(button)\\\"\\n            [tuiHint]=\\\"button\\\"\\n            (click)=\\\"onDirectionChange(button)\\\"\\n        ></button>\\n    </div>\\n</ng-container>\\n<tui-color-picker\\n    [color]=\\\"currentColor\\\"\\n    (colorChange)=\\\"onColorChange($event)\\\"\\n/>\\n<tui-color-edit\\n    *ngIf=\\\"!isGradient\\\"\\n    tuiGroup\\n    class=\\\"t-edit\\\"\\n    [color]=\\\"color\\\"\\n    (colorChange)=\\\"onColorChange($event)\\\"\\n/>\\n<tui-palette\\n    *ngIf=\\\"palette.size\\\"\\n    class=\\\"t-palette\\\"\\n    [colors]=\\\"palette\\\"\\n    (selectedColor)=\\\"onPalettePick($event)\\\"\\n/>\\n\",\n      styles: [\":host{position:relative;display:block;isolation:isolate;inline-size:22.6rem}:host :host-context(*:disabled){pointer-events:none}.t-wrapper{position:relative;margin:1.25rem;border-radius:.5rem}.t-wrapper:after{position:absolute;top:0;left:0;inline-size:100%;block-size:100%;content:\\\"\\\";box-shadow:inset 0 0 0 1px #00000014;pointer-events:none;border-radius:inherit}.t-wrapper:before{position:absolute;top:0;left:0;inline-size:100%;block-size:100%;content:\\\"\\\";z-index:-1;background-image:linear-gradient(45deg,var(--tui-base-03) 25%,transparent 25%,transparent 75%,var(--tui-base-03) 75%,var(--tui-base-03)),linear-gradient(45deg,var(--tui-base-03) 25%,transparent 25%,transparent 75%,var(--tui-base-03) 75%,var(--tui-base-03));background-size:.375rem .375rem;background-position:0 0,.1875rem .1875rem;border-radius:inherit}.t-hr{block-size:1px;margin:0 0 0 -1px;border:none;background:var(--tui-base-03)}.t-gradient{margin:0 .5rem;border-radius:inherit}.t-select{margin:.75rem .5rem 0}.t-arrow{transition-property:transform;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out}.t-arrow_rotated{transform:rotate(180deg)}.t-menu{inline-size:11.25rem}.t-checkmark{margin-left:auto;inline-size:1rem;block-size:1rem}.t-buttons{display:flex;padding:0 .75rem 1.25rem;justify-content:space-between}.t-direction{color:var(--tui-text-02);margin:0 .375rem}.t-direction:hover,.t-direction_active{color:var(--tui-text-01);background:var(--tui-secondary-hover)}.t-edit{margin:1.25rem}.t-palette{box-sizing:border-box;box-shadow:inset 0 1px var(--tui-base-03)}\\n\"]\n    }]\n  }], null, {\n    colors: [{\n      type: Input\n    }],\n    colorChange: [{\n      type: Output\n    }],\n    colorSetter: [{\n      type: Input,\n      args: ['color']\n    }],\n    getStopsKeys: [],\n    filterPalette: []\n  });\n})();\nclass TuiLinearMultiPickerModule {\n  static {\n    this.ɵfac = function TuiLinearMultiPickerModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiLinearMultiPickerModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: TuiLinearMultiPickerModule,\n      declarations: [TuiLinearMultiPickerComponent],\n      imports: [CommonModule],\n      exports: [TuiLinearMultiPickerComponent]\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [CommonModule]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiLinearMultiPickerModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      declarations: [TuiLinearMultiPickerComponent],\n      exports: [TuiLinearMultiPickerComponent]\n    }]\n  }], null, null);\n})();\nclass TuiPaletteModule {\n  static {\n    this.ɵfac = function TuiPaletteModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiPaletteModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: TuiPaletteModule,\n      declarations: [TuiPaletteComponent],\n      imports: [CommonModule, i1$2.TuiHintComponent, i1$2.TuiHintDirective, i1$2.TuiHintOptionsDirective, i1$2.TuiHintUnstyled, i1$2.TuiHintDriver, i1$2.TuiHintPosition, i1$2.TuiHintHover, i1$2.TuiHintOverflow, i1$2.TuiHintDescribe, i1$2.TuiHintHost, i1$2.TuiHintManual, i1$2.TuiHintPointer],\n      exports: [TuiPaletteComponent, i1$2.TuiHintComponent, i1$2.TuiHintDirective, i1$2.TuiHintOptionsDirective, i1$2.TuiHintUnstyled, i1$2.TuiHintDriver, i1$2.TuiHintPosition, i1$2.TuiHintHover, i1$2.TuiHintOverflow, i1$2.TuiHintDescribe, i1$2.TuiHintHost, i1$2.TuiHintManual, i1$2.TuiHintPointer]\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [CommonModule, i1$2.TuiHintComponent]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiPaletteModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, ...TuiHint],\n      declarations: [TuiPaletteComponent],\n      exports: [TuiPaletteComponent, ...TuiHint]\n    }]\n  }], null, null);\n})();\nclass TuiColorSelectorModule {\n  static {\n    this.ɵfac = function TuiColorSelectorModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiColorSelectorModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: TuiColorSelectorModule,\n      declarations: [TuiColorSelectorComponent],\n      imports: [CommonModule, TuiButton, TuiSvgComponent, TuiColorPickerModule, TuiLinearMultiPickerModule, TuiActiveZone, TuiColorEditModule, TuiGroup, TuiPaletteModule, TuiChevron, TuiIcon, i1$2.TuiHintComponent, i1$2.TuiHintDirective, i1$2.TuiHintOptionsDirective, i1$2.TuiHintUnstyled, i1$2.TuiHintDriver, i1$2.TuiHintPosition, i1$2.TuiHintHover, i1$2.TuiHintOverflow, i1$2.TuiHintDescribe, i1$2.TuiHintHost, i1$2.TuiHintManual, i1$2.TuiHintPointer, i2$1.TuiDataListComponent, i2$1.TuiDataListDirective, i2$1.TuiOption, i2$1.TuiOptGroup],\n      exports: [TuiColorSelectorComponent, i1$2.TuiHintComponent, i1$2.TuiHintDirective, i1$2.TuiHintOptionsDirective, i1$2.TuiHintUnstyled, i1$2.TuiHintDriver, i1$2.TuiHintPosition, i1$2.TuiHintHover, i1$2.TuiHintOverflow, i1$2.TuiHintDescribe, i1$2.TuiHintHost, i1$2.TuiHintManual, i1$2.TuiHintPointer, i2$1.TuiDataListComponent, i2$1.TuiDataListDirective, i2$1.TuiOption, i2$1.TuiOptGroup]\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [CommonModule, TuiSvgComponent, TuiColorPickerModule, TuiLinearMultiPickerModule, TuiColorEditModule, TuiPaletteModule, TuiIcon, i1$2.TuiHintComponent, i2$1.TuiDataListComponent, i2$1.TuiOption]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiColorSelectorModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, TuiButton, TuiSvgComponent, TuiColorPickerModule, TuiLinearMultiPickerModule, TuiActiveZone, TuiColorEditModule, TuiGroup, TuiPaletteModule, TuiChevron, TuiIcon, ...TuiHint, ...TuiDataList],\n      declarations: [TuiColorSelectorComponent],\n      exports: [TuiColorSelectorComponent, ...TuiHint, ...TuiDataList]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TUI_COLOR_SELECTOR_DEFAULT_OPTIONS, TUI_COLOR_SELECTOR_MODE_NAMES, TUI_COLOR_SELECTOR_OPTIONS, TUI_DEFAULT_INPUT_COLORS, TuiColorEditComponent, TuiColorEditModule, TuiColorPickerComponent, TuiColorPickerModule, TuiColorSelectorComponent, TuiColorSelectorMode, TuiColorSelectorModule, TuiFlatPickerComponent, TuiFlatPickerModule, TuiLinearMultiPickerComponent, TuiLinearMultiPickerModule, TuiLinearPickerComponent, TuiLinearPickerModule, TuiPaletteComponent, TuiPaletteModule, TuiPickerService, tuiColorSelectorOptionsProvider };","map":{"version":3,"names":["i0","EventEmitter","Component","ChangeDetectionStrategy","Input","Output","NgModule","inject","Injectable","tuiRgbToHex","tuiHexToRgb","tuiRgbToHsv","tuiHsvToRgb","tuiParseGradient","tuiGetGradientData","tuiParseColor","i1","CommonModule","DOCUMENT","i2","FormsModule","i3","MaskitoDirective","i4","TuiPrimitiveTextfieldModule","i5","TuiTextfieldControllerModule","i6","TuiInputNumberModule","i7","TuiSelectModule","i1$1","TuiDropdown","i2$1","TuiDataList","i2$2","TuiButton","__decorate","DomSanitizer","tuiRound","tuiPure","tuiCreateToken","tuiProvideOptions","tuiDefaultSort","takeUntilDestroyed","tuiTypedFromEvent","tuiPreventDefault","tuiInjectElement","tuiGetElementPoint","Observable","switchMap","map","takeUntil","startWith","i8","TuiGroup","i1$2","TuiHint","i11","TuiChevron","i12","TuiIcon","TuiActiveZone","TuiSvgComponent","_c0","standalone","TuiColorEditComponent_tui_data_list_1_button_1_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","item_r2","$implicit","ɵɵproperty","ɵɵadvance","ɵɵtextInterpolate1","TuiColorEditComponent_tui_data_list_1_Template","ɵɵtemplate","ctx_r2","ɵɵnextContext","modes","TuiColorEditComponent_tui_primitive_textfield_2_Template","_r4","ɵɵgetCurrentView","ɵɵlistener","TuiColorEditComponent_tui_primitive_textfield_2_Template_tui_primitive_textfield_valueChange_0_listener","$event","ɵɵrestoreView","ɵɵresetView","onHexChange","hexMask","hex","TuiColorEditComponent_ng_template_3_Template","_r5","TuiColorEditComponent_ng_template_3_Template_tui_input_number_ngModelChange_0_listener","onRgbChange","color","TuiColorEditComponent_ng_template_3_Template_tui_input_number_ngModelChange_1_listener","TuiColorEditComponent_ng_template_3_Template_tui_input_number_ngModelChange_2_listener","ɵɵpureFunction0","TuiLinearMultiPickerComponent_div_0_Template","_r1","TuiLinearMultiPickerComponent_div_0_Template_div_dblclick_0_listener","index_r2","index","onClick","TuiLinearMultiPickerComponent_div_0_Template_div_mousedown_0_listener","onMouseDown","item_r4","ɵɵstyleProp","_c1","TuiPaletteComponent_button_0_Template","TuiPaletteComponent_button_0_Template_button_click_0_listener","color_r2","selectedColor","emit","value","key","TuiColorSelectorComponent_ng_container_0_ng_template_4_button_1_tui_icon_2_Template","ɵɵelement","TuiColorSelectorComponent_ng_container_0_ng_template_4_button_1_Template","_r3","TuiColorSelectorComponent_ng_container_0_ng_template_4_button_1_Template_button_click_0_listener","mode_r4","ctx_r1","onModeSelect","TuiColorSelectorComponent_ng_container_0_ng_template_4_button_1_Template_button_keydown_enter_prevent_0_listener","TuiColorSelectorComponent_ng_container_0_ng_template_4_button_1_Template_button_keydown_space_prevent_0_listener","ɵɵattribute","isModeActive","TuiColorSelectorComponent_ng_container_0_ng_template_4_Template","TuiColorSelectorComponent_ng_container_0_Template","ɵɵelementContainerStart","ɵɵtwoWayListener","TuiColorSelectorComponent_ng_container_0_Template_div_tuiDropdownOpenChange_1_listener","ɵɵtwoWayBindingSet","open","ɵɵtemplateRefExtractor","ɵɵelementContainerEnd","menu_r5","ɵɵreference","ɵɵtwoWayProperty","currentMode","TuiColorSelectorComponent_ng_container_1_button_4_Template","_r7","TuiColorSelectorComponent_ng_container_1_button_4_Template_button_click_0_listener","button_r8","onDirectionChange","ɵɵclassProp","isDirectionActive","getIcon","TuiColorSelectorComponent_ng_container_1_Template","_r6","TuiColorSelectorComponent_ng_container_1_Template_tui_linear_multi_picker_indexChange_2_listener","onIndexChange","TuiColorSelectorComponent_ng_container_1_Template_tui_linear_multi_picker_valueChange_2_listener","onStopsChange","gradient","stopsKeys","buttons","TuiColorSelectorComponent_tui_color_edit_3_Template","_r9","TuiColorSelectorComponent_tui_color_edit_3_Template_tui_color_edit_colorChange_0_listener","onColorChange","TuiColorSelectorComponent_tui_palette_4_Template","_r10","TuiColorSelectorComponent_tui_palette_4_Template_tui_palette_selectedColor_0_listener","onPalettePick","palette","HEX_MODE_LENGTH","TuiColorEditComponent","constructor","colorChange","mask","RegExp","mode","isHex","replace","opacity","Math","round","length","rgb","updateColor","rgba","ɵfac","TuiColorEditComponent_Factory","__ngFactoryType__","ɵcmp","ɵɵdefineComponent","type","selectors","inputs","outputs","decls","vars","consts","template","TuiColorEditComponent_Template","TuiColorEditComponent_Template_tui_select_ngModelChange_0_listener","TuiColorEditComponent_Template_tui_input_number_ngModelChange_5_listener","rgb_r6","dependencies","NgForOf","NgIf","NgControlStatus","NgModel","TuiPrimitiveTextfieldComponent","TuiPrimitiveTextfieldDirective","TuiTextfieldLabelOutsideDirective","TuiTextfieldSizeDirective","TuiTextfieldPostfixDirective","TuiInputNumberComponent","TuiInputNumberDirective","TuiSelectComponent","TuiSelectDirective","TuiDropdownOptionsDirective","TuiDataListComponent","TuiDataListDirective","TuiOption","styles","changeDetection","ngDevMode","ɵsetClassMetadata","args","selector","OnPush","TuiColorEditModule","TuiColorEditModule_Factory","ɵmod","ɵɵdefineNgModule","declarations","imports","TuiDropdownDriverDirective","TuiDropdownDirective","TuiDropdownComponent","TuiDropdownOpen","TuiDropdownOpenLegacy","TuiDropdownPortal","TuiDropdownManual","TuiDropdownHover","TuiDropdownContext","TuiDropdownPosition","TuiDropdownPositionSided","TuiDropdownSelection","TuiOptGroup","exports","ɵinj","ɵɵdefineInjector","TuiPickerService","subscriber","point$","subscribe","el","doc","pipe","event","mouseMove$","clientX","clientY","target","TuiPickerService_Factory","ɵprov","ɵɵdefineInjectable","token","factory","TuiFlatPickerComponent","$","point","valueChange","left","top","TuiFlatPickerComponent_Factory","features","ɵɵProvidersFeature","TuiFlatPickerComponent_Template","providers","TuiLinearPickerComponent","x","TuiLinearPickerComponent_Factory","TuiLinearPickerComponent_Template","TuiColorPickerComponent","sanitizer","hue","currentColor","every","item","h","s","v","getCurrentColor","base","bypassSecurityTrustStyle","join","onPointChange","onHueChange","onOpacityChange","TuiColorPickerComponent_Factory","TuiColorPickerComponent_Template","TuiColorPickerComponent_Template_tui_flat_picker_valueChange_0_listener","TuiColorPickerComponent_Template_tui_linear_picker_valueChange_2_listener","TuiColorPickerComponent_Template_tui_linear_picker_valueChange_4_listener","prototype","TuiFlatPickerModule","TuiFlatPickerModule_Factory","TuiLinearPickerModule","TuiLinearPickerModule_Factory","TuiColorPickerModule","TuiColorPickerModule_Factory","TUI_COLOR_SELECTOR_MODE_NAMES","TUI_DEFAULT_INPUT_COLORS","Map","TuiColorSelectorMode","SolidColor","Gradient","TUI_COLOR_SELECTOR_DEFAULT_OPTIONS","selectorMode","colors","icons","steps","stop","direction","emptyStop","TUI_COLOR_SELECTOR_OPTIONS","tuiColorSelectorOptionsProvider","options","TuiLinearMultiPickerComponent","onPicker","indexChange","NaN","onMouseUp","updateIndex","updateValue","filter","_","i","Number","isNaN","some","TuiLinearMultiPickerComponent_Factory","hostBindings","TuiLinearMultiPickerComponent_HostBindings","TuiLinearMultiPickerComponent_mouseup_HostBindingHandler","ɵɵresolveDocument","TuiLinearMultiPickerComponent_Template","host","TuiPaletteComponent","originalOrder","_a","_b","TuiPaletteComponent_Factory","TuiPaletteComponent_Template","ɵɵpipe","ɵɵpipeBind2","TuiHintDirective","TuiHintDescribe","KeyValuePipe","TuiColorSelectorComponent","selectorOptions","stops","currentStop","colorSetter","startsWith","parseGradient","parseColor","filterPalette","isGradient","getStopsKeys","getStop","getGradient","set","removed","find","includes","added","undefined","addStop","removeStop","replaceStop","Array","from","keys","forEach","delete","sort","get","closest","reduce","prev","curr","abs","side","position","parseFloat","TuiColorSelectorComponent_Factory","TuiColorSelectorComponent_Template","TuiColorSelectorComponent_Template_tui_color_picker_colorChange_2_listener","size","TuiLinearMultiPickerModule","TuiLinearMultiPickerModule_Factory","TuiPaletteModule","TuiPaletteModule_Factory","TuiHintComponent","TuiHintOptionsDirective","TuiHintUnstyled","TuiHintDriver","TuiHintPosition","TuiHintHover","TuiHintOverflow","TuiHintHost","TuiHintManual","TuiHintPointer","TuiColorSelectorModule","TuiColorSelectorModule_Factory"],"sources":["C:/Users/Asus-PC/Downloads/WebLibraryNew/WebLibrary/WebLibraryApp/Frontend/node_modules/@taiga-ui/legacy/fesm2022/taiga-ui-legacy-components-color-selector.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { EventEmitter, Component, ChangeDetectionStrategy, Input, Output, NgModule, inject, Injectable } from '@angular/core';\nimport { tuiRgbToHex, tuiHexToRgb, tuiRgbToHsv, tuiHsvToRgb, tuiParseGradient, tuiGetGradientData, tuiParseColor } from '@taiga-ui/cdk/utils/color';\nimport * as i1 from '@angular/common';\nimport { CommonModule, DOCUMENT } from '@angular/common';\nimport * as i2 from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport * as i3 from '@maskito/angular';\nimport { MaskitoDirective } from '@maskito/angular';\nimport * as i4 from '@taiga-ui/legacy/components/primitive-textfield';\nimport { TuiPrimitiveTextfieldModule } from '@taiga-ui/legacy/components/primitive-textfield';\nimport * as i5 from '@taiga-ui/legacy/directives/textfield-controller';\nimport { TuiTextfieldControllerModule } from '@taiga-ui/legacy/directives/textfield-controller';\nimport * as i6 from '@taiga-ui/legacy/components/input-number';\nimport { TuiInputNumberModule } from '@taiga-ui/legacy/components/input-number';\nimport * as i7 from '@taiga-ui/legacy/components/select';\nimport { TuiSelectModule } from '@taiga-ui/legacy/components/select';\nimport * as i1$1 from '@taiga-ui/core/directives/dropdown';\nimport { TuiDropdown } from '@taiga-ui/core/directives/dropdown';\nimport * as i2$1 from '@taiga-ui/core/components/data-list';\nimport { TuiDataList } from '@taiga-ui/core/components/data-list';\nimport * as i2$2 from '@taiga-ui/core/components/button';\nimport { TuiButton } from '@taiga-ui/core/components/button';\nimport { __decorate } from 'tslib';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { tuiRound } from '@taiga-ui/cdk/utils/math';\nimport { tuiPure, tuiCreateToken, tuiProvideOptions, tuiDefaultSort } from '@taiga-ui/cdk/utils/miscellaneous';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { tuiTypedFromEvent, tuiPreventDefault } from '@taiga-ui/cdk/observables';\nimport { tuiInjectElement, tuiGetElementPoint } from '@taiga-ui/cdk/utils/dom';\nimport { Observable, switchMap, map, takeUntil, startWith } from 'rxjs';\nimport * as i8 from '@taiga-ui/core/directives/group';\nimport { TuiGroup } from '@taiga-ui/core/directives/group';\nimport * as i1$2 from '@taiga-ui/core/directives/hint';\nimport { TuiHint } from '@taiga-ui/core/directives/hint';\nimport * as i11 from '@taiga-ui/kit/directives/chevron';\nimport { TuiChevron } from '@taiga-ui/kit/directives/chevron';\nimport * as i12 from '@taiga-ui/core/components/icon';\nimport { TuiIcon } from '@taiga-ui/core/components/icon';\nimport { TuiActiveZone } from '@taiga-ui/cdk/directives/active-zone';\nimport { TuiSvgComponent } from '@taiga-ui/legacy/components/svg';\n\nconst HEX_MODE_LENGTH = 6;\nclass TuiColorEditComponent {\n    constructor() {\n        this.color = [0, 0, 0, 1];\n        this.colorChange = new EventEmitter();\n        this.hexMask = {\n            mask: new RegExp(`^[A-F\\\\d]{0,${HEX_MODE_LENGTH}}$`, 'gi'),\n        };\n        this.modes = ['HEX', 'RGB'];\n        this.mode = this.modes[0];\n    }\n    get isHex() {\n        return this.mode === this.modes[0];\n    }\n    get hex() {\n        return tuiRgbToHex(this.color[0], this.color[1], this.color[2]).replace('#', '');\n    }\n    get opacity() {\n        return Math.round(this.color[3] * 100);\n    }\n    onHexChange(hex) {\n        if (hex.length !== HEX_MODE_LENGTH) {\n            return;\n        }\n        const rgb = tuiHexToRgb(hex);\n        this.updateColor([rgb[0], rgb[1], rgb[2], this.color[3]]);\n    }\n    onRgbChange(...rgba) {\n        this.updateColor(rgba);\n    }\n    updateColor(color) {\n        this.color = color;\n        this.colorChange.emit(color);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiColorEditComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiColorEditComponent, selector: \"tui-color-edit\", inputs: { color: \"color\" }, outputs: { colorChange: \"colorChange\" }, ngImport: i0, template: \"<tui-select\\n    tuiDropdownAlign=\\\"left\\\"\\n    tuiDropdownLimitWidth=\\\"min\\\"\\n    tuiTextfieldSize=\\\"m\\\"\\n    class=\\\"t-select\\\"\\n    [ngModelOptions]=\\\"{standalone: true}\\\"\\n    [style.flex]=\\\"'0 0 auto'\\\"\\n    [tuiTextfieldLabelOutside]=\\\"true\\\"\\n    [(ngModel)]=\\\"mode\\\"\\n>\\n    <tui-data-list\\n        *tuiDataList\\n        size=\\\"s\\\"\\n    >\\n        <button\\n            *ngFor=\\\"let item of modes\\\"\\n            tuiOption\\n            type=\\\"button\\\"\\n            [value]=\\\"item\\\"\\n        >\\n            {{ item }}\\n        </button>\\n    </tui-data-list>\\n</tui-select>\\n<tui-primitive-textfield\\n    *ngIf=\\\"isHex; else rgb\\\"\\n    tuiTextfieldSize=\\\"m\\\"\\n    [maskito]=\\\"hexMask\\\"\\n    [tuiTextfieldLabelOutside]=\\\"true\\\"\\n    [value]=\\\"hex\\\"\\n    (valueChange)=\\\"onHexChange($event)\\\"\\n/>\\n<ng-template #rgb>\\n    <tui-input-number\\n        tuiTextfieldSize=\\\"m\\\"\\n        class=\\\"t-rgb\\\"\\n        [max]=\\\"255\\\"\\n        [min]=\\\"0\\\"\\n        [ngModel]=\\\"color[0]\\\"\\n        [ngModelOptions]=\\\"{standalone: true}\\\"\\n        [tuiTextfieldLabelOutside]=\\\"true\\\"\\n        (ngModelChange)=\\\"onRgbChange($event, color[1], color[2], color[3])\\\"\\n    />\\n    <tui-input-number\\n        tuiTextfieldSize=\\\"m\\\"\\n        class=\\\"t-rgb\\\"\\n        [max]=\\\"255\\\"\\n        [min]=\\\"0\\\"\\n        [ngModel]=\\\"color[1]\\\"\\n        [ngModelOptions]=\\\"{standalone: true}\\\"\\n        [tuiTextfieldLabelOutside]=\\\"true\\\"\\n        (ngModelChange)=\\\"onRgbChange(color[0], $event, color[2], color[3])\\\"\\n    />\\n    <tui-input-number\\n        tuiTextfieldSize=\\\"m\\\"\\n        class=\\\"t-rgb\\\"\\n        [max]=\\\"255\\\"\\n        [min]=\\\"0\\\"\\n        [ngModel]=\\\"color[2]\\\"\\n        [ngModelOptions]=\\\"{standalone: true}\\\"\\n        [tuiTextfieldLabelOutside]=\\\"true\\\"\\n        (ngModelChange)=\\\"onRgbChange(color[0], color[1], $event, color[3])\\\"\\n    />\\n</ng-template>\\n<tui-input-number\\n    tuiTextfieldPostfix=\\\"%\\\"\\n    tuiTextfieldSize=\\\"m\\\"\\n    class=\\\"t-opacity\\\"\\n    [max]=\\\"100\\\"\\n    [min]=\\\"0\\\"\\n    [ngModel]=\\\"opacity\\\"\\n    [ngModelOptions]=\\\"{standalone: true}\\\"\\n    [style.flex]=\\\"'0 0 auto'\\\"\\n    [tuiTextfieldLabelOutside]=\\\"true\\\"\\n    (ngModelChange)=\\\"onRgbChange(color[0], color[1], color[2], $event / 100)\\\"\\n/>\\n\", styles: [\":host{display:flex}.t-select{inline-size:5.875rem}.t-opacity{inline-size:4.275rem}.t-rgb,.t-opacity{text-align:center}\\n\"], dependencies: [{ kind: \"directive\", type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i2.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { kind: \"directive\", type: i3.MaskitoDirective, selector: \"[maskito]\", inputs: [\"maskito\", \"maskitoElement\"] }, { kind: \"component\", type: i4.TuiPrimitiveTextfieldComponent, selector: \"tui-primitive-textfield\", inputs: [\"editable\", \"iconCleaner\", \"readOnly\", \"invalid\", \"disabled\", \"value\"], outputs: [\"valueChange\"] }, { kind: \"directive\", type: i4.TuiPrimitiveTextfieldDirective, selector: \"tui-primitive-textfield\" }, { kind: \"directive\", type: i5.TuiTextfieldLabelOutsideDirective, selector: \"[tuiTextfieldLabelOutside]\", inputs: [\"tuiTextfieldLabelOutside\"] }, { kind: \"directive\", type: i5.TuiTextfieldSizeDirective, selector: \"[tuiTextfieldSize]\", inputs: [\"tuiTextfieldSize\"] }, { kind: \"directive\", type: i5.TuiTextfieldPostfixDirective, selector: \"[tuiTextfieldPostfix]\", inputs: [\"tuiTextfieldPostfix\"] }, { kind: \"component\", type: i6.TuiInputNumberComponent, selector: \"tui-input-number\", inputs: [\"min\", \"max\", \"step\"] }, { kind: \"directive\", type: i6.TuiInputNumberDirective, selector: \"tui-input-number\" }, { kind: \"component\", type: i7.TuiSelectComponent, selector: \"tui-select\", inputs: [\"stringify\", \"identityMatcher\", \"valueContent\"] }, { kind: \"directive\", type: i7.TuiSelectDirective, selector: \"tui-select\" }, { kind: \"directive\", type: i1$1.TuiDropdownOptionsDirective, selector: \"[tuiDropdownAlign], [tuiDropdownAppearance], [tuiDropdownDirection], [tuiDropdownLimitWidth], [tuiDropdownMinHeight], [tuiDropdownMaxHeight], [tuiDropdownOffset]\", inputs: [\"tuiDropdownAlign\", \"tuiDropdownAppearance\", \"tuiDropdownDirection\", \"tuiDropdownLimitWidth\", \"tuiDropdownMinHeight\", \"tuiDropdownMaxHeight\", \"tuiDropdownOffset\"] }, { kind: \"component\", type: i2$1.TuiDataListComponent, selector: \"tui-data-list\", inputs: [\"emptyContent\", \"size\"] }, { kind: \"directive\", type: i2$1.TuiDataListDirective, selector: \"ng-template[tuiDataList]\" }, { kind: \"component\", type: i2$1.TuiOption, selector: \"button[tuiOption], a[tuiOption], label[tuiOption]\", inputs: [\"disabled\", \"value\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiColorEditComponent, decorators: [{\n            type: Component,\n            args: [{ standalone: false, selector: 'tui-color-edit', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<tui-select\\n    tuiDropdownAlign=\\\"left\\\"\\n    tuiDropdownLimitWidth=\\\"min\\\"\\n    tuiTextfieldSize=\\\"m\\\"\\n    class=\\\"t-select\\\"\\n    [ngModelOptions]=\\\"{standalone: true}\\\"\\n    [style.flex]=\\\"'0 0 auto'\\\"\\n    [tuiTextfieldLabelOutside]=\\\"true\\\"\\n    [(ngModel)]=\\\"mode\\\"\\n>\\n    <tui-data-list\\n        *tuiDataList\\n        size=\\\"s\\\"\\n    >\\n        <button\\n            *ngFor=\\\"let item of modes\\\"\\n            tuiOption\\n            type=\\\"button\\\"\\n            [value]=\\\"item\\\"\\n        >\\n            {{ item }}\\n        </button>\\n    </tui-data-list>\\n</tui-select>\\n<tui-primitive-textfield\\n    *ngIf=\\\"isHex; else rgb\\\"\\n    tuiTextfieldSize=\\\"m\\\"\\n    [maskito]=\\\"hexMask\\\"\\n    [tuiTextfieldLabelOutside]=\\\"true\\\"\\n    [value]=\\\"hex\\\"\\n    (valueChange)=\\\"onHexChange($event)\\\"\\n/>\\n<ng-template #rgb>\\n    <tui-input-number\\n        tuiTextfieldSize=\\\"m\\\"\\n        class=\\\"t-rgb\\\"\\n        [max]=\\\"255\\\"\\n        [min]=\\\"0\\\"\\n        [ngModel]=\\\"color[0]\\\"\\n        [ngModelOptions]=\\\"{standalone: true}\\\"\\n        [tuiTextfieldLabelOutside]=\\\"true\\\"\\n        (ngModelChange)=\\\"onRgbChange($event, color[1], color[2], color[3])\\\"\\n    />\\n    <tui-input-number\\n        tuiTextfieldSize=\\\"m\\\"\\n        class=\\\"t-rgb\\\"\\n        [max]=\\\"255\\\"\\n        [min]=\\\"0\\\"\\n        [ngModel]=\\\"color[1]\\\"\\n        [ngModelOptions]=\\\"{standalone: true}\\\"\\n        [tuiTextfieldLabelOutside]=\\\"true\\\"\\n        (ngModelChange)=\\\"onRgbChange(color[0], $event, color[2], color[3])\\\"\\n    />\\n    <tui-input-number\\n        tuiTextfieldSize=\\\"m\\\"\\n        class=\\\"t-rgb\\\"\\n        [max]=\\\"255\\\"\\n        [min]=\\\"0\\\"\\n        [ngModel]=\\\"color[2]\\\"\\n        [ngModelOptions]=\\\"{standalone: true}\\\"\\n        [tuiTextfieldLabelOutside]=\\\"true\\\"\\n        (ngModelChange)=\\\"onRgbChange(color[0], color[1], $event, color[3])\\\"\\n    />\\n</ng-template>\\n<tui-input-number\\n    tuiTextfieldPostfix=\\\"%\\\"\\n    tuiTextfieldSize=\\\"m\\\"\\n    class=\\\"t-opacity\\\"\\n    [max]=\\\"100\\\"\\n    [min]=\\\"0\\\"\\n    [ngModel]=\\\"opacity\\\"\\n    [ngModelOptions]=\\\"{standalone: true}\\\"\\n    [style.flex]=\\\"'0 0 auto'\\\"\\n    [tuiTextfieldLabelOutside]=\\\"true\\\"\\n    (ngModelChange)=\\\"onRgbChange(color[0], color[1], color[2], $event / 100)\\\"\\n/>\\n\", styles: [\":host{display:flex}.t-select{inline-size:5.875rem}.t-opacity{inline-size:4.275rem}.t-rgb,.t-opacity{text-align:center}\\n\"] }]\n        }], propDecorators: { color: [{\n                type: Input\n            }], colorChange: [{\n                type: Output\n            }] } });\n\nclass TuiColorEditModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiColorEditModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiColorEditModule, declarations: [TuiColorEditComponent], imports: [CommonModule,\n            FormsModule,\n            MaskitoDirective,\n            TuiPrimitiveTextfieldModule,\n            TuiTextfieldControllerModule,\n            TuiInputNumberModule,\n            TuiSelectModule, i1$1.TuiDropdownOptionsDirective, i1$1.TuiDropdownDriverDirective, i1$1.TuiDropdownDirective, i1$1.TuiDropdownComponent, i1$1.TuiDropdownOpen, i1$1.TuiDropdownOpenLegacy, i1$1.TuiDropdownPortal, i1$1.TuiDropdownManual, i1$1.TuiDropdownHover, i1$1.TuiDropdownContext, i1$1.TuiDropdownPosition, i1$1.TuiDropdownPositionSided, i1$1.TuiDropdownSelection, i2$1.TuiDataListComponent, i2$1.TuiDataListDirective, i2$1.TuiOption, i2$1.TuiOptGroup, TuiButton], exports: [TuiColorEditComponent, i1$1.TuiDropdownOptionsDirective, i1$1.TuiDropdownDriverDirective, i1$1.TuiDropdownDirective, i1$1.TuiDropdownComponent, i1$1.TuiDropdownOpen, i1$1.TuiDropdownOpenLegacy, i1$1.TuiDropdownPortal, i1$1.TuiDropdownManual, i1$1.TuiDropdownHover, i1$1.TuiDropdownContext, i1$1.TuiDropdownPosition, i1$1.TuiDropdownPositionSided, i1$1.TuiDropdownSelection, i2$1.TuiDataListComponent, i2$1.TuiDataListDirective, i2$1.TuiOption, i2$1.TuiOptGroup] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiColorEditModule, imports: [CommonModule,\n            FormsModule,\n            TuiPrimitiveTextfieldModule,\n            TuiTextfieldControllerModule,\n            TuiInputNumberModule,\n            TuiSelectModule, i1$1.TuiDropdownComponent, i2$1.TuiDataListComponent, i2$1.TuiOption] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiColorEditModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        FormsModule,\n                        MaskitoDirective,\n                        TuiPrimitiveTextfieldModule,\n                        TuiTextfieldControllerModule,\n                        TuiInputNumberModule,\n                        TuiSelectModule,\n                        ...TuiDropdown,\n                        ...TuiDataList,\n                        TuiButton,\n                    ],\n                    declarations: [TuiColorEditComponent],\n                    exports: [TuiColorEditComponent, ...TuiDropdown, ...TuiDataList],\n                }]\n        }] });\n\nclass TuiPickerService extends Observable {\n    constructor() {\n        super((subscriber) => this.point$.subscribe(subscriber));\n        this.el = tuiInjectElement();\n        this.doc = inject(DOCUMENT);\n        this.point$ = tuiTypedFromEvent(this.el, 'mousedown').pipe(tuiPreventDefault(), switchMap((event) => {\n            const mouseMove$ = tuiTypedFromEvent(this.doc, 'mousemove').pipe(map(({ clientX, clientY }) => tuiGetElementPoint(clientX, clientY, this.el)), takeUntil(tuiTypedFromEvent(this.doc, 'mouseup')));\n            return event.target === this.el\n                ? mouseMove$.pipe(startWith(tuiGetElementPoint(event.clientX, event.clientY, this.el)))\n                : mouseMove$;\n        }), takeUntilDestroyed());\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiPickerService, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiPickerService }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiPickerService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return []; } });\n\nclass TuiFlatPickerComponent {\n    constructor() {\n        this.$ = inject(TuiPickerService)\n            .pipe(takeUntilDestroyed())\n            .subscribe((point) => {\n            this.value = point;\n            this.valueChange.emit([point[0], point[1]]);\n        });\n        this.value = [0, 0];\n        this.valueChange = new EventEmitter();\n    }\n    get left() {\n        return this.value[0] * 100;\n    }\n    get top() {\n        return this.value[1] * 100;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiFlatPickerComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiFlatPickerComponent, selector: \"tui-flat-picker\", inputs: { value: \"value\" }, outputs: { valueChange: \"valueChange\" }, providers: [TuiPickerService], ngImport: i0, template: \"<div\\n    class=\\\"t-circle\\\"\\n    [style.left.%]=\\\"left\\\"\\n    [style.top.%]=\\\"top\\\"\\n></div>\\n\", styles: [\":host{position:relative;display:block}.t-circle{position:absolute;inline-size:1rem;block-size:1rem;border-radius:100%;margin:-.5rem 0 0 -.5rem;box-shadow:inset 0 0 0 1px var(--tui-base-01),0 0 0 1px var(--tui-base-03)}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiFlatPickerComponent, decorators: [{\n            type: Component,\n            args: [{ standalone: false, selector: 'tui-flat-picker', changeDetection: ChangeDetectionStrategy.OnPush, providers: [TuiPickerService], template: \"<div\\n    class=\\\"t-circle\\\"\\n    [style.left.%]=\\\"left\\\"\\n    [style.top.%]=\\\"top\\\"\\n></div>\\n\", styles: [\":host{position:relative;display:block}.t-circle{position:absolute;inline-size:1rem;block-size:1rem;border-radius:100%;margin:-.5rem 0 0 -.5rem;box-shadow:inset 0 0 0 1px var(--tui-base-01),0 0 0 1px var(--tui-base-03)}\\n\"] }]\n        }], propDecorators: { value: [{\n                type: Input\n            }], valueChange: [{\n                type: Output\n            }] } });\n\nclass TuiLinearPickerComponent {\n    constructor() {\n        this.$ = inject(TuiPickerService)\n            .pipe(takeUntilDestroyed())\n            .subscribe(([x]) => {\n            this.value = x;\n            this.valueChange.emit(x);\n        });\n        this.value = 0;\n        this.valueChange = new EventEmitter();\n    }\n    get left() {\n        return this.value * 100;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiLinearPickerComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiLinearPickerComponent, selector: \"tui-linear-picker\", inputs: { value: \"value\" }, outputs: { valueChange: \"valueChange\" }, providers: [TuiPickerService], ngImport: i0, template: \"<div\\n    class=\\\"t-circle\\\"\\n    [style.left.%]=\\\"left\\\"\\n></div>\\n\", styles: [\":host{position:relative;display:block;block-size:1rem;box-sizing:border-box}.t-circle{position:absolute;inline-size:1rem;block-size:1rem;border-radius:100%;margin:0 -.5rem;box-shadow:inset 0 0 0 2px var(--tui-base-01),0 0 0 1px var(--tui-base-03)}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiLinearPickerComponent, decorators: [{\n            type: Component,\n            args: [{ standalone: false, selector: 'tui-linear-picker', changeDetection: ChangeDetectionStrategy.OnPush, providers: [TuiPickerService], template: \"<div\\n    class=\\\"t-circle\\\"\\n    [style.left.%]=\\\"left\\\"\\n></div>\\n\", styles: [\":host{position:relative;display:block;block-size:1rem;box-sizing:border-box}.t-circle{position:absolute;inline-size:1rem;block-size:1rem;border-radius:100%;margin:0 -.5rem;box-shadow:inset 0 0 0 2px var(--tui-base-01),0 0 0 1px var(--tui-base-03)}\\n\"] }]\n        }], propDecorators: { value: [{\n                type: Input\n            }], valueChange: [{\n                type: Output\n            }] } });\n\nclass TuiColorPickerComponent {\n    constructor() {\n        this.sanitizer = inject(DomSanitizer);\n        this.point = [0, 1];\n        this.hue = 0;\n        this.opacity = 1;\n        this.colorChange = new EventEmitter();\n    }\n    set color(color) {\n        if (this.currentColor.every((item, index) => item === color[index]) &&\n            color[3] === this.opacity) {\n            return;\n        }\n        const [h, s, v] = tuiRgbToHsv(color[0], color[1], color[2]);\n        this.opacity = color[3];\n        this.hue = h / 360;\n        this.point = [s, 1 - v / 255];\n    }\n    get currentColor() {\n        return this.getCurrentColor(this.hue, this.point);\n    }\n    get base() {\n        return `rgb(${tuiHsvToRgb(this.hue * 360, 1, 255)})`;\n    }\n    get gradient() {\n        return this.sanitizer.bypassSecurityTrustStyle(`linear-gradient(to right, rgba(${this.currentColor.join(',')}, 0), rgb(${this.currentColor.join(',')}))`);\n    }\n    onPointChange(point) {\n        this.point = point;\n        this.updateColor();\n    }\n    onHueChange(hue) {\n        this.hue = hue;\n        this.updateColor();\n    }\n    onOpacityChange(opacity) {\n        this.opacity = tuiRound(opacity, 2);\n        this.updateColor();\n    }\n    getCurrentColor(hue, point) {\n        return tuiHsvToRgb(hue * 360, point[0], (1 - point[1]) * 255);\n    }\n    updateColor() {\n        this.colorChange.emit([...this.currentColor, this.opacity]);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiColorPickerComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiColorPickerComponent, selector: \"tui-color-picker\", inputs: { color: \"color\" }, outputs: { colorChange: \"colorChange\" }, ngImport: i0, template: \"<tui-flat-picker\\n    class=\\\"t-flat\\\"\\n    [style.backgroundColor]=\\\"base\\\"\\n    [value]=\\\"point\\\"\\n    (valueChange)=\\\"onPointChange($event)\\\"\\n/>\\n<div class=\\\"t-wrapper t-wrapper_hue\\\">\\n    <tui-linear-picker\\n        class=\\\"t-hue\\\"\\n        [value]=\\\"hue\\\"\\n        (valueChange)=\\\"onHueChange($event)\\\"\\n    />\\n</div>\\n<div\\n    class=\\\"t-wrapper t-wrapper_opacity\\\"\\n    [style.background]=\\\"gradient\\\"\\n>\\n    <tui-linear-picker\\n        class=\\\"t-opacity\\\"\\n        [value]=\\\"opacity\\\"\\n        (valueChange)=\\\"onOpacityChange($event)\\\"\\n    />\\n</div>\\n\", styles: [\":host{position:relative;display:block;isolation:isolate}.t-flat{block-size:14rem;background:linear-gradient(#0000,#000),linear-gradient(to right,#fff,#fff0);margin-bottom:.25rem;overflow:hidden}.t-wrapper{position:relative;margin:1rem 1.25rem;border-radius:.5rem}.t-wrapper:after{position:absolute;top:0;left:0;inline-size:100%;block-size:100%;content:\\\"\\\";box-shadow:inset 0 0 0 1px #00000014;pointer-events:none;border-radius:inherit}.t-wrapper_hue{background:red}.t-wrapper_opacity:before{position:absolute;top:0;left:0;inline-size:100%;block-size:100%;content:\\\"\\\";z-index:-1;background-image:linear-gradient(45deg,var(--tui-base-03) 25%,transparent 25%,transparent 75%,var(--tui-base-03) 75%,var(--tui-base-03)),linear-gradient(45deg,var(--tui-base-03) 25%,transparent 25%,transparent 75%,var(--tui-base-03) 75%,var(--tui-base-03));background-size:.375rem .375rem;background-position:0 0,.1875rem .1875rem;border-radius:inherit}.t-hue{background:linear-gradient(to right,red,#ff0,#0f0,#0ff,#00f,#f0f,red);border-radius:inherit;margin:0 .5rem}.t-opacity{border-radius:inherit;margin:0 .5rem}\\n\"], dependencies: [{ kind: \"component\", type: TuiFlatPickerComponent, selector: \"tui-flat-picker\", inputs: [\"value\"], outputs: [\"valueChange\"] }, { kind: \"component\", type: TuiLinearPickerComponent, selector: \"tui-linear-picker\", inputs: [\"value\"], outputs: [\"valueChange\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\n__decorate([\n    tuiPure\n], TuiColorPickerComponent.prototype, \"getCurrentColor\", null);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiColorPickerComponent, decorators: [{\n            type: Component,\n            args: [{ standalone: false, selector: 'tui-color-picker', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<tui-flat-picker\\n    class=\\\"t-flat\\\"\\n    [style.backgroundColor]=\\\"base\\\"\\n    [value]=\\\"point\\\"\\n    (valueChange)=\\\"onPointChange($event)\\\"\\n/>\\n<div class=\\\"t-wrapper t-wrapper_hue\\\">\\n    <tui-linear-picker\\n        class=\\\"t-hue\\\"\\n        [value]=\\\"hue\\\"\\n        (valueChange)=\\\"onHueChange($event)\\\"\\n    />\\n</div>\\n<div\\n    class=\\\"t-wrapper t-wrapper_opacity\\\"\\n    [style.background]=\\\"gradient\\\"\\n>\\n    <tui-linear-picker\\n        class=\\\"t-opacity\\\"\\n        [value]=\\\"opacity\\\"\\n        (valueChange)=\\\"onOpacityChange($event)\\\"\\n    />\\n</div>\\n\", styles: [\":host{position:relative;display:block;isolation:isolate}.t-flat{block-size:14rem;background:linear-gradient(#0000,#000),linear-gradient(to right,#fff,#fff0);margin-bottom:.25rem;overflow:hidden}.t-wrapper{position:relative;margin:1rem 1.25rem;border-radius:.5rem}.t-wrapper:after{position:absolute;top:0;left:0;inline-size:100%;block-size:100%;content:\\\"\\\";box-shadow:inset 0 0 0 1px #00000014;pointer-events:none;border-radius:inherit}.t-wrapper_hue{background:red}.t-wrapper_opacity:before{position:absolute;top:0;left:0;inline-size:100%;block-size:100%;content:\\\"\\\";z-index:-1;background-image:linear-gradient(45deg,var(--tui-base-03) 25%,transparent 25%,transparent 75%,var(--tui-base-03) 75%,var(--tui-base-03)),linear-gradient(45deg,var(--tui-base-03) 25%,transparent 25%,transparent 75%,var(--tui-base-03) 75%,var(--tui-base-03));background-size:.375rem .375rem;background-position:0 0,.1875rem .1875rem;border-radius:inherit}.t-hue{background:linear-gradient(to right,red,#ff0,#0f0,#0ff,#00f,#f0f,red);border-radius:inherit;margin:0 .5rem}.t-opacity{border-radius:inherit;margin:0 .5rem}\\n\"] }]\n        }], propDecorators: { colorChange: [{\n                type: Output\n            }], color: [{\n                type: Input\n            }], getCurrentColor: [] } });\n\nclass TuiFlatPickerModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiFlatPickerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiFlatPickerModule, declarations: [TuiFlatPickerComponent], imports: [CommonModule], exports: [TuiFlatPickerComponent] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiFlatPickerModule, imports: [CommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiFlatPickerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [TuiFlatPickerComponent],\n                    exports: [TuiFlatPickerComponent],\n                }]\n        }] });\n\nclass TuiLinearPickerModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiLinearPickerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiLinearPickerModule, declarations: [TuiLinearPickerComponent], imports: [CommonModule], exports: [TuiLinearPickerComponent] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiLinearPickerModule, imports: [CommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiLinearPickerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [TuiLinearPickerComponent],\n                    exports: [TuiLinearPickerComponent],\n                }]\n        }] });\n\nclass TuiColorPickerModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiColorPickerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiColorPickerModule, declarations: [TuiColorPickerComponent], imports: [CommonModule, TuiFlatPickerModule, TuiLinearPickerModule], exports: [TuiColorPickerComponent] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiColorPickerModule, imports: [CommonModule, TuiFlatPickerModule, TuiLinearPickerModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiColorPickerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, TuiFlatPickerModule, TuiLinearPickerModule],\n                    declarations: [TuiColorPickerComponent],\n                    exports: [TuiColorPickerComponent],\n                }]\n        }] });\n\nconst TUI_COLOR_SELECTOR_MODE_NAMES = tuiCreateToken([\n    'Solid color',\n    'Gradient',\n]);\nconst TUI_DEFAULT_INPUT_COLORS = new Map([\n    ['color-black-100', '#909090'],\n    ['color-black-200', '#666666'],\n    ['color-black-300', '#333333'],\n    ['color-blue-100', '#1771e6'],\n    ['color-blue-200', '#1464cc'],\n    ['color-blue-300', '#0953b3'],\n    ['color-gray-100', '#f5f5f6'],\n    ['color-gray-200', '#e7e8ea'],\n    ['color-gray-300', '#cbcfd3'],\n    ['color-gray-400', '#959ba4'],\n    ['color-gray-500', '#79818c'],\n    ['color-gray-600', '#616871'],\n    ['color-green-100', '#39b54a'],\n    ['color-green-200', '#2ca53a'],\n    ['color-green-300', '#168a21'],\n    ['color-light-blue-100', '#ecf1f7'],\n    ['color-light-blue-200', '#e4ebf3'],\n    ['color-light-blue-300', '#dde4ed'],\n    ['color-red-100', '#e01f19'],\n    ['color-red-200', '#d3120e'],\n    ['color-red-300', '#c40b08'],\n    ['color-yellow-100', '#FFDD2C'],\n    ['color-yellow-200', '#FCC521'],\n    ['color-yellow-300', '#FAB618'],\n    ['transparent', 'transparent'],\n]);\nconst TuiColorSelectorMode = {\n    SolidColor: 0,\n    Gradient: 1,\n};\nconst TUI_COLOR_SELECTOR_DEFAULT_OPTIONS = {\n    selectorMode: true,\n    mode: TuiColorSelectorMode.SolidColor,\n    color: [0, 0, 0, 1],\n    colors: new Map(),\n    gradient: {\n        icons: {\n            'to top right': '@tui.move-up-right',\n            'to right': '@tui.move-right',\n            'to bottom right': '@tui.move-down-right',\n            'to bottom': '@tui.move-down',\n            'to bottom left': '@tui.move-down-left',\n            'to left': '@tui.move-left',\n            'to top left': '@tui.move-up-left',\n            'to top': '@tui.move-up',\n        },\n        steps: [\n            [0, [0, 0, 0, 1]],\n            [1, [255, 255, 255, 1]],\n        ],\n        stop: 0,\n        direction: 'to bottom',\n        emptyStop: [0, 0, 0, 0],\n        buttons: [\n            'to top right',\n            'to right',\n            'to bottom right',\n            'to bottom',\n            'to bottom left',\n            'to left',\n            'to top left',\n            'to top',\n        ],\n    },\n};\nconst TUI_COLOR_SELECTOR_OPTIONS = tuiCreateToken(TUI_COLOR_SELECTOR_DEFAULT_OPTIONS);\nfunction tuiColorSelectorOptionsProvider(options) {\n    return tuiProvideOptions(TUI_COLOR_SELECTOR_OPTIONS, options, TUI_COLOR_SELECTOR_DEFAULT_OPTIONS);\n}\n\nclass TuiLinearMultiPickerComponent {\n    constructor() {\n        this.$ = inject(TuiPickerService)\n            .pipe(takeUntilDestroyed())\n            .subscribe(([x]) => this.onPicker(x));\n        this.value = [0, 1];\n        this.valueChange = new EventEmitter();\n        this.indexChange = new EventEmitter();\n        this.index = NaN;\n    }\n    onMouseUp() {\n        this.index = NaN;\n    }\n    onMouseDown(index) {\n        this.updateIndex(index);\n    }\n    onClick(index) {\n        if (this.value.length > 2) {\n            this.updateValue(this.value.filter((_, i) => i !== index));\n        }\n    }\n    onPicker(x) {\n        if (Number.isNaN(this.index)) {\n            this.updateIndex(this.value.length);\n            this.value = [...this.value, 0];\n        }\n        if (this.value.some((item, index) => item === x && index !== this.index)) {\n            return;\n        }\n        this.updateValue(this.value.map((item, index) => (index === this.index ? x : item)));\n    }\n    updateIndex(index) {\n        this.index = index;\n        this.indexChange.emit(index);\n    }\n    updateValue(value) {\n        this.value = value;\n        this.valueChange.emit(value);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiLinearMultiPickerComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiLinearMultiPickerComponent, selector: \"tui-linear-multi-picker\", inputs: { value: \"value\" }, outputs: { valueChange: \"valueChange\", indexChange: \"indexChange\" }, host: { listeners: { \"document:mouseup\": \"onMouseUp()\" } }, providers: [TuiPickerService], ngImport: i0, template: \"<div\\n    *ngFor=\\\"let item of value; let index = index\\\"\\n    class=\\\"t-circle\\\"\\n    [style.left.%]=\\\"item * 100\\\"\\n    (dblclick)=\\\"onClick(index)\\\"\\n    (mousedown)=\\\"onMouseDown(index)\\\"\\n></div>\\n\", styles: [\":host{position:relative;display:block;block-size:1rem;box-sizing:border-box}.t-circle{position:absolute;inline-size:1rem;block-size:1rem;border-radius:100%;margin:0 -.5rem;box-shadow:inset 0 0 0 2px var(--tui-base-01),0 0 0 1px var(--tui-base-03)}\\n\"], dependencies: [{ kind: \"directive\", type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiLinearMultiPickerComponent, decorators: [{\n            type: Component,\n            args: [{ standalone: false, selector: 'tui-linear-multi-picker', changeDetection: ChangeDetectionStrategy.OnPush, providers: [TuiPickerService], host: {\n                        '(document:mouseup)': 'onMouseUp()',\n                    }, template: \"<div\\n    *ngFor=\\\"let item of value; let index = index\\\"\\n    class=\\\"t-circle\\\"\\n    [style.left.%]=\\\"item * 100\\\"\\n    (dblclick)=\\\"onClick(index)\\\"\\n    (mousedown)=\\\"onMouseDown(index)\\\"\\n></div>\\n\", styles: [\":host{position:relative;display:block;block-size:1rem;box-sizing:border-box}.t-circle{position:absolute;inline-size:1rem;block-size:1rem;border-radius:100%;margin:0 -.5rem;box-shadow:inset 0 0 0 2px var(--tui-base-01),0 0 0 1px var(--tui-base-03)}\\n\"] }]\n        }], propDecorators: { value: [{\n                type: Input\n            }], valueChange: [{\n                type: Output\n            }], indexChange: [{\n                type: Output\n            }] } });\n\nclass TuiPaletteComponent {\n    constructor() {\n        this.colors = new Map();\n        this.selectedColor = new EventEmitter();\n        this.originalOrder = (_a, _b) => 0;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiPaletteComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiPaletteComponent, selector: \"tui-palette\", inputs: { colors: \"colors\" }, outputs: { selectedColor: \"selectedColor\" }, ngImport: i0, template: \"<button\\n    *ngFor=\\\"let color of colors | keyvalue: originalOrder\\\"\\n    type=\\\"button\\\"\\n    class=\\\"t-button\\\"\\n    [id]=\\\"color.key\\\"\\n    [style.background]=\\\"color.value\\\"\\n    [tuiHint]=\\\"color.key\\\"\\n    [tuiHintDescribe]=\\\"color.key\\\"\\n    (click)=\\\"selectedColor.emit(color.value)\\\"\\n></button>\\n\", styles: [\":host{display:flex;flex-wrap:wrap;padding:.875rem}.t-button{-webkit-appearance:none;appearance:none;padding:0;background:none;font-size:inherit;line-height:inherit;inline-size:1.5625rem;block-size:1.5625rem;box-sizing:border-box;margin:.375rem;border-radius:var(--tui-radius-m);border:1px solid rgba(0,0,0,.08)}\\n\"], dependencies: [{ kind: \"directive\", type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i1$2.TuiHintDirective, selector: \"[tuiHint]:not(ng-container):not(ng-template)\", inputs: [\"tuiHintContext\", \"tuiHintAppearance\", \"tuiHint\"] }, { kind: \"directive\", type: i1$2.TuiHintDescribe, selector: \"[tuiHintDescribe]\", inputs: [\"tuiHintDescribe\"] }, { kind: \"pipe\", type: i1.KeyValuePipe, name: \"keyvalue\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiPaletteComponent, decorators: [{\n            type: Component,\n            args: [{ standalone: false, selector: 'tui-palette', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<button\\n    *ngFor=\\\"let color of colors | keyvalue: originalOrder\\\"\\n    type=\\\"button\\\"\\n    class=\\\"t-button\\\"\\n    [id]=\\\"color.key\\\"\\n    [style.background]=\\\"color.value\\\"\\n    [tuiHint]=\\\"color.key\\\"\\n    [tuiHintDescribe]=\\\"color.key\\\"\\n    (click)=\\\"selectedColor.emit(color.value)\\\"\\n></button>\\n\", styles: [\":host{display:flex;flex-wrap:wrap;padding:.875rem}.t-button{-webkit-appearance:none;appearance:none;padding:0;background:none;font-size:inherit;line-height:inherit;inline-size:1.5625rem;block-size:1.5625rem;box-sizing:border-box;margin:.375rem;border-radius:var(--tui-radius-m);border:1px solid rgba(0,0,0,.08)}\\n\"] }]\n        }], propDecorators: { colors: [{\n                type: Input\n            }], selectedColor: [{\n                type: Output\n            }] } });\n\nclass TuiColorSelectorComponent {\n    constructor() {\n        this.selectorOptions = inject(TUI_COLOR_SELECTOR_OPTIONS);\n        this.stops = new Map(this.selectorOptions.gradient.steps);\n        this.currentStop = this.selectorOptions.gradient.stop;\n        this.direction = this.selectorOptions.gradient.direction;\n        this.sanitizer = inject(DomSanitizer);\n        this.open = false;\n        this.colors = this.selectorOptions.colors;\n        this.colorChange = new EventEmitter();\n        this.color = this.selectorOptions.color;\n        this.modes = inject(TUI_COLOR_SELECTOR_MODE_NAMES);\n        this.currentMode = this.modes[this.selectorOptions.mode];\n        this.buttons = this.selectorOptions.gradient.buttons;\n    }\n    set colorSetter(color) {\n        if (color.startsWith('linear-gradient')) {\n            this.parseGradient(color);\n        }\n        else {\n            this.parseColor(color);\n        }\n    }\n    get selectorMode() {\n        return this.selectorOptions.selectorMode;\n    }\n    get palette() {\n        return this.filterPalette(this.colors, this.isGradient);\n    }\n    get stopsKeys() {\n        return this.getStopsKeys(this.stops);\n    }\n    get currentColor() {\n        return this.isGradient ? this.getStop(this.currentStop) : this.color;\n    }\n    get gradient() {\n        return this.sanitizer.bypassSecurityTrustStyle(this.getGradient('to right'));\n    }\n    get isGradient() {\n        return this.currentMode === this.modes[TuiColorSelectorMode.Gradient];\n    }\n    getIcon(direction) {\n        return this.selectorOptions.gradient.icons[direction];\n    }\n    isModeActive(mode) {\n        return this.currentMode === mode;\n    }\n    isDirectionActive(direction) {\n        return this.direction === direction;\n    }\n    onPalettePick(color) {\n        this.updateColor(color);\n    }\n    onDirectionChange(direction) {\n        this.direction = direction;\n        this.updateColor(this.getGradient(direction));\n    }\n    onModeSelect(mode) {\n        this.currentMode = mode;\n        this.open = false;\n        this.updateColor(mode === this.modes[TuiColorSelectorMode.SolidColor]\n            ? `rgba(${this.color.join(', ')})`\n            : this.getGradient(this.direction));\n    }\n    onIndexChange(index) {\n        this.currentStop = this.stopsKeys[index] ?? 0;\n    }\n    onColorChange(color) {\n        if (!this.isGradient) {\n            this.updateColor(`rgba(${color.join(', ')})`);\n            return;\n        }\n        this.stops.set(this.currentStop, color);\n        this.updateColor(this.getGradient(this.direction));\n    }\n    onStopsChange(stopsKeys) {\n        const removed = this.stopsKeys.find((item) => !stopsKeys.includes(item));\n        const added = stopsKeys.find((item) => !this.stopsKeys.includes(item));\n        if (removed === undefined && added !== undefined) {\n            this.addStop(added);\n        }\n        if (removed !== undefined && added === undefined) {\n            this.removeStop(removed);\n        }\n        if (removed !== undefined && added !== undefined) {\n            this.replaceStop(removed, added);\n        }\n        this.updateColor(this.getGradient(this.direction));\n    }\n    getStopsKeys(stops) {\n        return Array.from(stops.keys());\n    }\n    filterPalette(colors, isGradient) {\n        const map = new Map(colors);\n        map.forEach((value, key) => {\n            if ((value.startsWith('linear-gradient') && !isGradient) ||\n                (!value.startsWith('linear-gradient') && isGradient)) {\n                map.delete(key);\n            }\n        });\n        return map;\n    }\n    updateColor(color) {\n        this.colorChange.emit(color);\n    }\n    getGradient(direction) {\n        return `linear-gradient(${direction}, ${[...this.stopsKeys]\n            .sort(tuiDefaultSort)\n            .map((key) => `rgba(${this.getStop(key).join(', ')}) ${key * 100}%`)\n            .join(', ')})`;\n    }\n    getStop(stop) {\n        return this.stops.get(stop) || this.selectorOptions.gradient.emptyStop;\n    }\n    addStop(stop) {\n        const closest = this.stopsKeys.reduce((prev, curr) => (Math.abs(curr - stop) < Math.abs(prev - stop) ? curr : prev), this.stopsKeys[0] ?? 0);\n        this.stops.set(stop, this.getStop(closest));\n        this.stops = new Map(this.stops);\n        this.currentStop = stop;\n    }\n    removeStop(stop) {\n        this.stops.delete(stop);\n        this.stops = new Map(this.stops);\n        this.currentStop = this.stopsKeys[0] ?? 0;\n    }\n    replaceStop(removed, added) {\n        const value = this.getStop(removed);\n        this.currentStop = added;\n        this.stops = new Map(this.stopsKeys.map((key) => key === removed ? [added, value] : [key, this.getStop(key)]));\n    }\n    parseGradient(color) {\n        if (color === this.getGradient(this.direction)) {\n            return;\n        }\n        const gradient = tuiParseGradient(tuiGetGradientData(color));\n        this.direction = gradient.side;\n        this.currentStop = this.selectorOptions.gradient.stop;\n        this.stops = new Map(gradient.stops.length\n            ? gradient.stops.map(({ color, position }) => [\n                parseFloat(position) / 100,\n                tuiParseColor(color),\n            ])\n            : this.selectorOptions.gradient.steps);\n    }\n    parseColor(color) {\n        this.currentStop = this.selectorOptions.gradient.stop;\n        this.color = tuiParseColor(color);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiColorSelectorComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiColorSelectorComponent, selector: \"tui-color-selector\", inputs: { colors: \"colors\", colorSetter: [\"color\", \"colorSetter\"] }, outputs: { colorChange: \"colorChange\" }, ngImport: i0, template: \"<ng-container *ngIf=\\\"selectorMode\\\">\\n    <div\\n        class=\\\"t-select\\\"\\n        [tuiDropdown]=\\\"menu\\\"\\n        [(tuiDropdownOpen)]=\\\"open\\\"\\n    >\\n        <button\\n            appearance=\\\"\\\"\\n            size=\\\"s\\\"\\n            tuiButton\\n            tuiChevron\\n            type=\\\"button\\\"\\n        >\\n            {{ currentMode }}\\n        </button>\\n\\n        <ng-template #menu>\\n            <tui-data-list\\n                role=\\\"menu\\\"\\n                size=\\\"s\\\"\\n                class=\\\"t-menu\\\"\\n            >\\n                <button\\n                    *ngFor=\\\"let mode of modes\\\"\\n                    role=\\\"menuitemradio\\\"\\n                    tuiOption\\n                    type=\\\"button\\\"\\n                    [attr.aria-checked]=\\\"isModeActive(mode)\\\"\\n                    (click)=\\\"onModeSelect(mode)\\\"\\n                    (keydown.enter.prevent)=\\\"onModeSelect(mode)\\\"\\n                    (keydown.space.prevent)=\\\"onModeSelect(mode)\\\"\\n                >\\n                    {{ mode }}\\n                    <tui-icon\\n                        *ngIf=\\\"isModeActive(mode)\\\"\\n                        icon=\\\"@tui.check\\\"\\n                        class=\\\"t-checkmark\\\"\\n                    />\\n                </button>\\n            </tui-data-list>\\n        </ng-template>\\n    </div>\\n    <hr class=\\\"t-hr\\\" />\\n</ng-container>\\n\\n<ng-container *ngIf=\\\"isGradient\\\">\\n    <div\\n        class=\\\"t-wrapper\\\"\\n        [style.background]=\\\"gradient\\\"\\n    >\\n        <tui-linear-multi-picker\\n            class=\\\"t-gradient\\\"\\n            [value]=\\\"stopsKeys\\\"\\n            (indexChange)=\\\"onIndexChange($event)\\\"\\n            (valueChange)=\\\"onStopsChange($event)\\\"\\n        />\\n    </div>\\n    <div class=\\\"t-buttons\\\">\\n        <!-- TODO: Change to `tuiHintDescribe` when figure tuiDriver order issue -->\\n        <button\\n            *ngFor=\\\"let button of buttons\\\"\\n            appearance=\\\"\\\"\\n            size=\\\"xs\\\"\\n            tuiHintDescribe\\n            tuiIconButton\\n            type=\\\"button\\\"\\n            class=\\\"t-direction\\\"\\n            [class.t-direction_active]=\\\"isDirectionActive(button)\\\"\\n            [iconStart]=\\\"getIcon(button)\\\"\\n            [tuiHint]=\\\"button\\\"\\n            (click)=\\\"onDirectionChange(button)\\\"\\n        ></button>\\n    </div>\\n</ng-container>\\n<tui-color-picker\\n    [color]=\\\"currentColor\\\"\\n    (colorChange)=\\\"onColorChange($event)\\\"\\n/>\\n<tui-color-edit\\n    *ngIf=\\\"!isGradient\\\"\\n    tuiGroup\\n    class=\\\"t-edit\\\"\\n    [color]=\\\"color\\\"\\n    (colorChange)=\\\"onColorChange($event)\\\"\\n/>\\n<tui-palette\\n    *ngIf=\\\"palette.size\\\"\\n    class=\\\"t-palette\\\"\\n    [colors]=\\\"palette\\\"\\n    (selectedColor)=\\\"onPalettePick($event)\\\"\\n/>\\n\", styles: [\":host{position:relative;display:block;isolation:isolate;inline-size:22.6rem}:host :host-context(*:disabled){pointer-events:none}.t-wrapper{position:relative;margin:1.25rem;border-radius:.5rem}.t-wrapper:after{position:absolute;top:0;left:0;inline-size:100%;block-size:100%;content:\\\"\\\";box-shadow:inset 0 0 0 1px #00000014;pointer-events:none;border-radius:inherit}.t-wrapper:before{position:absolute;top:0;left:0;inline-size:100%;block-size:100%;content:\\\"\\\";z-index:-1;background-image:linear-gradient(45deg,var(--tui-base-03) 25%,transparent 25%,transparent 75%,var(--tui-base-03) 75%,var(--tui-base-03)),linear-gradient(45deg,var(--tui-base-03) 25%,transparent 25%,transparent 75%,var(--tui-base-03) 75%,var(--tui-base-03));background-size:.375rem .375rem;background-position:0 0,.1875rem .1875rem;border-radius:inherit}.t-hr{block-size:1px;margin:0 0 0 -1px;border:none;background:var(--tui-base-03)}.t-gradient{margin:0 .5rem;border-radius:inherit}.t-select{margin:.75rem .5rem 0}.t-arrow{transition-property:transform;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out}.t-arrow_rotated{transform:rotate(180deg)}.t-menu{inline-size:11.25rem}.t-checkmark{margin-left:auto;inline-size:1rem;block-size:1rem}.t-buttons{display:flex;padding:0 .75rem 1.25rem;justify-content:space-between}.t-direction{color:var(--tui-text-02);margin:0 .375rem}.t-direction:hover,.t-direction_active{color:var(--tui-text-01);background:var(--tui-secondary-hover)}.t-edit{margin:1.25rem}.t-palette{box-sizing:border-box;box-shadow:inset 0 1px var(--tui-base-03)}\\n\"], dependencies: [{ kind: \"directive\", type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2$2.TuiButton, selector: \"a[tuiButton],button[tuiButton],a[tuiIconButton],button[tuiIconButton]\", inputs: [\"size\"] }, { kind: \"component\", type: TuiColorPickerComponent, selector: \"tui-color-picker\", inputs: [\"color\"], outputs: [\"colorChange\"] }, { kind: \"component\", type: TuiLinearMultiPickerComponent, selector: \"tui-linear-multi-picker\", inputs: [\"value\"], outputs: [\"valueChange\", \"indexChange\"] }, { kind: \"component\", type: TuiColorEditComponent, selector: \"tui-color-edit\", inputs: [\"color\"], outputs: [\"colorChange\"] }, { kind: \"directive\", type: i1$1.TuiDropdownDirective, selector: \"[tuiDropdown]:not(ng-container):not(ng-template)\", inputs: [\"tuiDropdown\"], exportAs: [\"tuiDropdown\"] }, { kind: \"directive\", type: i1$1.TuiDropdownOpen, selector: \"[tuiDropdown][tuiDropdownOpen],[tuiDropdown][tuiDropdownOpenChange]\", inputs: [\"tuiDropdownEnabled\", \"tuiDropdownOpen\"], outputs: [\"tuiDropdownOpenChange\"] }, { kind: \"component\", type: i2$1.TuiDataListComponent, selector: \"tui-data-list\", inputs: [\"emptyContent\", \"size\"] }, { kind: \"component\", type: i2$1.TuiOption, selector: \"button[tuiOption], a[tuiOption], label[tuiOption]\", inputs: [\"disabled\", \"value\"] }, { kind: \"directive\", type: i8.TuiGroup, selector: \"[tuiGroup]:not(ng-container)\", inputs: [\"orientation\", \"collapsed\", \"rounded\", \"size\"] }, { kind: \"component\", type: TuiPaletteComponent, selector: \"tui-palette\", inputs: [\"colors\"], outputs: [\"selectedColor\"] }, { kind: \"directive\", type: i1$2.TuiHintDirective, selector: \"[tuiHint]:not(ng-container):not(ng-template)\", inputs: [\"tuiHintContext\", \"tuiHintAppearance\", \"tuiHint\"] }, { kind: \"directive\", type: i1$2.TuiHintDescribe, selector: \"[tuiHintDescribe]\", inputs: [\"tuiHintDescribe\"] }, { kind: \"directive\", type: i11.TuiChevron, selector: \"[tuiChevron]\", inputs: [\"tuiChevron\"] }, { kind: \"component\", type: i12.TuiIcon, selector: \"tui-icon\", inputs: [\"icon\", \"background\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\n__decorate([\n    tuiPure\n], TuiColorSelectorComponent.prototype, \"getStopsKeys\", null);\n__decorate([\n    tuiPure\n], TuiColorSelectorComponent.prototype, \"filterPalette\", null);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiColorSelectorComponent, decorators: [{\n            type: Component,\n            args: [{ standalone: false, selector: 'tui-color-selector', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-container *ngIf=\\\"selectorMode\\\">\\n    <div\\n        class=\\\"t-select\\\"\\n        [tuiDropdown]=\\\"menu\\\"\\n        [(tuiDropdownOpen)]=\\\"open\\\"\\n    >\\n        <button\\n            appearance=\\\"\\\"\\n            size=\\\"s\\\"\\n            tuiButton\\n            tuiChevron\\n            type=\\\"button\\\"\\n        >\\n            {{ currentMode }}\\n        </button>\\n\\n        <ng-template #menu>\\n            <tui-data-list\\n                role=\\\"menu\\\"\\n                size=\\\"s\\\"\\n                class=\\\"t-menu\\\"\\n            >\\n                <button\\n                    *ngFor=\\\"let mode of modes\\\"\\n                    role=\\\"menuitemradio\\\"\\n                    tuiOption\\n                    type=\\\"button\\\"\\n                    [attr.aria-checked]=\\\"isModeActive(mode)\\\"\\n                    (click)=\\\"onModeSelect(mode)\\\"\\n                    (keydown.enter.prevent)=\\\"onModeSelect(mode)\\\"\\n                    (keydown.space.prevent)=\\\"onModeSelect(mode)\\\"\\n                >\\n                    {{ mode }}\\n                    <tui-icon\\n                        *ngIf=\\\"isModeActive(mode)\\\"\\n                        icon=\\\"@tui.check\\\"\\n                        class=\\\"t-checkmark\\\"\\n                    />\\n                </button>\\n            </tui-data-list>\\n        </ng-template>\\n    </div>\\n    <hr class=\\\"t-hr\\\" />\\n</ng-container>\\n\\n<ng-container *ngIf=\\\"isGradient\\\">\\n    <div\\n        class=\\\"t-wrapper\\\"\\n        [style.background]=\\\"gradient\\\"\\n    >\\n        <tui-linear-multi-picker\\n            class=\\\"t-gradient\\\"\\n            [value]=\\\"stopsKeys\\\"\\n            (indexChange)=\\\"onIndexChange($event)\\\"\\n            (valueChange)=\\\"onStopsChange($event)\\\"\\n        />\\n    </div>\\n    <div class=\\\"t-buttons\\\">\\n        <!-- TODO: Change to `tuiHintDescribe` when figure tuiDriver order issue -->\\n        <button\\n            *ngFor=\\\"let button of buttons\\\"\\n            appearance=\\\"\\\"\\n            size=\\\"xs\\\"\\n            tuiHintDescribe\\n            tuiIconButton\\n            type=\\\"button\\\"\\n            class=\\\"t-direction\\\"\\n            [class.t-direction_active]=\\\"isDirectionActive(button)\\\"\\n            [iconStart]=\\\"getIcon(button)\\\"\\n            [tuiHint]=\\\"button\\\"\\n            (click)=\\\"onDirectionChange(button)\\\"\\n        ></button>\\n    </div>\\n</ng-container>\\n<tui-color-picker\\n    [color]=\\\"currentColor\\\"\\n    (colorChange)=\\\"onColorChange($event)\\\"\\n/>\\n<tui-color-edit\\n    *ngIf=\\\"!isGradient\\\"\\n    tuiGroup\\n    class=\\\"t-edit\\\"\\n    [color]=\\\"color\\\"\\n    (colorChange)=\\\"onColorChange($event)\\\"\\n/>\\n<tui-palette\\n    *ngIf=\\\"palette.size\\\"\\n    class=\\\"t-palette\\\"\\n    [colors]=\\\"palette\\\"\\n    (selectedColor)=\\\"onPalettePick($event)\\\"\\n/>\\n\", styles: [\":host{position:relative;display:block;isolation:isolate;inline-size:22.6rem}:host :host-context(*:disabled){pointer-events:none}.t-wrapper{position:relative;margin:1.25rem;border-radius:.5rem}.t-wrapper:after{position:absolute;top:0;left:0;inline-size:100%;block-size:100%;content:\\\"\\\";box-shadow:inset 0 0 0 1px #00000014;pointer-events:none;border-radius:inherit}.t-wrapper:before{position:absolute;top:0;left:0;inline-size:100%;block-size:100%;content:\\\"\\\";z-index:-1;background-image:linear-gradient(45deg,var(--tui-base-03) 25%,transparent 25%,transparent 75%,var(--tui-base-03) 75%,var(--tui-base-03)),linear-gradient(45deg,var(--tui-base-03) 25%,transparent 25%,transparent 75%,var(--tui-base-03) 75%,var(--tui-base-03));background-size:.375rem .375rem;background-position:0 0,.1875rem .1875rem;border-radius:inherit}.t-hr{block-size:1px;margin:0 0 0 -1px;border:none;background:var(--tui-base-03)}.t-gradient{margin:0 .5rem;border-radius:inherit}.t-select{margin:.75rem .5rem 0}.t-arrow{transition-property:transform;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out}.t-arrow_rotated{transform:rotate(180deg)}.t-menu{inline-size:11.25rem}.t-checkmark{margin-left:auto;inline-size:1rem;block-size:1rem}.t-buttons{display:flex;padding:0 .75rem 1.25rem;justify-content:space-between}.t-direction{color:var(--tui-text-02);margin:0 .375rem}.t-direction:hover,.t-direction_active{color:var(--tui-text-01);background:var(--tui-secondary-hover)}.t-edit{margin:1.25rem}.t-palette{box-sizing:border-box;box-shadow:inset 0 1px var(--tui-base-03)}\\n\"] }]\n        }], propDecorators: { colors: [{\n                type: Input\n            }], colorChange: [{\n                type: Output\n            }], colorSetter: [{\n                type: Input,\n                args: ['color']\n            }], getStopsKeys: [], filterPalette: [] } });\n\nclass TuiLinearMultiPickerModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiLinearMultiPickerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiLinearMultiPickerModule, declarations: [TuiLinearMultiPickerComponent], imports: [CommonModule], exports: [TuiLinearMultiPickerComponent] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiLinearMultiPickerModule, imports: [CommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiLinearMultiPickerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [TuiLinearMultiPickerComponent],\n                    exports: [TuiLinearMultiPickerComponent],\n                }]\n        }] });\n\nclass TuiPaletteModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiPaletteModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiPaletteModule, declarations: [TuiPaletteComponent], imports: [CommonModule, i1$2.TuiHintComponent, i1$2.TuiHintDirective, i1$2.TuiHintOptionsDirective, i1$2.TuiHintUnstyled, i1$2.TuiHintDriver, i1$2.TuiHintPosition, i1$2.TuiHintHover, i1$2.TuiHintOverflow, i1$2.TuiHintDescribe, i1$2.TuiHintHost, i1$2.TuiHintManual, i1$2.TuiHintPointer], exports: [TuiPaletteComponent, i1$2.TuiHintComponent, i1$2.TuiHintDirective, i1$2.TuiHintOptionsDirective, i1$2.TuiHintUnstyled, i1$2.TuiHintDriver, i1$2.TuiHintPosition, i1$2.TuiHintHover, i1$2.TuiHintOverflow, i1$2.TuiHintDescribe, i1$2.TuiHintHost, i1$2.TuiHintManual, i1$2.TuiHintPointer] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiPaletteModule, imports: [CommonModule, i1$2.TuiHintComponent] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiPaletteModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, ...TuiHint],\n                    declarations: [TuiPaletteComponent],\n                    exports: [TuiPaletteComponent, ...TuiHint],\n                }]\n        }] });\n\nclass TuiColorSelectorModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiColorSelectorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiColorSelectorModule, declarations: [TuiColorSelectorComponent], imports: [CommonModule,\n            TuiButton,\n            TuiSvgComponent,\n            TuiColorPickerModule,\n            TuiLinearMultiPickerModule,\n            TuiActiveZone,\n            TuiColorEditModule,\n            TuiGroup,\n            TuiPaletteModule,\n            TuiChevron,\n            TuiIcon, i1$2.TuiHintComponent, i1$2.TuiHintDirective, i1$2.TuiHintOptionsDirective, i1$2.TuiHintUnstyled, i1$2.TuiHintDriver, i1$2.TuiHintPosition, i1$2.TuiHintHover, i1$2.TuiHintOverflow, i1$2.TuiHintDescribe, i1$2.TuiHintHost, i1$2.TuiHintManual, i1$2.TuiHintPointer, i2$1.TuiDataListComponent, i2$1.TuiDataListDirective, i2$1.TuiOption, i2$1.TuiOptGroup], exports: [TuiColorSelectorComponent, i1$2.TuiHintComponent, i1$2.TuiHintDirective, i1$2.TuiHintOptionsDirective, i1$2.TuiHintUnstyled, i1$2.TuiHintDriver, i1$2.TuiHintPosition, i1$2.TuiHintHover, i1$2.TuiHintOverflow, i1$2.TuiHintDescribe, i1$2.TuiHintHost, i1$2.TuiHintManual, i1$2.TuiHintPointer, i2$1.TuiDataListComponent, i2$1.TuiDataListDirective, i2$1.TuiOption, i2$1.TuiOptGroup] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiColorSelectorModule, imports: [CommonModule,\n            TuiSvgComponent,\n            TuiColorPickerModule,\n            TuiLinearMultiPickerModule,\n            TuiColorEditModule,\n            TuiPaletteModule,\n            TuiIcon, i1$2.TuiHintComponent, i2$1.TuiDataListComponent, i2$1.TuiOption] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiColorSelectorModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        TuiButton,\n                        TuiSvgComponent,\n                        TuiColorPickerModule,\n                        TuiLinearMultiPickerModule,\n                        TuiActiveZone,\n                        TuiColorEditModule,\n                        TuiGroup,\n                        TuiPaletteModule,\n                        TuiChevron,\n                        TuiIcon,\n                        ...TuiHint,\n                        ...TuiDataList,\n                    ],\n                    declarations: [TuiColorSelectorComponent],\n                    exports: [TuiColorSelectorComponent, ...TuiHint, ...TuiDataList],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TUI_COLOR_SELECTOR_DEFAULT_OPTIONS, TUI_COLOR_SELECTOR_MODE_NAMES, TUI_COLOR_SELECTOR_OPTIONS, TUI_DEFAULT_INPUT_COLORS, TuiColorEditComponent, TuiColorEditModule, TuiColorPickerComponent, TuiColorPickerModule, TuiColorSelectorComponent, TuiColorSelectorMode, TuiColorSelectorModule, TuiFlatPickerComponent, TuiFlatPickerModule, TuiLinearMultiPickerComponent, TuiLinearMultiPickerModule, TuiLinearPickerComponent, TuiLinearPickerModule, TuiPaletteComponent, TuiPaletteModule, TuiPickerService, tuiColorSelectorOptionsProvider };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}