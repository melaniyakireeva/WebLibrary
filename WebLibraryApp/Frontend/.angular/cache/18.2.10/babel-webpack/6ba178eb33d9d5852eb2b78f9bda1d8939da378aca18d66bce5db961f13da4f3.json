{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { inject, Directive, Input } from '@angular/core';\nimport { WA_WINDOW } from '@ng-web-apis/common';\nimport { tuiGetSelectedText } from '@taiga-ui/cdk/utils';\nimport { identity } from 'rxjs';\nclass TuiCopyProcessor {\n  constructor() {\n    this.win = inject(WA_WINDOW);\n    this.tuiCopyProcessor = identity;\n  }\n  onCopy(event) {\n    const text = tuiGetSelectedText(this.win);\n    if (text) {\n      event.clipboardData?.setData('text/plain', this.tuiCopyProcessor(text));\n    }\n  }\n  static {\n    this.ɵfac = function TuiCopyProcessor_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiCopyProcessor)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: TuiCopyProcessor,\n      selectors: [[\"\", \"tuiCopyProcessor\", \"\"]],\n      hostBindings: function TuiCopyProcessor_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"copy.prevent\", function TuiCopyProcessor_copy_prevent_HostBindingHandler($event) {\n            return ctx.onCopy($event);\n          });\n        }\n      },\n      inputs: {\n        tuiCopyProcessor: \"tuiCopyProcessor\"\n      },\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiCopyProcessor, [{\n    type: Directive,\n    args: [{\n      standalone: true,\n      selector: '[tuiCopyProcessor]',\n      host: {\n        '(copy.prevent)': 'onCopy($event)'\n      }\n    }]\n  }], null, {\n    tuiCopyProcessor: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiCopyProcessor };","map":{"version":3,"names":["i0","inject","Directive","Input","WA_WINDOW","tuiGetSelectedText","identity","TuiCopyProcessor","constructor","win","tuiCopyProcessor","onCopy","event","text","clipboardData","setData","ɵfac","TuiCopyProcessor_Factory","__ngFactoryType__","ɵdir","ɵɵdefineDirective","type","selectors","hostBindings","TuiCopyProcessor_HostBindings","rf","ctx","ɵɵlistener","TuiCopyProcessor_copy_prevent_HostBindingHandler","$event","inputs","standalone","ngDevMode","ɵsetClassMetadata","args","selector","host"],"sources":["C:/Users/Asus-PC/Downloads/WebLibraryNew/WebLibrary/WebLibraryApp/Frontend/node_modules/@taiga-ui/cdk/fesm2022/taiga-ui-cdk-directives-copy-processor.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { inject, Directive, Input } from '@angular/core';\nimport { WA_WINDOW } from '@ng-web-apis/common';\nimport { tuiGetSelectedText } from '@taiga-ui/cdk/utils';\nimport { identity } from 'rxjs';\n\nclass TuiCopyProcessor {\n    constructor() {\n        this.win = inject(WA_WINDOW);\n        this.tuiCopyProcessor = identity;\n    }\n    onCopy(event) {\n        const text = tuiGetSelectedText(this.win);\n        if (text) {\n            event.clipboardData?.setData('text/plain', this.tuiCopyProcessor(text));\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiCopyProcessor, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiCopyProcessor, isStandalone: true, selector: \"[tuiCopyProcessor]\", inputs: { tuiCopyProcessor: \"tuiCopyProcessor\" }, host: { listeners: { \"copy.prevent\": \"onCopy($event)\" } }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiCopyProcessor, decorators: [{\n            type: Directive,\n            args: [{\n                    standalone: true,\n                    selector: '[tuiCopyProcessor]',\n                    host: {\n                        '(copy.prevent)': 'onCopy($event)',\n                    },\n                }]\n        }], propDecorators: { tuiCopyProcessor: [{\n                type: Input\n            }] } });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiCopyProcessor };\n"],"mappings":"AAAA,OAAO,KAAKA,EAAE,MAAM,eAAe;AACnC,SAASC,MAAM,EAAEC,SAAS,EAAEC,KAAK,QAAQ,eAAe;AACxD,SAASC,SAAS,QAAQ,qBAAqB;AAC/C,SAASC,kBAAkB,QAAQ,qBAAqB;AACxD,SAASC,QAAQ,QAAQ,MAAM;AAE/B,MAAMC,gBAAgB,CAAC;EACnBC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,GAAG,GAAGR,MAAM,CAACG,SAAS,CAAC;IAC5B,IAAI,CAACM,gBAAgB,GAAGJ,QAAQ;EACpC;EACAK,MAAMA,CAACC,KAAK,EAAE;IACV,MAAMC,IAAI,GAAGR,kBAAkB,CAAC,IAAI,CAACI,GAAG,CAAC;IACzC,IAAII,IAAI,EAAE;MACND,KAAK,CAACE,aAAa,EAAEC,OAAO,CAAC,YAAY,EAAE,IAAI,CAACL,gBAAgB,CAACG,IAAI,CAAC,CAAC;IAC3E;EACJ;EACA;IAAS,IAAI,CAACG,IAAI,YAAAC,yBAAAC,iBAAA;MAAA,YAAAA,iBAAA,IAAyFX,gBAAgB;IAAA,CAAmD;EAAE;EAChL;IAAS,IAAI,CAACY,IAAI,kBAD+EnB,EAAE,CAAAoB,iBAAA;MAAAC,IAAA,EACJd,gBAAgB;MAAAe,SAAA;MAAAC,YAAA,WAAAC,8BAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UADdzB,EAAE,CAAA2B,UAAA,0BAAAC,iDAAAC,MAAA;YAAA,OACJH,GAAA,CAAAf,MAAA,CAAAkB,MAAa,CAAC;UAAA,CAAC,CAAC;QAAA;MAAA;MAAAC,MAAA;QAAApB,gBAAA;MAAA;MAAAqB,UAAA;IAAA,EAAkL;EAAE;AACvS;AACA;EAAA,QAAAC,SAAA,oBAAAA,SAAA,KAHqGhC,EAAE,CAAAiC,iBAAA,CAGX1B,gBAAgB,EAAc,CAAC;IAC/Gc,IAAI,EAAEnB,SAAS;IACfgC,IAAI,EAAE,CAAC;MACCH,UAAU,EAAE,IAAI;MAChBI,QAAQ,EAAE,oBAAoB;MAC9BC,IAAI,EAAE;QACF,gBAAgB,EAAE;MACtB;IACJ,CAAC;EACT,CAAC,CAAC,QAAkB;IAAE1B,gBAAgB,EAAE,CAAC;MACjCW,IAAI,EAAElB;IACV,CAAC;EAAE,CAAC;AAAA;;AAEhB;AACA;AACA;;AAEA,SAASI,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}