{"ast":null,"code":"import { FormArray, FormGroup } from '@angular/forms';\nimport { tuiToInt } from '@taiga-ui/cdk/utils/math';\nimport { InjectionToken, isSignal, signal, inject, effect, DestroyRef, EnvironmentInjector, createComponent } from '@angular/core';\nimport { toSignal } from '@angular/core/rxjs-interop';\nfunction tuiArrayRemove(array, index) {\n  return array.slice(0, Math.max(index, 0)).concat(array.slice(Math.max(index + 1, 0)));\n}\nfunction tuiArrayShallowEquals(a, b) {\n  return a.length === b.length && a.every((item, index) => item === b[index]);\n}\nfunction tuiArrayToggle(array, item) {\n  const index = array.indexOf(item);\n  return index === -1 ? [...array, item] : tuiArrayRemove(array, index);\n}\n\n/* internal */\nconst changeDateSeparator = (dateString, newDateSeparator) => dateString.replaceAll(/[^0-9A-Za-zА-Яа-я]/gi, newDateSeparator);\nfunction tuiIsControlEmpty({\n  value = null\n}) {\n  return value === null || value === '' || Array.isArray(value) && !value.length;\n}\nfunction tuiCountFilledControls(control) {\n  if (control instanceof FormArray) {\n    return control.controls.reduce((acc, nestedControl) => acc + tuiCountFilledControls(nestedControl), 0);\n  }\n  if (control instanceof FormGroup) {\n    return Object.values(control.controls).reduce((acc, nestedControl) => acc + tuiCountFilledControls(nestedControl), 0);\n  }\n  return tuiToInt(!tuiIsControlEmpty(control));\n}\nfunction tuiCreateToken(defaults) {\n  return tuiCreateTokenFromFactory(() => defaults);\n}\nfunction tuiCreateTokenFromFactory(factory) {\n  return factory ? new InjectionToken('', {\n    factory\n  }) : new InjectionToken('');\n}\nfunction tuiIsString(value) {\n  return typeof value === 'string';\n}\nfunction tuiDefaultSort(x, y) {\n  if (x === y) {\n    return 0;\n  }\n  if (tuiIsString(x) && tuiIsString(y)) {\n    return x.localeCompare(y);\n  }\n  return x > y ? 1 : -1;\n}\nfunction tuiDirectiveBinding(token, key, initial, options = {\n  self: true\n}) {\n  const result = isSignal(initial) ? initial : signal(initial);\n  const directive = inject(token, options);\n  const output = directive[`${key.toString()}Change`];\n  // TODO: Figure out why effects are executed all the time and not just when result changes (check with Angular 18)\n  let previous;\n  effect(() => {\n    const value = result();\n    if (previous === value) {\n      return;\n    }\n    if (isSignal(directive[key])) {\n      directive[key].set(value);\n    } else {\n      directive[key] = value;\n    }\n    directive.ngOnChanges?.({});\n    output?.emit?.(value);\n    previous = value;\n  }, {\n    allowSignalWrites: true\n  });\n  return result;\n}\nfunction tuiDirectiveListener(token, key, options = {\n  self: true\n}) {\n  const prop = inject(token, options)?.[key];\n  return isSignal(prop) ? prop : toSignal(prop);\n}\nfunction tuiDistanceBetweenTouches({\n  touches\n}) {\n  return Math.hypot((touches[0]?.clientX ?? 0) - (touches[1]?.clientX ?? 0), (touches[0]?.clientY ?? 0) - (touches[1]?.clientY ?? 0));\n}\n\n/// <reference types=\"@taiga-ui/tsconfig/ng-dev-mode\" />\nfunction tuiEaseInOutQuad(t) {\n  ngDevMode && console.assert(t >= 0 && t <= 1, 'Input must be between 0 and 1 inclusive but received ', t);\n  return t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t;\n}\n\n/**\n * Flattens two-dimensional array and calculates resulting length\n *\n * @param array twi dimensional array\n */\nfunction tuiFlatLength(array) {\n  return array.reduce((count, section) => count + section.length, 0);\n}\n\n/**\n * Extracts original array from {@link QueryList} rather than\n * creating a copy like {@link QueryList.toArray} does.\n * @param queryList\n * @returns original array from {@link QueryList}.\n */\nfunction tuiGetOriginalArrayFromQueryList(queryList) {\n  let array = [];\n  queryList.find((_item, _index, originalArray) => {\n    array = originalArray;\n    return true;\n  });\n  return array;\n}\nfunction tuiIsFalsy(value) {\n  return !value;\n}\nfunction tuiIsNumber(value) {\n  return typeof value === 'number';\n}\nfunction tuiIsObject(value) {\n  return typeof value === 'object' && !!value;\n}\nfunction tuiIsPresent(value) {\n  return value !== null && value !== undefined;\n}\n\n/**\n * @deprecated: drop in v5.0\n */\nfunction tuiIsValidUrl(url) {\n  return new RegExp(String.raw`^([a-zA-Z]+:\\/\\/)?` +\n  // protocol\n  String.raw`((([a-z\\d]([a-z\\d-]*[a-z\\d])*)\\.)+[a-z]{2,}|localhost|` +\n  // domain name\n  String.raw`((\\d{1,3}\\.){3}\\d{1,3}))` +\n  // OR IP (v4) address\n  String.raw`(\\:\\d+)?(\\/[-a-z\\d%_.~+\\:]*)*` +\n  // port and path\n  String.raw`(\\?[)(;&a-z\\d%_.~+=-]*)?` +\n  // query string\n  String.raw`(\\#[-a-z\\d_]*)?$`,\n  // fragment locator\n  'i').test(url);\n}\nfunction tuiMarkControlAsTouchedAndValidate(control) {\n  if (control instanceof FormArray) {\n    control.controls.forEach(nestedControl => {\n      tuiMarkControlAsTouchedAndValidate(nestedControl);\n    });\n  }\n  if (control instanceof FormGroup) {\n    Object.values(control.controls).forEach(nestedControl => {\n      tuiMarkControlAsTouchedAndValidate(nestedControl);\n    });\n  }\n  control.markAsTouched();\n  control.updateValueAndValidity();\n}\n\n/**\n * Checks identity for nullable elements.\n *\n * @param a element a\n * @param b element b\n * @param handler called if both elements are not null\n * @return true if either both are null or they pass identity handler\n */\nfunction tuiNullableSame(a, b, handler) {\n  if (a === null) {\n    return b === null;\n  }\n  if (b === null) {\n    return false;\n  }\n  return handler(a, b);\n}\nfunction tuiProvide(provide, useExisting, multi = false) {\n  return {\n    provide,\n    useExisting,\n    multi\n  };\n}\nfunction tuiProvideOptions(provide, options, fallback) {\n  return {\n    provide,\n    useFactory: () => ({\n      ...(inject(provide, {\n        optional: true,\n        skipSelf: true\n      }) || fallback),\n      ...options\n    })\n  };\n}\n\n/// <reference types=\"@taiga-ui/tsconfig/ng-dev-mode\" />\nfunction decorateMethod(originalMethod) {\n  let previousArgs = [];\n  let originalFnWasCalledLeastAtOnce = false;\n  let pureValue;\n  return function tuiPureMethodPatched(...args) {\n    const isPure = originalFnWasCalledLeastAtOnce && previousArgs.length === args.length && args.every((arg, index) => arg === previousArgs[index]);\n    if (isPure) {\n      return pureValue;\n    }\n    previousArgs = args;\n    pureValue = originalMethod.apply(this, args);\n    originalFnWasCalledLeastAtOnce = true;\n    return pureValue;\n  };\n}\nfunction decorateGetter(originalGetter, propertyKey, enumerable = true) {\n  return function tuiPureGetterPatched() {\n    const value = originalGetter.call(this);\n    Object.defineProperty(this, propertyKey, {\n      enumerable,\n      value\n    });\n    return value;\n  };\n}\nfunction tuiPure(target, propertyKeyOrContext, descriptor) {\n  if (typeof target === 'function') {\n    const context = propertyKeyOrContext;\n    if (context.kind === 'getter') {\n      return decorateGetter(target, context.name);\n    }\n    if (context.kind === 'method') {\n      return decorateMethod(target);\n    }\n    throw new TuiPureException();\n  }\n  const {\n    get,\n    enumerable,\n    value\n  } = descriptor;\n  const propertyKey = propertyKeyOrContext;\n  if (get) {\n    return {\n      configurable: true,\n      enumerable,\n      get: decorateGetter(get, propertyKey, enumerable)\n    };\n  }\n  if (typeof value !== 'function') {\n    throw new TuiPureException();\n  }\n  const original = value;\n  return {\n    configurable: true,\n    enumerable,\n    get() {\n      let previousArgs = [];\n      let originalFnWasCalledLeastAtOnce = false;\n      let pureValue;\n      const patched = (...args) => {\n        const isPure = originalFnWasCalledLeastAtOnce && previousArgs.length === args.length && args.every((arg, index) => arg === previousArgs[index]);\n        if (isPure) {\n          return pureValue;\n        }\n        previousArgs = args;\n        pureValue = original.apply(this, args);\n        originalFnWasCalledLeastAtOnce = true;\n        return pureValue;\n      };\n      Object.defineProperty(this, propertyKey, {\n        configurable: true,\n        value: patched\n      });\n      return patched;\n    }\n  };\n}\nclass TuiPureException extends Error {\n  constructor() {\n    super(ngDevMode ? 'tuiPure can only be used with functions or getters' : '');\n  }\n}\n\n/// <reference types=\"@taiga-ui/tsconfig/ng-dev-mode\" />\n/**\n * Adds 'px' to the number and turns it into a string\n */\nfunction tuiPx(value) {\n  ngDevMode && console.assert(Number.isFinite(value), 'Value must be finite number');\n  return `${value}px`;\n}\nfunction tuiUniqBy(array, key) {\n  return Array.from(array.reduce((map, item) => map.has(item[key]) ? map : map.set(item[key], item), new Map()).values());\n}\nconst MAP = tuiCreateTokenFromFactory(() => {\n  const map = new Map();\n  inject(DestroyRef).onDestroy(() => map.forEach(component => component.destroy()));\n  return map;\n});\nfunction tuiWithStyles(component) {\n  const map = inject(MAP);\n  const environmentInjector = inject(EnvironmentInjector);\n  if (!map.has(component)) {\n    map.set(component, createComponent(component, {\n      environmentInjector\n    }));\n  }\n  return undefined;\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiPureException, changeDateSeparator, tuiArrayRemove, tuiArrayShallowEquals, tuiArrayToggle, tuiCountFilledControls, tuiCreateToken, tuiCreateTokenFromFactory, tuiDefaultSort, tuiDirectiveBinding, tuiDirectiveListener, tuiDistanceBetweenTouches, tuiEaseInOutQuad, tuiFlatLength, tuiGetOriginalArrayFromQueryList, tuiIsControlEmpty, tuiIsFalsy, tuiIsNumber, tuiIsObject, tuiIsPresent, tuiIsString, tuiIsValidUrl, tuiMarkControlAsTouchedAndValidate, tuiNullableSame, tuiProvide, tuiProvideOptions, tuiPure, tuiPx, tuiUniqBy, tuiWithStyles };","map":{"version":3,"names":["FormArray","FormGroup","tuiToInt","InjectionToken","isSignal","signal","inject","effect","DestroyRef","EnvironmentInjector","createComponent","toSignal","tuiArrayRemove","array","index","slice","Math","max","concat","tuiArrayShallowEquals","a","b","length","every","item","tuiArrayToggle","indexOf","changeDateSeparator","dateString","newDateSeparator","replaceAll","tuiIsControlEmpty","value","Array","isArray","tuiCountFilledControls","control","controls","reduce","acc","nestedControl","Object","values","tuiCreateToken","defaults","tuiCreateTokenFromFactory","factory","tuiIsString","tuiDefaultSort","x","y","localeCompare","tuiDirectiveBinding","token","key","initial","options","self","result","directive","output","toString","previous","set","ngOnChanges","emit","allowSignalWrites","tuiDirectiveListener","prop","tuiDistanceBetweenTouches","touches","hypot","clientX","clientY","tuiEaseInOutQuad","t","ngDevMode","console","assert","tuiFlatLength","count","section","tuiGetOriginalArrayFromQueryList","queryList","find","_item","_index","originalArray","tuiIsFalsy","tuiIsNumber","tuiIsObject","tuiIsPresent","undefined","tuiIsValidUrl","url","RegExp","String","raw","test","tuiMarkControlAsTouchedAndValidate","forEach","markAsTouched","updateValueAndValidity","tuiNullableSame","handler","tuiProvide","provide","useExisting","multi","tuiProvideOptions","fallback","useFactory","optional","skipSelf","decorateMethod","originalMethod","previousArgs","originalFnWasCalledLeastAtOnce","pureValue","tuiPureMethodPatched","args","isPure","arg","apply","decorateGetter","originalGetter","propertyKey","enumerable","tuiPureGetterPatched","call","defineProperty","tuiPure","target","propertyKeyOrContext","descriptor","context","kind","name","TuiPureException","get","configurable","original","patched","Error","constructor","tuiPx","Number","isFinite","tuiUniqBy","from","map","has","Map","MAP","onDestroy","component","destroy","tuiWithStyles","environmentInjector"],"sources":["C:/Users/Asus-PC/Downloads/WebLibraryNew/WebLibrary/WebLibraryApp/Frontend/node_modules/@taiga-ui/cdk/fesm2022/taiga-ui-cdk-utils-miscellaneous.mjs"],"sourcesContent":["import { FormArray, FormGroup } from '@angular/forms';\nimport { tuiToInt } from '@taiga-ui/cdk/utils/math';\nimport { InjectionToken, isSignal, signal, inject, effect, DestroyRef, EnvironmentInjector, createComponent } from '@angular/core';\nimport { toSignal } from '@angular/core/rxjs-interop';\n\nfunction tuiArrayRemove(array, index) {\n    return array.slice(0, Math.max(index, 0)).concat(array.slice(Math.max(index + 1, 0)));\n}\n\nfunction tuiArrayShallowEquals(a, b) {\n    return a.length === b.length && a.every((item, index) => item === b[index]);\n}\n\nfunction tuiArrayToggle(array, item) {\n    const index = array.indexOf(item);\n    return index === -1 ? [...array, item] : tuiArrayRemove(array, index);\n}\n\n/* internal */\nconst changeDateSeparator = (dateString, newDateSeparator) => dateString.replaceAll(/[^0-9A-Za-zА-Яа-я]/gi, newDateSeparator);\n\nfunction tuiIsControlEmpty({ value = null }) {\n    return value === null || value === '' || (Array.isArray(value) && !value.length);\n}\n\nfunction tuiCountFilledControls(control) {\n    if (control instanceof FormArray) {\n        return control.controls.reduce((acc, nestedControl) => acc + tuiCountFilledControls(nestedControl), 0);\n    }\n    if (control instanceof FormGroup) {\n        return Object.values(control.controls).reduce((acc, nestedControl) => acc + tuiCountFilledControls(nestedControl), 0);\n    }\n    return tuiToInt(!tuiIsControlEmpty(control));\n}\n\nfunction tuiCreateToken(defaults) {\n    return tuiCreateTokenFromFactory(() => defaults);\n}\nfunction tuiCreateTokenFromFactory(factory) {\n    return factory ? new InjectionToken('', { factory }) : new InjectionToken('');\n}\n\nfunction tuiIsString(value) {\n    return typeof value === 'string';\n}\n\nfunction tuiDefaultSort(x, y) {\n    if (x === y) {\n        return 0;\n    }\n    if (tuiIsString(x) && tuiIsString(y)) {\n        return x.localeCompare(y);\n    }\n    return x > y ? 1 : -1;\n}\n\nfunction tuiDirectiveBinding(token, key, initial, options = { self: true }) {\n    const result = isSignal(initial) ? initial : signal(initial);\n    const directive = inject(token, options);\n    const output = directive[`${key.toString()}Change`];\n    // TODO: Figure out why effects are executed all the time and not just when result changes (check with Angular 18)\n    let previous;\n    effect(() => {\n        const value = result();\n        if (previous === value) {\n            return;\n        }\n        if (isSignal(directive[key])) {\n            directive[key].set(value);\n        }\n        else {\n            directive[key] = value;\n        }\n        directive.ngOnChanges?.({});\n        output?.emit?.(value);\n        previous = value;\n    }, { allowSignalWrites: true });\n    return result;\n}\n\nfunction tuiDirectiveListener(token, key, options = { self: true }) {\n    const prop = inject(token, options)?.[key];\n    return isSignal(prop) ? prop : toSignal(prop);\n}\n\nfunction tuiDistanceBetweenTouches({ touches }) {\n    return Math.hypot((touches[0]?.clientX ?? 0) - (touches[1]?.clientX ?? 0), (touches[0]?.clientY ?? 0) - (touches[1]?.clientY ?? 0));\n}\n\n/// <reference types=\"@taiga-ui/tsconfig/ng-dev-mode\" />\nfunction tuiEaseInOutQuad(t) {\n    ngDevMode &&\n        console.assert(t >= 0 && t <= 1, 'Input must be between 0 and 1 inclusive but received ', t);\n    return t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t;\n}\n\n/**\n * Flattens two-dimensional array and calculates resulting length\n *\n * @param array twi dimensional array\n */\nfunction tuiFlatLength(array) {\n    return array.reduce((count, section) => count + section.length, 0);\n}\n\n/**\n * Extracts original array from {@link QueryList} rather than\n * creating a copy like {@link QueryList.toArray} does.\n * @param queryList\n * @returns original array from {@link QueryList}.\n */\nfunction tuiGetOriginalArrayFromQueryList(queryList) {\n    let array = [];\n    queryList.find((_item, _index, originalArray) => {\n        array = originalArray;\n        return true;\n    });\n    return array;\n}\n\nfunction tuiIsFalsy(value) {\n    return !value;\n}\n\nfunction tuiIsNumber(value) {\n    return typeof value === 'number';\n}\n\nfunction tuiIsObject(value) {\n    return typeof value === 'object' && !!value;\n}\n\nfunction tuiIsPresent(value) {\n    return value !== null && value !== undefined;\n}\n\n/**\n * @deprecated: drop in v5.0\n */\nfunction tuiIsValidUrl(url) {\n    return new RegExp(String.raw `^([a-zA-Z]+:\\/\\/)?` + // protocol\n        String.raw `((([a-z\\d]([a-z\\d-]*[a-z\\d])*)\\.)+[a-z]{2,}|localhost|` + // domain name\n        String.raw `((\\d{1,3}\\.){3}\\d{1,3}))` + // OR IP (v4) address\n        String.raw `(\\:\\d+)?(\\/[-a-z\\d%_.~+\\:]*)*` + // port and path\n        String.raw `(\\?[)(;&a-z\\d%_.~+=-]*)?` + // query string\n        String.raw `(\\#[-a-z\\d_]*)?$`, // fragment locator\n    'i').test(url);\n}\n\nfunction tuiMarkControlAsTouchedAndValidate(control) {\n    if (control instanceof FormArray) {\n        control.controls.forEach((nestedControl) => {\n            tuiMarkControlAsTouchedAndValidate(nestedControl);\n        });\n    }\n    if (control instanceof FormGroup) {\n        Object.values(control.controls).forEach((nestedControl) => {\n            tuiMarkControlAsTouchedAndValidate(nestedControl);\n        });\n    }\n    control.markAsTouched();\n    control.updateValueAndValidity();\n}\n\n/**\n * Checks identity for nullable elements.\n *\n * @param a element a\n * @param b element b\n * @param handler called if both elements are not null\n * @return true if either both are null or they pass identity handler\n */\nfunction tuiNullableSame(a, b, handler) {\n    if (a === null) {\n        return b === null;\n    }\n    if (b === null) {\n        return false;\n    }\n    return handler(a, b);\n}\n\nfunction tuiProvide(provide, useExisting, multi = false) {\n    return { provide, useExisting, multi };\n}\n\nfunction tuiProvideOptions(provide, options, fallback) {\n    return {\n        provide,\n        useFactory: () => ({\n            ...(inject(provide, { optional: true, skipSelf: true }) || fallback),\n            ...options,\n        }),\n    };\n}\n\n/// <reference types=\"@taiga-ui/tsconfig/ng-dev-mode\" />\nfunction decorateMethod(originalMethod) {\n    let previousArgs = [];\n    let originalFnWasCalledLeastAtOnce = false;\n    let pureValue;\n    return function tuiPureMethodPatched(...args) {\n        const isPure = originalFnWasCalledLeastAtOnce &&\n            previousArgs.length === args.length &&\n            args.every((arg, index) => arg === previousArgs[index]);\n        if (isPure) {\n            return pureValue;\n        }\n        previousArgs = args;\n        pureValue = originalMethod.apply(this, args);\n        originalFnWasCalledLeastAtOnce = true;\n        return pureValue;\n    };\n}\nfunction decorateGetter(originalGetter, propertyKey, enumerable = true) {\n    return function tuiPureGetterPatched() {\n        const value = originalGetter.call(this);\n        Object.defineProperty(this, propertyKey, { enumerable, value });\n        return value;\n    };\n}\nfunction tuiPure(target, propertyKeyOrContext, descriptor) {\n    if (typeof target === 'function') {\n        const context = propertyKeyOrContext;\n        if (context.kind === 'getter') {\n            return decorateGetter(target, context.name);\n        }\n        if (context.kind === 'method') {\n            return decorateMethod(target);\n        }\n        throw new TuiPureException();\n    }\n    const { get, enumerable, value } = descriptor;\n    const propertyKey = propertyKeyOrContext;\n    if (get) {\n        return {\n            configurable: true,\n            enumerable,\n            get: decorateGetter(get, propertyKey, enumerable),\n        };\n    }\n    if (typeof value !== 'function') {\n        throw new TuiPureException();\n    }\n    const original = value;\n    return {\n        configurable: true,\n        enumerable,\n        get() {\n            let previousArgs = [];\n            let originalFnWasCalledLeastAtOnce = false;\n            let pureValue;\n            const patched = (...args) => {\n                const isPure = originalFnWasCalledLeastAtOnce &&\n                    previousArgs.length === args.length &&\n                    args.every((arg, index) => arg === previousArgs[index]);\n                if (isPure) {\n                    return pureValue;\n                }\n                previousArgs = args;\n                pureValue = original.apply(this, args);\n                originalFnWasCalledLeastAtOnce = true;\n                return pureValue;\n            };\n            Object.defineProperty(this, propertyKey, {\n                configurable: true,\n                value: patched,\n            });\n            return patched;\n        },\n    };\n}\nclass TuiPureException extends Error {\n    constructor() {\n        super(ngDevMode ? 'tuiPure can only be used with functions or getters' : '');\n    }\n}\n\n/// <reference types=\"@taiga-ui/tsconfig/ng-dev-mode\" />\n/**\n * Adds 'px' to the number and turns it into a string\n */\nfunction tuiPx(value) {\n    ngDevMode && console.assert(Number.isFinite(value), 'Value must be finite number');\n    return `${value}px`;\n}\n\nfunction tuiUniqBy(array, key) {\n    return Array.from(array\n        .reduce((map, item) => (map.has(item[key]) ? map : map.set(item[key], item)), new Map())\n        .values());\n}\n\nconst MAP = tuiCreateTokenFromFactory(() => {\n    const map = new Map();\n    inject(DestroyRef).onDestroy(() => map.forEach((component) => component.destroy()));\n    return map;\n});\nfunction tuiWithStyles(component) {\n    const map = inject(MAP);\n    const environmentInjector = inject(EnvironmentInjector);\n    if (!map.has(component)) {\n        map.set(component, createComponent(component, { environmentInjector }));\n    }\n    return undefined;\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiPureException, changeDateSeparator, tuiArrayRemove, tuiArrayShallowEquals, tuiArrayToggle, tuiCountFilledControls, tuiCreateToken, tuiCreateTokenFromFactory, tuiDefaultSort, tuiDirectiveBinding, tuiDirectiveListener, tuiDistanceBetweenTouches, tuiEaseInOutQuad, tuiFlatLength, tuiGetOriginalArrayFromQueryList, tuiIsControlEmpty, tuiIsFalsy, tuiIsNumber, tuiIsObject, tuiIsPresent, tuiIsString, tuiIsValidUrl, tuiMarkControlAsTouchedAndValidate, tuiNullableSame, tuiProvide, tuiProvideOptions, tuiPure, tuiPx, tuiUniqBy, tuiWithStyles };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}