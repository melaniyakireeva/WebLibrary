{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Asus-PC/Downloads/WebLibraryNew/WebLibrary/WebLibraryApp/Frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from '@angular/core';\nimport { Injectable } from '@angular/core';\nimport { switchMap, shareReplay } from 'rxjs';\nimport { fromFetch } from 'rxjs/fetch';\n\n/**\n * @deprecated: drop in v5.0\n */\nclass TuiStaticRequestService {\n  constructor() {\n    this.cache = new Map();\n  }\n  request(url) {\n    const cache = this.cache.get(url);\n    if (cache) {\n      return cache;\n    }\n    const piped = fromFetch(url).pipe(switchMap( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (response) {\n        if (response.ok) {\n          return response.text();\n        }\n        throw new Error(`Failed to load ${url} (${response.statusText})`);\n      });\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()), shareReplay({\n      bufferSize: 1,\n      refCount: false\n    }));\n    this.cache.set(url, piped);\n    return piped;\n  }\n  static {\n    this.ɵfac = function TuiStaticRequestService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiStaticRequestService)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: TuiStaticRequestService,\n      factory: TuiStaticRequestService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiStaticRequestService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiStaticRequestService };","map":{"version":3,"names":["i0","Injectable","switchMap","shareReplay","fromFetch","TuiStaticRequestService","constructor","cache","Map","request","url","get","piped","pipe","_ref","_asyncToGenerator","response","ok","text","Error","statusText","_x","apply","arguments","bufferSize","refCount","set","ɵfac","TuiStaticRequestService_Factory","__ngFactoryType__","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","ngDevMode","ɵsetClassMetadata","type","args"],"sources":["C:/Users/Asus-PC/Downloads/WebLibraryNew/WebLibrary/WebLibraryApp/Frontend/node_modules/@taiga-ui/legacy/fesm2022/taiga-ui-legacy-services.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable } from '@angular/core';\nimport { switchMap, shareReplay } from 'rxjs';\nimport { fromFetch } from 'rxjs/fetch';\n\n/**\n * @deprecated: drop in v5.0\n */\nclass TuiStaticRequestService {\n    constructor() {\n        this.cache = new Map();\n    }\n    request(url) {\n        const cache = this.cache.get(url);\n        if (cache) {\n            return cache;\n        }\n        const piped = fromFetch(url).pipe(switchMap(async (response) => {\n            if (response.ok) {\n                return response.text();\n            }\n            throw new Error(`Failed to load ${url} (${response.statusText})`);\n        }), shareReplay({ bufferSize: 1, refCount: false }));\n        this.cache.set(url, piped);\n        return piped;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiStaticRequestService, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiStaticRequestService, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiStaticRequestService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiStaticRequestService };\n"],"mappings":";AAAA,OAAO,KAAKA,EAAE,MAAM,eAAe;AACnC,SAASC,UAAU,QAAQ,eAAe;AAC1C,SAASC,SAAS,EAAEC,WAAW,QAAQ,MAAM;AAC7C,SAASC,SAAS,QAAQ,YAAY;;AAEtC;AACA;AACA;AACA,MAAMC,uBAAuB,CAAC;EAC1BC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,KAAK,GAAG,IAAIC,GAAG,CAAC,CAAC;EAC1B;EACAC,OAAOA,CAACC,GAAG,EAAE;IACT,MAAMH,KAAK,GAAG,IAAI,CAACA,KAAK,CAACI,GAAG,CAACD,GAAG,CAAC;IACjC,IAAIH,KAAK,EAAE;MACP,OAAOA,KAAK;IAChB;IACA,MAAMK,KAAK,GAAGR,SAAS,CAACM,GAAG,CAAC,CAACG,IAAI,CAACX,SAAS;MAAA,IAAAY,IAAA,GAAAC,iBAAA,CAAC,WAAOC,QAAQ,EAAK;QAC5D,IAAIA,QAAQ,CAACC,EAAE,EAAE;UACb,OAAOD,QAAQ,CAACE,IAAI,CAAC,CAAC;QAC1B;QACA,MAAM,IAAIC,KAAK,CAAC,kBAAkBT,GAAG,KAAKM,QAAQ,CAACI,UAAU,GAAG,CAAC;MACrE,CAAC;MAAA,iBAAAC,EAAA;QAAA,OAAAP,IAAA,CAAAQ,KAAA,OAAAC,SAAA;MAAA;IAAA,IAAC,EAAEpB,WAAW,CAAC;MAAEqB,UAAU,EAAE,CAAC;MAAEC,QAAQ,EAAE;IAAM,CAAC,CAAC,CAAC;IACpD,IAAI,CAAClB,KAAK,CAACmB,GAAG,CAAChB,GAAG,EAAEE,KAAK,CAAC;IAC1B,OAAOA,KAAK;EAChB;EACA;IAAS,IAAI,CAACe,IAAI,YAAAC,gCAAAC,iBAAA;MAAA,YAAAA,iBAAA,IAAyFxB,uBAAuB;IAAA,CAAoD;EAAE;EACxL;IAAS,IAAI,CAACyB,KAAK,kBAD8E9B,EAAE,CAAA+B,kBAAA;MAAAC,KAAA,EACY3B,uBAAuB;MAAA4B,OAAA,EAAvB5B,uBAAuB,CAAAsB,IAAA;MAAAO,UAAA,EAAc;IAAM,EAAG;EAAE;AACnK;AACA;EAAA,QAAAC,SAAA,oBAAAA,SAAA,KAHqGnC,EAAE,CAAAoC,iBAAA,CAGX/B,uBAAuB,EAAc,CAAC;IACtHgC,IAAI,EAAEpC,UAAU;IAChBqC,IAAI,EAAE,CAAC;MACCJ,UAAU,EAAE;IAChB,CAAC;EACT,CAAC,CAAC;AAAA;;AAEV;AACA;AACA;;AAEA,SAAS7B,uBAAuB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}