{"ast":null,"code":"import { tuiToRadians, tuiToInt } from '@taiga-ui/cdk/utils/math';\nfunction tuiLineAngle(a, b) {\n  const x = b[0] - a[0];\n  const y = b[1] - a[1];\n  return Math.atan2(y, x);\n}\nfunction tuiLineLength(a, b) {\n  const x = b[0] - a[0];\n  const y = b[1] - a[1];\n  return Math.sqrt(x ** 2 + y ** 2);\n}\nfunction tuiControlPoint(current, previous, next, reverse = false, smoothing = 0.2) {\n  const fallback = current || [0, 0];\n  const p = previous || current || [0, 0];\n  const n = next || current || [0, 0];\n  const angle = tuiLineAngle(p, n) + (reverse ? Math.PI : 0);\n  const length = tuiLineLength(p, n) * smoothing;\n  const x = fallback[0] + Math.cos(angle) * length;\n  const y = fallback[1] + Math.sin(angle) * length;\n  return [x, y];\n}\nconst EMPTY = 'M 100 0 A 100 100 0 1 1 100 0 L 0 0';\n/**\n * Describes a normalized sector by angles. Normalized meaning it supposed to work with\n * SVG with viewBox=\"-1 -1 2 2\" so that 0 coordinates in cartesian and polar match the same spot.\n * Everything is multiplied by 100 (including viewBox of SVG to host this) so IE properly\n * handles hover events.\n *\n * @param startAngle starting angle in degrees\n * @param endAngle ending angle in degrees\n */\nfunction tuiDescribeSector(startAngle = 0, endAngle = 0) {\n  const startRad = tuiToRadians(startAngle);\n  const endRad = tuiToRadians(endAngle);\n  const startX = Math.cos(startRad) * 100;\n  const startY = Math.sin(startRad) * 100;\n  const endX = Math.cos(endRad) * 100;\n  const endY = Math.sin(endRad) * 100;\n  const largeArcFlag = tuiToInt(endAngle - startAngle > 180);\n  const result = ['M', startX, startY, 'A 100 100 0', largeArcFlag, 1, endX, endY, 'L 0 0'];\n  return Number.isNaN(endX) ? EMPTY : result.join(' ');\n}\nfunction tuiDrawCurve(array, index, smoothing) {\n  const [cpsX, cpsY] = tuiControlPoint(array[index - 1], array[index - 2], array[index], false, smoothing);\n  const [cpeX, cpeY] = tuiControlPoint(array[index], array[index - 1], array[index + 1], true, smoothing);\n  const point = array[index] ?? [0, 0];\n  return `C ${cpsX},${cpsY} ${cpeX},${cpeY} ${point[0]},${point[1]}`;\n}\nfunction tuiDrawLine(point) {\n  return `L ${point}`;\n}\nconst COEFFICIENT = 500;\nfunction tuiDraw(array, index, smoothing) {\n  const point = [...(array[index] ?? [0, 0])];\n  return smoothing ? tuiDrawCurve(array, index, smoothing / COEFFICIENT) : tuiDrawLine([point[0], point[1]]);\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { tuiControlPoint, tuiDescribeSector, tuiDraw, tuiDrawCurve, tuiDrawLine, tuiLineAngle, tuiLineLength };","map":{"version":3,"names":["tuiToRadians","tuiToInt","tuiLineAngle","a","b","x","y","Math","atan2","tuiLineLength","sqrt","tuiControlPoint","current","previous","next","reverse","smoothing","fallback","p","n","angle","PI","length","cos","sin","EMPTY","tuiDescribeSector","startAngle","endAngle","startRad","endRad","startX","startY","endX","endY","largeArcFlag","result","Number","isNaN","join","tuiDrawCurve","array","index","cpsX","cpsY","cpeX","cpeY","point","tuiDrawLine","COEFFICIENT","tuiDraw"],"sources":["C:/Users/Asus-PC/Downloads/WebLibraryNew/WebLibrary/WebLibraryApp/Frontend/node_modules/@taiga-ui/addon-charts/fesm2022/taiga-ui-addon-charts-utils.mjs"],"sourcesContent":["import { tuiToRadians, tuiToInt } from '@taiga-ui/cdk/utils/math';\n\nfunction tuiLineAngle(a, b) {\n    const x = b[0] - a[0];\n    const y = b[1] - a[1];\n    return Math.atan2(y, x);\n}\n\nfunction tuiLineLength(a, b) {\n    const x = b[0] - a[0];\n    const y = b[1] - a[1];\n    return Math.sqrt(x ** 2 + y ** 2);\n}\n\nfunction tuiControlPoint(current, previous, next, reverse = false, smoothing = 0.2) {\n    const fallback = current || [0, 0];\n    const p = previous || current || [0, 0];\n    const n = next || current || [0, 0];\n    const angle = tuiLineAngle(p, n) + (reverse ? Math.PI : 0);\n    const length = tuiLineLength(p, n) * smoothing;\n    const x = fallback[0] + Math.cos(angle) * length;\n    const y = fallback[1] + Math.sin(angle) * length;\n    return [x, y];\n}\n\nconst EMPTY = 'M 100 0 A 100 100 0 1 1 100 0 L 0 0';\n/**\n * Describes a normalized sector by angles. Normalized meaning it supposed to work with\n * SVG with viewBox=\"-1 -1 2 2\" so that 0 coordinates in cartesian and polar match the same spot.\n * Everything is multiplied by 100 (including viewBox of SVG to host this) so IE properly\n * handles hover events.\n *\n * @param startAngle starting angle in degrees\n * @param endAngle ending angle in degrees\n */\nfunction tuiDescribeSector(startAngle = 0, endAngle = 0) {\n    const startRad = tuiToRadians(startAngle);\n    const endRad = tuiToRadians(endAngle);\n    const startX = Math.cos(startRad) * 100;\n    const startY = Math.sin(startRad) * 100;\n    const endX = Math.cos(endRad) * 100;\n    const endY = Math.sin(endRad) * 100;\n    const largeArcFlag = tuiToInt(endAngle - startAngle > 180);\n    const result = [\n        'M',\n        startX,\n        startY,\n        'A 100 100 0',\n        largeArcFlag,\n        1,\n        endX,\n        endY,\n        'L 0 0',\n    ];\n    return Number.isNaN(endX) ? EMPTY : result.join(' ');\n}\n\nfunction tuiDrawCurve(array, index, smoothing) {\n    const [cpsX, cpsY] = tuiControlPoint(array[index - 1], array[index - 2], array[index], false, smoothing);\n    const [cpeX, cpeY] = tuiControlPoint(array[index], array[index - 1], array[index + 1], true, smoothing);\n    const point = array[index] ?? [0, 0];\n    return `C ${cpsX},${cpsY} ${cpeX},${cpeY} ${point[0]},${point[1]}`;\n}\n\nfunction tuiDrawLine(point) {\n    return `L ${point}`;\n}\n\nconst COEFFICIENT = 500;\nfunction tuiDraw(array, index, smoothing) {\n    const point = [...(array[index] ?? [0, 0])];\n    return smoothing\n        ? tuiDrawCurve(array, index, smoothing / COEFFICIENT)\n        : tuiDrawLine([point[0], point[1]]);\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { tuiControlPoint, tuiDescribeSector, tuiDraw, tuiDrawCurve, tuiDrawLine, tuiLineAngle, tuiLineLength };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}