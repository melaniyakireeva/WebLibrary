{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./file-page.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./file-page.component.scss?ngResource\";\nimport { AsyncPipe, KeyValuePipe, NgForOf, NgIf } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TuiReorder, TuiTable } from '@taiga-ui/addon-table';\nimport { TuiLet, TuiPlatform } from '@taiga-ui/cdk';\nimport { TuiAppearance, TuiAutoColorPipe, TuiButton, TuiDropdown, TuiIcon, TuiInitialsPipe, TuiLink, TuiLoader, TuiRoot, TuiScrollbar, TuiTextfield, TuiTitle } from '@taiga-ui/core';\nimport { TuiAvatar, TuiBadge, TuiCheckbox, TuiChevron, TuiChip, TuiDataListWrapper, TuiItemsWithMore, TuiPagination, TuiProgressBar, TuiRadioList, TuiStatus, TuiTooltip } from '@taiga-ui/kit';\nimport { TuiCardLarge, TuiCell, TuiHeader } from '@taiga-ui/layout';\nimport { TuiSelectModule } from '@taiga-ui/legacy';\nimport { map, tap } from 'rxjs';\nimport { FilesUploaderService } from '../../services/files/files-uploader.service';\nimport _ from 'lodash';\nimport { TuiRingChart } from '@taiga-ui/addon-charts';\nimport byteSize from 'byte-size';\nimport { FileWorkerService } from '../../services/fileworker/file-worker.service';\nlet FilePageComponent = class FilePageComponent {\n  fileService;\n  fileWorker;\n  ITEMS_PER_PAGE_LIST = [5, 10, 20];\n  item_per_page = 20;\n  indexVal = 0;\n  length = 0;\n  constructor(fileService, fileWorker) {\n    this.fileService = fileService;\n    this.fileWorker = fileWorker;\n  }\n  sizeOnServer = 10000000;\n  fileCategories = undefined;\n  filledSpace = 0;\n  byteSizeConverter = byteSize;\n  value = [0, 1];\n  index = NaN;\n  get label() {\n    const value = Number.isNaN(this.index) ? this.sizeOnServer : this.value[this.index];\n    const obj = byteSize(value);\n    const resStr = obj.toString();\n    if (this.index === 0) {\n      return `Занято ${resStr}`;\n    } else if (this.index === 1) {\n      return `Не занято ${resStr}`;\n    } else {\n      return `Всего ${resStr}`;\n    }\n  }\n  loadFile(id) {\n    this.fileService.getFile(id).pipe(tap(file => {\n      var a = document.createElement('a');\n      const mimeType = this.fileWorker.getFileMimeType(file.fileName);\n      a.href = `data:${mimeType};base64,` + file.fileData;\n      a.download = file.fileName;\n      a.click();\n      a.remove();\n    })).subscribe(x => {});\n  }\n  ngOnInit() {\n    this.fileService.getAllFiles().pipe(tap(files => {\n      this.filledSpace = _.sumBy(files, x => x.size);\n      this.value = [this.filledSpace, this.sizeOnServer - this.filledSpace];\n      this.fileCategories = _.groupBy(files, x => this.fileWorker.getFileMimeType(x.fileName));\n    })).subscribe(x => {});\n    this.updateFilterParams();\n  }\n  updateFilterParams() {\n    let filter = {\n      paging: null,\n      scopeParams: null,\n      sortInfo: null,\n      filterOperations: null\n    };\n    filter.paging = {\n      pageIndex: this.indexVal,\n      itemsPerPage: this.item_per_page\n    };\n    this.isLoading = true;\n    this.currentData$ = this.fileService.getFilesByFilter(filter).pipe(map(x => {\n      this.isLoading = false;\n      this.length = Math.ceil(x.totalCount / this.item_per_page);\n      if (this.length > 0) {\n        this.indexVal = Math.min(this.indexVal, this.length - 1);\n      } else {\n        this.indexVal = 0;\n      }\n      return x.items;\n    }));\n  }\n  onPageAmountChanged() {\n    this.indexVal = 0;\n    this.updateFilterParams();\n  }\n  goToPage(index) {\n    this.indexVal = index;\n    this.updateFilterParams();\n  }\n  currentData$;\n  isLoading = false;\n  static ctorParameters = () => [{\n    type: FilesUploaderService\n  }, {\n    type: FileWorkerService\n  }];\n};\nFilePageComponent = __decorate([Component({\n  selector: 'app-file-page',\n  standalone: true,\n  imports: [TuiAppearance, TuiAvatar, TuiButton, TuiCardLarge, TuiHeader, TuiPlatform, TuiTitle, FormsModule, NgForOf, NgIf, AsyncPipe, TuiAutoColorPipe, TuiBadge, TuiLoader, TuiCell, TuiCheckbox, TuiChip, TuiSelectModule, TuiDataListWrapper, TuiRoot, ReactiveFormsModule, TuiScrollbar, TuiLet, TuiAutoColorPipe, KeyValuePipe, TuiInitialsPipe, TuiTextfield, TuiTooltip, TuiDropdown, TuiReorder, TuiChevron, TuiIcon, TuiItemsWithMore, TuiLink, TuiProgressBar, TuiRadioList, TuiStatus, TuiTable, TuiPagination, TuiRingChart],\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], FilePageComponent);\nexport { FilePageComponent };","map":{"version":3,"names":["AsyncPipe","KeyValuePipe","NgForOf","NgIf","Component","FormsModule","ReactiveFormsModule","TuiReorder","TuiTable","TuiLet","TuiPlatform","TuiAppearance","TuiAutoColorPipe","TuiButton","TuiDropdown","TuiIcon","TuiInitialsPipe","TuiLink","TuiLoader","TuiRoot","TuiScrollbar","TuiTextfield","TuiTitle","TuiAvatar","TuiBadge","TuiCheckbox","TuiChevron","TuiChip","TuiDataListWrapper","TuiItemsWithMore","TuiPagination","TuiProgressBar","TuiRadioList","TuiStatus","TuiTooltip","TuiCardLarge","TuiCell","TuiHeader","TuiSelectModule","map","tap","FilesUploaderService","_","TuiRingChart","byteSize","FileWorkerService","FilePageComponent","fileService","fileWorker","ITEMS_PER_PAGE_LIST","item_per_page","indexVal","length","constructor","sizeOnServer","fileCategories","undefined","filledSpace","byteSizeConverter","value","index","NaN","label","Number","isNaN","obj","resStr","toString","loadFile","id","getFile","pipe","file","a","document","createElement","mimeType","getFileMimeType","fileName","href","fileData","download","click","remove","subscribe","x","ngOnInit","getAllFiles","files","sumBy","size","groupBy","updateFilterParams","filter","paging","scopeParams","sortInfo","filterOperations","pageIndex","itemsPerPage","isLoading","currentData$","getFilesByFilter","Math","ceil","totalCount","min","items","onPageAmountChanged","goToPage","__decorate","selector","standalone","imports","template","__NG_CLI_RESOURCE__0"],"sources":["C:\\Users\\Asus-PC\\Downloads\\WebLibraryNew\\WebLibrary\\WebLibraryApp\\Frontend\\src\\app\\components\\file-page\\file-page.component.ts"],"sourcesContent":["import { AsyncPipe, KeyValuePipe, NgForOf, NgIf } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { TuiReorder, TuiTable } from '@taiga-ui/addon-table';\r\nimport { TuiLet, TuiPlatform } from '@taiga-ui/cdk';\r\nimport {\r\n  TuiAppearance,\r\n  TuiAutoColorPipe,\r\n  TuiButton,\r\n  TuiDropdown,\r\n  TuiIcon,\r\n  TuiInitialsPipe,\r\n  TuiLink,\r\n  TuiLoader,\r\n  TuiRoot,\r\n  TuiScrollbar,\r\n  TuiTextfield,\r\n  TuiTitle,\r\n} from '@taiga-ui/core';\r\nimport {\r\n  TuiAvatar,\r\n  TuiBadge,\r\n  TuiCheckbox,\r\n  TuiChevron,\r\n  TuiChip,\r\n  TuiDataListWrapper,\r\n  TuiItemsWithMore,\r\n  TuiPagination,\r\n  TuiProgressBar,\r\n  TuiRadioList,\r\n  TuiStatus,\r\n  TuiTooltip,\r\n} from '@taiga-ui/kit';\r\nimport { TuiCardLarge, TuiCell, TuiHeader } from '@taiga-ui/layout';\r\nimport { TuiSelectModule } from '@taiga-ui/legacy';\r\nimport { map, Observable, tap } from 'rxjs';\r\nimport {\r\n  FileModel,\r\n  FilesUploaderService,\r\n} from '../../services/files/files-uploader.service';\r\nimport _ from 'lodash';\r\nimport { TuiRingChart } from '@taiga-ui/addon-charts';\r\nimport byteSize from 'byte-size';\r\nimport { FileWorkerService } from '../../services/fileworker/file-worker.service';\r\nimport { BaseFilter, Paging } from '../../services/filters/filters';\r\n\r\ninterface Dictionary<T> {\r\n  [key: string]: T;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-file-page',\r\n  standalone: true,\r\n  imports: [\r\n    TuiAppearance,\r\n    TuiAvatar,\r\n    TuiButton,\r\n    TuiCardLarge,\r\n    TuiHeader,\r\n    TuiPlatform,\r\n    TuiTitle,\r\n    FormsModule,\r\n    NgForOf,\r\n    NgIf,\r\n    AsyncPipe,\r\n    TuiAutoColorPipe,\r\n    TuiBadge,\r\n    TuiLoader,\r\n    TuiCell,\r\n    TuiCheckbox,\r\n    TuiChip,\r\n    TuiSelectModule,\r\n    TuiDataListWrapper,\r\n    TuiRoot,\r\n    ReactiveFormsModule,\r\n    TuiScrollbar,\r\n    TuiLet,\r\n    TuiAutoColorPipe,\r\n    KeyValuePipe,\r\n    TuiInitialsPipe,\r\n    TuiTextfield,\r\n    TuiTooltip,\r\n    TuiDropdown,\r\n    TuiReorder,\r\n    TuiChevron,\r\n    TuiIcon,\r\n    TuiItemsWithMore,\r\n    TuiLink,\r\n    TuiProgressBar,\r\n    TuiRadioList,\r\n    TuiStatus,\r\n    TuiTable,\r\n    TuiPagination,\r\n    TuiRingChart,\r\n  ],\r\n  templateUrl: './file-page.component.html',\r\n  styleUrl: './file-page.component.scss',\r\n})\r\nexport class FilePageComponent implements OnInit {\r\n  readonly ITEMS_PER_PAGE_LIST: number[] = [5, 10, 20];\r\n  item_per_page: number = 20;\r\n  indexVal: number = 0;\r\n  length: number = 0;\r\n\r\n  constructor(\r\n    private fileService: FilesUploaderService,\r\n    private fileWorker: FileWorkerService\r\n  ) {}\r\n\r\n  readonly sizeOnServer: number = 10000000;\r\n\r\n  fileCategories?: Dictionary<FileModel[]> = undefined;\r\n  filledSpace: number = 0;\r\n\r\n  byteSizeConverter: any = byteSize;\r\n\r\n  protected value = [0, 1];\r\n\r\n  protected index = NaN;\r\n\r\n  protected get label(): string {\r\n    const value = Number.isNaN(this.index)\r\n      ? this.sizeOnServer\r\n      : this.value[this.index];\r\n    const obj = byteSize(value);\r\n    const resStr = obj.toString();\r\n    if (this.index === 0) {\r\n      return `Занято ${resStr}`;\r\n    } else if (this.index === 1) {\r\n      return `Не занято ${resStr}`;\r\n    } else {\r\n      return `Всего ${resStr}`;\r\n    }\r\n  }\r\n\r\n  loadFile(id: number) {\r\n    this.fileService\r\n      .getFile(id)\r\n      .pipe(\r\n        tap((file) => {\r\n          var a = document.createElement('a');\r\n          const mimeType = this.fileWorker.getFileMimeType(file.fileName);\r\n          a.href = `data:${mimeType};base64,` + file.fileData;\r\n          a.download = file.fileName;\r\n          a.click();\r\n          a.remove();\r\n        })\r\n      )\r\n      .subscribe((x) => {});\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.fileService.getAllFiles().pipe(\r\n      tap((files) => {\r\n        this.filledSpace = _.sumBy(files, (x) => x.size);\r\n        this.value = [this.filledSpace, this.sizeOnServer - this.filledSpace];\r\n        this.fileCategories = _.groupBy(files, (x) =>\r\n          this.fileWorker.getFileMimeType(x.fileName)\r\n        );\r\n      })\r\n    ).subscribe(x => {});\r\n    this.updateFilterParams();\r\n  }\r\n\r\n  updateFilterParams() {\r\n    let filter: BaseFilter = {\r\n      paging: null,\r\n      scopeParams: null,\r\n      sortInfo: null,\r\n      filterOperations: null,\r\n    };\r\n\r\n    filter.paging = <Paging>{\r\n      pageIndex: this.indexVal,\r\n      itemsPerPage: this.item_per_page,\r\n    };\r\n\r\n    this.isLoading = true;\r\n\r\n    this.currentData$ = this.fileService.getFilesByFilter(filter).pipe(\r\n      map((x) => {\r\n        this.isLoading = false;\r\n        this.length = Math.ceil(x.totalCount / this.item_per_page);\r\n        if (this.length > 0) {\r\n          this.indexVal = Math.min(this.indexVal, this.length - 1);\r\n        } else {\r\n          this.indexVal = 0;\r\n        }\r\n        return x.items;\r\n      })\r\n    );\r\n  }\r\n\r\n  onPageAmountChanged() {\r\n    this.indexVal = 0;\r\n    this.updateFilterParams();\r\n  }\r\n\r\n  protected goToPage(index: number): void {\r\n    this.indexVal = index;\r\n    this.updateFilterParams();\r\n  }\r\n\r\n  currentData$!: Observable<FileModel[]>;\r\n  isLoading: boolean = false;\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}