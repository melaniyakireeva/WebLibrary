{"ast":null,"code":"import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { inject, Component, ChangeDetectionStrategy, ViewChild, ContentChildren, Input, Directive, NgModule } from '@angular/core';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { maskitoParseNumber, maskitoNumberOptionsGenerator, maskitoCaretGuard } from '@maskito/kit';\nimport { EMPTY_QUERY, CHAR_HYPHEN, CHAR_MINUS } from '@taiga-ui/cdk/constants';\nimport { tuiWatch } from '@taiga-ui/cdk/observables';\nimport { TUI_IS_IOS } from '@taiga-ui/cdk/tokens';\nimport { tuiClamp } from '@taiga-ui/cdk/utils/math';\nimport { tuiCreateToken, tuiProvideOptions, tuiPure } from '@taiga-ui/cdk/utils/miscellaneous';\nimport { TUI_DEFAULT_NUMBER_FORMAT, TUI_NUMBER_FORMAT } from '@taiga-ui/core/tokens';\nimport { tuiFormatNumber } from '@taiga-ui/core/utils/format';\nimport { AbstractTuiNullableControl, tuiAsControl, AbstractTuiTextfieldHost } from '@taiga-ui/legacy/classes';\nimport * as i3 from '@taiga-ui/legacy/components/primitive-textfield';\nimport { TuiPrimitiveTextfieldComponent, TuiPrimitiveTextfieldModule, TuiTextfieldComponent } from '@taiga-ui/legacy/components/primitive-textfield';\nimport * as i4 from '@taiga-ui/legacy/directives';\nimport { TUI_TEXTFIELD_SIZE, TUI_TEXTFIELD_WATCHED_CONTROLLER, TEXTFIELD_CONTROLLER_PROVIDER, TuiTextfieldControllerModule, TuiValueAccessorModule } from '@taiga-ui/legacy/directives';\nimport { tuiAsFocusableItemAccessor, tuiAsTextfieldHost } from '@taiga-ui/legacy/tokens';\nimport * as i5 from '@taiga-ui/polymorpheus';\nimport { PolymorpheusOutlet, PolymorpheusTemplate } from '@taiga-ui/polymorpheus';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i2 from '@maskito/angular';\nimport { MaskitoDirective } from '@maskito/angular';\nimport * as i6 from '@taiga-ui/core/components/button';\nimport { TuiButton } from '@taiga-ui/core/components/button';\n\n/**\n * @deprecated: drop in v5.0\n * Default values for the input number options.\n */\nconst _c0 = [\"*\", [[\"input\"]], [[\"tuiContent\"]]];\nconst _c1 = [\"*\", \"input\", \"tuiContent\"];\nfunction TuiInputNumberComponent_div_4_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const text_r2 = ctx.polymorpheusOutlet;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", text_r2, \" \");\n  }\n}\nfunction TuiInputNumberComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtemplate(1, TuiInputNumberComponent_div_4_ng_container_1_Template, 2, 1, \"ng-container\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const valueContent_r3 = i0.ɵɵreference(9);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"polymorpheusOutlet\", valueContent_r3);\n  }\n}\nfunction TuiInputNumberComponent_section_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"section\", 8)(1, \"button\", 9);\n    i0.ɵɵlistener(\"click.prevent\", function TuiInputNumberComponent_section_5_Template_button_click_prevent_1_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onArrow(ctx_r4.step));\n    })(\"mousedown.prevent\", function TuiInputNumberComponent_section_5_Template_button_mousedown_prevent_1_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.nativeFocusableElement == null ? null : ctx_r4.nativeFocusableElement.focus());\n    });\n    i0.ɵɵtext(2, \" + \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 9);\n    i0.ɵɵlistener(\"click.prevent\", function TuiInputNumberComponent_section_5_Template_button_click_prevent_3_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onArrow(-ctx_r4.step));\n    })(\"mousedown.prevent\", function TuiInputNumberComponent_section_5_Template_button_mousedown_prevent_3_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.nativeFocusableElement == null ? null : ctx_r4.nativeFocusableElement.focus());\n    });\n    i0.ɵɵtext(4, \" - \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    const textfield_r6 = i0.ɵɵreference(1);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"appearance\", textfield_r6.appearance)(\"disabled\", !ctx_r4.canIncrement)(\"iconStart\", ctx_r4.icons.up);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"appearance\", textfield_r6.appearance)(\"disabled\", !ctx_r4.canDecrement)(\"iconStart\", ctx_r4.icons.down);\n  }\n}\nfunction TuiInputNumberComponent_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction TuiInputNumberComponent_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 2);\n  }\n}\nconst TUI_INPUT_NUMBER_DEFAULT_OPTIONS = {\n  icons: {\n    up: '@tui.plus',\n    down: '@tui.minus'\n  },\n  min: Number.MIN_SAFE_INTEGER,\n  max: Number.MAX_SAFE_INTEGER,\n  step: 0\n};\n/**\n * @deprecated: drop in v5.0\n * Default parameters for input count component\n */\nconst TUI_INPUT_NUMBER_OPTIONS = tuiCreateToken(TUI_INPUT_NUMBER_DEFAULT_OPTIONS);\nfunction tuiInputNumberOptionsProvider(options) {\n  return tuiProvideOptions(TUI_INPUT_NUMBER_OPTIONS, options, TUI_INPUT_NUMBER_DEFAULT_OPTIONS);\n}\nconst DEFAULT_MAX_LENGTH = 18;\nconst TUI_NUMBER_VALUE_TRANSFORMER = tuiCreateToken();\nclass TuiInputNumberComponent extends AbstractTuiNullableControl {\n  constructor() {\n    super(...arguments);\n    this.isIOS = inject(TUI_IS_IOS);\n    this.textfieldSize = inject(TUI_TEXTFIELD_SIZE);\n    this.options = inject(TUI_INPUT_NUMBER_OPTIONS);\n    this.unfinishedValue = '';\n    this.polymorpheusValueContent = EMPTY_QUERY;\n    this.valueTransformer = inject(TUI_NUMBER_VALUE_TRANSFORMER, {\n      optional: true\n    });\n    this.numberFormat = TUI_DEFAULT_NUMBER_FORMAT;\n    this.controller = inject(TUI_TEXTFIELD_WATCHED_CONTROLLER);\n    this.numberFormat$ = inject(TUI_NUMBER_FORMAT).pipe(tuiWatch(this.cdr), takeUntilDestroyed()).subscribe(format => {\n      this.numberFormat = format;\n    });\n    this.min = this.options.min;\n    this.max = this.options.max;\n    this.step = this.options.step;\n  }\n  get nativeFocusableElement() {\n    return !this.textfield || this.computedDisabled ? null : this.textfield.nativeFocusableElement;\n  }\n  get focused() {\n    return !!this.textfield?.focused;\n  }\n  get inputMode() {\n    if (this.isIOS && this.isNegativeAllowed) {\n      // iPhone does not have minus sign if inputMode is equal to 'numeric' / 'decimal'\n      return 'text';\n    }\n    return !this.precision ? 'numeric' : 'decimal';\n  }\n  get calculatedMaxLength() {\n    const decimalPart = !!this.precision && this.nativeValue.includes(this.numberFormat.decimalSeparator);\n    const precision = decimalPart ? Math.min(this.precision + 1, 20) : 0;\n    const takeThousand = this.numberFormat.thousandSeparator.repeat(5).length;\n    return DEFAULT_MAX_LENGTH + precision + takeThousand;\n  }\n  get computedValue() {\n    return this.focused ? this.nativeValue : this.formattedValue;\n  }\n  onValueChange(nativeValue) {\n    const parsedValue = maskitoParseNumber(nativeValue, this.numberFormat.decimalSeparator);\n    this.unfinishedValue = null;\n    if (Number.isNaN(parsedValue)) {\n      this.value = null;\n      return;\n    }\n    if (this.isNativeValueNotFinished) {\n      this.unfinishedValue = nativeValue;\n      this.cdr.markForCheck();\n      return;\n    }\n    if (parsedValue < this.computedMin || parsedValue > this.computedMax) {\n      return;\n    }\n    this.value = parsedValue;\n  }\n  writeValue(value) {\n    super.writeValue(value);\n    this.nativeValue = this.formattedValue;\n  }\n  get size() {\n    return this.textfieldSize.size;\n  }\n  get icons() {\n    return this.options.icons;\n  }\n  get computedMin() {\n    return this.computeMin(this.min, this.max);\n  }\n  get computedMax() {\n    return this.computeMax(this.min, this.max);\n  }\n  get isNegativeAllowed() {\n    return this.computedMin < 0;\n  }\n  get formattedValue() {\n    return this.value !== null ? this.getFormattedValue(this.value || 0) : '';\n  }\n  get canDecrement() {\n    return this.interactive && (this.value || 0) > this.computedMin;\n  }\n  get canIncrement() {\n    return this.interactive && (this.value || 0) < this.computedMax;\n  }\n  get computedPrefix() {\n    return this.controller.prefix;\n  }\n  get computedPostfix() {\n    const postfix = this.controller.postfix;\n    return postfix && ` ${postfix}`;\n  }\n  get mask() {\n    return this.calculateMask(this.precision, this.numberFormat.decimalMode, this.numberFormat.decimalSeparator, this.numberFormat.thousandSeparator, this.computedMin, this.computedMax, this.computedPrefix, this.computedPostfix);\n  }\n  get nativeValue() {\n    return this.nativeFocusableElement?.value || '';\n  }\n  set nativeValue(value) {\n    if (!this.textfield || !this.nativeFocusableElement) {\n      return;\n    }\n    this.textfield.value = value;\n    this.nativeFocusableElement.value = value;\n  }\n  onArrow(step) {\n    if (!step) {\n      return;\n    }\n    this.value = tuiClamp((this.value || 0) + step, this.computedMin, this.computedMax);\n    this.nativeValue = this.formattedValue;\n  }\n  onFocused(focused) {\n    this.updateFocused(focused);\n    const nativeNumberValue = this.unfinishedValue ? maskitoParseNumber(this.unfinishedValue, this.numberFormat.decimalSeparator) : this.nativeNumberValue;\n    this.unfinishedValue = null;\n    if (Number.isNaN(nativeNumberValue)) {\n      this.nativeValue = focused && !this.readOnly ? this.computedPrefix + this.computedPostfix : '';\n      this.value = null;\n      return;\n    }\n    if (!focused) {\n      this.value = nativeNumberValue;\n      this.nativeValue = this.formattedValue;\n    }\n  }\n  getFormattedValue(value) {\n    return this.computedPrefix + tuiFormatNumber(value, {\n      ...this.numberFormat,\n      precision: this.precision\n    }).replace(CHAR_HYPHEN, CHAR_MINUS) + this.computedPostfix;\n  }\n  get isNativeValueNotFinished() {\n    const nativeNumberValue = this.nativeNumberValue;\n    return nativeNumberValue < 0 ? nativeNumberValue > this.computedMax : nativeNumberValue < this.computedMin;\n  }\n  get nativeNumberValue() {\n    return maskitoParseNumber(this.nativeValue, this.numberFormat.decimalSeparator);\n  }\n  get precision() {\n    return Number.isNaN(this.numberFormat.precision) ? 2 : this.numberFormat.precision;\n  }\n  computeMin(min, max) {\n    return Math.min(this.valueTransformer?.fromControlValue(min) ?? min ?? this.options.min, this.valueTransformer?.fromControlValue(max) ?? max ?? this.options.max);\n  }\n  computeMax(min, max) {\n    return Math.max(this.valueTransformer?.fromControlValue(min) ?? min ?? this.options.min, this.valueTransformer?.fromControlValue(max) ?? max ?? this.options.max);\n  }\n  // eslint-disable-next-line sonarjs/sonar-max-params\n  calculateMask(precision, decimalMode, decimalSeparator, thousandSeparator, min, max, prefix, postfix) {\n    const generatorParams = {\n      decimalSeparator,\n      thousandSeparator,\n      min,\n      max,\n      prefix,\n      postfix,\n      precision,\n      decimalZeroPadding: decimalMode === 'always'\n    };\n    const {\n      plugins,\n      ...options\n    } = maskitoNumberOptionsGenerator(generatorParams);\n    return {\n      ...options,\n      plugins: [...plugins, maskitoCaretGuard(value => [prefix.length, value.length - postfix.length])]\n    };\n  }\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵTuiInputNumberComponent_BaseFactory;\n      return function TuiInputNumberComponent_Factory(__ngFactoryType__) {\n        return (ɵTuiInputNumberComponent_BaseFactory || (ɵTuiInputNumberComponent_BaseFactory = i0.ɵɵgetInheritedFactory(TuiInputNumberComponent)))(__ngFactoryType__ || TuiInputNumberComponent);\n      };\n    })();\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: TuiInputNumberComponent,\n      selectors: [[\"tui-input-number\"]],\n      contentQueries: function TuiInputNumberComponent_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, PolymorpheusOutlet, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.polymorpheusValueContent = _t);\n        }\n      },\n      viewQuery: function TuiInputNumberComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(TuiPrimitiveTextfieldComponent, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.textfield = _t.first);\n        }\n      },\n      hostVars: 1,\n      hostBindings: function TuiInputNumberComponent_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"keydown.arrowDown\", function TuiInputNumberComponent_keydown_arrowDown_HostBindingHandler() {\n            return ctx.onArrow(-ctx.step);\n          })(\"keydown.arrowUp\", function TuiInputNumberComponent_keydown_arrowUp_HostBindingHandler() {\n            return ctx.onArrow(ctx.step);\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵattribute(\"data-size\", ctx.size);\n        }\n      },\n      inputs: {\n        min: \"min\",\n        max: \"max\",\n        step: \"step\"\n      },\n      features: [i0.ɵɵProvidersFeature([tuiAsFocusableItemAccessor(TuiInputNumberComponent), tuiAsControl(TuiInputNumberComponent), TEXTFIELD_CONTROLLER_PROVIDER]), i0.ɵɵInheritDefinitionFeature],\n      ngContentSelectors: _c1,\n      decls: 10,\n      vars: 14,\n      consts: [[\"textfield\", \"\"], [\"valueContent\", \"\"], [\"tuiTextfieldPostfix\", \"\", \"tuiTextfieldPrefix\", \"\", \"tuiValueAccessor\", \"\", 1, \"t-textfield\", 3, \"focusedChange\", \"valueChange\", \"disabled\", \"focusable\", \"invalid\", \"maskito\", \"pseudoActive\", \"pseudoFocus\", \"pseudoHover\", \"readOnly\", \"value\"], [\"ngProjectAs\", \"tuiContent\", \"class\", \"t-value-content\", 5, [\"tuiContent\"], 4, \"ngIf\"], [\"class\", \"t-buttons\", 4, \"ngIf\"], [4, \"ngIf\"], [\"ngProjectAs\", \"tuiContent\", 5, [\"tuiContent\"], 1, \"t-value-content\"], [4, \"polymorpheusOutlet\"], [1, \"t-buttons\"], [\"size\", \"s\", \"tabindex\", \"-1\", \"tuiIconButton\", \"\", \"type\", \"button\", 1, \"t-button\", 3, \"click.prevent\", \"mousedown.prevent\", \"appearance\", \"disabled\", \"iconStart\"]],\n      template: function TuiInputNumberComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵprojectionDef(_c0);\n          i0.ɵɵelementStart(0, \"tui-primitive-textfield\", 2, 0);\n          i0.ɵɵlistener(\"focusedChange\", function TuiInputNumberComponent_Template_tui_primitive_textfield_focusedChange_0_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.onFocused($event));\n          })(\"valueChange\", function TuiInputNumberComponent_Template_tui_primitive_textfield_valueChange_0_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.onValueChange($event));\n          });\n          i0.ɵɵprojection(2);\n          i0.ɵɵprojection(3, 1, [\"ngProjectAs\", \"input\", 5, [\"input\"]]);\n          i0.ɵɵtemplate(4, TuiInputNumberComponent_div_4_Template, 2, 1, \"div\", 3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(5, TuiInputNumberComponent_section_5_Template, 5, 6, \"section\", 4)(6, TuiInputNumberComponent_ng_container_6_Template, 1, 0, \"ng-container\", 5);\n          i0.ɵɵpipe(7, \"async\");\n          i0.ɵɵtemplate(8, TuiInputNumberComponent_ng_template_8_Template, 1, 0, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"disabled\", ctx.computedDisabled)(\"focusable\", ctx.focusable)(\"invalid\", ctx.computedInvalid)(\"maskito\", ctx.mask)(\"pseudoActive\", ctx.pseudoActive)(\"pseudoFocus\", ctx.computedFocused)(\"pseudoHover\", ctx.pseudoHover)(\"readOnly\", ctx.readOnly)(\"value\", ctx.computedValue);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngIf\", ctx.polymorpheusValueContent.length);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.step);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(7, 12, ctx.polymorpheusValueContent.changes));\n        }\n      },\n      dependencies: [i1.NgIf, i2.MaskitoDirective, i3.TuiPrimitiveTextfieldComponent, i3.TuiPrimitiveTextfieldDirective, i4.TuiTextfieldPrefixDirective, i4.TuiTextfieldPostfixDirective, i5.PolymorpheusOutlet, i4.TuiValueAccessorDirective, i6.TuiButton, i1.AsyncPipe],\n      styles: [\"[_nghost-%COMP%]{display:flex;border-radius:var(--tui-radius-m);text-align:start}[_nghost-%COMP%]   *:disabled[_nghost-%COMP%], *:disabled   [_nghost-%COMP%]{pointer-events:none}.t-textfield[_ngcontent-%COMP%]{flex:1;min-inline-size:0;max-inline-size:100%;border-radius:inherit;text-align:inherit}.t-textfield[_ngcontent-%COMP%]:not(:last-child){border-start-end-radius:0;border-end-end-radius:0}.t-value-content[_ngcontent-%COMP%]{inline-size:100%}.t-buttons[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:stretch;margin-left:.125rem;border-radius:inherit}[data-size=s][_ngcontent-%COMP%] + .t-buttons[_ngcontent-%COMP%]{flex-direction:row-reverse}[data-size=s][_ngcontent-%COMP%] + .t-buttons[_ngcontent-%COMP%]   .t-button[_ngcontent-%COMP%]:first-child{margin:0 0 0 .125rem;border-start-end-radius:inherit;border-end-end-radius:inherit}[data-size=s][_ngcontent-%COMP%] + .t-buttons[_ngcontent-%COMP%]   .t-button[_ngcontent-%COMP%]:last-child{border-radius:0}[data-size=m][_ngcontent-%COMP%] + .t-buttons[_ngcontent-%COMP%]   .t-button[_ngcontent-%COMP%]{inline-size:calc(var(--tui-height-m) * .75)}[data-size=l][_ngcontent-%COMP%] + .t-buttons[_ngcontent-%COMP%]   .t-button[_ngcontent-%COMP%]{inline-size:calc(var(--tui-height-l) * .75)}.t-buttons[_ngcontent-%COMP%]   .t-button[_ngcontent-%COMP%]{display:flex;flex:1;block-size:auto;align-items:center;justify-content:center;border-radius:0}.t-buttons[_ngcontent-%COMP%]   .t-button[_ngcontent-%COMP%]:first-child{margin-bottom:.125rem;border-start-end-radius:inherit}.t-buttons[_ngcontent-%COMP%]   .t-button[_ngcontent-%COMP%]:last-child{border-end-end-radius:inherit}\"],\n      changeDetection: 0\n    });\n  }\n}\n__decorate([tuiPure], TuiInputNumberComponent.prototype, \"computeMin\", null);\n__decorate([tuiPure], TuiInputNumberComponent.prototype, \"computeMax\", null);\n__decorate([tuiPure], TuiInputNumberComponent.prototype, \"calculateMask\", null);\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiInputNumberComponent, [{\n    type: Component,\n    args: [{\n      standalone: false,\n      selector: 'tui-input-number',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [tuiAsFocusableItemAccessor(TuiInputNumberComponent), tuiAsControl(TuiInputNumberComponent), TEXTFIELD_CONTROLLER_PROVIDER],\n      host: {\n        '[attr.data-size]': 'size',\n        '(keydown.arrowDown)': 'onArrow(-step)',\n        '(keydown.arrowUp)': 'onArrow(step)'\n      },\n      template: \"<tui-primitive-textfield\\n    #textfield\\n    tuiTextfieldPostfix=\\\"\\\"\\n    tuiTextfieldPrefix=\\\"\\\"\\n    tuiValueAccessor\\n    class=\\\"t-textfield\\\"\\n    [disabled]=\\\"computedDisabled\\\"\\n    [focusable]=\\\"focusable\\\"\\n    [invalid]=\\\"computedInvalid\\\"\\n    [maskito]=\\\"mask\\\"\\n    [pseudoActive]=\\\"pseudoActive\\\"\\n    [pseudoFocus]=\\\"computedFocused\\\"\\n    [pseudoHover]=\\\"pseudoHover\\\"\\n    [readOnly]=\\\"readOnly\\\"\\n    [value]=\\\"computedValue\\\"\\n    (focusedChange)=\\\"onFocused($event)\\\"\\n    (valueChange)=\\\"onValueChange($event)\\\"\\n>\\n    <ng-content />\\n    <ng-content\\n        ngProjectAs=\\\"input\\\"\\n        select=\\\"input\\\"\\n    />\\n    <div\\n        *ngIf=\\\"polymorpheusValueContent.length\\\"\\n        ngProjectAs=\\\"tuiContent\\\"\\n        class=\\\"t-value-content\\\"\\n    >\\n        <ng-container *polymorpheusOutlet=\\\"valueContent as text\\\">\\n            {{ text }}\\n        </ng-container>\\n    </div>\\n</tui-primitive-textfield>\\n\\n<section\\n    *ngIf=\\\"step\\\"\\n    class=\\\"t-buttons\\\"\\n>\\n    <button\\n        size=\\\"s\\\"\\n        tabindex=\\\"-1\\\"\\n        tuiIconButton\\n        type=\\\"button\\\"\\n        class=\\\"t-button\\\"\\n        [appearance]=\\\"textfield.appearance\\\"\\n        [disabled]=\\\"!canIncrement\\\"\\n        [iconStart]=\\\"icons.up\\\"\\n        (click.prevent)=\\\"onArrow(step)\\\"\\n        (mousedown.prevent)=\\\"nativeFocusableElement?.focus()\\\"\\n    >\\n        +\\n    </button>\\n    <button\\n        size=\\\"s\\\"\\n        tabindex=\\\"-1\\\"\\n        tuiIconButton\\n        type=\\\"button\\\"\\n        class=\\\"t-button\\\"\\n        [appearance]=\\\"textfield.appearance\\\"\\n        [disabled]=\\\"!canDecrement\\\"\\n        [iconStart]=\\\"icons.down\\\"\\n        (click.prevent)=\\\"onArrow(-step)\\\"\\n        (mousedown.prevent)=\\\"nativeFocusableElement?.focus()\\\"\\n    >\\n        -\\n    </button>\\n</section>\\n\\n<ng-container *ngIf=\\\"polymorpheusValueContent.changes | async\\\" />\\n\\n<ng-template #valueContent>\\n    <ng-content select=\\\"tuiContent\\\" />\\n</ng-template>\\n\",\n      styles: [\":host{display:flex;border-radius:var(--tui-radius-m);text-align:start}:host :host-context(*:disabled){pointer-events:none}.t-textfield{flex:1;min-inline-size:0;max-inline-size:100%;border-radius:inherit;text-align:inherit}.t-textfield:not(:last-child){border-start-end-radius:0;border-end-end-radius:0}.t-value-content{inline-size:100%}.t-buttons{display:flex;flex-direction:column;align-items:stretch;margin-left:.125rem;border-radius:inherit}[data-size=s]+.t-buttons{flex-direction:row-reverse}[data-size=s]+.t-buttons .t-button:first-child{margin:0 0 0 .125rem;border-start-end-radius:inherit;border-end-end-radius:inherit}[data-size=s]+.t-buttons .t-button:last-child{border-radius:0}[data-size=m]+.t-buttons .t-button{inline-size:calc(var(--tui-height-m) * .75)}[data-size=l]+.t-buttons .t-button{inline-size:calc(var(--tui-height-l) * .75)}.t-buttons .t-button{display:flex;flex:1;block-size:auto;align-items:center;justify-content:center;border-radius:0}.t-buttons .t-button:first-child{margin-bottom:.125rem;border-start-end-radius:inherit}.t-buttons .t-button:last-child{border-end-end-radius:inherit}\\n\"]\n    }]\n  }], null, {\n    textfield: [{\n      type: ViewChild,\n      args: [TuiPrimitiveTextfieldComponent]\n    }],\n    polymorpheusValueContent: [{\n      type: ContentChildren,\n      args: [PolymorpheusOutlet, {\n        descendants: true\n      }]\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    step: [{\n      type: Input\n    }],\n    computeMin: [],\n    computeMax: [],\n    calculateMask: []\n  });\n})();\nclass TuiInputNumberDirective extends AbstractTuiTextfieldHost {\n  get value() {\n    return this.host.computedValue;\n  }\n  onValueChange(value) {\n    this.host.onValueChange(value);\n  }\n  ngDoCheck() {\n    if (!this.host.nativeFocusableElement) {\n      return;\n    }\n    this.host.nativeFocusableElement.inputMode = this.host.inputMode;\n    this.host.nativeFocusableElement.maxLength = this.host.nativeFocusableElement.maxLength > 0 ? this.host.nativeFocusableElement.maxLength : this.host.calculatedMaxLength;\n  }\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵTuiInputNumberDirective_BaseFactory;\n      return function TuiInputNumberDirective_Factory(__ngFactoryType__) {\n        return (ɵTuiInputNumberDirective_BaseFactory || (ɵTuiInputNumberDirective_BaseFactory = i0.ɵɵgetInheritedFactory(TuiInputNumberDirective)))(__ngFactoryType__ || TuiInputNumberDirective);\n      };\n    })();\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: TuiInputNumberDirective,\n      selectors: [[\"tui-input-number\"]],\n      features: [i0.ɵɵProvidersFeature([tuiAsTextfieldHost(TuiInputNumberDirective)]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiInputNumberDirective, [{\n    type: Directive,\n    args: [{\n      standalone: false,\n      selector: 'tui-input-number',\n      providers: [tuiAsTextfieldHost(TuiInputNumberDirective)]\n    }]\n  }], null, null);\n})();\nclass TuiInputNumberModule {\n  static {\n    this.ɵfac = function TuiInputNumberModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiInputNumberModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: TuiInputNumberModule,\n      declarations: [TuiInputNumberComponent, TuiInputNumberDirective],\n      imports: [CommonModule, MaskitoDirective, TuiPrimitiveTextfieldModule, TuiTextfieldControllerModule, TuiValueAccessorModule, PolymorpheusOutlet, PolymorpheusTemplate, TuiButton],\n      exports: [TuiInputNumberComponent, TuiInputNumberDirective, TuiTextfieldComponent]\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [CommonModule, TuiPrimitiveTextfieldModule, TuiTextfieldControllerModule, TuiValueAccessorModule]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiInputNumberModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, MaskitoDirective, TuiPrimitiveTextfieldModule, TuiTextfieldControllerModule, TuiValueAccessorModule, PolymorpheusOutlet, PolymorpheusTemplate, TuiButton],\n      declarations: [TuiInputNumberComponent, TuiInputNumberDirective],\n      exports: [TuiInputNumberComponent, TuiInputNumberDirective, TuiTextfieldComponent]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TUI_INPUT_NUMBER_DEFAULT_OPTIONS, TUI_INPUT_NUMBER_OPTIONS, TUI_NUMBER_VALUE_TRANSFORMER, TuiInputNumberComponent, TuiInputNumberDirective, TuiInputNumberModule, tuiInputNumberOptionsProvider };","map":{"version":3,"names":["__decorate","i0","inject","Component","ChangeDetectionStrategy","ViewChild","ContentChildren","Input","Directive","NgModule","takeUntilDestroyed","maskitoParseNumber","maskitoNumberOptionsGenerator","maskitoCaretGuard","EMPTY_QUERY","CHAR_HYPHEN","CHAR_MINUS","tuiWatch","TUI_IS_IOS","tuiClamp","tuiCreateToken","tuiProvideOptions","tuiPure","TUI_DEFAULT_NUMBER_FORMAT","TUI_NUMBER_FORMAT","tuiFormatNumber","AbstractTuiNullableControl","tuiAsControl","AbstractTuiTextfieldHost","i3","TuiPrimitiveTextfieldComponent","TuiPrimitiveTextfieldModule","TuiTextfieldComponent","i4","TUI_TEXTFIELD_SIZE","TUI_TEXTFIELD_WATCHED_CONTROLLER","TEXTFIELD_CONTROLLER_PROVIDER","TuiTextfieldControllerModule","TuiValueAccessorModule","tuiAsFocusableItemAccessor","tuiAsTextfieldHost","i5","PolymorpheusOutlet","PolymorpheusTemplate","i1","CommonModule","i2","MaskitoDirective","i6","TuiButton","_c0","_c1","TuiInputNumberComponent_div_4_ng_container_1_Template","rf","ctx","ɵɵelementContainerStart","ɵɵtext","ɵɵelementContainerEnd","text_r2","polymorpheusOutlet","ɵɵadvance","ɵɵtextInterpolate1","TuiInputNumberComponent_div_4_Template","ɵɵelementStart","ɵɵtemplate","ɵɵelementEnd","ɵɵnextContext","valueContent_r3","ɵɵreference","ɵɵproperty","TuiInputNumberComponent_section_5_Template","_r4","ɵɵgetCurrentView","ɵɵlistener","TuiInputNumberComponent_section_5_Template_button_click_prevent_1_listener","ɵɵrestoreView","ctx_r4","ɵɵresetView","onArrow","step","TuiInputNumberComponent_section_5_Template_button_mousedown_prevent_1_listener","nativeFocusableElement","focus","TuiInputNumberComponent_section_5_Template_button_click_prevent_3_listener","TuiInputNumberComponent_section_5_Template_button_mousedown_prevent_3_listener","textfield_r6","appearance","canIncrement","icons","up","canDecrement","down","TuiInputNumberComponent_ng_container_6_Template","ɵɵelementContainer","TuiInputNumberComponent_ng_template_8_Template","ɵɵprojection","TUI_INPUT_NUMBER_DEFAULT_OPTIONS","min","Number","MIN_SAFE_INTEGER","max","MAX_SAFE_INTEGER","TUI_INPUT_NUMBER_OPTIONS","tuiInputNumberOptionsProvider","options","DEFAULT_MAX_LENGTH","TUI_NUMBER_VALUE_TRANSFORMER","TuiInputNumberComponent","constructor","arguments","isIOS","textfieldSize","unfinishedValue","polymorpheusValueContent","valueTransformer","optional","numberFormat","controller","numberFormat$","pipe","cdr","subscribe","format","textfield","computedDisabled","focused","inputMode","isNegativeAllowed","precision","calculatedMaxLength","decimalPart","nativeValue","includes","decimalSeparator","Math","takeThousand","thousandSeparator","repeat","length","computedValue","formattedValue","onValueChange","parsedValue","isNaN","value","isNativeValueNotFinished","markForCheck","computedMin","computedMax","writeValue","size","computeMin","computeMax","getFormattedValue","interactive","computedPrefix","prefix","computedPostfix","postfix","mask","calculateMask","decimalMode","onFocused","updateFocused","nativeNumberValue","readOnly","replace","fromControlValue","generatorParams","decimalZeroPadding","plugins","ɵfac","ɵTuiInputNumberComponent_BaseFactory","TuiInputNumberComponent_Factory","__ngFactoryType__","ɵɵgetInheritedFactory","ɵcmp","ɵɵdefineComponent","type","selectors","contentQueries","TuiInputNumberComponent_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","viewQuery","TuiInputNumberComponent_Query","ɵɵviewQuery","first","hostVars","hostBindings","TuiInputNumberComponent_HostBindings","TuiInputNumberComponent_keydown_arrowDown_HostBindingHandler","TuiInputNumberComponent_keydown_arrowUp_HostBindingHandler","ɵɵattribute","inputs","features","ɵɵProvidersFeature","ɵɵInheritDefinitionFeature","ngContentSelectors","decls","vars","consts","template","TuiInputNumberComponent_Template","_r1","ɵɵprojectionDef","TuiInputNumberComponent_Template_tui_primitive_textfield_focusedChange_0_listener","$event","TuiInputNumberComponent_Template_tui_primitive_textfield_valueChange_0_listener","ɵɵpipe","ɵɵtemplateRefExtractor","focusable","computedInvalid","pseudoActive","computedFocused","pseudoHover","ɵɵpipeBind1","changes","dependencies","NgIf","TuiPrimitiveTextfieldDirective","TuiTextfieldPrefixDirective","TuiTextfieldPostfixDirective","TuiValueAccessorDirective","AsyncPipe","styles","changeDetection","prototype","ngDevMode","ɵsetClassMetadata","args","standalone","selector","OnPush","providers","host","descendants","TuiInputNumberDirective","ngDoCheck","maxLength","ɵTuiInputNumberDirective_BaseFactory","TuiInputNumberDirective_Factory","ɵdir","ɵɵdefineDirective","TuiInputNumberModule","TuiInputNumberModule_Factory","ɵmod","ɵɵdefineNgModule","declarations","imports","exports","ɵinj","ɵɵdefineInjector"],"sources":["C:/Users/Asus-PC/Downloads/WebLibraryNew/WebLibrary/WebLibraryApp/Frontend/node_modules/@taiga-ui/legacy/fesm2022/taiga-ui-legacy-components-input-number.mjs"],"sourcesContent":["import { __decorate } from 'tslib';\nimport * as i0 from '@angular/core';\nimport { inject, Component, ChangeDetectionStrategy, ViewChild, ContentChildren, Input, Directive, NgModule } from '@angular/core';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { maskitoParseNumber, maskitoNumberOptionsGenerator, maskitoCaretGuard } from '@maskito/kit';\nimport { EMPTY_QUERY, CHAR_HYPHEN, CHAR_MINUS } from '@taiga-ui/cdk/constants';\nimport { tuiWatch } from '@taiga-ui/cdk/observables';\nimport { TUI_IS_IOS } from '@taiga-ui/cdk/tokens';\nimport { tuiClamp } from '@taiga-ui/cdk/utils/math';\nimport { tuiCreateToken, tuiProvideOptions, tuiPure } from '@taiga-ui/cdk/utils/miscellaneous';\nimport { TUI_DEFAULT_NUMBER_FORMAT, TUI_NUMBER_FORMAT } from '@taiga-ui/core/tokens';\nimport { tuiFormatNumber } from '@taiga-ui/core/utils/format';\nimport { AbstractTuiNullableControl, tuiAsControl, AbstractTuiTextfieldHost } from '@taiga-ui/legacy/classes';\nimport * as i3 from '@taiga-ui/legacy/components/primitive-textfield';\nimport { TuiPrimitiveTextfieldComponent, TuiPrimitiveTextfieldModule, TuiTextfieldComponent } from '@taiga-ui/legacy/components/primitive-textfield';\nimport * as i4 from '@taiga-ui/legacy/directives';\nimport { TUI_TEXTFIELD_SIZE, TUI_TEXTFIELD_WATCHED_CONTROLLER, TEXTFIELD_CONTROLLER_PROVIDER, TuiTextfieldControllerModule, TuiValueAccessorModule } from '@taiga-ui/legacy/directives';\nimport { tuiAsFocusableItemAccessor, tuiAsTextfieldHost } from '@taiga-ui/legacy/tokens';\nimport * as i5 from '@taiga-ui/polymorpheus';\nimport { PolymorpheusOutlet, PolymorpheusTemplate } from '@taiga-ui/polymorpheus';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i2 from '@maskito/angular';\nimport { MaskitoDirective } from '@maskito/angular';\nimport * as i6 from '@taiga-ui/core/components/button';\nimport { TuiButton } from '@taiga-ui/core/components/button';\n\n/**\n * @deprecated: drop in v5.0\n * Default values for the input number options.\n */\nconst TUI_INPUT_NUMBER_DEFAULT_OPTIONS = {\n    icons: {\n        up: '@tui.plus',\n        down: '@tui.minus',\n    },\n    min: Number.MIN_SAFE_INTEGER,\n    max: Number.MAX_SAFE_INTEGER,\n    step: 0,\n};\n/**\n * @deprecated: drop in v5.0\n * Default parameters for input count component\n */\nconst TUI_INPUT_NUMBER_OPTIONS = tuiCreateToken(TUI_INPUT_NUMBER_DEFAULT_OPTIONS);\nfunction tuiInputNumberOptionsProvider(options) {\n    return tuiProvideOptions(TUI_INPUT_NUMBER_OPTIONS, options, TUI_INPUT_NUMBER_DEFAULT_OPTIONS);\n}\n\nconst DEFAULT_MAX_LENGTH = 18;\nconst TUI_NUMBER_VALUE_TRANSFORMER = tuiCreateToken();\nclass TuiInputNumberComponent extends AbstractTuiNullableControl {\n    constructor() {\n        super(...arguments);\n        this.isIOS = inject(TUI_IS_IOS);\n        this.textfieldSize = inject(TUI_TEXTFIELD_SIZE);\n        this.options = inject(TUI_INPUT_NUMBER_OPTIONS);\n        this.unfinishedValue = '';\n        this.polymorpheusValueContent = EMPTY_QUERY;\n        this.valueTransformer = inject(TUI_NUMBER_VALUE_TRANSFORMER, { optional: true });\n        this.numberFormat = TUI_DEFAULT_NUMBER_FORMAT;\n        this.controller = inject(TUI_TEXTFIELD_WATCHED_CONTROLLER);\n        this.numberFormat$ = inject(TUI_NUMBER_FORMAT)\n            .pipe(tuiWatch(this.cdr), takeUntilDestroyed())\n            .subscribe((format) => {\n            this.numberFormat = format;\n        });\n        this.min = this.options.min;\n        this.max = this.options.max;\n        this.step = this.options.step;\n    }\n    get nativeFocusableElement() {\n        return !this.textfield || this.computedDisabled\n            ? null\n            : this.textfield.nativeFocusableElement;\n    }\n    get focused() {\n        return !!this.textfield?.focused;\n    }\n    get inputMode() {\n        if (this.isIOS && this.isNegativeAllowed) {\n            // iPhone does not have minus sign if inputMode is equal to 'numeric' / 'decimal'\n            return 'text';\n        }\n        return !this.precision ? 'numeric' : 'decimal';\n    }\n    get calculatedMaxLength() {\n        const decimalPart = !!this.precision &&\n            this.nativeValue.includes(this.numberFormat.decimalSeparator);\n        const precision = decimalPart ? Math.min(this.precision + 1, 20) : 0;\n        const takeThousand = this.numberFormat.thousandSeparator.repeat(5).length;\n        return DEFAULT_MAX_LENGTH + precision + takeThousand;\n    }\n    get computedValue() {\n        return this.focused ? this.nativeValue : this.formattedValue;\n    }\n    onValueChange(nativeValue) {\n        const parsedValue = maskitoParseNumber(nativeValue, this.numberFormat.decimalSeparator);\n        this.unfinishedValue = null;\n        if (Number.isNaN(parsedValue)) {\n            this.value = null;\n            return;\n        }\n        if (this.isNativeValueNotFinished) {\n            this.unfinishedValue = nativeValue;\n            this.cdr.markForCheck();\n            return;\n        }\n        if (parsedValue < this.computedMin || parsedValue > this.computedMax) {\n            return;\n        }\n        this.value = parsedValue;\n    }\n    writeValue(value) {\n        super.writeValue(value);\n        this.nativeValue = this.formattedValue;\n    }\n    get size() {\n        return this.textfieldSize.size;\n    }\n    get icons() {\n        return this.options.icons;\n    }\n    get computedMin() {\n        return this.computeMin(this.min, this.max);\n    }\n    get computedMax() {\n        return this.computeMax(this.min, this.max);\n    }\n    get isNegativeAllowed() {\n        return this.computedMin < 0;\n    }\n    get formattedValue() {\n        return this.value !== null ? this.getFormattedValue(this.value || 0) : '';\n    }\n    get canDecrement() {\n        return this.interactive && (this.value || 0) > this.computedMin;\n    }\n    get canIncrement() {\n        return this.interactive && (this.value || 0) < this.computedMax;\n    }\n    get computedPrefix() {\n        return this.controller.prefix;\n    }\n    get computedPostfix() {\n        const postfix = this.controller.postfix;\n        return postfix && ` ${postfix}`;\n    }\n    get mask() {\n        return this.calculateMask(this.precision, this.numberFormat.decimalMode, this.numberFormat.decimalSeparator, this.numberFormat.thousandSeparator, this.computedMin, this.computedMax, this.computedPrefix, this.computedPostfix);\n    }\n    get nativeValue() {\n        return this.nativeFocusableElement?.value || '';\n    }\n    set nativeValue(value) {\n        if (!this.textfield || !this.nativeFocusableElement) {\n            return;\n        }\n        this.textfield.value = value;\n        this.nativeFocusableElement.value = value;\n    }\n    onArrow(step) {\n        if (!step) {\n            return;\n        }\n        this.value = tuiClamp((this.value || 0) + step, this.computedMin, this.computedMax);\n        this.nativeValue = this.formattedValue;\n    }\n    onFocused(focused) {\n        this.updateFocused(focused);\n        const nativeNumberValue = this.unfinishedValue\n            ? maskitoParseNumber(this.unfinishedValue, this.numberFormat.decimalSeparator)\n            : this.nativeNumberValue;\n        this.unfinishedValue = null;\n        if (Number.isNaN(nativeNumberValue)) {\n            this.nativeValue =\n                focused && !this.readOnly\n                    ? this.computedPrefix + this.computedPostfix\n                    : '';\n            this.value = null;\n            return;\n        }\n        if (!focused) {\n            this.value = nativeNumberValue;\n            this.nativeValue = this.formattedValue;\n        }\n    }\n    getFormattedValue(value) {\n        return (this.computedPrefix +\n            tuiFormatNumber(value, {\n                ...this.numberFormat,\n                precision: this.precision,\n            }).replace(CHAR_HYPHEN, CHAR_MINUS) +\n            this.computedPostfix);\n    }\n    get isNativeValueNotFinished() {\n        const nativeNumberValue = this.nativeNumberValue;\n        return nativeNumberValue < 0\n            ? nativeNumberValue > this.computedMax\n            : nativeNumberValue < this.computedMin;\n    }\n    get nativeNumberValue() {\n        return maskitoParseNumber(this.nativeValue, this.numberFormat.decimalSeparator);\n    }\n    get precision() {\n        return Number.isNaN(this.numberFormat.precision)\n            ? 2\n            : this.numberFormat.precision;\n    }\n    computeMin(min, max) {\n        return Math.min(this.valueTransformer?.fromControlValue(min) ?? min ?? this.options.min, this.valueTransformer?.fromControlValue(max) ?? max ?? this.options.max);\n    }\n    computeMax(min, max) {\n        return Math.max(this.valueTransformer?.fromControlValue(min) ?? min ?? this.options.min, this.valueTransformer?.fromControlValue(max) ?? max ?? this.options.max);\n    }\n    // eslint-disable-next-line sonarjs/sonar-max-params\n    calculateMask(precision, decimalMode, decimalSeparator, thousandSeparator, min, max, prefix, postfix) {\n        const generatorParams = {\n            decimalSeparator,\n            thousandSeparator,\n            min,\n            max,\n            prefix,\n            postfix,\n            precision,\n            decimalZeroPadding: decimalMode === 'always',\n        };\n        const { plugins, ...options } = maskitoNumberOptionsGenerator(generatorParams);\n        return {\n            ...options,\n            plugins: [\n                ...plugins,\n                maskitoCaretGuard((value) => [\n                    prefix.length,\n                    value.length - postfix.length,\n                ]),\n            ],\n        };\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiInputNumberComponent, deps: null, target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiInputNumberComponent, selector: \"tui-input-number\", inputs: { min: \"min\", max: \"max\", step: \"step\" }, host: { listeners: { \"keydown.arrowDown\": \"onArrow(-step)\", \"keydown.arrowUp\": \"onArrow(step)\" }, properties: { \"attr.data-size\": \"size\" } }, providers: [\n            tuiAsFocusableItemAccessor(TuiInputNumberComponent),\n            tuiAsControl(TuiInputNumberComponent),\n            TEXTFIELD_CONTROLLER_PROVIDER,\n        ], queries: [{ propertyName: \"polymorpheusValueContent\", predicate: PolymorpheusOutlet, descendants: true }], viewQueries: [{ propertyName: \"textfield\", first: true, predicate: TuiPrimitiveTextfieldComponent, descendants: true }], usesInheritance: true, ngImport: i0, template: \"<tui-primitive-textfield\\n    #textfield\\n    tuiTextfieldPostfix=\\\"\\\"\\n    tuiTextfieldPrefix=\\\"\\\"\\n    tuiValueAccessor\\n    class=\\\"t-textfield\\\"\\n    [disabled]=\\\"computedDisabled\\\"\\n    [focusable]=\\\"focusable\\\"\\n    [invalid]=\\\"computedInvalid\\\"\\n    [maskito]=\\\"mask\\\"\\n    [pseudoActive]=\\\"pseudoActive\\\"\\n    [pseudoFocus]=\\\"computedFocused\\\"\\n    [pseudoHover]=\\\"pseudoHover\\\"\\n    [readOnly]=\\\"readOnly\\\"\\n    [value]=\\\"computedValue\\\"\\n    (focusedChange)=\\\"onFocused($event)\\\"\\n    (valueChange)=\\\"onValueChange($event)\\\"\\n>\\n    <ng-content />\\n    <ng-content\\n        ngProjectAs=\\\"input\\\"\\n        select=\\\"input\\\"\\n    />\\n    <div\\n        *ngIf=\\\"polymorpheusValueContent.length\\\"\\n        ngProjectAs=\\\"tuiContent\\\"\\n        class=\\\"t-value-content\\\"\\n    >\\n        <ng-container *polymorpheusOutlet=\\\"valueContent as text\\\">\\n            {{ text }}\\n        </ng-container>\\n    </div>\\n</tui-primitive-textfield>\\n\\n<section\\n    *ngIf=\\\"step\\\"\\n    class=\\\"t-buttons\\\"\\n>\\n    <button\\n        size=\\\"s\\\"\\n        tabindex=\\\"-1\\\"\\n        tuiIconButton\\n        type=\\\"button\\\"\\n        class=\\\"t-button\\\"\\n        [appearance]=\\\"textfield.appearance\\\"\\n        [disabled]=\\\"!canIncrement\\\"\\n        [iconStart]=\\\"icons.up\\\"\\n        (click.prevent)=\\\"onArrow(step)\\\"\\n        (mousedown.prevent)=\\\"nativeFocusableElement?.focus()\\\"\\n    >\\n        +\\n    </button>\\n    <button\\n        size=\\\"s\\\"\\n        tabindex=\\\"-1\\\"\\n        tuiIconButton\\n        type=\\\"button\\\"\\n        class=\\\"t-button\\\"\\n        [appearance]=\\\"textfield.appearance\\\"\\n        [disabled]=\\\"!canDecrement\\\"\\n        [iconStart]=\\\"icons.down\\\"\\n        (click.prevent)=\\\"onArrow(-step)\\\"\\n        (mousedown.prevent)=\\\"nativeFocusableElement?.focus()\\\"\\n    >\\n        -\\n    </button>\\n</section>\\n\\n<ng-container *ngIf=\\\"polymorpheusValueContent.changes | async\\\" />\\n\\n<ng-template #valueContent>\\n    <ng-content select=\\\"tuiContent\\\" />\\n</ng-template>\\n\", styles: [\":host{display:flex;border-radius:var(--tui-radius-m);text-align:start}:host :host-context(*:disabled){pointer-events:none}.t-textfield{flex:1;min-inline-size:0;max-inline-size:100%;border-radius:inherit;text-align:inherit}.t-textfield:not(:last-child){border-start-end-radius:0;border-end-end-radius:0}.t-value-content{inline-size:100%}.t-buttons{display:flex;flex-direction:column;align-items:stretch;margin-left:.125rem;border-radius:inherit}[data-size=s]+.t-buttons{flex-direction:row-reverse}[data-size=s]+.t-buttons .t-button:first-child{margin:0 0 0 .125rem;border-start-end-radius:inherit;border-end-end-radius:inherit}[data-size=s]+.t-buttons .t-button:last-child{border-radius:0}[data-size=m]+.t-buttons .t-button{inline-size:calc(var(--tui-height-m) * .75)}[data-size=l]+.t-buttons .t-button{inline-size:calc(var(--tui-height-l) * .75)}.t-buttons .t-button{display:flex;flex:1;block-size:auto;align-items:center;justify-content:center;border-radius:0}.t-buttons .t-button:first-child{margin-bottom:.125rem;border-start-end-radius:inherit}.t-buttons .t-button:last-child{border-end-end-radius:inherit}\\n\"], dependencies: [{ kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.MaskitoDirective, selector: \"[maskito]\", inputs: [\"maskito\", \"maskitoElement\"] }, { kind: \"component\", type: i3.TuiPrimitiveTextfieldComponent, selector: \"tui-primitive-textfield\", inputs: [\"editable\", \"iconCleaner\", \"readOnly\", \"invalid\", \"disabled\", \"value\"], outputs: [\"valueChange\"] }, { kind: \"directive\", type: i3.TuiPrimitiveTextfieldDirective, selector: \"tui-primitive-textfield\" }, { kind: \"directive\", type: i4.TuiTextfieldPrefixDirective, selector: \"[tuiTextfieldPrefix]\", inputs: [\"tuiTextfieldPrefix\"] }, { kind: \"directive\", type: i4.TuiTextfieldPostfixDirective, selector: \"[tuiTextfieldPostfix]\", inputs: [\"tuiTextfieldPostfix\"] }, { kind: \"directive\", type: i5.PolymorpheusOutlet, selector: \"[polymorpheusOutlet]\", inputs: [\"polymorpheusOutlet\", \"polymorpheusOutletContext\"] }, { kind: \"directive\", type: i4.TuiValueAccessorDirective, selector: \"[tuiValueAccessor]\" }, { kind: \"directive\", type: i6.TuiButton, selector: \"a[tuiButton],button[tuiButton],a[tuiIconButton],button[tuiIconButton]\", inputs: [\"size\"] }, { kind: \"pipe\", type: i1.AsyncPipe, name: \"async\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\n__decorate([\n    tuiPure\n], TuiInputNumberComponent.prototype, \"computeMin\", null);\n__decorate([\n    tuiPure\n], TuiInputNumberComponent.prototype, \"computeMax\", null);\n__decorate([\n    tuiPure\n], TuiInputNumberComponent.prototype, \"calculateMask\", null);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiInputNumberComponent, decorators: [{\n            type: Component,\n            args: [{ standalone: false, selector: 'tui-input-number', changeDetection: ChangeDetectionStrategy.OnPush, providers: [\n                        tuiAsFocusableItemAccessor(TuiInputNumberComponent),\n                        tuiAsControl(TuiInputNumberComponent),\n                        TEXTFIELD_CONTROLLER_PROVIDER,\n                    ], host: {\n                        '[attr.data-size]': 'size',\n                        '(keydown.arrowDown)': 'onArrow(-step)',\n                        '(keydown.arrowUp)': 'onArrow(step)',\n                    }, template: \"<tui-primitive-textfield\\n    #textfield\\n    tuiTextfieldPostfix=\\\"\\\"\\n    tuiTextfieldPrefix=\\\"\\\"\\n    tuiValueAccessor\\n    class=\\\"t-textfield\\\"\\n    [disabled]=\\\"computedDisabled\\\"\\n    [focusable]=\\\"focusable\\\"\\n    [invalid]=\\\"computedInvalid\\\"\\n    [maskito]=\\\"mask\\\"\\n    [pseudoActive]=\\\"pseudoActive\\\"\\n    [pseudoFocus]=\\\"computedFocused\\\"\\n    [pseudoHover]=\\\"pseudoHover\\\"\\n    [readOnly]=\\\"readOnly\\\"\\n    [value]=\\\"computedValue\\\"\\n    (focusedChange)=\\\"onFocused($event)\\\"\\n    (valueChange)=\\\"onValueChange($event)\\\"\\n>\\n    <ng-content />\\n    <ng-content\\n        ngProjectAs=\\\"input\\\"\\n        select=\\\"input\\\"\\n    />\\n    <div\\n        *ngIf=\\\"polymorpheusValueContent.length\\\"\\n        ngProjectAs=\\\"tuiContent\\\"\\n        class=\\\"t-value-content\\\"\\n    >\\n        <ng-container *polymorpheusOutlet=\\\"valueContent as text\\\">\\n            {{ text }}\\n        </ng-container>\\n    </div>\\n</tui-primitive-textfield>\\n\\n<section\\n    *ngIf=\\\"step\\\"\\n    class=\\\"t-buttons\\\"\\n>\\n    <button\\n        size=\\\"s\\\"\\n        tabindex=\\\"-1\\\"\\n        tuiIconButton\\n        type=\\\"button\\\"\\n        class=\\\"t-button\\\"\\n        [appearance]=\\\"textfield.appearance\\\"\\n        [disabled]=\\\"!canIncrement\\\"\\n        [iconStart]=\\\"icons.up\\\"\\n        (click.prevent)=\\\"onArrow(step)\\\"\\n        (mousedown.prevent)=\\\"nativeFocusableElement?.focus()\\\"\\n    >\\n        +\\n    </button>\\n    <button\\n        size=\\\"s\\\"\\n        tabindex=\\\"-1\\\"\\n        tuiIconButton\\n        type=\\\"button\\\"\\n        class=\\\"t-button\\\"\\n        [appearance]=\\\"textfield.appearance\\\"\\n        [disabled]=\\\"!canDecrement\\\"\\n        [iconStart]=\\\"icons.down\\\"\\n        (click.prevent)=\\\"onArrow(-step)\\\"\\n        (mousedown.prevent)=\\\"nativeFocusableElement?.focus()\\\"\\n    >\\n        -\\n    </button>\\n</section>\\n\\n<ng-container *ngIf=\\\"polymorpheusValueContent.changes | async\\\" />\\n\\n<ng-template #valueContent>\\n    <ng-content select=\\\"tuiContent\\\" />\\n</ng-template>\\n\", styles: [\":host{display:flex;border-radius:var(--tui-radius-m);text-align:start}:host :host-context(*:disabled){pointer-events:none}.t-textfield{flex:1;min-inline-size:0;max-inline-size:100%;border-radius:inherit;text-align:inherit}.t-textfield:not(:last-child){border-start-end-radius:0;border-end-end-radius:0}.t-value-content{inline-size:100%}.t-buttons{display:flex;flex-direction:column;align-items:stretch;margin-left:.125rem;border-radius:inherit}[data-size=s]+.t-buttons{flex-direction:row-reverse}[data-size=s]+.t-buttons .t-button:first-child{margin:0 0 0 .125rem;border-start-end-radius:inherit;border-end-end-radius:inherit}[data-size=s]+.t-buttons .t-button:last-child{border-radius:0}[data-size=m]+.t-buttons .t-button{inline-size:calc(var(--tui-height-m) * .75)}[data-size=l]+.t-buttons .t-button{inline-size:calc(var(--tui-height-l) * .75)}.t-buttons .t-button{display:flex;flex:1;block-size:auto;align-items:center;justify-content:center;border-radius:0}.t-buttons .t-button:first-child{margin-bottom:.125rem;border-start-end-radius:inherit}.t-buttons .t-button:last-child{border-end-end-radius:inherit}\\n\"] }]\n        }], propDecorators: { textfield: [{\n                type: ViewChild,\n                args: [TuiPrimitiveTextfieldComponent]\n            }], polymorpheusValueContent: [{\n                type: ContentChildren,\n                args: [PolymorpheusOutlet, { descendants: true }]\n            }], min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], step: [{\n                type: Input\n            }], computeMin: [], computeMax: [], calculateMask: [] } });\n\nclass TuiInputNumberDirective extends AbstractTuiTextfieldHost {\n    get value() {\n        return this.host.computedValue;\n    }\n    onValueChange(value) {\n        this.host.onValueChange(value);\n    }\n    ngDoCheck() {\n        if (!this.host.nativeFocusableElement) {\n            return;\n        }\n        this.host.nativeFocusableElement.inputMode = this.host.inputMode;\n        this.host.nativeFocusableElement.maxLength =\n            this.host.nativeFocusableElement.maxLength > 0\n                ? this.host.nativeFocusableElement.maxLength\n                : this.host.calculatedMaxLength;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiInputNumberDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiInputNumberDirective, selector: \"tui-input-number\", providers: [tuiAsTextfieldHost(TuiInputNumberDirective)], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiInputNumberDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    standalone: false,\n                    selector: 'tui-input-number',\n                    providers: [tuiAsTextfieldHost(TuiInputNumberDirective)],\n                }]\n        }] });\n\nclass TuiInputNumberModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiInputNumberModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiInputNumberModule, declarations: [TuiInputNumberComponent, TuiInputNumberDirective], imports: [CommonModule,\n            MaskitoDirective,\n            TuiPrimitiveTextfieldModule,\n            TuiTextfieldControllerModule,\n            TuiValueAccessorModule,\n            PolymorpheusOutlet,\n            PolymorpheusTemplate,\n            TuiButton], exports: [TuiInputNumberComponent, TuiInputNumberDirective, TuiTextfieldComponent] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiInputNumberModule, imports: [CommonModule,\n            TuiPrimitiveTextfieldModule,\n            TuiTextfieldControllerModule,\n            TuiValueAccessorModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiInputNumberModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        MaskitoDirective,\n                        TuiPrimitiveTextfieldModule,\n                        TuiTextfieldControllerModule,\n                        TuiValueAccessorModule,\n                        PolymorpheusOutlet,\n                        PolymorpheusTemplate,\n                        TuiButton,\n                    ],\n                    declarations: [TuiInputNumberComponent, TuiInputNumberDirective],\n                    exports: [TuiInputNumberComponent, TuiInputNumberDirective, TuiTextfieldComponent],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TUI_INPUT_NUMBER_DEFAULT_OPTIONS, TUI_INPUT_NUMBER_OPTIONS, TUI_NUMBER_VALUE_TRANSFORMER, TuiInputNumberComponent, TuiInputNumberDirective, TuiInputNumberModule, tuiInputNumberOptionsProvider };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}