{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Asus-PC/Downloads/WebLibraryNew/WebLibrary/WebLibraryApp/Frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { TuiLabel } from '@taiga-ui/core/components/label';\nimport * as i3$1 from '@angular/common';\nimport { NgIf, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { signal, Optional, SkipSelf, inject, Directive, Input, TemplateRef, ContentChild, computed, ElementRef, ViewContainerRef, Component, ViewEncapsulation, ChangeDetectionStrategy, forwardRef, ViewChild } from '@angular/core';\nimport { WA_NAVIGATOR } from '@ng-web-apis/common';\nimport * as i1$1 from '@taiga-ui/cdk/directives/native-validator';\nimport { TuiNativeValidator } from '@taiga-ui/cdk/directives/native-validator';\nimport { tuiCreateToken, tuiProvide, tuiPx } from '@taiga-ui/cdk/utils/miscellaneous';\nimport * as i2 from '@taiga-ui/core/directives/appearance';\nimport { tuiAppearance, tuiAppearanceState, tuiAppearanceMode, tuiAppearanceFocus, TuiAppearance } from '@taiga-ui/core/directives/appearance';\nimport { toSignal } from '@angular/core/rxjs-interop';\nimport { NgControl } from '@angular/forms';\nimport { tuiControlValue } from '@taiga-ui/cdk/observables';\nimport { tuiInjectElement } from '@taiga-ui/cdk/utils/dom';\nimport { merge, fromEvent, timer, switchMap, map } from 'rxjs';\nimport { WaResizeObserver } from '@ng-web-apis/resize-observer';\nimport { tuiInjectId } from '@taiga-ui/cdk/services';\nimport { tuiFocusedIn } from '@taiga-ui/cdk/utils/focus';\nimport { TuiButton } from '@taiga-ui/core/components/button';\nimport { tuiAsDataListHost } from '@taiga-ui/core/components/data-list';\nimport * as i1 from '@taiga-ui/core/directives/dropdown';\nimport { tuiDropdown, tuiDropdownOpen, TuiDropdownFixed, TuiDropdownDirective, TuiWithDropdownOpen } from '@taiga-ui/core/directives/dropdown';\nimport * as i3 from '@taiga-ui/core/directives/icons';\nimport { TuiWithIcons } from '@taiga-ui/core/directives/icons';\nimport { TUI_COMMON_ICONS, TUI_CLEAR_WORD } from '@taiga-ui/core/tokens';\nimport { PolymorpheusOutlet } from '@taiga-ui/polymorpheus';\nconst _c0 = [\"vcr\"];\nconst _c1 = [[[\"input\"]], [[\"select\"]], [[\"label\"]], \"*\", [[\"tui-icon\"]]];\nconst _c2 = [\"input\", \"select\", \"label\", \"*\", \"tui-icon\"];\nconst _c3 = a0 => ({\n  $implicit: a0\n});\nfunction TuiTextfieldComponent_button_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function TuiTextfieldComponent_button_5_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.directive == null ? null : ctx_r2.directive.setValue(null));\n    })(\"pointerdown.silent.prevent\", function TuiTextfieldComponent_button_5_Template_button_pointerdown_silent_prevent_0_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.input == null ? null : ctx_r2.input.nativeElement == null ? null : ctx_r2.input.nativeElement.focus());\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"iconStart\", ctx_r2.icons.close);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.clear(), \" \");\n  }\n}\nfunction TuiTextfieldComponent_ng_container_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const text_r4 = ctx.polymorpheusOutlet;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", text_r4, \" \");\n  }\n}\nfunction TuiTextfieldComponent_input_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"input\", 7);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"value\", ctx_r2.computedFiller());\n  }\n}\nconst _c4 = [\"tuiTextfield\", \"\"];\nconst _c5 = a0 => [a0];\nfunction TuiSelect_option_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 2);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.placeholder, \"\\n\");\n  }\n}\nfunction TuiSelect_ng_template_1_option_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", item_r2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", item_r2, \" \");\n  }\n}\nfunction TuiSelect_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TuiSelect_ng_template_1_option_0_Template, 2, 2, \"option\", 3);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpureFunction1(1, _c5, ctx_r0.value));\n  }\n}\nconst DEFAULT = {\n  appearance: 'textfield',\n  size: 'l',\n  cleaner: true\n};\nconst TUI_TEXTFIELD_OPTIONS = tuiCreateToken({\n  appearance: signal(DEFAULT.appearance),\n  size: signal(DEFAULT.size),\n  cleaner: signal(DEFAULT.cleaner)\n});\nfunction tuiTextfieldOptionsProvider(options) {\n  return {\n    provide: TUI_TEXTFIELD_OPTIONS,\n    deps: [[new Optional(), new SkipSelf(), TUI_TEXTFIELD_OPTIONS]],\n    useFactory: parent => ({\n      appearance: signal(parent?.appearance() ?? DEFAULT.appearance),\n      size: signal(parent?.size() ?? DEFAULT.size),\n      cleaner: signal(parent?.cleaner() ?? DEFAULT.cleaner),\n      ...options\n    })\n  };\n}\nclass TuiTextfieldOptionsDirective {\n  constructor() {\n    this.options = inject(TUI_TEXTFIELD_OPTIONS, {\n      skipSelf: true\n    });\n    // TODO: refactor to signal inputs after Angular update\n    this.appearance = signal(this.options.appearance());\n    this.size = signal(this.options.size());\n    this.cleaner = signal(this.options.cleaner());\n  }\n  set tuiTextfieldAppearance(appearance) {\n    this.appearance.set(appearance);\n  }\n  set tuiTextfieldSize(size) {\n    this.size.set(size);\n  }\n  set tuiTextfieldCleaner(enabled) {\n    this.cleaner.set(enabled);\n  }\n  static {\n    this.ɵfac = function TuiTextfieldOptionsDirective_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiTextfieldOptionsDirective)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: TuiTextfieldOptionsDirective,\n      selectors: [[\"\", \"tuiTextfieldAppearance\", \"\"], [\"\", \"tuiTextfieldSize\", \"\"], [\"\", \"tuiTextfieldCleaner\", \"\"]],\n      inputs: {\n        tuiTextfieldAppearance: \"tuiTextfieldAppearance\",\n        tuiTextfieldSize: \"tuiTextfieldSize\",\n        tuiTextfieldCleaner: \"tuiTextfieldCleaner\"\n      },\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([tuiProvide(TUI_TEXTFIELD_OPTIONS, TuiTextfieldOptionsDirective)])]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiTextfieldOptionsDirective, [{\n    type: Directive,\n    args: [{\n      standalone: true,\n      selector: '[tuiTextfieldAppearance],[tuiTextfieldSize],[tuiTextfieldCleaner]',\n      providers: [tuiProvide(TUI_TEXTFIELD_OPTIONS, TuiTextfieldOptionsDirective)]\n    }]\n  }], null, {\n    tuiTextfieldAppearance: [{\n      type: Input\n    }],\n    tuiTextfieldSize: [{\n      type: Input\n    }],\n    tuiTextfieldCleaner: [{\n      type: Input\n    }]\n  });\n})();\nclass TuiTextfieldDropdownDirective {\n  static {\n    this.ɵfac = function TuiTextfieldDropdownDirective_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiTextfieldDropdownDirective)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: TuiTextfieldDropdownDirective,\n      selectors: [[\"ng-template\", \"tuiTextfieldDropdown\", \"\"]],\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiTextfieldDropdownDirective, [{\n    type: Directive,\n    args: [{\n      standalone: true,\n      selector: 'ng-template[tuiTextfieldDropdown]'\n    }]\n  }], null, null);\n})();\nclass TuiWithTextfieldDropdown {\n  constructor() {\n    this.dropdown = tuiDropdown(null);\n  }\n  set template(template) {\n    this.dropdown.set(template);\n  }\n  static {\n    this.ɵfac = function TuiWithTextfieldDropdown_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiWithTextfieldDropdown)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: TuiWithTextfieldDropdown,\n      contentQueries: function TuiWithTextfieldDropdown_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, TuiTextfieldDropdownDirective, 5, TemplateRef);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.template = _t.first);\n        }\n      },\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiWithTextfieldDropdown, [{\n    type: Directive,\n    args: [{\n      standalone: true\n    }]\n  }], null, {\n    template: [{\n      type: ContentChild,\n      args: [TuiTextfieldDropdownDirective, {\n        read: TemplateRef,\n        descendants: true\n      }]\n    }]\n  });\n})();\nclass TuiTextfieldComponent {\n  constructor() {\n    // TODO: refactor to signal inputs after Angular update\n    this.filler = signal('');\n    this.autoId = tuiInjectId();\n    this.el = tuiInjectElement();\n    this.open = tuiDropdownOpen();\n    this.focusedIn = tuiFocusedIn(tuiInjectElement());\n    this.icons = inject(TUI_COMMON_ICONS);\n    this.clear = toSignal(inject(TUI_CLEAR_WORD));\n    this.computedFiller = computed(() => {\n      const value = this.directive?.nativeValue() || '';\n      const filledValue = value + this.filler().slice(value.length);\n      return filledValue.length > value.length ? filledValue : '';\n    });\n    this.showFiller = computed(() => this.focused() && !!this.computedFiller() && (!!this.directive?.nativeValue() || !this.input?.nativeElement.placeholder));\n    this.stringify = String;\n    this.focused = computed(() => this.open() || this.focusedIn());\n    this.options = inject(TUI_TEXTFIELD_OPTIONS);\n  }\n  set fillerSetter(filler) {\n    this.filler.set(filler);\n  }\n  get id() {\n    return this.input?.nativeElement.id || this.autoId;\n  }\n  get size() {\n    return this.options.size();\n  }\n  handleOption(option) {\n    this.directive?.setValue(option);\n    this.open.set(false);\n  }\n  get hasLabel() {\n    return Boolean(this.label?.nativeElement?.childNodes.length);\n  }\n  onResize({\n    contentRect\n  }) {\n    this.el.style.setProperty('--t-side', tuiPx(contentRect.width));\n  }\n  static {\n    this.ɵfac = function TuiTextfieldComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiTextfieldComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: TuiTextfieldComponent,\n      selectors: [[\"tui-textfield\"]],\n      contentQueries: function TuiTextfieldComponent_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, TuiTextfieldDirective, 5);\n          i0.ɵɵcontentQuery(dirIndex, TuiLabel, 5, ElementRef);\n          i0.ɵɵcontentQuery(dirIndex, NgControl, 5);\n          i0.ɵɵcontentQuery(dirIndex, TuiTextfieldDirective, 7, ElementRef);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.directive = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.label = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.control = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.input = _t.first);\n        }\n      },\n      viewQuery: function TuiTextfieldComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 7, ViewContainerRef);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.vcr = _t.first);\n        }\n      },\n      hostVars: 7,\n      hostBindings: function TuiTextfieldComponent_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"data-size\", ctx.options.size());\n          i0.ɵɵclassProp(\"_with-label\", ctx.hasLabel)(\"_with-template\", ctx.content)(\"_disabled\", ctx.input == null ? null : ctx.input.nativeElement.disabled);\n        }\n      },\n      inputs: {\n        stringify: \"stringify\",\n        content: \"content\",\n        fillerSetter: [0, \"filler\", \"fillerSetter\"]\n      },\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([tuiAsDataListHost(TuiTextfieldComponent)]), i0.ɵɵHostDirectivesFeature([i1.TuiDropdownFixed, i1.TuiDropdownDirective, i1.TuiWithDropdownOpen, TuiWithTextfieldDropdown, i3.TuiWithIcons]), i0.ɵɵStandaloneFeature],\n      ngContentSelectors: _c2,\n      decls: 12,\n      vars: 6,\n      consts: [[\"vcr\", \"\"], [1, \"t-content\", 3, \"mousedown.prevent\", \"waResizeObserver\"], [\"appearance\", \"icon\", \"size\", \"xs\", \"tabindex\", \"-1\", \"tuiIconButton\", \"\", \"type\", \"button\", \"class\", \"t-clear\", 3, \"iconStart\", \"click\", \"pointerdown.silent.prevent\", 4, \"ngIf\"], [1, \"t-template\"], [4, \"polymorpheusOutlet\", \"polymorpheusOutletContext\"], [\"aria-hidden\", \"true\", \"disabled\", \"\", \"class\", \"t-filler\", 3, \"value\", 4, \"ngIf\"], [\"appearance\", \"icon\", \"size\", \"xs\", \"tabindex\", \"-1\", \"tuiIconButton\", \"\", \"type\", \"button\", 1, \"t-clear\", 3, \"click\", \"pointerdown.silent.prevent\", \"iconStart\"], [\"aria-hidden\", \"true\", \"disabled\", \"\", 1, \"t-filler\", 3, \"value\"]],\n      template: function TuiTextfieldComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵprojectionDef(_c1);\n          i0.ɵɵprojection(0);\n          i0.ɵɵprojection(1, 1);\n          i0.ɵɵprojection(2, 2);\n          i0.ɵɵelementStart(3, \"span\", 1);\n          i0.ɵɵlistener(\"mousedown.prevent\", function TuiTextfieldComponent_Template_span_mousedown_prevent_3_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.input == null ? null : ctx.input.nativeElement == null ? null : ctx.input.nativeElement.focus());\n          })(\"waResizeObserver\", function TuiTextfieldComponent_Template_span_waResizeObserver_3_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView($event[0] && ctx.onResize($event[0]));\n          });\n          i0.ɵɵprojection(4, 3);\n          i0.ɵɵtemplate(5, TuiTextfieldComponent_button_5_Template, 2, 2, \"button\", 2);\n          i0.ɵɵelementContainer(6, null, 0);\n          i0.ɵɵprojection(8, 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"span\", 3);\n          i0.ɵɵtemplate(10, TuiTextfieldComponent_ng_container_10_Template, 2, 1, \"ng-container\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(11, TuiTextfieldComponent_input_11_Template, 1, 1, \"input\", 5);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ctx.options.cleaner());\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"polymorpheusOutlet\", ctx.content)(\"polymorpheusOutletContext\", i0.ɵɵpureFunction1(4, _c3, ctx.control == null ? null : ctx.control.value));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.showFiller());\n        }\n      },\n      dependencies: [NgIf, PolymorpheusOutlet, TuiButton, WaResizeObserver],\n      styles: [\"tui-textfield{transition-property:color;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;--t-height: var(--tui-height-l);--t-padding: var(--tui-padding-l);position:relative;display:flex;align-items:center;pointer-events:none;cursor:pointer;block-size:var(--t-height);color:var(--tui-text-tertiary);padding:0 var(--t-padding);border-radius:var(--tui-radius-l);font:var(--tui-font-text-m);box-sizing:border-box}tui-textfield[style*=\\\"--t-icon-start:\\\"]{--t-left: 2.25rem}tui-textfield[style*=\\\"--t-icon-end:\\\"]{--t-right: 2.25rem}tui-textfield:after{margin-inline-start:.25rem}tui-textfield input,tui-textfield select{font:var(--tui-font-text-m)}tui-textfield[data-size=s]{--t-height: var(--tui-height-s);--t-padding: var(--tui-padding-s);border-radius:var(--tui-radius-m);font:var(--tui-font-text-s)}tui-textfield[data-size=s][style*=\\\"--t-icon-start:\\\"]{--t-left: 1.25rem}tui-textfield[data-size=s][style*=\\\"--t-icon-end:\\\"]{--t-right: 1.25rem}tui-textfield[data-size=s]:before{margin:0 .5rem 0 -.125rem;font-size:1rem}tui-textfield[data-size=s]:after{margin:0 -.175rem 0 .575rem;font-size:1rem}tui-textfield[data-size=s] input,tui-textfield[data-size=s] select{font:var(--tui-font-text-s)}tui-textfield[data-size=s] .t-content{gap:0;margin-inline-end:-.325rem}tui-textfield[data-size=m]{--t-height: var(--tui-height-m);--t-padding: var(--tui-padding-m);border-radius:var(--tui-radius-m);font:var(--tui-font-text-s)}tui-textfield[data-size=m][style*=\\\"--t-icon-start:\\\"]{--t-left: 1.75rem}tui-textfield[data-size=m][style*=\\\"--t-icon-end:\\\"]{--t-right: 1.75rem}tui-textfield[data-size=m]:before{margin:0 .375rem 0 -.125rem}tui-textfield[data-size=m]:after{margin:0 -.125rem 0 .5rem}tui-textfield[data-size=m] input,tui-textfield[data-size=m] select{font:var(--tui-font-text-s)}tui-textfield[data-size=m] .t-content{margin-inline-end:-.125rem}tui-textfield:hover{color:var(--tui-text-secondary)}tui-textfield:hover:has(input:read-only),tui-textfield:hover:has(select[data-mode~=readonly]){color:var(--tui-text-tertiary)}tui-textfield:before{z-index:1;margin-inline-end:.75rem}tui-textfield:has(:disabled:not(.t-filler,button,option)):before,tui-textfield:has(:disabled:not(.t-filler,button,option)):after,tui-textfield:has(:disabled:not(.t-filler,button,option)) .t-template{opacity:var(--tui-disabled-opacity)}tui-textfield._disabled:before,tui-textfield._disabled:after,tui-textfield._disabled .t-template{opacity:var(--tui-disabled-opacity)}tui-textfield:has(label:not(:empty)) .t-template,tui-textfield:has(label:not(:empty)) input:defined,tui-textfield:has(label:not(:empty)) select:defined{padding-top:calc(var(--t-height) / 3)}tui-textfield:has(label:not(:empty)) .t-template::placeholder,tui-textfield:has(label:not(:empty)) input:defined::placeholder,tui-textfield:has(label:not(:empty)) select:defined::placeholder,tui-textfield:has(label:not(:empty)) .t-template._empty,tui-textfield:has(label:not(:empty)) input:defined._empty,tui-textfield:has(label:not(:empty)) select:defined._empty{color:transparent}tui-textfield._with-label .t-template,tui-textfield._with-label input:defined,tui-textfield._with-label select:defined{padding-top:calc(var(--t-height) / 3)}tui-textfield._with-label .t-template::placeholder,tui-textfield._with-label input:defined::placeholder,tui-textfield._with-label select:defined::placeholder,tui-textfield._with-label .t-template._empty,tui-textfield._with-label input:defined._empty,tui-textfield._with-label select:defined._empty{color:transparent}tui-textfield .t-template,tui-textfield input:defined,tui-textfield select:defined{position:absolute;top:0;left:0;inline-size:100%;block-size:100%;-webkit-appearance:none;appearance:none;box-sizing:border-box;border-radius:inherit;padding:inherit;border:none;text-indent:var(--t-left, 0);padding-inline-end:calc(var(--t-right, var(--t-0, 0rem)) + var(--t-side) + var(--t-padding))}tui-textfield .t-template{display:flex;align-items:center}tui-textfield._with-template select{color:transparent!important}tui-textfield input:defined,tui-textfield select:defined{pointer-events:auto;background:transparent}tui-textfield input:defined:read-only~.t-filler,tui-textfield select:defined:read-only~.t-filler{display:none}tui-textfield input:defined:disabled~label,tui-textfield select:defined:disabled~label,tui-textfield input:defined:disabled~.t-content,tui-textfield select:defined:disabled~.t-content{opacity:var(--tui-disabled-opacity)}tui-textfield input:defined:disabled~label>tui-icon,tui-textfield select:defined:disabled~label>tui-icon,tui-textfield input:defined:disabled~.t-content>tui-icon,tui-textfield select:defined:disabled~.t-content>tui-icon{display:none}tui-textfield input:defined:-webkit-autofill~label,tui-textfield select:defined:-webkit-autofill~label,tui-textfield input:defined:not(._empty):not(:placeholder-shown)~label,tui-textfield select:defined:not(._empty):not(:placeholder-shown)~label{font-size:.83em;transform:translateY(-.7em)}tui-textfield input:defined:-webkit-autofill:not(:disabled)[data-mode~=invalid]~label,tui-textfield select:defined:-webkit-autofill:not(:disabled)[data-mode~=invalid]~label,tui-textfield input:defined:not(._empty):not(:placeholder-shown):not(:disabled)[data-mode~=invalid]~label,tui-textfield select:defined:not(._empty):not(:placeholder-shown):not(:disabled)[data-mode~=invalid]~label,tui-textfield input:defined:-webkit-autofill:invalid:not(:disabled):not([data-mode])~label,tui-textfield select:defined:-webkit-autofill:invalid:not(:disabled):not([data-mode])~label,tui-textfield input:defined:not(._empty):not(:placeholder-shown):invalid:not(:disabled):not([data-mode])~label,tui-textfield select:defined:not(._empty):not(:placeholder-shown):invalid:not(:disabled):not([data-mode])~label{color:var(--tui-text-negative)}tui-textfield input:defined:-webkit-autofill:not(:disabled):not([data-mode~=readonly])~.t-content .t-clear,tui-textfield select:defined:-webkit-autofill:not(:disabled):not([data-mode~=readonly])~.t-content .t-clear,tui-textfield input:defined:not(._empty):not(:placeholder-shown):not(:disabled):not([data-mode~=readonly])~.t-content .t-clear,tui-textfield select:defined:not(._empty):not(:placeholder-shown):not(:disabled):not([data-mode~=readonly])~.t-content .t-clear{display:flex}tui-textfield input:defined:not([data-mode~=readonly]):focus-visible:not([data-focus=false])::placeholder,tui-textfield select:defined:not([data-mode~=readonly]):focus-visible:not([data-focus=false])::placeholder,tui-textfield input:defined:not([data-mode~=readonly]):focus-visible:not([data-focus=false])._empty,tui-textfield select:defined:not([data-mode~=readonly]):focus-visible:not([data-focus=false])._empty{color:var(--tui-text-tertiary)}tui-textfield input:defined:not([data-mode~=readonly]):focus-visible:not([data-focus=false])~label,tui-textfield select:defined:not([data-mode~=readonly]):focus-visible:not([data-focus=false])~label{color:var(--tui-text-primary)!important;font-size:.83em;transform:translateY(-.7em)}tui-textfield input:defined:not([data-mode~=readonly])[data-focus=true]::placeholder,tui-textfield select:defined:not([data-mode~=readonly])[data-focus=true]::placeholder,tui-textfield input:defined:not([data-mode~=readonly])[data-focus=true]._empty,tui-textfield select:defined:not([data-mode~=readonly])[data-focus=true]._empty{color:var(--tui-text-tertiary)}tui-textfield input:defined:not([data-mode~=readonly])[data-focus=true]~label,tui-textfield select:defined:not([data-mode~=readonly])[data-focus=true]~label{color:var(--tui-text-primary)!important;font-size:.83em;transform:translateY(-.7em)}tui-textfield input:defined:not([data-mode~=readonly])[tuiWrapper]:not(._focused):has(:focus-visible)::placeholder,tui-textfield select:defined:not([data-mode~=readonly])[tuiWrapper]:not(._focused):has(:focus-visible)::placeholder,tui-textfield input:defined:not([data-mode~=readonly])[tuiWrapper]._focused::placeholder,tui-textfield select:defined:not([data-mode~=readonly])[tuiWrapper]._focused::placeholder,tui-textfield input:defined:not([data-mode~=readonly])[tuiWrapper]:not(._focused):has(:focus-visible)._empty,tui-textfield select:defined:not([data-mode~=readonly])[tuiWrapper]:not(._focused):has(:focus-visible)._empty,tui-textfield input:defined:not([data-mode~=readonly])[tuiWrapper]._focused._empty,tui-textfield select:defined:not([data-mode~=readonly])[tuiWrapper]._focused._empty{color:var(--tui-text-tertiary)}tui-textfield input:defined:not([data-mode~=readonly])[tuiWrapper]:not(._focused):has(:focus-visible)~label,tui-textfield select:defined:not([data-mode~=readonly])[tuiWrapper]:not(._focused):has(:focus-visible)~label,tui-textfield input:defined:not([data-mode~=readonly])[tuiWrapper]._focused~label,tui-textfield select:defined:not([data-mode~=readonly])[tuiWrapper]._focused~label{color:var(--tui-text-primary)!important;font-size:.83em;transform:translateY(-.7em)}@supports (-webkit-touch-callout: none){tui-textfield input:defined._ios-fix,tui-textfield select:defined._ios-fix{position:fixed;left:1000rem}}tui-textfield label:not([data-orientation=vertical]){transition-property:all;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;position:relative;display:block;flex:1;font-size:inherit}tui-textfield label:defined,tui-textfield input:defined::placeholder,tui-textfield select:defined._empty{color:var(--tui-text-secondary)}tui-textfield select:not([data-mode~=readonly]){cursor:pointer}tui-textfield button,tui-textfield a{pointer-events:auto}tui-textfield .t-content{display:flex;align-items:center;gap:.25rem;margin-inline-start:auto;isolation:isolate}tui-textfield .t-content>tui-icon{pointer-events:auto}tui-textfield .t-clear{display:none;pointer-events:auto}tui-textfield .t-filler:defined{pointer-events:none;background:none;color:var(--tui-text-tertiary);opacity:1}tui-textfield [tuiFluidTypography]{font-weight:700}\\n\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiTextfieldComponent, [{\n    type: Component,\n    args: [{\n      standalone: true,\n      selector: 'tui-textfield',\n      imports: [NgIf, PolymorpheusOutlet, TuiButton, WaResizeObserver],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [tuiAsDataListHost(TuiTextfieldComponent)],\n      hostDirectives: [TuiDropdownFixed, TuiDropdownDirective, TuiWithDropdownOpen, TuiWithTextfieldDropdown, TuiWithIcons],\n      host: {\n        '[attr.data-size]': 'options.size()',\n        '[class._with-label]': 'hasLabel',\n        '[class._with-template]': 'content',\n        '[class._disabled]': 'input?.nativeElement.disabled'\n      },\n      template: \"<ng-content select=\\\"input\\\" />\\n<ng-content select=\\\"select\\\" />\\n<ng-content select=\\\"label\\\" />\\n<span\\n    class=\\\"t-content\\\"\\n    (mousedown.prevent)=\\\"input?.nativeElement?.focus()\\\"\\n    (waResizeObserver)=\\\"$event[0] && onResize($event[0])\\\"\\n>\\n    <ng-content />\\n    <button\\n        *ngIf=\\\"options.cleaner()\\\"\\n        appearance=\\\"icon\\\"\\n        size=\\\"xs\\\"\\n        tabindex=\\\"-1\\\"\\n        tuiIconButton\\n        type=\\\"button\\\"\\n        class=\\\"t-clear\\\"\\n        [iconStart]=\\\"icons.close\\\"\\n        (click)=\\\"directive?.setValue(null)\\\"\\n        (pointerdown.silent.prevent)=\\\"input?.nativeElement?.focus()\\\"\\n    >\\n        {{ clear() }}\\n    </button>\\n    <ng-container #vcr />\\n    <ng-content select=\\\"tui-icon\\\" />\\n</span>\\n<span class=\\\"t-template\\\">\\n    <ng-container *polymorpheusOutlet=\\\"content as text; context: {$implicit: control?.value}\\\">\\n        {{ text }}\\n    </ng-container>\\n</span>\\n<input\\n    *ngIf=\\\"showFiller()\\\"\\n    aria-hidden=\\\"true\\\"\\n    disabled\\n    class=\\\"t-filler\\\"\\n    [value]=\\\"computedFiller()\\\"\\n/>\\n\",\n      styles: [\"tui-textfield{transition-property:color;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;--t-height: var(--tui-height-l);--t-padding: var(--tui-padding-l);position:relative;display:flex;align-items:center;pointer-events:none;cursor:pointer;block-size:var(--t-height);color:var(--tui-text-tertiary);padding:0 var(--t-padding);border-radius:var(--tui-radius-l);font:var(--tui-font-text-m);box-sizing:border-box}tui-textfield[style*=\\\"--t-icon-start:\\\"]{--t-left: 2.25rem}tui-textfield[style*=\\\"--t-icon-end:\\\"]{--t-right: 2.25rem}tui-textfield:after{margin-inline-start:.25rem}tui-textfield input,tui-textfield select{font:var(--tui-font-text-m)}tui-textfield[data-size=s]{--t-height: var(--tui-height-s);--t-padding: var(--tui-padding-s);border-radius:var(--tui-radius-m);font:var(--tui-font-text-s)}tui-textfield[data-size=s][style*=\\\"--t-icon-start:\\\"]{--t-left: 1.25rem}tui-textfield[data-size=s][style*=\\\"--t-icon-end:\\\"]{--t-right: 1.25rem}tui-textfield[data-size=s]:before{margin:0 .5rem 0 -.125rem;font-size:1rem}tui-textfield[data-size=s]:after{margin:0 -.175rem 0 .575rem;font-size:1rem}tui-textfield[data-size=s] input,tui-textfield[data-size=s] select{font:var(--tui-font-text-s)}tui-textfield[data-size=s] .t-content{gap:0;margin-inline-end:-.325rem}tui-textfield[data-size=m]{--t-height: var(--tui-height-m);--t-padding: var(--tui-padding-m);border-radius:var(--tui-radius-m);font:var(--tui-font-text-s)}tui-textfield[data-size=m][style*=\\\"--t-icon-start:\\\"]{--t-left: 1.75rem}tui-textfield[data-size=m][style*=\\\"--t-icon-end:\\\"]{--t-right: 1.75rem}tui-textfield[data-size=m]:before{margin:0 .375rem 0 -.125rem}tui-textfield[data-size=m]:after{margin:0 -.125rem 0 .5rem}tui-textfield[data-size=m] input,tui-textfield[data-size=m] select{font:var(--tui-font-text-s)}tui-textfield[data-size=m] .t-content{margin-inline-end:-.125rem}tui-textfield:hover{color:var(--tui-text-secondary)}tui-textfield:hover:has(input:read-only),tui-textfield:hover:has(select[data-mode~=readonly]){color:var(--tui-text-tertiary)}tui-textfield:before{z-index:1;margin-inline-end:.75rem}tui-textfield:has(:disabled:not(.t-filler,button,option)):before,tui-textfield:has(:disabled:not(.t-filler,button,option)):after,tui-textfield:has(:disabled:not(.t-filler,button,option)) .t-template{opacity:var(--tui-disabled-opacity)}tui-textfield._disabled:before,tui-textfield._disabled:after,tui-textfield._disabled .t-template{opacity:var(--tui-disabled-opacity)}tui-textfield:has(label:not(:empty)) .t-template,tui-textfield:has(label:not(:empty)) input:defined,tui-textfield:has(label:not(:empty)) select:defined{padding-top:calc(var(--t-height) / 3)}tui-textfield:has(label:not(:empty)) .t-template::placeholder,tui-textfield:has(label:not(:empty)) input:defined::placeholder,tui-textfield:has(label:not(:empty)) select:defined::placeholder,tui-textfield:has(label:not(:empty)) .t-template._empty,tui-textfield:has(label:not(:empty)) input:defined._empty,tui-textfield:has(label:not(:empty)) select:defined._empty{color:transparent}tui-textfield._with-label .t-template,tui-textfield._with-label input:defined,tui-textfield._with-label select:defined{padding-top:calc(var(--t-height) / 3)}tui-textfield._with-label .t-template::placeholder,tui-textfield._with-label input:defined::placeholder,tui-textfield._with-label select:defined::placeholder,tui-textfield._with-label .t-template._empty,tui-textfield._with-label input:defined._empty,tui-textfield._with-label select:defined._empty{color:transparent}tui-textfield .t-template,tui-textfield input:defined,tui-textfield select:defined{position:absolute;top:0;left:0;inline-size:100%;block-size:100%;-webkit-appearance:none;appearance:none;box-sizing:border-box;border-radius:inherit;padding:inherit;border:none;text-indent:var(--t-left, 0);padding-inline-end:calc(var(--t-right, var(--t-0, 0rem)) + var(--t-side) + var(--t-padding))}tui-textfield .t-template{display:flex;align-items:center}tui-textfield._with-template select{color:transparent!important}tui-textfield input:defined,tui-textfield select:defined{pointer-events:auto;background:transparent}tui-textfield input:defined:read-only~.t-filler,tui-textfield select:defined:read-only~.t-filler{display:none}tui-textfield input:defined:disabled~label,tui-textfield select:defined:disabled~label,tui-textfield input:defined:disabled~.t-content,tui-textfield select:defined:disabled~.t-content{opacity:var(--tui-disabled-opacity)}tui-textfield input:defined:disabled~label>tui-icon,tui-textfield select:defined:disabled~label>tui-icon,tui-textfield input:defined:disabled~.t-content>tui-icon,tui-textfield select:defined:disabled~.t-content>tui-icon{display:none}tui-textfield input:defined:-webkit-autofill~label,tui-textfield select:defined:-webkit-autofill~label,tui-textfield input:defined:not(._empty):not(:placeholder-shown)~label,tui-textfield select:defined:not(._empty):not(:placeholder-shown)~label{font-size:.83em;transform:translateY(-.7em)}tui-textfield input:defined:-webkit-autofill:not(:disabled)[data-mode~=invalid]~label,tui-textfield select:defined:-webkit-autofill:not(:disabled)[data-mode~=invalid]~label,tui-textfield input:defined:not(._empty):not(:placeholder-shown):not(:disabled)[data-mode~=invalid]~label,tui-textfield select:defined:not(._empty):not(:placeholder-shown):not(:disabled)[data-mode~=invalid]~label,tui-textfield input:defined:-webkit-autofill:invalid:not(:disabled):not([data-mode])~label,tui-textfield select:defined:-webkit-autofill:invalid:not(:disabled):not([data-mode])~label,tui-textfield input:defined:not(._empty):not(:placeholder-shown):invalid:not(:disabled):not([data-mode])~label,tui-textfield select:defined:not(._empty):not(:placeholder-shown):invalid:not(:disabled):not([data-mode])~label{color:var(--tui-text-negative)}tui-textfield input:defined:-webkit-autofill:not(:disabled):not([data-mode~=readonly])~.t-content .t-clear,tui-textfield select:defined:-webkit-autofill:not(:disabled):not([data-mode~=readonly])~.t-content .t-clear,tui-textfield input:defined:not(._empty):not(:placeholder-shown):not(:disabled):not([data-mode~=readonly])~.t-content .t-clear,tui-textfield select:defined:not(._empty):not(:placeholder-shown):not(:disabled):not([data-mode~=readonly])~.t-content .t-clear{display:flex}tui-textfield input:defined:not([data-mode~=readonly]):focus-visible:not([data-focus=false])::placeholder,tui-textfield select:defined:not([data-mode~=readonly]):focus-visible:not([data-focus=false])::placeholder,tui-textfield input:defined:not([data-mode~=readonly]):focus-visible:not([data-focus=false])._empty,tui-textfield select:defined:not([data-mode~=readonly]):focus-visible:not([data-focus=false])._empty{color:var(--tui-text-tertiary)}tui-textfield input:defined:not([data-mode~=readonly]):focus-visible:not([data-focus=false])~label,tui-textfield select:defined:not([data-mode~=readonly]):focus-visible:not([data-focus=false])~label{color:var(--tui-text-primary)!important;font-size:.83em;transform:translateY(-.7em)}tui-textfield input:defined:not([data-mode~=readonly])[data-focus=true]::placeholder,tui-textfield select:defined:not([data-mode~=readonly])[data-focus=true]::placeholder,tui-textfield input:defined:not([data-mode~=readonly])[data-focus=true]._empty,tui-textfield select:defined:not([data-mode~=readonly])[data-focus=true]._empty{color:var(--tui-text-tertiary)}tui-textfield input:defined:not([data-mode~=readonly])[data-focus=true]~label,tui-textfield select:defined:not([data-mode~=readonly])[data-focus=true]~label{color:var(--tui-text-primary)!important;font-size:.83em;transform:translateY(-.7em)}tui-textfield input:defined:not([data-mode~=readonly])[tuiWrapper]:not(._focused):has(:focus-visible)::placeholder,tui-textfield select:defined:not([data-mode~=readonly])[tuiWrapper]:not(._focused):has(:focus-visible)::placeholder,tui-textfield input:defined:not([data-mode~=readonly])[tuiWrapper]._focused::placeholder,tui-textfield select:defined:not([data-mode~=readonly])[tuiWrapper]._focused::placeholder,tui-textfield input:defined:not([data-mode~=readonly])[tuiWrapper]:not(._focused):has(:focus-visible)._empty,tui-textfield select:defined:not([data-mode~=readonly])[tuiWrapper]:not(._focused):has(:focus-visible)._empty,tui-textfield input:defined:not([data-mode~=readonly])[tuiWrapper]._focused._empty,tui-textfield select:defined:not([data-mode~=readonly])[tuiWrapper]._focused._empty{color:var(--tui-text-tertiary)}tui-textfield input:defined:not([data-mode~=readonly])[tuiWrapper]:not(._focused):has(:focus-visible)~label,tui-textfield select:defined:not([data-mode~=readonly])[tuiWrapper]:not(._focused):has(:focus-visible)~label,tui-textfield input:defined:not([data-mode~=readonly])[tuiWrapper]._focused~label,tui-textfield select:defined:not([data-mode~=readonly])[tuiWrapper]._focused~label{color:var(--tui-text-primary)!important;font-size:.83em;transform:translateY(-.7em)}@supports (-webkit-touch-callout: none){tui-textfield input:defined._ios-fix,tui-textfield select:defined._ios-fix{position:fixed;left:1000rem}}tui-textfield label:not([data-orientation=vertical]){transition-property:all;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;position:relative;display:block;flex:1;font-size:inherit}tui-textfield label:defined,tui-textfield input:defined::placeholder,tui-textfield select:defined._empty{color:var(--tui-text-secondary)}tui-textfield select:not([data-mode~=readonly]){cursor:pointer}tui-textfield button,tui-textfield a{pointer-events:auto}tui-textfield .t-content{display:flex;align-items:center;gap:.25rem;margin-inline-start:auto;isolation:isolate}tui-textfield .t-content>tui-icon{pointer-events:auto}tui-textfield .t-clear{display:none;pointer-events:auto}tui-textfield .t-filler:defined{pointer-events:none;background:none;color:var(--tui-text-tertiary);opacity:1}tui-textfield [tuiFluidTypography]{font-weight:700}\\n\"]\n    }]\n  }], null, {\n    directive: [{\n      type: ContentChild,\n      args: [forwardRef(() => TuiTextfieldDirective)]\n    }],\n    label: [{\n      type: ContentChild,\n      args: [forwardRef(() => TuiLabel), {\n        read: ElementRef\n      }]\n    }],\n    control: [{\n      type: ContentChild,\n      args: [NgControl]\n    }],\n    vcr: [{\n      type: ViewChild,\n      args: ['vcr', {\n        read: ViewContainerRef,\n        static: true\n      }]\n    }],\n    input: [{\n      type: ContentChild,\n      args: [forwardRef(() => TuiTextfieldDirective), {\n        read: ElementRef,\n        static: true\n      }]\n    }],\n    stringify: [{\n      type: Input\n    }],\n    content: [{\n      type: Input\n    }],\n    fillerSetter: [{\n      type: Input,\n      args: ['filler']\n    }]\n  });\n})();\nclass TuiTextfieldBase {\n  constructor() {\n    // TODO: refactor to signal inputs after Angular update\n    this.focused = signal(null);\n    this.control = inject(NgControl, {\n      optional: true\n    });\n    this.a = tuiAppearance(inject(TUI_TEXTFIELD_OPTIONS).appearance);\n    this.s = tuiAppearanceState(null);\n    this.m = tuiAppearanceMode(this.mode);\n    this.f = tuiAppearanceFocus(computed(() => this.focused() || this.textfield.focused()));\n    this.el = tuiInjectElement();\n    this.textfield = inject(TuiTextfieldComponent);\n    this.readOnly = false;\n    this.invalid = null;\n    this.nativeValue = toSignal(merge(fromEvent(this.el, 'input'), timer(0) // https://github.com/angular/angular/issues/54418\n    .pipe(switchMap(() => tuiControlValue(this.control)))).pipe(map(() => this.el.value)), {\n      initialValue: this.el.value\n    });\n  }\n  set focusedSetter(focused) {\n    this.focused.set(focused);\n  }\n  set stateSetter(state) {\n    this.s.set(state);\n  }\n  get mode() {\n    if (this.readOnly) {\n      return 'readonly';\n    }\n    if (this.invalid === false) {\n      return 'valid';\n    }\n    if (this.invalid) {\n      return 'invalid';\n    }\n    return null;\n  }\n  // TODO: refactor to signal inputs after Angular update\n  ngOnChanges() {\n    this.m.set(this.mode);\n  }\n  setValue(value) {\n    this.el.focus();\n    this.el.select();\n    if (value == null) {\n      this.el.ownerDocument.execCommand('delete');\n    } else {\n      this.el.ownerDocument.execCommand('insertText', false, this.textfield.stringify(value));\n    }\n  }\n  static {\n    this.ɵfac = function TuiTextfieldBase_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiTextfieldBase)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: TuiTextfieldBase,\n      inputs: {\n        readOnly: \"readOnly\",\n        invalid: \"invalid\",\n        focusedSetter: [0, \"focused\", \"focusedSetter\"],\n        stateSetter: [0, \"state\", \"stateSetter\"]\n      },\n      features: [i0.ɵɵNgOnChangesFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiTextfieldBase, [{\n    type: Directive\n  }], null, {\n    readOnly: [{\n      type: Input\n    }],\n    invalid: [{\n      type: Input\n    }],\n    focusedSetter: [{\n      type: Input,\n      args: ['focused']\n    }],\n    stateSetter: [{\n      type: Input,\n      args: ['state']\n    }]\n  });\n})();\nclass TuiTextfieldDirective extends TuiTextfieldBase {\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵTuiTextfieldDirective_BaseFactory;\n      return function TuiTextfieldDirective_Factory(__ngFactoryType__) {\n        return (ɵTuiTextfieldDirective_BaseFactory || (ɵTuiTextfieldDirective_BaseFactory = i0.ɵɵgetInheritedFactory(TuiTextfieldDirective)))(__ngFactoryType__ || TuiTextfieldDirective);\n      };\n    })();\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: TuiTextfieldDirective,\n      selectors: [[\"input\", \"tuiTextfield\", \"\"]],\n      hostVars: 4,\n      hostBindings: function TuiTextfieldDirective_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"input\", function TuiTextfieldDirective_input_HostBindingHandler() {\n            return 0;\n          })(\"focusin\", function TuiTextfieldDirective_focusin_HostBindingHandler() {\n            return 0;\n          })(\"focusout\", function TuiTextfieldDirective_focusout_HostBindingHandler() {\n            return 0;\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵhostProperty(\"id\", ctx.textfield.id)(\"readOnly\", ctx.readOnly);\n          i0.ɵɵclassProp(\"_empty\", ctx.el.value === \"\");\n        }\n      },\n      standalone: true,\n      features: [i0.ɵɵHostDirectivesFeature([i1$1.TuiNativeValidator, i2.TuiAppearance]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiTextfieldDirective, [{\n    type: Directive,\n    args: [{\n      standalone: true,\n      selector: 'input[tuiTextfield]',\n      hostDirectives: [TuiNativeValidator, TuiAppearance],\n      host: {\n        '[id]': 'textfield.id',\n        '[readOnly]': 'readOnly',\n        '[class._empty]': 'el.value === \"\"',\n        '(input)': '0',\n        '(focusin)': '0',\n        '(focusout)': '0'\n      }\n    }]\n  }], null, null);\n})();\nclass TuiSelect extends TuiTextfieldBase {\n  constructor() {\n    super(...arguments);\n    this.nav = inject(WA_NAVIGATOR);\n    this.placeholder = '';\n  }\n  setValue(value) {\n    this.control?.control?.setValue(value);\n    this.el.dispatchEvent(new Event('input', {\n      bubbles: true\n    }));\n  }\n  focus() {\n    this.el.classList.add('_ios-fix');\n    this.el.focus();\n    this.el.classList.remove('_ios-fix');\n  }\n  get value() {\n    return this.textfield.stringify(this.control?.value ?? '');\n  }\n  onCopy() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      yield _this.nav.clipboard.writeText(_this.value);\n    })();\n  }\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵTuiSelect_BaseFactory;\n      return function TuiSelect_Factory(__ngFactoryType__) {\n        return (ɵTuiSelect_BaseFactory || (ɵTuiSelect_BaseFactory = i0.ɵɵgetInheritedFactory(TuiSelect)))(__ngFactoryType__ || TuiSelect);\n      };\n    })();\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: TuiSelect,\n      selectors: [[\"select\", \"tuiTextfield\", \"\"]],\n      hostVars: 3,\n      hostBindings: function TuiSelect_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"input\", function TuiSelect_input_HostBindingHandler() {\n            return 0;\n          })(\"focusin\", function TuiSelect_focusin_HostBindingHandler() {\n            return 0;\n          })(\"focusout\", function TuiSelect_focusout_HostBindingHandler() {\n            return 0;\n          })(\"keydown.space.prevent\", function TuiSelect_keydown_space_prevent_HostBindingHandler() {\n            return 0;\n          })(\"keydown.enter.prevent\", function TuiSelect_keydown_enter_prevent_HostBindingHandler() {\n            return 0;\n          })(\"keydown.backspace\", function TuiSelect_keydown_backspace_HostBindingHandler() {\n            return ctx.setValue(\"\");\n          })(\"mousedown.prevent\", function TuiSelect_mousedown_prevent_HostBindingHandler() {\n            return ctx.focus();\n          })(\"keydown.control.c\", function TuiSelect_keydown_control_c_HostBindingHandler() {\n            return ctx.onCopy();\n          })(\"keydown.meta.c\", function TuiSelect_keydown_meta_c_HostBindingHandler() {\n            return ctx.onCopy();\n          });\n        }\n        if (rf & 2) {\n          i0.ɵɵhostProperty(\"id\", ctx.textfield.id);\n          i0.ɵɵclassProp(\"_empty\", ctx.value === \"\");\n        }\n      },\n      inputs: {\n        placeholder: \"placeholder\"\n      },\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([tuiProvide(TuiTextfieldDirective, TuiSelect)]), i0.ɵɵHostDirectivesFeature([i1$1.TuiNativeValidator, i2.TuiAppearance]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n      attrs: _c4,\n      decls: 3,\n      vars: 2,\n      consts: [[\"selected\", \"\"], [\"disabled\", \"\", \"selected\", \"\", \"value\", \"\", 4, \"ngIf\", \"ngIfElse\"], [\"disabled\", \"\", \"selected\", \"\", \"value\", \"\"], [\"selected\", \"\", 3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"selected\", \"\", 3, \"value\"]],\n      template: function TuiSelect_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, TuiSelect_option_0_Template, 2, 1, \"option\", 1)(1, TuiSelect_ng_template_1_Template, 1, 3, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n        }\n        if (rf & 2) {\n          const selected_r3 = i0.ɵɵreference(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.placeholder && !ctx.value)(\"ngIfElse\", selected_r3);\n        }\n      },\n      dependencies: [CommonModule, i3$1.NgForOf, i3$1.NgIf],\n      encapsulation: 2\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiSelect, [{\n    type: Component,\n    args: [{\n      standalone: true,\n      selector: 'select[tuiTextfield]',\n      imports: [CommonModule],\n      changeDetection: ChangeDetectionStrategy.Default,\n      providers: [tuiProvide(TuiTextfieldDirective, TuiSelect)],\n      hostDirectives: [TuiNativeValidator, TuiAppearance],\n      host: {\n        '[id]': 'textfield.id',\n        '[class._empty]': 'value === \"\"',\n        '(input)': '0',\n        '(focusin)': '0',\n        '(focusout)': '0',\n        '(keydown.space.prevent)': '0',\n        '(keydown.enter.prevent)': '0',\n        '(keydown.backspace)': 'setValue(\"\")',\n        '(mousedown.prevent)': 'focus()',\n        '(keydown.control.c)': 'onCopy()',\n        '(keydown.meta.c)': 'onCopy()'\n      },\n      template: \"<option\\n    *ngIf=\\\"placeholder && !value; else selected\\\"\\n    disabled\\n    selected\\n    value=\\\"\\\"\\n>\\n    {{ placeholder }}\\n</option>\\n<ng-template #selected>\\n    <option\\n        *ngFor=\\\"let item of [value]\\\"\\n        selected\\n        [value]=\\\"item\\\"\\n    >\\n        {{ item }}\\n    </option>\\n</ng-template>\\n\"\n    }]\n  }], null, {\n    placeholder: [{\n      type: Input\n    }]\n  });\n})();\nconst TuiTextfield = [TuiLabel, TuiSelect, TuiTextfieldComponent, TuiTextfieldDirective, TuiTextfieldOptionsDirective, TuiTextfieldDropdownDirective];\nclass TuiTextfieldContent {\n  constructor() {\n    inject(TuiTextfieldComponent).vcr?.createEmbeddedView(inject(TemplateRef));\n  }\n  static {\n    this.ɵfac = function TuiTextfieldContent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiTextfieldContent)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: TuiTextfieldContent,\n      selectors: [[\"ng-template\", \"tuiTextfieldContent\", \"\"]],\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiTextfieldContent, [{\n    type: Directive,\n    args: [{\n      standalone: true,\n      selector: 'ng-template[tuiTextfieldContent]'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TUI_TEXTFIELD_OPTIONS, TuiSelect, TuiTextfield, TuiTextfieldBase, TuiTextfieldComponent, TuiTextfieldContent, TuiTextfieldDirective, TuiTextfieldDropdownDirective, TuiTextfieldOptionsDirective, TuiWithTextfieldDropdown, tuiTextfieldOptionsProvider };","map":{"version":3,"names":["TuiLabel","i3$1","NgIf","CommonModule","i0","signal","Optional","SkipSelf","inject","Directive","Input","TemplateRef","ContentChild","computed","ElementRef","ViewContainerRef","Component","ViewEncapsulation","ChangeDetectionStrategy","forwardRef","ViewChild","WA_NAVIGATOR","i1$1","TuiNativeValidator","tuiCreateToken","tuiProvide","tuiPx","i2","tuiAppearance","tuiAppearanceState","tuiAppearanceMode","tuiAppearanceFocus","TuiAppearance","toSignal","NgControl","tuiControlValue","tuiInjectElement","merge","fromEvent","timer","switchMap","map","WaResizeObserver","tuiInjectId","tuiFocusedIn","TuiButton","tuiAsDataListHost","i1","tuiDropdown","tuiDropdownOpen","TuiDropdownFixed","TuiDropdownDirective","TuiWithDropdownOpen","i3","TuiWithIcons","TUI_COMMON_ICONS","TUI_CLEAR_WORD","PolymorpheusOutlet","_c0","_c1","_c2","_c3","a0","$implicit","TuiTextfieldComponent_button_5_Template","rf","ctx","_r2","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","TuiTextfieldComponent_button_5_Template_button_click_0_listener","ɵɵrestoreView","ctx_r2","ɵɵnextContext","ɵɵresetView","directive","setValue","TuiTextfieldComponent_button_5_Template_button_pointerdown_silent_prevent_0_listener","input","nativeElement","focus","ɵɵtext","ɵɵelementEnd","ɵɵproperty","icons","close","ɵɵadvance","ɵɵtextInterpolate1","clear","TuiTextfieldComponent_ng_container_10_Template","ɵɵelementContainerStart","ɵɵelementContainerEnd","text_r4","polymorpheusOutlet","TuiTextfieldComponent_input_11_Template","ɵɵelement","computedFiller","_c4","_c5","TuiSelect_option_0_Template","ctx_r0","placeholder","TuiSelect_ng_template_1_option_0_Template","item_r2","TuiSelect_ng_template_1_Template","ɵɵtemplate","ɵɵpureFunction1","value","DEFAULT","appearance","size","cleaner","TUI_TEXTFIELD_OPTIONS","tuiTextfieldOptionsProvider","options","provide","deps","useFactory","parent","TuiTextfieldOptionsDirective","constructor","skipSelf","tuiTextfieldAppearance","set","tuiTextfieldSize","tuiTextfieldCleaner","enabled","ɵfac","TuiTextfieldOptionsDirective_Factory","__ngFactoryType__","ɵdir","ɵɵdefineDirective","type","selectors","inputs","standalone","features","ɵɵProvidersFeature","ngDevMode","ɵsetClassMetadata","args","selector","providers","TuiTextfieldDropdownDirective","TuiTextfieldDropdownDirective_Factory","TuiWithTextfieldDropdown","dropdown","template","TuiWithTextfieldDropdown_Factory","contentQueries","TuiWithTextfieldDropdown_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","read","descendants","TuiTextfieldComponent","filler","autoId","el","open","focusedIn","nativeValue","filledValue","slice","length","showFiller","focused","stringify","String","fillerSetter","id","handleOption","option","hasLabel","Boolean","label","childNodes","onResize","contentRect","style","setProperty","width","TuiTextfieldComponent_Factory","ɵcmp","ɵɵdefineComponent","TuiTextfieldComponent_ContentQueries","TuiTextfieldDirective","control","viewQuery","TuiTextfieldComponent_Query","ɵɵviewQuery","vcr","hostVars","hostBindings","TuiTextfieldComponent_HostBindings","ɵɵattribute","ɵɵclassProp","content","disabled","ɵɵHostDirectivesFeature","ɵɵStandaloneFeature","ngContentSelectors","decls","vars","consts","TuiTextfieldComponent_Template","_r1","ɵɵprojectionDef","ɵɵprojection","TuiTextfieldComponent_Template_span_mousedown_prevent_3_listener","TuiTextfieldComponent_Template_span_waResizeObserver_3_listener","$event","ɵɵelementContainer","dependencies","styles","encapsulation","changeDetection","imports","None","OnPush","hostDirectives","host","static","TuiTextfieldBase","optional","a","s","m","mode","f","textfield","readOnly","invalid","pipe","initialValue","focusedSetter","stateSetter","state","ngOnChanges","select","ownerDocument","execCommand","TuiTextfieldBase_Factory","ɵɵNgOnChangesFeature","ɵTuiTextfieldDirective_BaseFactory","TuiTextfieldDirective_Factory","ɵɵgetInheritedFactory","TuiTextfieldDirective_HostBindings","TuiTextfieldDirective_input_HostBindingHandler","TuiTextfieldDirective_focusin_HostBindingHandler","TuiTextfieldDirective_focusout_HostBindingHandler","ɵɵhostProperty","ɵɵInheritDefinitionFeature","TuiSelect","arguments","nav","dispatchEvent","Event","bubbles","classList","add","remove","onCopy","_this","_asyncToGenerator","clipboard","writeText","ɵTuiSelect_BaseFactory","TuiSelect_Factory","TuiSelect_HostBindings","TuiSelect_input_HostBindingHandler","TuiSelect_focusin_HostBindingHandler","TuiSelect_focusout_HostBindingHandler","TuiSelect_keydown_space_prevent_HostBindingHandler","TuiSelect_keydown_enter_prevent_HostBindingHandler","TuiSelect_keydown_backspace_HostBindingHandler","TuiSelect_mousedown_prevent_HostBindingHandler","TuiSelect_keydown_control_c_HostBindingHandler","TuiSelect_keydown_meta_c_HostBindingHandler","attrs","TuiSelect_Template","ɵɵtemplateRefExtractor","selected_r3","ɵɵreference","NgForOf","Default","TuiTextfield","TuiTextfieldContent","createEmbeddedView","TuiTextfieldContent_Factory"],"sources":["C:/Users/Asus-PC/Downloads/WebLibraryNew/WebLibrary/WebLibraryApp/Frontend/node_modules/@taiga-ui/core/fesm2022/taiga-ui-core-components-textfield.mjs"],"sourcesContent":["import { TuiLabel } from '@taiga-ui/core/components/label';\nimport * as i3$1 from '@angular/common';\nimport { NgIf, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { signal, Optional, SkipSelf, inject, Directive, Input, TemplateRef, ContentChild, computed, ElementRef, ViewContainerRef, Component, ViewEncapsulation, ChangeDetectionStrategy, forwardRef, ViewChild } from '@angular/core';\nimport { WA_NAVIGATOR } from '@ng-web-apis/common';\nimport * as i1$1 from '@taiga-ui/cdk/directives/native-validator';\nimport { TuiNativeValidator } from '@taiga-ui/cdk/directives/native-validator';\nimport { tuiCreateToken, tuiProvide, tuiPx } from '@taiga-ui/cdk/utils/miscellaneous';\nimport * as i2 from '@taiga-ui/core/directives/appearance';\nimport { tuiAppearance, tuiAppearanceState, tuiAppearanceMode, tuiAppearanceFocus, TuiAppearance } from '@taiga-ui/core/directives/appearance';\nimport { toSignal } from '@angular/core/rxjs-interop';\nimport { NgControl } from '@angular/forms';\nimport { tuiControlValue } from '@taiga-ui/cdk/observables';\nimport { tuiInjectElement } from '@taiga-ui/cdk/utils/dom';\nimport { merge, fromEvent, timer, switchMap, map } from 'rxjs';\nimport { WaResizeObserver } from '@ng-web-apis/resize-observer';\nimport { tuiInjectId } from '@taiga-ui/cdk/services';\nimport { tuiFocusedIn } from '@taiga-ui/cdk/utils/focus';\nimport { TuiButton } from '@taiga-ui/core/components/button';\nimport { tuiAsDataListHost } from '@taiga-ui/core/components/data-list';\nimport * as i1 from '@taiga-ui/core/directives/dropdown';\nimport { tuiDropdown, tuiDropdownOpen, TuiDropdownFixed, TuiDropdownDirective, TuiWithDropdownOpen } from '@taiga-ui/core/directives/dropdown';\nimport * as i3 from '@taiga-ui/core/directives/icons';\nimport { TuiWithIcons } from '@taiga-ui/core/directives/icons';\nimport { TUI_COMMON_ICONS, TUI_CLEAR_WORD } from '@taiga-ui/core/tokens';\nimport { PolymorpheusOutlet } from '@taiga-ui/polymorpheus';\n\nconst DEFAULT = {\n    appearance: 'textfield',\n    size: 'l',\n    cleaner: true,\n};\nconst TUI_TEXTFIELD_OPTIONS = tuiCreateToken({\n    appearance: signal(DEFAULT.appearance),\n    size: signal(DEFAULT.size),\n    cleaner: signal(DEFAULT.cleaner),\n});\nfunction tuiTextfieldOptionsProvider(options) {\n    return {\n        provide: TUI_TEXTFIELD_OPTIONS,\n        deps: [[new Optional(), new SkipSelf(), TUI_TEXTFIELD_OPTIONS]],\n        useFactory: (parent) => ({\n            appearance: signal(parent?.appearance() ?? DEFAULT.appearance),\n            size: signal(parent?.size() ?? DEFAULT.size),\n            cleaner: signal(parent?.cleaner() ?? DEFAULT.cleaner),\n            ...options,\n        }),\n    };\n}\nclass TuiTextfieldOptionsDirective {\n    constructor() {\n        this.options = inject(TUI_TEXTFIELD_OPTIONS, { skipSelf: true });\n        // TODO: refactor to signal inputs after Angular update\n        this.appearance = signal(this.options.appearance());\n        this.size = signal(this.options.size());\n        this.cleaner = signal(this.options.cleaner());\n    }\n    set tuiTextfieldAppearance(appearance) {\n        this.appearance.set(appearance);\n    }\n    set tuiTextfieldSize(size) {\n        this.size.set(size);\n    }\n    set tuiTextfieldCleaner(enabled) {\n        this.cleaner.set(enabled);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiTextfieldOptionsDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiTextfieldOptionsDirective, isStandalone: true, selector: \"[tuiTextfieldAppearance],[tuiTextfieldSize],[tuiTextfieldCleaner]\", inputs: { tuiTextfieldAppearance: \"tuiTextfieldAppearance\", tuiTextfieldSize: \"tuiTextfieldSize\", tuiTextfieldCleaner: \"tuiTextfieldCleaner\" }, providers: [tuiProvide(TUI_TEXTFIELD_OPTIONS, TuiTextfieldOptionsDirective)], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiTextfieldOptionsDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    standalone: true,\n                    selector: '[tuiTextfieldAppearance],[tuiTextfieldSize],[tuiTextfieldCleaner]',\n                    providers: [tuiProvide(TUI_TEXTFIELD_OPTIONS, TuiTextfieldOptionsDirective)],\n                }]\n        }], propDecorators: { tuiTextfieldAppearance: [{\n                type: Input\n            }], tuiTextfieldSize: [{\n                type: Input\n            }], tuiTextfieldCleaner: [{\n                type: Input\n            }] } });\n\nclass TuiTextfieldDropdownDirective {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiTextfieldDropdownDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiTextfieldDropdownDirective, isStandalone: true, selector: \"ng-template[tuiTextfieldDropdown]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiTextfieldDropdownDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    standalone: true,\n                    selector: 'ng-template[tuiTextfieldDropdown]',\n                }]\n        }] });\nclass TuiWithTextfieldDropdown {\n    constructor() {\n        this.dropdown = tuiDropdown(null);\n    }\n    set template(template) {\n        this.dropdown.set(template);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiWithTextfieldDropdown, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiWithTextfieldDropdown, isStandalone: true, queries: [{ propertyName: \"template\", first: true, predicate: TuiTextfieldDropdownDirective, descendants: true, read: TemplateRef }], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiWithTextfieldDropdown, decorators: [{\n            type: Directive,\n            args: [{\n                    standalone: true,\n                }]\n        }], propDecorators: { template: [{\n                type: ContentChild,\n                args: [TuiTextfieldDropdownDirective, { read: TemplateRef, descendants: true }]\n            }] } });\n\nclass TuiTextfieldComponent {\n    constructor() {\n        // TODO: refactor to signal inputs after Angular update\n        this.filler = signal('');\n        this.autoId = tuiInjectId();\n        this.el = tuiInjectElement();\n        this.open = tuiDropdownOpen();\n        this.focusedIn = tuiFocusedIn(tuiInjectElement());\n        this.icons = inject(TUI_COMMON_ICONS);\n        this.clear = toSignal(inject(TUI_CLEAR_WORD));\n        this.computedFiller = computed(() => {\n            const value = this.directive?.nativeValue() || '';\n            const filledValue = value + this.filler().slice(value.length);\n            return filledValue.length > value.length ? filledValue : '';\n        });\n        this.showFiller = computed(() => this.focused() &&\n            !!this.computedFiller() &&\n            (!!this.directive?.nativeValue() || !this.input?.nativeElement.placeholder));\n        this.stringify = String;\n        this.focused = computed(() => this.open() || this.focusedIn());\n        this.options = inject(TUI_TEXTFIELD_OPTIONS);\n    }\n    set fillerSetter(filler) {\n        this.filler.set(filler);\n    }\n    get id() {\n        return this.input?.nativeElement.id || this.autoId;\n    }\n    get size() {\n        return this.options.size();\n    }\n    handleOption(option) {\n        this.directive?.setValue(option);\n        this.open.set(false);\n    }\n    get hasLabel() {\n        return Boolean(this.label?.nativeElement?.childNodes.length);\n    }\n    onResize({ contentRect }) {\n        this.el.style.setProperty('--t-side', tuiPx(contentRect.width));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiTextfieldComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiTextfieldComponent, isStandalone: true, selector: \"tui-textfield\", inputs: { stringify: \"stringify\", content: \"content\", fillerSetter: [\"filler\", \"fillerSetter\"] }, host: { properties: { \"attr.data-size\": \"options.size()\", \"class._with-label\": \"hasLabel\", \"class._with-template\": \"content\", \"class._disabled\": \"input?.nativeElement.disabled\" } }, providers: [tuiAsDataListHost(TuiTextfieldComponent)], queries: [{ propertyName: \"directive\", first: true, predicate: i0.forwardRef(function () { return TuiTextfieldDirective; }), descendants: true }, { propertyName: \"label\", first: true, predicate: i0.forwardRef(function () { return TuiLabel; }), descendants: true, read: ElementRef }, { propertyName: \"control\", first: true, predicate: NgControl, descendants: true }, { propertyName: \"input\", first: true, predicate: i0.forwardRef(function () { return TuiTextfieldDirective; }), descendants: true, read: ElementRef, static: true }], viewQueries: [{ propertyName: \"vcr\", first: true, predicate: [\"vcr\"], descendants: true, read: ViewContainerRef, static: true }], hostDirectives: [{ directive: i1.TuiDropdownFixed }, { directive: i1.TuiDropdownDirective }, { directive: i1.TuiWithDropdownOpen }, { directive: TuiWithTextfieldDropdown }, { directive: i3.TuiWithIcons }], ngImport: i0, template: \"<ng-content select=\\\"input\\\" />\\n<ng-content select=\\\"select\\\" />\\n<ng-content select=\\\"label\\\" />\\n<span\\n    class=\\\"t-content\\\"\\n    (mousedown.prevent)=\\\"input?.nativeElement?.focus()\\\"\\n    (waResizeObserver)=\\\"$event[0] && onResize($event[0])\\\"\\n>\\n    <ng-content />\\n    <button\\n        *ngIf=\\\"options.cleaner()\\\"\\n        appearance=\\\"icon\\\"\\n        size=\\\"xs\\\"\\n        tabindex=\\\"-1\\\"\\n        tuiIconButton\\n        type=\\\"button\\\"\\n        class=\\\"t-clear\\\"\\n        [iconStart]=\\\"icons.close\\\"\\n        (click)=\\\"directive?.setValue(null)\\\"\\n        (pointerdown.silent.prevent)=\\\"input?.nativeElement?.focus()\\\"\\n    >\\n        {{ clear() }}\\n    </button>\\n    <ng-container #vcr />\\n    <ng-content select=\\\"tui-icon\\\" />\\n</span>\\n<span class=\\\"t-template\\\">\\n    <ng-container *polymorpheusOutlet=\\\"content as text; context: {$implicit: control?.value}\\\">\\n        {{ text }}\\n    </ng-container>\\n</span>\\n<input\\n    *ngIf=\\\"showFiller()\\\"\\n    aria-hidden=\\\"true\\\"\\n    disabled\\n    class=\\\"t-filler\\\"\\n    [value]=\\\"computedFiller()\\\"\\n/>\\n\", styles: [\"tui-textfield{transition-property:color;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;--t-height: var(--tui-height-l);--t-padding: var(--tui-padding-l);position:relative;display:flex;align-items:center;pointer-events:none;cursor:pointer;block-size:var(--t-height);color:var(--tui-text-tertiary);padding:0 var(--t-padding);border-radius:var(--tui-radius-l);font:var(--tui-font-text-m);box-sizing:border-box}tui-textfield[style*=\\\"--t-icon-start:\\\"]{--t-left: 2.25rem}tui-textfield[style*=\\\"--t-icon-end:\\\"]{--t-right: 2.25rem}tui-textfield:after{margin-inline-start:.25rem}tui-textfield input,tui-textfield select{font:var(--tui-font-text-m)}tui-textfield[data-size=s]{--t-height: var(--tui-height-s);--t-padding: var(--tui-padding-s);border-radius:var(--tui-radius-m);font:var(--tui-font-text-s)}tui-textfield[data-size=s][style*=\\\"--t-icon-start:\\\"]{--t-left: 1.25rem}tui-textfield[data-size=s][style*=\\\"--t-icon-end:\\\"]{--t-right: 1.25rem}tui-textfield[data-size=s]:before{margin:0 .5rem 0 -.125rem;font-size:1rem}tui-textfield[data-size=s]:after{margin:0 -.175rem 0 .575rem;font-size:1rem}tui-textfield[data-size=s] input,tui-textfield[data-size=s] select{font:var(--tui-font-text-s)}tui-textfield[data-size=s] .t-content{gap:0;margin-inline-end:-.325rem}tui-textfield[data-size=m]{--t-height: var(--tui-height-m);--t-padding: var(--tui-padding-m);border-radius:var(--tui-radius-m);font:var(--tui-font-text-s)}tui-textfield[data-size=m][style*=\\\"--t-icon-start:\\\"]{--t-left: 1.75rem}tui-textfield[data-size=m][style*=\\\"--t-icon-end:\\\"]{--t-right: 1.75rem}tui-textfield[data-size=m]:before{margin:0 .375rem 0 -.125rem}tui-textfield[data-size=m]:after{margin:0 -.125rem 0 .5rem}tui-textfield[data-size=m] input,tui-textfield[data-size=m] select{font:var(--tui-font-text-s)}tui-textfield[data-size=m] .t-content{margin-inline-end:-.125rem}tui-textfield:hover{color:var(--tui-text-secondary)}tui-textfield:hover:has(input:read-only),tui-textfield:hover:has(select[data-mode~=readonly]){color:var(--tui-text-tertiary)}tui-textfield:before{z-index:1;margin-inline-end:.75rem}tui-textfield:has(:disabled:not(.t-filler,button,option)):before,tui-textfield:has(:disabled:not(.t-filler,button,option)):after,tui-textfield:has(:disabled:not(.t-filler,button,option)) .t-template{opacity:var(--tui-disabled-opacity)}tui-textfield._disabled:before,tui-textfield._disabled:after,tui-textfield._disabled .t-template{opacity:var(--tui-disabled-opacity)}tui-textfield:has(label:not(:empty)) .t-template,tui-textfield:has(label:not(:empty)) input:defined,tui-textfield:has(label:not(:empty)) select:defined{padding-top:calc(var(--t-height) / 3)}tui-textfield:has(label:not(:empty)) .t-template::placeholder,tui-textfield:has(label:not(:empty)) input:defined::placeholder,tui-textfield:has(label:not(:empty)) select:defined::placeholder,tui-textfield:has(label:not(:empty)) .t-template._empty,tui-textfield:has(label:not(:empty)) input:defined._empty,tui-textfield:has(label:not(:empty)) select:defined._empty{color:transparent}tui-textfield._with-label .t-template,tui-textfield._with-label input:defined,tui-textfield._with-label select:defined{padding-top:calc(var(--t-height) / 3)}tui-textfield._with-label .t-template::placeholder,tui-textfield._with-label input:defined::placeholder,tui-textfield._with-label select:defined::placeholder,tui-textfield._with-label .t-template._empty,tui-textfield._with-label input:defined._empty,tui-textfield._with-label select:defined._empty{color:transparent}tui-textfield .t-template,tui-textfield input:defined,tui-textfield select:defined{position:absolute;top:0;left:0;inline-size:100%;block-size:100%;-webkit-appearance:none;appearance:none;box-sizing:border-box;border-radius:inherit;padding:inherit;border:none;text-indent:var(--t-left, 0);padding-inline-end:calc(var(--t-right, var(--t-0, 0rem)) + var(--t-side) + var(--t-padding))}tui-textfield .t-template{display:flex;align-items:center}tui-textfield._with-template select{color:transparent!important}tui-textfield input:defined,tui-textfield select:defined{pointer-events:auto;background:transparent}tui-textfield input:defined:read-only~.t-filler,tui-textfield select:defined:read-only~.t-filler{display:none}tui-textfield input:defined:disabled~label,tui-textfield select:defined:disabled~label,tui-textfield input:defined:disabled~.t-content,tui-textfield select:defined:disabled~.t-content{opacity:var(--tui-disabled-opacity)}tui-textfield input:defined:disabled~label>tui-icon,tui-textfield select:defined:disabled~label>tui-icon,tui-textfield input:defined:disabled~.t-content>tui-icon,tui-textfield select:defined:disabled~.t-content>tui-icon{display:none}tui-textfield input:defined:-webkit-autofill~label,tui-textfield select:defined:-webkit-autofill~label,tui-textfield input:defined:not(._empty):not(:placeholder-shown)~label,tui-textfield select:defined:not(._empty):not(:placeholder-shown)~label{font-size:.83em;transform:translateY(-.7em)}tui-textfield input:defined:-webkit-autofill:not(:disabled)[data-mode~=invalid]~label,tui-textfield select:defined:-webkit-autofill:not(:disabled)[data-mode~=invalid]~label,tui-textfield input:defined:not(._empty):not(:placeholder-shown):not(:disabled)[data-mode~=invalid]~label,tui-textfield select:defined:not(._empty):not(:placeholder-shown):not(:disabled)[data-mode~=invalid]~label,tui-textfield input:defined:-webkit-autofill:invalid:not(:disabled):not([data-mode])~label,tui-textfield select:defined:-webkit-autofill:invalid:not(:disabled):not([data-mode])~label,tui-textfield input:defined:not(._empty):not(:placeholder-shown):invalid:not(:disabled):not([data-mode])~label,tui-textfield select:defined:not(._empty):not(:placeholder-shown):invalid:not(:disabled):not([data-mode])~label{color:var(--tui-text-negative)}tui-textfield input:defined:-webkit-autofill:not(:disabled):not([data-mode~=readonly])~.t-content .t-clear,tui-textfield select:defined:-webkit-autofill:not(:disabled):not([data-mode~=readonly])~.t-content .t-clear,tui-textfield input:defined:not(._empty):not(:placeholder-shown):not(:disabled):not([data-mode~=readonly])~.t-content .t-clear,tui-textfield select:defined:not(._empty):not(:placeholder-shown):not(:disabled):not([data-mode~=readonly])~.t-content .t-clear{display:flex}tui-textfield input:defined:not([data-mode~=readonly]):focus-visible:not([data-focus=false])::placeholder,tui-textfield select:defined:not([data-mode~=readonly]):focus-visible:not([data-focus=false])::placeholder,tui-textfield input:defined:not([data-mode~=readonly]):focus-visible:not([data-focus=false])._empty,tui-textfield select:defined:not([data-mode~=readonly]):focus-visible:not([data-focus=false])._empty{color:var(--tui-text-tertiary)}tui-textfield input:defined:not([data-mode~=readonly]):focus-visible:not([data-focus=false])~label,tui-textfield select:defined:not([data-mode~=readonly]):focus-visible:not([data-focus=false])~label{color:var(--tui-text-primary)!important;font-size:.83em;transform:translateY(-.7em)}tui-textfield input:defined:not([data-mode~=readonly])[data-focus=true]::placeholder,tui-textfield select:defined:not([data-mode~=readonly])[data-focus=true]::placeholder,tui-textfield input:defined:not([data-mode~=readonly])[data-focus=true]._empty,tui-textfield select:defined:not([data-mode~=readonly])[data-focus=true]._empty{color:var(--tui-text-tertiary)}tui-textfield input:defined:not([data-mode~=readonly])[data-focus=true]~label,tui-textfield select:defined:not([data-mode~=readonly])[data-focus=true]~label{color:var(--tui-text-primary)!important;font-size:.83em;transform:translateY(-.7em)}tui-textfield input:defined:not([data-mode~=readonly])[tuiWrapper]:not(._focused):has(:focus-visible)::placeholder,tui-textfield select:defined:not([data-mode~=readonly])[tuiWrapper]:not(._focused):has(:focus-visible)::placeholder,tui-textfield input:defined:not([data-mode~=readonly])[tuiWrapper]._focused::placeholder,tui-textfield select:defined:not([data-mode~=readonly])[tuiWrapper]._focused::placeholder,tui-textfield input:defined:not([data-mode~=readonly])[tuiWrapper]:not(._focused):has(:focus-visible)._empty,tui-textfield select:defined:not([data-mode~=readonly])[tuiWrapper]:not(._focused):has(:focus-visible)._empty,tui-textfield input:defined:not([data-mode~=readonly])[tuiWrapper]._focused._empty,tui-textfield select:defined:not([data-mode~=readonly])[tuiWrapper]._focused._empty{color:var(--tui-text-tertiary)}tui-textfield input:defined:not([data-mode~=readonly])[tuiWrapper]:not(._focused):has(:focus-visible)~label,tui-textfield select:defined:not([data-mode~=readonly])[tuiWrapper]:not(._focused):has(:focus-visible)~label,tui-textfield input:defined:not([data-mode~=readonly])[tuiWrapper]._focused~label,tui-textfield select:defined:not([data-mode~=readonly])[tuiWrapper]._focused~label{color:var(--tui-text-primary)!important;font-size:.83em;transform:translateY(-.7em)}@supports (-webkit-touch-callout: none){tui-textfield input:defined._ios-fix,tui-textfield select:defined._ios-fix{position:fixed;left:1000rem}}tui-textfield label:not([data-orientation=vertical]){transition-property:all;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;position:relative;display:block;flex:1;font-size:inherit}tui-textfield label:defined,tui-textfield input:defined::placeholder,tui-textfield select:defined._empty{color:var(--tui-text-secondary)}tui-textfield select:not([data-mode~=readonly]){cursor:pointer}tui-textfield button,tui-textfield a{pointer-events:auto}tui-textfield .t-content{display:flex;align-items:center;gap:.25rem;margin-inline-start:auto;isolation:isolate}tui-textfield .t-content>tui-icon{pointer-events:auto}tui-textfield .t-clear{display:none;pointer-events:auto}tui-textfield .t-filler:defined{pointer-events:none;background:none;color:var(--tui-text-tertiary);opacity:1}tui-textfield [tuiFluidTypography]{font-weight:700}\\n\"], dependencies: [{ kind: \"directive\", type: NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: PolymorpheusOutlet, selector: \"[polymorpheusOutlet]\", inputs: [\"polymorpheusOutlet\", \"polymorpheusOutletContext\"] }, { kind: \"directive\", type: TuiButton, selector: \"a[tuiButton],button[tuiButton],a[tuiIconButton],button[tuiIconButton]\", inputs: [\"size\"] }, { kind: \"directive\", type: WaResizeObserver, selector: \"[waResizeObserver]\", inputs: [\"box\"], outputs: [\"waResizeObserver\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiTextfieldComponent, decorators: [{\n            type: Component,\n            args: [{ standalone: true, selector: 'tui-textfield', imports: [NgIf, PolymorpheusOutlet, TuiButton, WaResizeObserver], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [tuiAsDataListHost(TuiTextfieldComponent)], hostDirectives: [\n                        TuiDropdownFixed,\n                        TuiDropdownDirective,\n                        TuiWithDropdownOpen,\n                        TuiWithTextfieldDropdown,\n                        TuiWithIcons,\n                    ], host: {\n                        '[attr.data-size]': 'options.size()',\n                        '[class._with-label]': 'hasLabel',\n                        '[class._with-template]': 'content',\n                        '[class._disabled]': 'input?.nativeElement.disabled',\n                    }, template: \"<ng-content select=\\\"input\\\" />\\n<ng-content select=\\\"select\\\" />\\n<ng-content select=\\\"label\\\" />\\n<span\\n    class=\\\"t-content\\\"\\n    (mousedown.prevent)=\\\"input?.nativeElement?.focus()\\\"\\n    (waResizeObserver)=\\\"$event[0] && onResize($event[0])\\\"\\n>\\n    <ng-content />\\n    <button\\n        *ngIf=\\\"options.cleaner()\\\"\\n        appearance=\\\"icon\\\"\\n        size=\\\"xs\\\"\\n        tabindex=\\\"-1\\\"\\n        tuiIconButton\\n        type=\\\"button\\\"\\n        class=\\\"t-clear\\\"\\n        [iconStart]=\\\"icons.close\\\"\\n        (click)=\\\"directive?.setValue(null)\\\"\\n        (pointerdown.silent.prevent)=\\\"input?.nativeElement?.focus()\\\"\\n    >\\n        {{ clear() }}\\n    </button>\\n    <ng-container #vcr />\\n    <ng-content select=\\\"tui-icon\\\" />\\n</span>\\n<span class=\\\"t-template\\\">\\n    <ng-container *polymorpheusOutlet=\\\"content as text; context: {$implicit: control?.value}\\\">\\n        {{ text }}\\n    </ng-container>\\n</span>\\n<input\\n    *ngIf=\\\"showFiller()\\\"\\n    aria-hidden=\\\"true\\\"\\n    disabled\\n    class=\\\"t-filler\\\"\\n    [value]=\\\"computedFiller()\\\"\\n/>\\n\", styles: [\"tui-textfield{transition-property:color;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;--t-height: var(--tui-height-l);--t-padding: var(--tui-padding-l);position:relative;display:flex;align-items:center;pointer-events:none;cursor:pointer;block-size:var(--t-height);color:var(--tui-text-tertiary);padding:0 var(--t-padding);border-radius:var(--tui-radius-l);font:var(--tui-font-text-m);box-sizing:border-box}tui-textfield[style*=\\\"--t-icon-start:\\\"]{--t-left: 2.25rem}tui-textfield[style*=\\\"--t-icon-end:\\\"]{--t-right: 2.25rem}tui-textfield:after{margin-inline-start:.25rem}tui-textfield input,tui-textfield select{font:var(--tui-font-text-m)}tui-textfield[data-size=s]{--t-height: var(--tui-height-s);--t-padding: var(--tui-padding-s);border-radius:var(--tui-radius-m);font:var(--tui-font-text-s)}tui-textfield[data-size=s][style*=\\\"--t-icon-start:\\\"]{--t-left: 1.25rem}tui-textfield[data-size=s][style*=\\\"--t-icon-end:\\\"]{--t-right: 1.25rem}tui-textfield[data-size=s]:before{margin:0 .5rem 0 -.125rem;font-size:1rem}tui-textfield[data-size=s]:after{margin:0 -.175rem 0 .575rem;font-size:1rem}tui-textfield[data-size=s] input,tui-textfield[data-size=s] select{font:var(--tui-font-text-s)}tui-textfield[data-size=s] .t-content{gap:0;margin-inline-end:-.325rem}tui-textfield[data-size=m]{--t-height: var(--tui-height-m);--t-padding: var(--tui-padding-m);border-radius:var(--tui-radius-m);font:var(--tui-font-text-s)}tui-textfield[data-size=m][style*=\\\"--t-icon-start:\\\"]{--t-left: 1.75rem}tui-textfield[data-size=m][style*=\\\"--t-icon-end:\\\"]{--t-right: 1.75rem}tui-textfield[data-size=m]:before{margin:0 .375rem 0 -.125rem}tui-textfield[data-size=m]:after{margin:0 -.125rem 0 .5rem}tui-textfield[data-size=m] input,tui-textfield[data-size=m] select{font:var(--tui-font-text-s)}tui-textfield[data-size=m] .t-content{margin-inline-end:-.125rem}tui-textfield:hover{color:var(--tui-text-secondary)}tui-textfield:hover:has(input:read-only),tui-textfield:hover:has(select[data-mode~=readonly]){color:var(--tui-text-tertiary)}tui-textfield:before{z-index:1;margin-inline-end:.75rem}tui-textfield:has(:disabled:not(.t-filler,button,option)):before,tui-textfield:has(:disabled:not(.t-filler,button,option)):after,tui-textfield:has(:disabled:not(.t-filler,button,option)) .t-template{opacity:var(--tui-disabled-opacity)}tui-textfield._disabled:before,tui-textfield._disabled:after,tui-textfield._disabled .t-template{opacity:var(--tui-disabled-opacity)}tui-textfield:has(label:not(:empty)) .t-template,tui-textfield:has(label:not(:empty)) input:defined,tui-textfield:has(label:not(:empty)) select:defined{padding-top:calc(var(--t-height) / 3)}tui-textfield:has(label:not(:empty)) .t-template::placeholder,tui-textfield:has(label:not(:empty)) input:defined::placeholder,tui-textfield:has(label:not(:empty)) select:defined::placeholder,tui-textfield:has(label:not(:empty)) .t-template._empty,tui-textfield:has(label:not(:empty)) input:defined._empty,tui-textfield:has(label:not(:empty)) select:defined._empty{color:transparent}tui-textfield._with-label .t-template,tui-textfield._with-label input:defined,tui-textfield._with-label select:defined{padding-top:calc(var(--t-height) / 3)}tui-textfield._with-label .t-template::placeholder,tui-textfield._with-label input:defined::placeholder,tui-textfield._with-label select:defined::placeholder,tui-textfield._with-label .t-template._empty,tui-textfield._with-label input:defined._empty,tui-textfield._with-label select:defined._empty{color:transparent}tui-textfield .t-template,tui-textfield input:defined,tui-textfield select:defined{position:absolute;top:0;left:0;inline-size:100%;block-size:100%;-webkit-appearance:none;appearance:none;box-sizing:border-box;border-radius:inherit;padding:inherit;border:none;text-indent:var(--t-left, 0);padding-inline-end:calc(var(--t-right, var(--t-0, 0rem)) + var(--t-side) + var(--t-padding))}tui-textfield .t-template{display:flex;align-items:center}tui-textfield._with-template select{color:transparent!important}tui-textfield input:defined,tui-textfield select:defined{pointer-events:auto;background:transparent}tui-textfield input:defined:read-only~.t-filler,tui-textfield select:defined:read-only~.t-filler{display:none}tui-textfield input:defined:disabled~label,tui-textfield select:defined:disabled~label,tui-textfield input:defined:disabled~.t-content,tui-textfield select:defined:disabled~.t-content{opacity:var(--tui-disabled-opacity)}tui-textfield input:defined:disabled~label>tui-icon,tui-textfield select:defined:disabled~label>tui-icon,tui-textfield input:defined:disabled~.t-content>tui-icon,tui-textfield select:defined:disabled~.t-content>tui-icon{display:none}tui-textfield input:defined:-webkit-autofill~label,tui-textfield select:defined:-webkit-autofill~label,tui-textfield input:defined:not(._empty):not(:placeholder-shown)~label,tui-textfield select:defined:not(._empty):not(:placeholder-shown)~label{font-size:.83em;transform:translateY(-.7em)}tui-textfield input:defined:-webkit-autofill:not(:disabled)[data-mode~=invalid]~label,tui-textfield select:defined:-webkit-autofill:not(:disabled)[data-mode~=invalid]~label,tui-textfield input:defined:not(._empty):not(:placeholder-shown):not(:disabled)[data-mode~=invalid]~label,tui-textfield select:defined:not(._empty):not(:placeholder-shown):not(:disabled)[data-mode~=invalid]~label,tui-textfield input:defined:-webkit-autofill:invalid:not(:disabled):not([data-mode])~label,tui-textfield select:defined:-webkit-autofill:invalid:not(:disabled):not([data-mode])~label,tui-textfield input:defined:not(._empty):not(:placeholder-shown):invalid:not(:disabled):not([data-mode])~label,tui-textfield select:defined:not(._empty):not(:placeholder-shown):invalid:not(:disabled):not([data-mode])~label{color:var(--tui-text-negative)}tui-textfield input:defined:-webkit-autofill:not(:disabled):not([data-mode~=readonly])~.t-content .t-clear,tui-textfield select:defined:-webkit-autofill:not(:disabled):not([data-mode~=readonly])~.t-content .t-clear,tui-textfield input:defined:not(._empty):not(:placeholder-shown):not(:disabled):not([data-mode~=readonly])~.t-content .t-clear,tui-textfield select:defined:not(._empty):not(:placeholder-shown):not(:disabled):not([data-mode~=readonly])~.t-content .t-clear{display:flex}tui-textfield input:defined:not([data-mode~=readonly]):focus-visible:not([data-focus=false])::placeholder,tui-textfield select:defined:not([data-mode~=readonly]):focus-visible:not([data-focus=false])::placeholder,tui-textfield input:defined:not([data-mode~=readonly]):focus-visible:not([data-focus=false])._empty,tui-textfield select:defined:not([data-mode~=readonly]):focus-visible:not([data-focus=false])._empty{color:var(--tui-text-tertiary)}tui-textfield input:defined:not([data-mode~=readonly]):focus-visible:not([data-focus=false])~label,tui-textfield select:defined:not([data-mode~=readonly]):focus-visible:not([data-focus=false])~label{color:var(--tui-text-primary)!important;font-size:.83em;transform:translateY(-.7em)}tui-textfield input:defined:not([data-mode~=readonly])[data-focus=true]::placeholder,tui-textfield select:defined:not([data-mode~=readonly])[data-focus=true]::placeholder,tui-textfield input:defined:not([data-mode~=readonly])[data-focus=true]._empty,tui-textfield select:defined:not([data-mode~=readonly])[data-focus=true]._empty{color:var(--tui-text-tertiary)}tui-textfield input:defined:not([data-mode~=readonly])[data-focus=true]~label,tui-textfield select:defined:not([data-mode~=readonly])[data-focus=true]~label{color:var(--tui-text-primary)!important;font-size:.83em;transform:translateY(-.7em)}tui-textfield input:defined:not([data-mode~=readonly])[tuiWrapper]:not(._focused):has(:focus-visible)::placeholder,tui-textfield select:defined:not([data-mode~=readonly])[tuiWrapper]:not(._focused):has(:focus-visible)::placeholder,tui-textfield input:defined:not([data-mode~=readonly])[tuiWrapper]._focused::placeholder,tui-textfield select:defined:not([data-mode~=readonly])[tuiWrapper]._focused::placeholder,tui-textfield input:defined:not([data-mode~=readonly])[tuiWrapper]:not(._focused):has(:focus-visible)._empty,tui-textfield select:defined:not([data-mode~=readonly])[tuiWrapper]:not(._focused):has(:focus-visible)._empty,tui-textfield input:defined:not([data-mode~=readonly])[tuiWrapper]._focused._empty,tui-textfield select:defined:not([data-mode~=readonly])[tuiWrapper]._focused._empty{color:var(--tui-text-tertiary)}tui-textfield input:defined:not([data-mode~=readonly])[tuiWrapper]:not(._focused):has(:focus-visible)~label,tui-textfield select:defined:not([data-mode~=readonly])[tuiWrapper]:not(._focused):has(:focus-visible)~label,tui-textfield input:defined:not([data-mode~=readonly])[tuiWrapper]._focused~label,tui-textfield select:defined:not([data-mode~=readonly])[tuiWrapper]._focused~label{color:var(--tui-text-primary)!important;font-size:.83em;transform:translateY(-.7em)}@supports (-webkit-touch-callout: none){tui-textfield input:defined._ios-fix,tui-textfield select:defined._ios-fix{position:fixed;left:1000rem}}tui-textfield label:not([data-orientation=vertical]){transition-property:all;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;position:relative;display:block;flex:1;font-size:inherit}tui-textfield label:defined,tui-textfield input:defined::placeholder,tui-textfield select:defined._empty{color:var(--tui-text-secondary)}tui-textfield select:not([data-mode~=readonly]){cursor:pointer}tui-textfield button,tui-textfield a{pointer-events:auto}tui-textfield .t-content{display:flex;align-items:center;gap:.25rem;margin-inline-start:auto;isolation:isolate}tui-textfield .t-content>tui-icon{pointer-events:auto}tui-textfield .t-clear{display:none;pointer-events:auto}tui-textfield .t-filler:defined{pointer-events:none;background:none;color:var(--tui-text-tertiary);opacity:1}tui-textfield [tuiFluidTypography]{font-weight:700}\\n\"] }]\n        }], propDecorators: { directive: [{\n                type: ContentChild,\n                args: [forwardRef(() => TuiTextfieldDirective)]\n            }], label: [{\n                type: ContentChild,\n                args: [forwardRef(() => TuiLabel), { read: ElementRef }]\n            }], control: [{\n                type: ContentChild,\n                args: [NgControl]\n            }], vcr: [{\n                type: ViewChild,\n                args: ['vcr', { read: ViewContainerRef, static: true }]\n            }], input: [{\n                type: ContentChild,\n                args: [forwardRef(() => TuiTextfieldDirective), {\n                        read: ElementRef,\n                        static: true,\n                    }]\n            }], stringify: [{\n                type: Input\n            }], content: [{\n                type: Input\n            }], fillerSetter: [{\n                type: Input,\n                args: ['filler']\n            }] } });\n\nclass TuiTextfieldBase {\n    constructor() {\n        // TODO: refactor to signal inputs after Angular update\n        this.focused = signal(null);\n        this.control = inject(NgControl, { optional: true });\n        this.a = tuiAppearance(inject(TUI_TEXTFIELD_OPTIONS).appearance);\n        this.s = tuiAppearanceState(null);\n        this.m = tuiAppearanceMode(this.mode);\n        this.f = tuiAppearanceFocus(computed(() => this.focused() || this.textfield.focused()));\n        this.el = tuiInjectElement();\n        this.textfield = inject(TuiTextfieldComponent);\n        this.readOnly = false;\n        this.invalid = null;\n        this.nativeValue = toSignal(merge(fromEvent(this.el, 'input'), timer(0) // https://github.com/angular/angular/issues/54418\n            .pipe(switchMap(() => tuiControlValue(this.control)))).pipe(map(() => this.el.value)), { initialValue: this.el.value });\n    }\n    set focusedSetter(focused) {\n        this.focused.set(focused);\n    }\n    set stateSetter(state) {\n        this.s.set(state);\n    }\n    get mode() {\n        if (this.readOnly) {\n            return 'readonly';\n        }\n        if (this.invalid === false) {\n            return 'valid';\n        }\n        if (this.invalid) {\n            return 'invalid';\n        }\n        return null;\n    }\n    // TODO: refactor to signal inputs after Angular update\n    ngOnChanges() {\n        this.m.set(this.mode);\n    }\n    setValue(value) {\n        this.el.focus();\n        this.el.select();\n        if (value == null) {\n            this.el.ownerDocument.execCommand('delete');\n        }\n        else {\n            this.el.ownerDocument.execCommand('insertText', false, this.textfield.stringify(value));\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiTextfieldBase, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiTextfieldBase, inputs: { readOnly: \"readOnly\", invalid: \"invalid\", focusedSetter: [\"focused\", \"focusedSetter\"], stateSetter: [\"state\", \"stateSetter\"] }, usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiTextfieldBase, decorators: [{\n            type: Directive\n        }], propDecorators: { readOnly: [{\n                type: Input\n            }], invalid: [{\n                type: Input\n            }], focusedSetter: [{\n                type: Input,\n                args: ['focused']\n            }], stateSetter: [{\n                type: Input,\n                args: ['state']\n            }] } });\nclass TuiTextfieldDirective extends TuiTextfieldBase {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiTextfieldDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiTextfieldDirective, isStandalone: true, selector: \"input[tuiTextfield]\", host: { listeners: { \"input\": \"0\", \"focusin\": \"0\", \"focusout\": \"0\" }, properties: { \"id\": \"textfield.id\", \"readOnly\": \"readOnly\", \"class._empty\": \"el.value === \\\"\\\"\" } }, usesInheritance: true, hostDirectives: [{ directive: i1$1.TuiNativeValidator }, { directive: i2.TuiAppearance }], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiTextfieldDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    standalone: true,\n                    selector: 'input[tuiTextfield]',\n                    hostDirectives: [TuiNativeValidator, TuiAppearance],\n                    host: {\n                        '[id]': 'textfield.id',\n                        '[readOnly]': 'readOnly',\n                        '[class._empty]': 'el.value === \"\"',\n                        '(input)': '0',\n                        '(focusin)': '0',\n                        '(focusout)': '0',\n                    },\n                }]\n        }] });\n\nclass TuiSelect extends TuiTextfieldBase {\n    constructor() {\n        super(...arguments);\n        this.nav = inject(WA_NAVIGATOR);\n        this.placeholder = '';\n    }\n    setValue(value) {\n        this.control?.control?.setValue(value);\n        this.el.dispatchEvent(new Event('input', { bubbles: true }));\n    }\n    focus() {\n        this.el.classList.add('_ios-fix');\n        this.el.focus();\n        this.el.classList.remove('_ios-fix');\n    }\n    get value() {\n        return this.textfield.stringify(this.control?.value ?? '');\n    }\n    async onCopy() {\n        await this.nav.clipboard.writeText(this.value);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiSelect, deps: null, target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiSelect, isStandalone: true, selector: \"select[tuiTextfield]\", inputs: { placeholder: \"placeholder\" }, host: { listeners: { \"input\": \"0\", \"focusin\": \"0\", \"focusout\": \"0\", \"keydown.space.prevent\": \"0\", \"keydown.enter.prevent\": \"0\", \"keydown.backspace\": \"setValue(\\\"\\\")\", \"mousedown.prevent\": \"focus()\", \"keydown.control.c\": \"onCopy()\", \"keydown.meta.c\": \"onCopy()\" }, properties: { \"id\": \"textfield.id\", \"class._empty\": \"value === \\\"\\\"\" } }, providers: [tuiProvide(TuiTextfieldDirective, TuiSelect)], usesInheritance: true, hostDirectives: [{ directive: i1$1.TuiNativeValidator }, { directive: i2.TuiAppearance }], ngImport: i0, template: \"<option\\n    *ngIf=\\\"placeholder && !value; else selected\\\"\\n    disabled\\n    selected\\n    value=\\\"\\\"\\n>\\n    {{ placeholder }}\\n</option>\\n<ng-template #selected>\\n    <option\\n        *ngFor=\\\"let item of [value]\\\"\\n        selected\\n        [value]=\\\"item\\\"\\n    >\\n        {{ item }}\\n    </option>\\n</ng-template>\\n\", dependencies: [{ kind: \"ngmodule\", type: CommonModule }, { kind: \"directive\", type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.Default }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiSelect, decorators: [{\n            type: Component,\n            args: [{ standalone: true, selector: 'select[tuiTextfield]', imports: [CommonModule], changeDetection: ChangeDetectionStrategy.Default, providers: [tuiProvide(TuiTextfieldDirective, TuiSelect)], hostDirectives: [TuiNativeValidator, TuiAppearance], host: {\n                        '[id]': 'textfield.id',\n                        '[class._empty]': 'value === \"\"',\n                        '(input)': '0',\n                        '(focusin)': '0',\n                        '(focusout)': '0',\n                        '(keydown.space.prevent)': '0',\n                        '(keydown.enter.prevent)': '0',\n                        '(keydown.backspace)': 'setValue(\"\")',\n                        '(mousedown.prevent)': 'focus()',\n                        '(keydown.control.c)': 'onCopy()',\n                        '(keydown.meta.c)': 'onCopy()',\n                    }, template: \"<option\\n    *ngIf=\\\"placeholder && !value; else selected\\\"\\n    disabled\\n    selected\\n    value=\\\"\\\"\\n>\\n    {{ placeholder }}\\n</option>\\n<ng-template #selected>\\n    <option\\n        *ngFor=\\\"let item of [value]\\\"\\n        selected\\n        [value]=\\\"item\\\"\\n    >\\n        {{ item }}\\n    </option>\\n</ng-template>\\n\" }]\n        }], propDecorators: { placeholder: [{\n                type: Input\n            }] } });\n\nconst TuiTextfield = [\n    TuiLabel,\n    TuiSelect,\n    TuiTextfieldComponent,\n    TuiTextfieldDirective,\n    TuiTextfieldOptionsDirective,\n    TuiTextfieldDropdownDirective,\n];\n\nclass TuiTextfieldContent {\n    constructor() {\n        inject(TuiTextfieldComponent).vcr?.createEmbeddedView(inject(TemplateRef));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiTextfieldContent, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiTextfieldContent, isStandalone: true, selector: \"ng-template[tuiTextfieldContent]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiTextfieldContent, decorators: [{\n            type: Directive,\n            args: [{\n                    standalone: true,\n                    selector: 'ng-template[tuiTextfieldContent]',\n                }]\n        }], ctorParameters: function () { return []; } });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TUI_TEXTFIELD_OPTIONS, TuiSelect, TuiTextfield, TuiTextfieldBase, TuiTextfieldComponent, TuiTextfieldContent, TuiTextfieldDirective, TuiTextfieldDropdownDirective, TuiTextfieldOptionsDirective, TuiWithTextfieldDropdown, tuiTextfieldOptionsProvider };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}