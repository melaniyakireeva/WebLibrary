{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./string-filter-editor.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./string-filter-editor.component.scss?ngResource\";\nimport { CommonModule, NgIf, NgSwitchCase } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TuiButton, TuiDataList } from '@taiga-ui/core';\nimport { TuiInputModule, TuiSelectModule, TuiTextfieldControllerModule } from '@taiga-ui/legacy';\nimport { FilterOperations } from '../../services/filters/filterOperations';\nimport { FilterConverter } from '../../services/filters/filter-converter';\nimport _ from 'lodash';\nlet StringFilterEditorComponent = class StringFilterEditorComponent {\n  ngOnChanges(changes) {\n    if (changes['filter']) {\n      this.initFilter();\n    }\n  }\n  ngOnInit() {\n    this.initFilter();\n  }\n  initFilter() {\n    this.columnValue = new FormControl(this.filter.filterColumn);\n    this.operatorValue = new FormControl(this.filter.operation);\n    this.stringValue = this.filter.valueForComparison;\n    if (_.isNil(this.filter.operation) || this.filter.operation == FilterOperations.IsNotNull || this.filter.operation == FilterOperations.IsNull) {\n      this.showValue = false;\n    } else {\n      this.showValue = true;\n    }\n  }\n  filter;\n  possibleColumns;\n  converter = FilterConverter;\n  operators = FilterOperations;\n  possibleOperators = [FilterOperations.Equal, FilterOperations.Contains, FilterOperations.NotEqual, FilterOperations.IsNotNull, FilterOperations.IsNull, FilterOperations.Like];\n  columnValue;\n  operatorValue;\n  stringValue = '';\n  showValue = false;\n  onOperatorChanged($event) {\n    if ($event == FilterOperations.IsNotNull || $event == FilterOperations.IsNull) {\n      this.showValue = false;\n    } else {\n      this.showValue = true;\n    }\n    this.filter.operation = this.operatorValue.value ?? FilterOperations.Equal;\n  }\n  onFilterColumnChanged($event) {\n    this.filter.filterColumn = this.columnValue.value ?? '';\n  }\n  onValueChanged($event) {\n    this.filter.valueForComparison = this.stringValue;\n  }\n  static propDecorators = {\n    filter: [{\n      type: Input\n    }],\n    possibleColumns: [{\n      type: Input\n    }]\n  };\n};\nStringFilterEditorComponent = __decorate([Component({\n  selector: 'app-string-filter-editor',\n  standalone: true,\n  imports: [NgSwitchCase, NgIf, CommonModule, TuiDataList, TuiInputModule, TuiSelectModule, ReactiveFormsModule, TuiTextfieldControllerModule, FormsModule, TuiButton],\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], StringFilterEditorComponent);\nexport { StringFilterEditorComponent };","map":{"version":3,"names":["CommonModule","NgIf","NgSwitchCase","Component","Input","FormControl","FormsModule","ReactiveFormsModule","TuiButton","TuiDataList","TuiInputModule","TuiSelectModule","TuiTextfieldControllerModule","FilterOperations","FilterConverter","_","StringFilterEditorComponent","ngOnChanges","changes","initFilter","ngOnInit","columnValue","filter","filterColumn","operatorValue","operation","stringValue","valueForComparison","isNil","IsNotNull","IsNull","showValue","possibleColumns","converter","operators","possibleOperators","Equal","Contains","NotEqual","Like","onOperatorChanged","$event","value","onFilterColumnChanged","onValueChanged","__decorate","selector","standalone","imports","template","__NG_CLI_RESOURCE__0"],"sources":["C:\\Users\\Asus-PC\\Downloads\\WebLibraryNew\\WebLibrary\\WebLibraryApp\\Frontend\\src\\app\\components\\string-filter-editor\\string-filter-editor.component.ts"],"sourcesContent":["import { CommonModule, NgIf, NgSwitchCase } from '@angular/common';\r\nimport { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\r\nimport { FormControl, FormsModule, NgModel, ReactiveFormsModule } from '@angular/forms';\r\nimport { TuiButton, TuiDataList } from '@taiga-ui/core';\r\nimport { TuiInputComponent, TuiInputModule, TuiSelectModule, TuiTextfieldControllerModule } from '@taiga-ui/legacy';\r\nimport { FilterOperations, StringFilterOperation } from '../../services/filters/filterOperations';\r\nimport { FilterConverter } from '../../services/filters/filter-converter';\r\nimport _ from 'lodash';\r\n\r\n@Component({\r\n  selector: 'app-string-filter-editor',\r\n  standalone: true,\r\n  imports: [\r\n    NgSwitchCase,\r\n    NgIf,\r\n    CommonModule,\r\n    TuiDataList,\r\n    TuiInputModule,\r\n    TuiSelectModule,\r\n    ReactiveFormsModule,\r\n    TuiTextfieldControllerModule,\r\n    FormsModule,\r\n    TuiButton,\r\n  ],\r\n  templateUrl: './string-filter-editor.component.html',\r\n  styleUrl: './string-filter-editor.component.scss',\r\n})\r\nexport class StringFilterEditorComponent implements OnInit, OnChanges {\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes['filter']) {\r\n      this.initFilter();\r\n    }\r\n  }\r\n  ngOnInit(): void {\r\n    this.initFilter();\r\n  }\r\n\r\n  initFilter() {\r\n    this.columnValue = new FormControl<string>(this.filter.filterColumn);\r\n    this.operatorValue = new FormControl<FilterOperations>(\r\n      this.filter.operation\r\n    );\r\n    this.stringValue = this.filter.valueForComparison;\r\n    if (\r\n      _.isNil(this.filter.operation) ||\r\n      this.filter.operation == FilterOperations.IsNotNull ||\r\n      this.filter.operation == FilterOperations.IsNull\r\n    ) {\r\n      this.showValue = false;\r\n    } else {\r\n      this.showValue = true;\r\n    }\r\n  }\r\n\r\n  @Input() filter!: StringFilterOperation;\r\n  @Input() possibleColumns!: string[];\r\n\r\n  converter: any = FilterConverter;\r\n  operators: any = FilterOperations;\r\n  possibleOperators: FilterOperations[] = [\r\n    FilterOperations.Equal,\r\n    FilterOperations.Contains,\r\n    FilterOperations.NotEqual,\r\n    FilterOperations.IsNotNull,\r\n    FilterOperations.IsNull,\r\n    FilterOperations.Like\r\n  ];\r\n  protected columnValue!: FormControl<string | null>;\r\n  protected operatorValue!: FormControl<FilterOperations | null>;\r\n  protected stringValue: string = '';\r\n  protected showValue: boolean = false;\r\n\r\n  onOperatorChanged($event: FilterOperations) {\r\n    if (\r\n      $event == FilterOperations.IsNotNull ||\r\n      $event == FilterOperations.IsNull\r\n    ) {\r\n      this.showValue = false;\r\n    } else {\r\n      this.showValue = true;\r\n    }\r\n    this.filter.operation = this.operatorValue.value ?? FilterOperations.Equal;\r\n  }\r\n\r\n  onFilterColumnChanged($event: any) {\r\n    this.filter.filterColumn = this.columnValue.value ?? '';\r\n  }\r\n\r\n  onValueChanged($event: string) {\r\n    this.filter.valueForComparison = this.stringValue;\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}