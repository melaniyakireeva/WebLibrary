{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { inject, Component, ChangeDetectionStrategy, ViewChild, Input, Directive, NgModule } from '@angular/core';\nimport { TUI_FALSE_HANDLER, CHAR_EN_DASH } from '@taiga-ui/cdk/constants';\nimport { TuiDay, TuiMonthRange, tuiDateClamp } from '@taiga-ui/cdk/date-time';\nimport { TuiMonthPipe } from '@taiga-ui/core/pipes/month';\nimport { TUI_INPUT_DATE_OPTIONS } from '@taiga-ui/kit/tokens';\nimport { AbstractTuiNullableControl, tuiAsControl, AbstractTuiTextfieldHost } from '@taiga-ui/legacy/classes';\nimport * as i2 from '@taiga-ui/legacy/components/primitive-textfield';\nimport { TuiPrimitiveTextfieldComponent, TuiPrimitiveTextfieldModule, TuiTextfieldComponent } from '@taiga-ui/legacy/components/primitive-textfield';\nimport * as i3 from '@taiga-ui/legacy/directives';\nimport { TUI_TEXTFIELD_SIZE, TuiTextfieldControllerModule, TuiLegacyDropdownOpenMonitorDirective } from '@taiga-ui/legacy/directives';\nimport { TUI_MONTH_FORMATTER, tuiAsFocusableItemAccessor, TUI_MONTH_FORMATTER_PROVIDER, tuiAsTextfieldHost } from '@taiga-ui/legacy/tokens';\nimport * as i1 from '@taiga-ui/kit/components/calendar-month';\nimport { TuiCalendarMonth } from '@taiga-ui/kit/components/calendar-month';\nimport * as i1$1 from '@taiga-ui/core/directives/dropdown';\nimport { TuiDropdown } from '@taiga-ui/core/directives/dropdown';\nimport * as i5 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i6 from '@taiga-ui/cdk/pipes/mapper';\nimport { TuiMapperPipe } from '@taiga-ui/cdk/pipes/mapper';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { Subject, distinctUntilChanged, switchMap, combineLatest } from 'rxjs';\nconst _c0 = [\"*\", [[\"input\"]]];\nconst _c1 = [\"*\", \"input\"];\nfunction TuiInputMonthRangeComponent_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tui-calendar-month\", 3);\n    i0.ɵɵlistener(\"monthClick\", function TuiInputMonthRangeComponent_ng_template_8_Template_tui_calendar_month_monthClick_0_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onMonthClick($event));\n    })(\"mousedown.prevent.silent\", function TuiInputMonthRangeComponent_ng_template_8_Template_tui_calendar_month_mousedown_prevent_silent_0_listener() {\n      i0.ɵɵrestoreView(_r2);\n      return i0.ɵɵresetView(0);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabledItemHandler\", ctx_r2.disabledItemHandler)(\"max\", ctx_r2.max)(\"maxLength\", ctx_r2.maxLength)(\"min\", ctx_r2.min)(\"minLength\", ctx_r2.minLength)(\"value\", ctx_r2.value)(\"year\", ctx_r2.computedDefaultActiveYear);\n  }\n}\nclass TuiInputMonthRangeComponent extends AbstractTuiNullableControl {\n  constructor() {\n    super(...arguments);\n    this.options = inject(TUI_INPUT_DATE_OPTIONS);\n    this.textfieldSize = inject(TUI_TEXTFIELD_SIZE);\n    this.formatter = inject(TUI_MONTH_FORMATTER);\n    this.min = this.options.min;\n    this.max = this.options.max;\n    this.disabledItemHandler = TUI_FALSE_HANDLER;\n    this.minLength = null;\n    this.maxLength = null;\n    this.defaultActiveYear = TuiDay.currentLocal();\n    this.open = false;\n  }\n  get nativeFocusableElement() {\n    return this.textfield?.nativeFocusableElement ?? null;\n  }\n  get focused() {\n    return !!this.textfield?.focused;\n  }\n  setDisabledState() {\n    super.setDisabledState();\n    this.close();\n  }\n  computeValue(from, to) {\n    const formattedTo = from === to && this.focused && !this.readOnly ? '' : to;\n    return `${from} ${CHAR_EN_DASH} ${formattedTo}`;\n  }\n  onValueChange(value) {\n    if (value) {\n      return;\n    }\n    this.value = null;\n    this.onOpenChange(true);\n  }\n  onMonthClick(month) {\n    if (!this.value?.isSingleMonth) {\n      this.writeValue(new TuiMonthRange(month, month));\n      return;\n    }\n    this.value = TuiMonthRange.sort(this.value.from, month);\n    this.close();\n  }\n  get size() {\n    return this.textfieldSize.size;\n  }\n  get computedDefaultActiveYear() {\n    return this.value?.from || tuiDateClamp(this.defaultActiveYear, this.min, this.max);\n  }\n  get calendarIcon() {\n    return this.options.icon;\n  }\n  onOpenChange(open) {\n    this.open = open;\n  }\n  onActiveZone(focused) {\n    this.updateFocused(focused);\n    if (focused) {\n      return;\n    }\n    if (this.value?.isSingleMonth) {\n      this.value = new TuiMonthRange(this.value.from, this.value.from);\n    }\n  }\n  close() {\n    this.open = false;\n  }\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵTuiInputMonthRangeComponent_BaseFactory;\n      return function TuiInputMonthRangeComponent_Factory(__ngFactoryType__) {\n        return (ɵTuiInputMonthRangeComponent_BaseFactory || (ɵTuiInputMonthRangeComponent_BaseFactory = i0.ɵɵgetInheritedFactory(TuiInputMonthRangeComponent)))(__ngFactoryType__ || TuiInputMonthRangeComponent);\n      };\n    })();\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: TuiInputMonthRangeComponent,\n      selectors: [[\"tui-input-month-range\"]],\n      viewQuery: function TuiInputMonthRangeComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(TuiPrimitiveTextfieldComponent, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.textfield = _t.first);\n        }\n      },\n      hostVars: 1,\n      hostBindings: function TuiInputMonthRangeComponent_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵattribute(\"data-size\", ctx.size);\n        }\n      },\n      inputs: {\n        min: \"min\",\n        max: \"max\",\n        disabledItemHandler: \"disabledItemHandler\",\n        minLength: \"minLength\",\n        maxLength: \"maxLength\",\n        defaultActiveYear: \"defaultActiveYear\"\n      },\n      features: [i0.ɵɵProvidersFeature([tuiAsFocusableItemAccessor(TuiInputMonthRangeComponent), tuiAsControl(TuiInputMonthRangeComponent), TUI_MONTH_FORMATTER_PROVIDER, TuiMonthPipe]), i0.ɵɵInheritDefinitionFeature],\n      ngContentSelectors: _c1,\n      decls: 10,\n      vars: 22,\n      consts: [[\"dropdown\", \"\"], [\"tuiDropdownOpenMonitor\", \"\", 1, \"t-hosted\", 3, \"tuiActiveZoneChange\", \"tuiDropdownOpenChange\", \"tuiDropdown\", \"tuiDropdownEnabled\", \"tuiDropdownOpen\"], [1, \"t-textfield\", 3, \"valueChange\", \"disabled\", \"editable\", \"invalid\", \"nativeId\", \"pseudoFocus\", \"pseudoHover\", \"readOnly\", \"tuiTextfieldIcon\", \"value\"], [3, \"monthClick\", \"mousedown.prevent.silent\", \"disabledItemHandler\", \"max\", \"maxLength\", \"min\", \"minLength\", \"value\", \"year\"]],\n      template: function TuiInputMonthRangeComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵprojectionDef(_c0);\n          i0.ɵɵelementStart(0, \"div\", 1);\n          i0.ɵɵlistener(\"tuiActiveZoneChange\", function TuiInputMonthRangeComponent_Template_div_tuiActiveZoneChange_0_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.onActiveZone($event));\n          })(\"tuiDropdownOpenChange\", function TuiInputMonthRangeComponent_Template_div_tuiDropdownOpenChange_0_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.onOpenChange($event));\n          });\n          i0.ɵɵelementStart(1, \"tui-primitive-textfield\", 2);\n          i0.ɵɵpipe(2, \"tuiMapper\");\n          i0.ɵɵpipe(3, \"async\");\n          i0.ɵɵpipe(4, \"tuiMapper\");\n          i0.ɵɵpipe(5, \"async\");\n          i0.ɵɵlistener(\"valueChange\", function TuiInputMonthRangeComponent_Template_tui_primitive_textfield_valueChange_1_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.onValueChange($event));\n          });\n          i0.ɵɵprojection(6);\n          i0.ɵɵprojection(7, 1, [\"ngProjectAs\", \"input\", 5, [\"input\"]]);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(8, TuiInputMonthRangeComponent_ng_template_8_Template, 1, 7, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          const dropdown_r4 = i0.ɵɵreference(9);\n          i0.ɵɵproperty(\"tuiDropdown\", dropdown_r4)(\"tuiDropdownEnabled\", ctx.interactive)(\"tuiDropdownOpen\", ctx.open && ctx.interactive);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"disabled\", ctx.computedDisabled)(\"editable\", false)(\"invalid\", ctx.computedInvalid)(\"nativeId\", ctx.nativeId)(\"pseudoFocus\", ctx.pseudoFocus)(\"pseudoHover\", ctx.pseudoHover)(\"readOnly\", ctx.readOnly)(\"tuiTextfieldIcon\", ctx.calendarIcon)(\"value\", ctx.value ? ctx.computeValue(i0.ɵɵpipeBind1(3, 15, i0.ɵɵpipeBind2(2, 12, ctx.value.from, ctx.formatter)), i0.ɵɵpipeBind1(5, 20, i0.ɵɵpipeBind2(4, 17, ctx.value.to, ctx.formatter))) : \"\");\n        }\n      },\n      dependencies: [i1.TuiCalendarMonth, i2.TuiPrimitiveTextfieldComponent, i2.TuiPrimitiveTextfieldDirective, i3.TuiTextfieldIconDirective, i3.TuiLegacyDropdownOpenMonitorDirective, i1$1.TuiDropdownDirective, i1$1.TuiDropdownOpen, i5.AsyncPipe, i6.TuiMapperPipe],\n      styles: [\"[_nghost-%COMP%]{display:block;border-radius:var(--tui-radius-m);text-align:start}[_nghost-%COMP%]   *:disabled[_nghost-%COMP%], *:disabled   [_nghost-%COMP%]{pointer-events:none}.t-hosted[_ngcontent-%COMP%]{display:block;border-radius:inherit}.t-textfield[_ngcontent-%COMP%]{border-radius:inherit;text-align:inherit}\"],\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiInputMonthRangeComponent, [{\n    type: Component,\n    args: [{\n      standalone: false,\n      selector: 'tui-input-month-range',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [tuiAsFocusableItemAccessor(TuiInputMonthRangeComponent), tuiAsControl(TuiInputMonthRangeComponent), TUI_MONTH_FORMATTER_PROVIDER, TuiMonthPipe],\n      host: {\n        '[attr.data-size]': 'size'\n      },\n      template: \"<div\\n    tuiDropdownOpenMonitor\\n    class=\\\"t-hosted\\\"\\n    [tuiDropdown]=\\\"dropdown\\\"\\n    [tuiDropdownEnabled]=\\\"interactive\\\"\\n    [tuiDropdownOpen]=\\\"open && interactive\\\"\\n    (tuiActiveZoneChange)=\\\"onActiveZone($event)\\\"\\n    (tuiDropdownOpenChange)=\\\"onOpenChange($event)\\\"\\n>\\n    <tui-primitive-textfield\\n        class=\\\"t-textfield\\\"\\n        [disabled]=\\\"computedDisabled\\\"\\n        [editable]=\\\"false\\\"\\n        [invalid]=\\\"computedInvalid\\\"\\n        [nativeId]=\\\"nativeId\\\"\\n        [pseudoFocus]=\\\"pseudoFocus\\\"\\n        [pseudoHover]=\\\"pseudoHover\\\"\\n        [readOnly]=\\\"readOnly\\\"\\n        [tuiTextfieldIcon]=\\\"calendarIcon\\\"\\n        [value]=\\\"\\n            value\\n                ? computeValue(value.from | tuiMapper: formatter | async, value.to | tuiMapper: formatter | async)\\n                : ''\\n        \\\"\\n        (valueChange)=\\\"onValueChange($event)\\\"\\n    >\\n        <ng-content />\\n        <ng-content\\n            ngProjectAs=\\\"input\\\"\\n            select=\\\"input\\\"\\n        />\\n    </tui-primitive-textfield>\\n\\n    <ng-template #dropdown>\\n        <tui-calendar-month\\n            [disabledItemHandler]=\\\"disabledItemHandler\\\"\\n            [max]=\\\"max\\\"\\n            [maxLength]=\\\"maxLength\\\"\\n            [min]=\\\"min\\\"\\n            [minLength]=\\\"minLength\\\"\\n            [value]=\\\"value\\\"\\n            [year]=\\\"computedDefaultActiveYear\\\"\\n            (monthClick)=\\\"onMonthClick($event)\\\"\\n            (mousedown.prevent.silent)=\\\"(0)\\\"\\n        />\\n    </ng-template>\\n</div>\\n\",\n      styles: [\":host{display:block;border-radius:var(--tui-radius-m);text-align:start}:host :host-context(*:disabled){pointer-events:none}.t-hosted{display:block;border-radius:inherit}.t-textfield{border-radius:inherit;text-align:inherit}\\n\"]\n    }]\n  }], null, {\n    textfield: [{\n      type: ViewChild,\n      args: [TuiPrimitiveTextfieldComponent]\n    }],\n    min: [{\n      type: Input\n    }],\n    max: [{\n      type: Input\n    }],\n    disabledItemHandler: [{\n      type: Input\n    }],\n    minLength: [{\n      type: Input\n    }],\n    maxLength: [{\n      type: Input\n    }],\n    defaultActiveYear: [{\n      type: Input\n    }]\n  });\n})();\nclass TuiInputMonthRangeDirective extends AbstractTuiTextfieldHost {\n  constructor() {\n    super(...arguments);\n    this.value$ = new Subject();\n    this.localizedValue = ['', ''];\n    this.formatter = inject(TUI_MONTH_FORMATTER);\n    this.$ = this.value$.pipe(distinctUntilChanged(), switchMap(value => combineLatest([this.formatter(value?.from || null), this.formatter(value?.to || null)])), takeUntilDestroyed()).subscribe(localizedValue => {\n      this.localizedValue = localizedValue;\n    });\n  }\n  get readOnly() {\n    return true;\n  }\n  get value() {\n    return this.localizedValue[0] ? this.host.computeValue(...this.localizedValue) : '';\n  }\n  ngDoCheck() {\n    this.value$.next(this.host.value);\n  }\n  onValueChange(value) {\n    this.host.onValueChange(value);\n  }\n  static {\n    this.ɵfac = /* @__PURE__ */(() => {\n      let ɵTuiInputMonthRangeDirective_BaseFactory;\n      return function TuiInputMonthRangeDirective_Factory(__ngFactoryType__) {\n        return (ɵTuiInputMonthRangeDirective_BaseFactory || (ɵTuiInputMonthRangeDirective_BaseFactory = i0.ɵɵgetInheritedFactory(TuiInputMonthRangeDirective)))(__ngFactoryType__ || TuiInputMonthRangeDirective);\n      };\n    })();\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: TuiInputMonthRangeDirective,\n      selectors: [[\"tui-input-month-range\"]],\n      features: [i0.ɵɵProvidersFeature([tuiAsTextfieldHost(TuiInputMonthRangeDirective)]), i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiInputMonthRangeDirective, [{\n    type: Directive,\n    args: [{\n      standalone: false,\n      selector: 'tui-input-month-range',\n      providers: [tuiAsTextfieldHost(TuiInputMonthRangeDirective)]\n    }]\n  }], null, null);\n})();\nclass TuiInputMonthRangeModule {\n  static {\n    this.ɵfac = function TuiInputMonthRangeModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiInputMonthRangeModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: TuiInputMonthRangeModule,\n      declarations: [TuiInputMonthRangeComponent, TuiInputMonthRangeDirective],\n      imports: [CommonModule, TuiCalendarMonth, TuiPrimitiveTextfieldModule, TuiMapperPipe, TuiTextfieldControllerModule, TuiLegacyDropdownOpenMonitorDirective, i1$1.TuiDropdownOptionsDirective, i1$1.TuiDropdownDriverDirective, i1$1.TuiDropdownDirective, i1$1.TuiDropdownComponent, i1$1.TuiDropdownOpen, i1$1.TuiDropdownOpenLegacy, i1$1.TuiDropdownPortal, i1$1.TuiDropdownManual, i1$1.TuiDropdownHover, i1$1.TuiDropdownContext, i1$1.TuiDropdownPosition, i1$1.TuiDropdownPositionSided, i1$1.TuiDropdownSelection],\n      exports: [TuiInputMonthRangeComponent, TuiInputMonthRangeDirective, TuiTextfieldComponent, i1$1.TuiDropdownOptionsDirective, i1$1.TuiDropdownDriverDirective, i1$1.TuiDropdownDirective, i1$1.TuiDropdownComponent, i1$1.TuiDropdownOpen, i1$1.TuiDropdownOpenLegacy, i1$1.TuiDropdownPortal, i1$1.TuiDropdownManual, i1$1.TuiDropdownHover, i1$1.TuiDropdownContext, i1$1.TuiDropdownPosition, i1$1.TuiDropdownPositionSided, i1$1.TuiDropdownSelection]\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [CommonModule, TuiCalendarMonth, TuiPrimitiveTextfieldModule, TuiTextfieldControllerModule, i1$1.TuiDropdownComponent]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiInputMonthRangeModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, TuiCalendarMonth, TuiPrimitiveTextfieldModule, TuiMapperPipe, TuiTextfieldControllerModule, TuiLegacyDropdownOpenMonitorDirective, ...TuiDropdown],\n      declarations: [TuiInputMonthRangeComponent, TuiInputMonthRangeDirective],\n      exports: [TuiInputMonthRangeComponent, TuiInputMonthRangeDirective, TuiTextfieldComponent, ...TuiDropdown]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiInputMonthRangeComponent, TuiInputMonthRangeDirective, TuiInputMonthRangeModule };","map":{"version":3,"names":["i0","inject","Component","ChangeDetectionStrategy","ViewChild","Input","Directive","NgModule","TUI_FALSE_HANDLER","CHAR_EN_DASH","TuiDay","TuiMonthRange","tuiDateClamp","TuiMonthPipe","TUI_INPUT_DATE_OPTIONS","AbstractTuiNullableControl","tuiAsControl","AbstractTuiTextfieldHost","i2","TuiPrimitiveTextfieldComponent","TuiPrimitiveTextfieldModule","TuiTextfieldComponent","i3","TUI_TEXTFIELD_SIZE","TuiTextfieldControllerModule","TuiLegacyDropdownOpenMonitorDirective","TUI_MONTH_FORMATTER","tuiAsFocusableItemAccessor","TUI_MONTH_FORMATTER_PROVIDER","tuiAsTextfieldHost","i1","TuiCalendarMonth","i1$1","TuiDropdown","i5","CommonModule","i6","TuiMapperPipe","takeUntilDestroyed","Subject","distinctUntilChanged","switchMap","combineLatest","_c0","_c1","TuiInputMonthRangeComponent_ng_template_8_Template","rf","ctx","_r2","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","TuiInputMonthRangeComponent_ng_template_8_Template_tui_calendar_month_monthClick_0_listener","$event","ɵɵrestoreView","ctx_r2","ɵɵnextContext","ɵɵresetView","onMonthClick","TuiInputMonthRangeComponent_ng_template_8_Template_tui_calendar_month_mousedown_prevent_silent_0_listener","ɵɵelementEnd","ɵɵproperty","disabledItemHandler","max","maxLength","min","minLength","value","computedDefaultActiveYear","TuiInputMonthRangeComponent","constructor","arguments","options","textfieldSize","formatter","defaultActiveYear","currentLocal","open","nativeFocusableElement","textfield","focused","setDisabledState","close","computeValue","from","to","formattedTo","readOnly","onValueChange","onOpenChange","month","isSingleMonth","writeValue","sort","size","calendarIcon","icon","onActiveZone","updateFocused","ɵfac","ɵTuiInputMonthRangeComponent_BaseFactory","TuiInputMonthRangeComponent_Factory","__ngFactoryType__","ɵɵgetInheritedFactory","ɵcmp","ɵɵdefineComponent","type","selectors","viewQuery","TuiInputMonthRangeComponent_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","hostVars","hostBindings","TuiInputMonthRangeComponent_HostBindings","ɵɵattribute","inputs","features","ɵɵProvidersFeature","ɵɵInheritDefinitionFeature","ngContentSelectors","decls","vars","consts","template","TuiInputMonthRangeComponent_Template","_r1","ɵɵprojectionDef","TuiInputMonthRangeComponent_Template_div_tuiActiveZoneChange_0_listener","TuiInputMonthRangeComponent_Template_div_tuiDropdownOpenChange_0_listener","ɵɵpipe","TuiInputMonthRangeComponent_Template_tui_primitive_textfield_valueChange_1_listener","ɵɵprojection","ɵɵtemplate","ɵɵtemplateRefExtractor","dropdown_r4","ɵɵreference","interactive","ɵɵadvance","computedDisabled","computedInvalid","nativeId","pseudoFocus","pseudoHover","ɵɵpipeBind1","ɵɵpipeBind2","dependencies","TuiPrimitiveTextfieldDirective","TuiTextfieldIconDirective","TuiDropdownDirective","TuiDropdownOpen","AsyncPipe","styles","changeDetection","ngDevMode","ɵsetClassMetadata","args","standalone","selector","OnPush","providers","host","TuiInputMonthRangeDirective","value$","localizedValue","$","pipe","subscribe","ngDoCheck","next","ɵTuiInputMonthRangeDirective_BaseFactory","TuiInputMonthRangeDirective_Factory","ɵdir","ɵɵdefineDirective","TuiInputMonthRangeModule","TuiInputMonthRangeModule_Factory","ɵmod","ɵɵdefineNgModule","declarations","imports","TuiDropdownOptionsDirective","TuiDropdownDriverDirective","TuiDropdownComponent","TuiDropdownOpenLegacy","TuiDropdownPortal","TuiDropdownManual","TuiDropdownHover","TuiDropdownContext","TuiDropdownPosition","TuiDropdownPositionSided","TuiDropdownSelection","exports","ɵinj","ɵɵdefineInjector"],"sources":["C:/Users/Asus-PC/Downloads/WebLibraryNew/WebLibrary/WebLibraryApp/Frontend/node_modules/@taiga-ui/legacy/fesm2022/taiga-ui-legacy-components-input-month-range.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { inject, Component, ChangeDetectionStrategy, ViewChild, Input, Directive, NgModule } from '@angular/core';\nimport { TUI_FALSE_HANDLER, CHAR_EN_DASH } from '@taiga-ui/cdk/constants';\nimport { TuiDay, TuiMonthRange, tuiDateClamp } from '@taiga-ui/cdk/date-time';\nimport { TuiMonthPipe } from '@taiga-ui/core/pipes/month';\nimport { TUI_INPUT_DATE_OPTIONS } from '@taiga-ui/kit/tokens';\nimport { AbstractTuiNullableControl, tuiAsControl, AbstractTuiTextfieldHost } from '@taiga-ui/legacy/classes';\nimport * as i2 from '@taiga-ui/legacy/components/primitive-textfield';\nimport { TuiPrimitiveTextfieldComponent, TuiPrimitiveTextfieldModule, TuiTextfieldComponent } from '@taiga-ui/legacy/components/primitive-textfield';\nimport * as i3 from '@taiga-ui/legacy/directives';\nimport { TUI_TEXTFIELD_SIZE, TuiTextfieldControllerModule, TuiLegacyDropdownOpenMonitorDirective } from '@taiga-ui/legacy/directives';\nimport { TUI_MONTH_FORMATTER, tuiAsFocusableItemAccessor, TUI_MONTH_FORMATTER_PROVIDER, tuiAsTextfieldHost } from '@taiga-ui/legacy/tokens';\nimport * as i1 from '@taiga-ui/kit/components/calendar-month';\nimport { TuiCalendarMonth } from '@taiga-ui/kit/components/calendar-month';\nimport * as i1$1 from '@taiga-ui/core/directives/dropdown';\nimport { TuiDropdown } from '@taiga-ui/core/directives/dropdown';\nimport * as i5 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i6 from '@taiga-ui/cdk/pipes/mapper';\nimport { TuiMapperPipe } from '@taiga-ui/cdk/pipes/mapper';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { Subject, distinctUntilChanged, switchMap, combineLatest } from 'rxjs';\n\nclass TuiInputMonthRangeComponent extends AbstractTuiNullableControl {\n    constructor() {\n        super(...arguments);\n        this.options = inject(TUI_INPUT_DATE_OPTIONS);\n        this.textfieldSize = inject(TUI_TEXTFIELD_SIZE);\n        this.formatter = inject(TUI_MONTH_FORMATTER);\n        this.min = this.options.min;\n        this.max = this.options.max;\n        this.disabledItemHandler = TUI_FALSE_HANDLER;\n        this.minLength = null;\n        this.maxLength = null;\n        this.defaultActiveYear = TuiDay.currentLocal();\n        this.open = false;\n    }\n    get nativeFocusableElement() {\n        return this.textfield?.nativeFocusableElement ?? null;\n    }\n    get focused() {\n        return !!this.textfield?.focused;\n    }\n    setDisabledState() {\n        super.setDisabledState();\n        this.close();\n    }\n    computeValue(from, to) {\n        const formattedTo = from === to && this.focused && !this.readOnly ? '' : to;\n        return `${from} ${CHAR_EN_DASH} ${formattedTo}`;\n    }\n    onValueChange(value) {\n        if (value) {\n            return;\n        }\n        this.value = null;\n        this.onOpenChange(true);\n    }\n    onMonthClick(month) {\n        if (!this.value?.isSingleMonth) {\n            this.writeValue(new TuiMonthRange(month, month));\n            return;\n        }\n        this.value = TuiMonthRange.sort(this.value.from, month);\n        this.close();\n    }\n    get size() {\n        return this.textfieldSize.size;\n    }\n    get computedDefaultActiveYear() {\n        return (this.value?.from || tuiDateClamp(this.defaultActiveYear, this.min, this.max));\n    }\n    get calendarIcon() {\n        return this.options.icon;\n    }\n    onOpenChange(open) {\n        this.open = open;\n    }\n    onActiveZone(focused) {\n        this.updateFocused(focused);\n        if (focused) {\n            return;\n        }\n        if (this.value?.isSingleMonth) {\n            this.value = new TuiMonthRange(this.value.from, this.value.from);\n        }\n    }\n    close() {\n        this.open = false;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiInputMonthRangeComponent, deps: null, target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiInputMonthRangeComponent, selector: \"tui-input-month-range\", inputs: { min: \"min\", max: \"max\", disabledItemHandler: \"disabledItemHandler\", minLength: \"minLength\", maxLength: \"maxLength\", defaultActiveYear: \"defaultActiveYear\" }, host: { properties: { \"attr.data-size\": \"size\" } }, providers: [\n            tuiAsFocusableItemAccessor(TuiInputMonthRangeComponent),\n            tuiAsControl(TuiInputMonthRangeComponent),\n            TUI_MONTH_FORMATTER_PROVIDER,\n            TuiMonthPipe,\n        ], viewQueries: [{ propertyName: \"textfield\", first: true, predicate: TuiPrimitiveTextfieldComponent, descendants: true }], usesInheritance: true, ngImport: i0, template: \"<div\\n    tuiDropdownOpenMonitor\\n    class=\\\"t-hosted\\\"\\n    [tuiDropdown]=\\\"dropdown\\\"\\n    [tuiDropdownEnabled]=\\\"interactive\\\"\\n    [tuiDropdownOpen]=\\\"open && interactive\\\"\\n    (tuiActiveZoneChange)=\\\"onActiveZone($event)\\\"\\n    (tuiDropdownOpenChange)=\\\"onOpenChange($event)\\\"\\n>\\n    <tui-primitive-textfield\\n        class=\\\"t-textfield\\\"\\n        [disabled]=\\\"computedDisabled\\\"\\n        [editable]=\\\"false\\\"\\n        [invalid]=\\\"computedInvalid\\\"\\n        [nativeId]=\\\"nativeId\\\"\\n        [pseudoFocus]=\\\"pseudoFocus\\\"\\n        [pseudoHover]=\\\"pseudoHover\\\"\\n        [readOnly]=\\\"readOnly\\\"\\n        [tuiTextfieldIcon]=\\\"calendarIcon\\\"\\n        [value]=\\\"\\n            value\\n                ? computeValue(value.from | tuiMapper: formatter | async, value.to | tuiMapper: formatter | async)\\n                : ''\\n        \\\"\\n        (valueChange)=\\\"onValueChange($event)\\\"\\n    >\\n        <ng-content />\\n        <ng-content\\n            ngProjectAs=\\\"input\\\"\\n            select=\\\"input\\\"\\n        />\\n    </tui-primitive-textfield>\\n\\n    <ng-template #dropdown>\\n        <tui-calendar-month\\n            [disabledItemHandler]=\\\"disabledItemHandler\\\"\\n            [max]=\\\"max\\\"\\n            [maxLength]=\\\"maxLength\\\"\\n            [min]=\\\"min\\\"\\n            [minLength]=\\\"minLength\\\"\\n            [value]=\\\"value\\\"\\n            [year]=\\\"computedDefaultActiveYear\\\"\\n            (monthClick)=\\\"onMonthClick($event)\\\"\\n            (mousedown.prevent.silent)=\\\"(0)\\\"\\n        />\\n    </ng-template>\\n</div>\\n\", styles: [\":host{display:block;border-radius:var(--tui-radius-m);text-align:start}:host :host-context(*:disabled){pointer-events:none}.t-hosted{display:block;border-radius:inherit}.t-textfield{border-radius:inherit;text-align:inherit}\\n\"], dependencies: [{ kind: \"component\", type: i1.TuiCalendarMonth, selector: \"tui-calendar-month\", inputs: [\"value\", \"year\", \"disabledItemHandler\", \"minLength\", \"maxLength\", \"min\", \"max\"], outputs: [\"monthClick\", \"hoveredItemChange\", \"yearChange\"] }, { kind: \"component\", type: i2.TuiPrimitiveTextfieldComponent, selector: \"tui-primitive-textfield\", inputs: [\"editable\", \"iconCleaner\", \"readOnly\", \"invalid\", \"disabled\", \"value\"], outputs: [\"valueChange\"] }, { kind: \"directive\", type: i2.TuiPrimitiveTextfieldDirective, selector: \"tui-primitive-textfield\" }, { kind: \"directive\", type: i3.TuiTextfieldIconDirective, selector: \"[tuiTextfieldIcon]\", inputs: [\"tuiTextfieldIcon\"] }, { kind: \"directive\", type: i3.TuiLegacyDropdownOpenMonitorDirective, selector: \"[tuiDropdownOpenMonitor]\" }, { kind: \"directive\", type: i1$1.TuiDropdownDirective, selector: \"[tuiDropdown]:not(ng-container):not(ng-template)\", inputs: [\"tuiDropdown\"], exportAs: [\"tuiDropdown\"] }, { kind: \"directive\", type: i1$1.TuiDropdownOpen, selector: \"[tuiDropdown][tuiDropdownOpen],[tuiDropdown][tuiDropdownOpenChange]\", inputs: [\"tuiDropdownEnabled\", \"tuiDropdownOpen\"], outputs: [\"tuiDropdownOpenChange\"] }, { kind: \"pipe\", type: i5.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i6.TuiMapperPipe, name: \"tuiMapper\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiInputMonthRangeComponent, decorators: [{\n            type: Component,\n            args: [{ standalone: false, selector: 'tui-input-month-range', changeDetection: ChangeDetectionStrategy.OnPush, providers: [\n                        tuiAsFocusableItemAccessor(TuiInputMonthRangeComponent),\n                        tuiAsControl(TuiInputMonthRangeComponent),\n                        TUI_MONTH_FORMATTER_PROVIDER,\n                        TuiMonthPipe,\n                    ], host: {\n                        '[attr.data-size]': 'size',\n                    }, template: \"<div\\n    tuiDropdownOpenMonitor\\n    class=\\\"t-hosted\\\"\\n    [tuiDropdown]=\\\"dropdown\\\"\\n    [tuiDropdownEnabled]=\\\"interactive\\\"\\n    [tuiDropdownOpen]=\\\"open && interactive\\\"\\n    (tuiActiveZoneChange)=\\\"onActiveZone($event)\\\"\\n    (tuiDropdownOpenChange)=\\\"onOpenChange($event)\\\"\\n>\\n    <tui-primitive-textfield\\n        class=\\\"t-textfield\\\"\\n        [disabled]=\\\"computedDisabled\\\"\\n        [editable]=\\\"false\\\"\\n        [invalid]=\\\"computedInvalid\\\"\\n        [nativeId]=\\\"nativeId\\\"\\n        [pseudoFocus]=\\\"pseudoFocus\\\"\\n        [pseudoHover]=\\\"pseudoHover\\\"\\n        [readOnly]=\\\"readOnly\\\"\\n        [tuiTextfieldIcon]=\\\"calendarIcon\\\"\\n        [value]=\\\"\\n            value\\n                ? computeValue(value.from | tuiMapper: formatter | async, value.to | tuiMapper: formatter | async)\\n                : ''\\n        \\\"\\n        (valueChange)=\\\"onValueChange($event)\\\"\\n    >\\n        <ng-content />\\n        <ng-content\\n            ngProjectAs=\\\"input\\\"\\n            select=\\\"input\\\"\\n        />\\n    </tui-primitive-textfield>\\n\\n    <ng-template #dropdown>\\n        <tui-calendar-month\\n            [disabledItemHandler]=\\\"disabledItemHandler\\\"\\n            [max]=\\\"max\\\"\\n            [maxLength]=\\\"maxLength\\\"\\n            [min]=\\\"min\\\"\\n            [minLength]=\\\"minLength\\\"\\n            [value]=\\\"value\\\"\\n            [year]=\\\"computedDefaultActiveYear\\\"\\n            (monthClick)=\\\"onMonthClick($event)\\\"\\n            (mousedown.prevent.silent)=\\\"(0)\\\"\\n        />\\n    </ng-template>\\n</div>\\n\", styles: [\":host{display:block;border-radius:var(--tui-radius-m);text-align:start}:host :host-context(*:disabled){pointer-events:none}.t-hosted{display:block;border-radius:inherit}.t-textfield{border-radius:inherit;text-align:inherit}\\n\"] }]\n        }], propDecorators: { textfield: [{\n                type: ViewChild,\n                args: [TuiPrimitiveTextfieldComponent]\n            }], min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], disabledItemHandler: [{\n                type: Input\n            }], minLength: [{\n                type: Input\n            }], maxLength: [{\n                type: Input\n            }], defaultActiveYear: [{\n                type: Input\n            }] } });\n\nclass TuiInputMonthRangeDirective extends AbstractTuiTextfieldHost {\n    constructor() {\n        super(...arguments);\n        this.value$ = new Subject();\n        this.localizedValue = ['', ''];\n        this.formatter = inject(TUI_MONTH_FORMATTER);\n        this.$ = this.value$\n            .pipe(distinctUntilChanged(), switchMap((value) => combineLatest([\n            this.formatter(value?.from || null),\n            this.formatter(value?.to || null),\n        ])), takeUntilDestroyed())\n            .subscribe((localizedValue) => {\n            this.localizedValue = localizedValue;\n        });\n    }\n    get readOnly() {\n        return true;\n    }\n    get value() {\n        return this.localizedValue[0]\n            ? this.host.computeValue(...this.localizedValue)\n            : '';\n    }\n    ngDoCheck() {\n        this.value$.next(this.host.value);\n    }\n    onValueChange(value) {\n        this.host.onValueChange(value);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiInputMonthRangeDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiInputMonthRangeDirective, selector: \"tui-input-month-range\", providers: [tuiAsTextfieldHost(TuiInputMonthRangeDirective)], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiInputMonthRangeDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    standalone: false,\n                    selector: 'tui-input-month-range',\n                    providers: [tuiAsTextfieldHost(TuiInputMonthRangeDirective)],\n                }]\n        }] });\n\nclass TuiInputMonthRangeModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiInputMonthRangeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiInputMonthRangeModule, declarations: [TuiInputMonthRangeComponent, TuiInputMonthRangeDirective], imports: [CommonModule,\n            TuiCalendarMonth,\n            TuiPrimitiveTextfieldModule,\n            TuiMapperPipe,\n            TuiTextfieldControllerModule,\n            TuiLegacyDropdownOpenMonitorDirective, i1$1.TuiDropdownOptionsDirective, i1$1.TuiDropdownDriverDirective, i1$1.TuiDropdownDirective, i1$1.TuiDropdownComponent, i1$1.TuiDropdownOpen, i1$1.TuiDropdownOpenLegacy, i1$1.TuiDropdownPortal, i1$1.TuiDropdownManual, i1$1.TuiDropdownHover, i1$1.TuiDropdownContext, i1$1.TuiDropdownPosition, i1$1.TuiDropdownPositionSided, i1$1.TuiDropdownSelection], exports: [TuiInputMonthRangeComponent,\n            TuiInputMonthRangeDirective,\n            TuiTextfieldComponent, i1$1.TuiDropdownOptionsDirective, i1$1.TuiDropdownDriverDirective, i1$1.TuiDropdownDirective, i1$1.TuiDropdownComponent, i1$1.TuiDropdownOpen, i1$1.TuiDropdownOpenLegacy, i1$1.TuiDropdownPortal, i1$1.TuiDropdownManual, i1$1.TuiDropdownHover, i1$1.TuiDropdownContext, i1$1.TuiDropdownPosition, i1$1.TuiDropdownPositionSided, i1$1.TuiDropdownSelection] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiInputMonthRangeModule, imports: [CommonModule,\n            TuiCalendarMonth,\n            TuiPrimitiveTextfieldModule,\n            TuiTextfieldControllerModule, i1$1.TuiDropdownComponent] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiInputMonthRangeModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        TuiCalendarMonth,\n                        TuiPrimitiveTextfieldModule,\n                        TuiMapperPipe,\n                        TuiTextfieldControllerModule,\n                        TuiLegacyDropdownOpenMonitorDirective,\n                        ...TuiDropdown,\n                    ],\n                    declarations: [TuiInputMonthRangeComponent, TuiInputMonthRangeDirective],\n                    exports: [\n                        TuiInputMonthRangeComponent,\n                        TuiInputMonthRangeDirective,\n                        TuiTextfieldComponent,\n                        ...TuiDropdown,\n                    ],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiInputMonthRangeComponent, TuiInputMonthRangeDirective, TuiInputMonthRangeModule };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}