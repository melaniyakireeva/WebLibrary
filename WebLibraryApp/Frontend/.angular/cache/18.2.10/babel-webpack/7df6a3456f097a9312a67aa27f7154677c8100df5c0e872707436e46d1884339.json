{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { HttpCustomService } from '../http/http-service.service';\nlet RoomService = class RoomService {\n  httpService;\n  controller = 'Room';\n  constructor(httpService) {\n    this.httpService = httpService;\n  }\n  createRoom(roomDto) {\n    const method = 'CreateRoom';\n    const api = `api/${this.controller}/${method}`;\n    return this.httpService.postRequest(api, {\n      createdRoom: roomDto\n    });\n  }\n  getMessagesById(roomId) {\n    const method = 'GetMessagesById';\n    const api = `api/${this.controller}/${method}`;\n    return this.httpService.postRequest(api, {\n      roomId\n    });\n  }\n  getUserRooms(userId) {\n    const method = 'GetUserRooms';\n    const api = `api/${this.controller}/${method}`;\n    return this.httpService.postRequest(api, {\n      userId\n    });\n  }\n  sendMessage(message) {\n    const method = 'SendMessage';\n    const api = `api/${this.controller}/${method}`;\n    return this.httpService.postRequest(api, {\n      message\n    });\n  }\n  static ctorParameters = () => [{\n    type: HttpCustomService\n  }];\n};\nRoomService = __decorate([Injectable({\n  providedIn: 'root'\n})], RoomService);\nexport { RoomService };","map":{"version":3,"names":["Injectable","HttpCustomService","RoomService","httpService","controller","constructor","createRoom","roomDto","method","api","postRequest","createdRoom","getMessagesById","roomId","getUserRooms","userId","sendMessage","message","__decorate","providedIn"],"sources":["C:\\Users\\Asus-PC\\Downloads\\WebLibraryNew\\WebLibrary\\WebLibraryApp\\Frontend\\src\\app\\services\\messages\\room-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpCustomService } from '../http/http-service.service';\r\nimport { map, Observable } from 'rxjs';\r\nimport { AccountInfo } from '../auth/auth-service.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class RoomService {\r\n  private controller: string = 'Room';\r\n  constructor(private httpService: HttpCustomService) {}\r\n\r\n  public createRoom(roomDto: RoomDTO): Observable<any> {\r\n    const method = 'CreateRoom';\r\n    const api = `api/${this.controller}/${method}`;\r\n    return this.httpService.postRequest(api, { createdRoom: roomDto });\r\n  }\r\n\r\n  public getMessagesById(roomId: string): Observable<MessageChatDTO[]> {\r\n    const method = 'GetMessagesById';\r\n    const api = `api/${this.controller}/${method}`;\r\n    return this.httpService.postRequest(api, { roomId });\r\n  }\r\n\r\n  public getUserRooms(userId: number): Observable<RoomDTO[]> {\r\n    const method = 'GetUserRooms';\r\n    const api = `api/${this.controller}/${method}`;\r\n    return this.httpService.postRequest(api, { userId });\r\n  }\r\n\r\n  public sendMessage(message: MessageDTO): Observable<boolean> {\r\n    const method = 'SendMessage';\r\n    const api = `api/${this.controller}/${method}`;\r\n    return this.httpService.postRequest(api, { message });\r\n  }\r\n}\r\n\r\nexport interface BaseModelDTO {\r\n  id?: string;\r\n  createdAt: string;\r\n  isDeleted?: boolean;\r\n}\r\n\r\nexport interface RoomDTO extends BaseModelDTO {\r\n  userIds: number[] | null;\r\n  name: string | null;\r\n}\r\n\r\nexport interface AccountDTO {\r\n  id: number;\r\n  name: string;\r\n  surname: string;\r\n  email: string;\r\n  login: string;\r\n  role?: number;\r\n  organization?: string;\r\n  lastVisit?: Date;\r\n  isDisabled?: boolean;\r\n}\r\n\r\nexport interface AccountFullInfo {\r\n  id: number;\r\n  name: string;\r\n  surname: string;\r\n  email: string;\r\n  login: string;\r\n  profileIconId?: number;\r\n  organization?: string;\r\n}\r\n\r\nexport interface MessageDTO extends BaseModelDTO {\r\n  text: string;\r\n  isRead: boolean;\r\n  isEdited: boolean;\r\n  userId: number;\r\n  roomId: string;\r\n}\r\n\r\nexport interface MessageChatDTO extends BaseModelDTO {\r\n  text: string;\r\n  isRead: boolean;\r\n  isEdited: boolean;\r\n  userAvatar?: string;\r\n  user: {\r\n    id: number,\r\n    name: string,\r\n    surname: string\r\n  };\r\n  roomId: string;\r\n}\r\n\r\n\r\nexport interface CreateRoomRequest {\r\n  createdRoom: RoomDTO;\r\n}\r\n\r\nexport interface GetMessagesByRoomId {\r\n  guid: string;\r\n}\r\n\r\nexport interface GetUserRoomsRequest {\r\n  userId: number;\r\n}"],"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAC1C,SAASC,iBAAiB,QAAQ,8BAA8B;AAOzD,IAAMC,WAAW,GAAjB,MAAMA,WAAW;EAEFC,WAAA;EADZC,UAAU,GAAW,MAAM;EACnCC,YAAoBF,WAA8B;IAA9B,KAAAA,WAAW,GAAXA,WAAW;EAAsB;EAE9CG,UAAUA,CAACC,OAAgB;IAChC,MAAMC,MAAM,GAAG,YAAY;IAC3B,MAAMC,GAAG,GAAG,OAAO,IAAI,CAACL,UAAU,IAAII,MAAM,EAAE;IAC9C,OAAO,IAAI,CAACL,WAAW,CAACO,WAAW,CAACD,GAAG,EAAE;MAAEE,WAAW,EAAEJ;IAAO,CAAE,CAAC;EACpE;EAEOK,eAAeA,CAACC,MAAc;IACnC,MAAML,MAAM,GAAG,iBAAiB;IAChC,MAAMC,GAAG,GAAG,OAAO,IAAI,CAACL,UAAU,IAAII,MAAM,EAAE;IAC9C,OAAO,IAAI,CAACL,WAAW,CAACO,WAAW,CAACD,GAAG,EAAE;MAAEI;IAAM,CAAE,CAAC;EACtD;EAEOC,YAAYA,CAACC,MAAc;IAChC,MAAMP,MAAM,GAAG,cAAc;IAC7B,MAAMC,GAAG,GAAG,OAAO,IAAI,CAACL,UAAU,IAAII,MAAM,EAAE;IAC9C,OAAO,IAAI,CAACL,WAAW,CAACO,WAAW,CAACD,GAAG,EAAE;MAAEM;IAAM,CAAE,CAAC;EACtD;EAEOC,WAAWA,CAACC,OAAmB;IACpC,MAAMT,MAAM,GAAG,aAAa;IAC5B,MAAMC,GAAG,GAAG,OAAO,IAAI,CAACL,UAAU,IAAII,MAAM,EAAE;IAC9C,OAAO,IAAI,CAACL,WAAW,CAACO,WAAW,CAACD,GAAG,EAAE;MAAEQ;IAAO,CAAE,CAAC;EACvD;;;;;AA1BWf,WAAW,GAAAgB,UAAA,EAHvBlB,UAAU,CAAC;EACVmB,UAAU,EAAE;CACb,CAAC,C,EACWjB,WAAW,CA2BvB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}