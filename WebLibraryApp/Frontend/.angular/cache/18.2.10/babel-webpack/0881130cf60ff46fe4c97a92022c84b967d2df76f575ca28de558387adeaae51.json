{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { inject, Component, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { TUI_DEFAULT_IDENTITY_MATCHER } from '@taiga-ui/cdk/constants';\nimport { tuiTypedFromEvent } from '@taiga-ui/cdk/observables';\nimport { tuiInjectElement } from '@taiga-ui/cdk/utils/dom';\nimport { tuiIsPresent } from '@taiga-ui/cdk/utils/miscellaneous';\nimport { TUI_DATA_LIST_HOST, TuiOption, TuiDataListComponent } from '@taiga-ui/core/components/data-list';\nimport { TUI_COMMON_ICONS } from '@taiga-ui/core/tokens';\nimport { AbstractTuiControl } from '@taiga-ui/legacy/classes';\nimport { injectContext, PolymorpheusComponent } from '@taiga-ui/polymorpheus';\nimport { Subject, merge, EMPTY, startWith, map, distinctUntilChanged } from 'rxjs';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i2 from '@taiga-ui/core/components/scrollbar';\nimport { TuiScrollIntoView } from '@taiga-ui/core/components/scrollbar';\nimport * as i3 from '@taiga-ui/core/components/icon';\nimport { TuiIcon } from '@taiga-ui/core/components/icon';\nfunction TuiSelectOptionComponent_tui_icon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tui-icon\", 3);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"icon\", ctx_r0.icons.check)(\"tuiScrollIntoView\", true);\n  }\n}\nfunction TuiSelectOptionComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 4);\n  }\n}\nclass TuiSelectOptionComponent {\n  constructor() {\n    this.host = inject(TUI_DATA_LIST_HOST);\n    this.el = tuiInjectElement();\n    this.changeDetection$ = new Subject();\n    this.abstractControl = inject(AbstractTuiControl, {\n      optional: true\n    });\n    this.control = inject(NgControl);\n    this.option = inject(TuiOption);\n    this.dataList = inject(TuiDataListComponent, {\n      optional: true\n    });\n    this.icons = inject(TUI_COMMON_ICONS);\n    this.context = injectContext();\n    this.selected$ = merge(this.changeDetection$, this.control.valueChanges || EMPTY, tuiTypedFromEvent(this.el, 'animationstart')).pipe(startWith(null), map(() => this.selected), distinctUntilChanged());\n  }\n  ngOnInit() {\n    /**\n     * This would cause changes inside already checked parent component (during the same change detection cycle),\n     * and it might cause ExpressionChanged error due to potential HostBinding\n     * (for example, inside {@link https://github.com/angular/angular/blob/main/packages/forms/src/directives/ng_control_status.ts#L99 NgControlStatus}).\n     * Microtask keeps it in the same frame but allows change detection to run.\n     */\n    void Promise.resolve().then(() => {\n      if (tuiIsPresent(this.option.value) && !this.option.disabled) {\n        this.host.checkOption?.(this.option.value);\n      }\n    });\n  }\n  ngDoCheck() {\n    this.changeDetection$.next();\n  }\n  get value() {\n    return this.abstractControl?.value ?? this.control.value;\n  }\n  get matcher() {\n    return this.host.identityMatcher || TUI_DEFAULT_IDENTITY_MATCHER;\n  }\n  get selected() {\n    return tuiIsPresent(this.option.value) && tuiIsPresent(this.value) && this.matcher(this.value, this.option.value);\n  }\n  static {\n    this.ɵfac = function TuiSelectOptionComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiSelectOptionComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: TuiSelectOptionComponent,\n      selectors: [[\"tui-select-option\"]],\n      decls: 5,\n      vars: 5,\n      consts: [[\"dummy\", \"\"], [3, \"ngTemplateOutlet\"], [\"automation-id\", \"tui-select-option__checkmark\", \"class\", \"t-checkmark\", 3, \"icon\", \"tuiScrollIntoView\", 4, \"ngIf\", \"ngIfElse\"], [\"automation-id\", \"tui-select-option__checkmark\", 1, \"t-checkmark\", 3, \"icon\", \"tuiScrollIntoView\"], [1, \"t-dummy\"]],\n      template: function TuiSelectOptionComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementContainer(0, 1);\n          i0.ɵɵtemplate(1, TuiSelectOptionComponent_tui_icon_1_Template, 1, 2, \"tui-icon\", 2);\n          i0.ɵɵpipe(2, \"async\");\n          i0.ɵɵtemplate(3, TuiSelectOptionComponent_ng_template_3_Template, 1, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n        }\n        if (rf & 2) {\n          const dummy_r2 = i0.ɵɵreference(4);\n          i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.context.$implicit);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(2, 3, ctx.selected$))(\"ngIfElse\", dummy_r2);\n        }\n      },\n      dependencies: [i1.NgIf, i1.NgTemplateOutlet, i2.TuiScrollIntoView, i3.TuiIcon, i1.AsyncPipe],\n      styles: [\"@keyframes _ngcontent-%COMP%_retrigger{0%{left:1px}to{left:2px}}[_nghost-%COMP%]{display:flex;flex:1;align-items:center;max-inline-size:100%;animation:_ngcontent-%COMP%_retrigger 1s}.t-checkmark[_ngcontent-%COMP%]{margin-inline-start:auto;inline-size:1.75rem;border-width:.25rem;border-inline-start-width:.5rem}tui-data-list[data-size=\\\"s\\\"][_nghost-%COMP%]   .t-checkmark[_ngcontent-%COMP%], tui-data-list[data-size=\\\"s\\\"]   [_nghost-%COMP%]   .t-checkmark[_ngcontent-%COMP%]{margin-inline-end:-.375rem}tui-data-list[data-size=\\\"m\\\"][_nghost-%COMP%]   .t-checkmark[_ngcontent-%COMP%], tui-data-list[data-size=\\\"m\\\"]   [_nghost-%COMP%]   .t-checkmark[_ngcontent-%COMP%]{margin-inline-end:-.125rem}.t-dummy[_ngcontent-%COMP%]{inline-size:1.75rem}\"],\n      changeDetection: 0\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiSelectOptionComponent, [{\n    type: Component,\n    args: [{\n      standalone: false,\n      selector: 'tui-select-option',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<ng-container [ngTemplateOutlet]=\\\"context.$implicit\\\" />\\n<tui-icon\\n    *ngIf=\\\"selected$ | async; else dummy\\\"\\n    automation-id=\\\"tui-select-option__checkmark\\\"\\n    class=\\\"t-checkmark\\\"\\n    [icon]=\\\"icons.check\\\"\\n    [tuiScrollIntoView]=\\\"true\\\"\\n/>\\n<ng-template #dummy>\\n    <span class=\\\"t-dummy\\\"></span>\\n</ng-template>\\n\",\n      styles: [\"@keyframes retrigger{0%{left:1px}to{left:2px}}:host{display:flex;flex:1;align-items:center;max-inline-size:100%;animation:retrigger 1s}.t-checkmark{margin-inline-start:auto;inline-size:1.75rem;border-width:.25rem;border-inline-start-width:.5rem}:host-context(tui-data-list[data-size=\\\"s\\\"]) .t-checkmark{margin-inline-end:-.375rem}:host-context(tui-data-list[data-size=\\\"m\\\"]) .t-checkmark{margin-inline-end:-.125rem}.t-dummy{inline-size:1.75rem}\\n\"]\n    }]\n  }], null, null);\n})();\nconst TUI_SELECT_OPTION = new PolymorpheusComponent(TuiSelectOptionComponent);\nclass TuiSelectOptionModule {\n  static {\n    this.ɵfac = function TuiSelectOptionModule_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiSelectOptionModule)();\n    };\n  }\n  static {\n    this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: TuiSelectOptionModule,\n      declarations: [TuiSelectOptionComponent],\n      imports: [CommonModule, TuiScrollIntoView, TuiIcon],\n      exports: [TuiSelectOptionComponent]\n    });\n  }\n  static {\n    this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [CommonModule, TuiIcon]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiSelectOptionModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, TuiScrollIntoView, TuiIcon],\n      declarations: [TuiSelectOptionComponent],\n      exports: [TuiSelectOptionComponent]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TUI_SELECT_OPTION, TuiSelectOptionComponent, TuiSelectOptionModule };","map":{"version":3,"names":["i0","inject","Component","ChangeDetectionStrategy","NgModule","NgControl","TUI_DEFAULT_IDENTITY_MATCHER","tuiTypedFromEvent","tuiInjectElement","tuiIsPresent","TUI_DATA_LIST_HOST","TuiOption","TuiDataListComponent","TUI_COMMON_ICONS","AbstractTuiControl","injectContext","PolymorpheusComponent","Subject","merge","EMPTY","startWith","map","distinctUntilChanged","i1","CommonModule","i2","TuiScrollIntoView","i3","TuiIcon","TuiSelectOptionComponent_tui_icon_1_Template","rf","ctx","ɵɵelement","ctx_r0","ɵɵnextContext","ɵɵproperty","icons","check","TuiSelectOptionComponent_ng_template_3_Template","TuiSelectOptionComponent","constructor","host","el","changeDetection$","abstractControl","optional","control","option","dataList","context","selected$","valueChanges","pipe","selected","ngOnInit","Promise","resolve","then","value","disabled","checkOption","ngDoCheck","next","matcher","identityMatcher","ɵfac","TuiSelectOptionComponent_Factory","__ngFactoryType__","ɵcmp","ɵɵdefineComponent","type","selectors","decls","vars","consts","template","TuiSelectOptionComponent_Template","ɵɵelementContainer","ɵɵtemplate","ɵɵpipe","ɵɵtemplateRefExtractor","dummy_r2","ɵɵreference","$implicit","ɵɵadvance","ɵɵpipeBind1","dependencies","NgIf","NgTemplateOutlet","AsyncPipe","styles","changeDetection","ngDevMode","ɵsetClassMetadata","args","standalone","selector","OnPush","TUI_SELECT_OPTION","TuiSelectOptionModule","TuiSelectOptionModule_Factory","ɵmod","ɵɵdefineNgModule","declarations","imports","exports","ɵinj","ɵɵdefineInjector"],"sources":["C:/Users/Asus-PC/Downloads/WebLibraryNew/WebLibrary/WebLibraryApp/Frontend/node_modules/@taiga-ui/legacy/fesm2022/taiga-ui-legacy-components-select-option.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { inject, Component, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { TUI_DEFAULT_IDENTITY_MATCHER } from '@taiga-ui/cdk/constants';\nimport { tuiTypedFromEvent } from '@taiga-ui/cdk/observables';\nimport { tuiInjectElement } from '@taiga-ui/cdk/utils/dom';\nimport { tuiIsPresent } from '@taiga-ui/cdk/utils/miscellaneous';\nimport { TUI_DATA_LIST_HOST, TuiOption, TuiDataListComponent } from '@taiga-ui/core/components/data-list';\nimport { TUI_COMMON_ICONS } from '@taiga-ui/core/tokens';\nimport { AbstractTuiControl } from '@taiga-ui/legacy/classes';\nimport { injectContext, PolymorpheusComponent } from '@taiga-ui/polymorpheus';\nimport { Subject, merge, EMPTY, startWith, map, distinctUntilChanged } from 'rxjs';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i2 from '@taiga-ui/core/components/scrollbar';\nimport { TuiScrollIntoView } from '@taiga-ui/core/components/scrollbar';\nimport * as i3 from '@taiga-ui/core/components/icon';\nimport { TuiIcon } from '@taiga-ui/core/components/icon';\n\nclass TuiSelectOptionComponent {\n    constructor() {\n        this.host = inject(TUI_DATA_LIST_HOST);\n        this.el = tuiInjectElement();\n        this.changeDetection$ = new Subject();\n        this.abstractControl = inject((AbstractTuiControl), { optional: true });\n        this.control = inject(NgControl);\n        this.option = inject((TuiOption));\n        this.dataList = inject((TuiDataListComponent), { optional: true });\n        this.icons = inject(TUI_COMMON_ICONS);\n        this.context = injectContext();\n        this.selected$ = merge(this.changeDetection$, this.control.valueChanges || EMPTY, tuiTypedFromEvent(this.el, 'animationstart')).pipe(startWith(null), map(() => this.selected), distinctUntilChanged());\n    }\n    ngOnInit() {\n        /**\n         * This would cause changes inside already checked parent component (during the same change detection cycle),\n         * and it might cause ExpressionChanged error due to potential HostBinding\n         * (for example, inside {@link https://github.com/angular/angular/blob/main/packages/forms/src/directives/ng_control_status.ts#L99 NgControlStatus}).\n         * Microtask keeps it in the same frame but allows change detection to run.\n         */\n        void Promise.resolve().then(() => {\n            if (tuiIsPresent(this.option.value) && !this.option.disabled) {\n                this.host.checkOption?.(this.option.value);\n            }\n        });\n    }\n    ngDoCheck() {\n        this.changeDetection$.next();\n    }\n    get value() {\n        return this.abstractControl?.value ?? this.control.value;\n    }\n    get matcher() {\n        return this.host.identityMatcher || TUI_DEFAULT_IDENTITY_MATCHER;\n    }\n    get selected() {\n        return (tuiIsPresent(this.option.value) &&\n            tuiIsPresent(this.value) &&\n            this.matcher(this.value, this.option.value));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiSelectOptionComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiSelectOptionComponent, selector: \"tui-select-option\", ngImport: i0, template: \"<ng-container [ngTemplateOutlet]=\\\"context.$implicit\\\" />\\n<tui-icon\\n    *ngIf=\\\"selected$ | async; else dummy\\\"\\n    automation-id=\\\"tui-select-option__checkmark\\\"\\n    class=\\\"t-checkmark\\\"\\n    [icon]=\\\"icons.check\\\"\\n    [tuiScrollIntoView]=\\\"true\\\"\\n/>\\n<ng-template #dummy>\\n    <span class=\\\"t-dummy\\\"></span>\\n</ng-template>\\n\", styles: [\"@keyframes retrigger{0%{left:1px}to{left:2px}}:host{display:flex;flex:1;align-items:center;max-inline-size:100%;animation:retrigger 1s}.t-checkmark{margin-inline-start:auto;inline-size:1.75rem;border-width:.25rem;border-inline-start-width:.5rem}:host-context(tui-data-list[data-size=\\\"s\\\"]) .t-checkmark{margin-inline-end:-.375rem}:host-context(tui-data-list[data-size=\\\"m\\\"]) .t-checkmark{margin-inline-end:-.125rem}.t-dummy{inline-size:1.75rem}\\n\"], dependencies: [{ kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i2.TuiScrollIntoView, selector: \"[tuiScrollIntoView]\", inputs: [\"tuiScrollIntoView\"] }, { kind: \"component\", type: i3.TuiIcon, selector: \"tui-icon\", inputs: [\"icon\", \"background\"] }, { kind: \"pipe\", type: i1.AsyncPipe, name: \"async\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiSelectOptionComponent, decorators: [{\n            type: Component,\n            args: [{ standalone: false, selector: 'tui-select-option', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-container [ngTemplateOutlet]=\\\"context.$implicit\\\" />\\n<tui-icon\\n    *ngIf=\\\"selected$ | async; else dummy\\\"\\n    automation-id=\\\"tui-select-option__checkmark\\\"\\n    class=\\\"t-checkmark\\\"\\n    [icon]=\\\"icons.check\\\"\\n    [tuiScrollIntoView]=\\\"true\\\"\\n/>\\n<ng-template #dummy>\\n    <span class=\\\"t-dummy\\\"></span>\\n</ng-template>\\n\", styles: [\"@keyframes retrigger{0%{left:1px}to{left:2px}}:host{display:flex;flex:1;align-items:center;max-inline-size:100%;animation:retrigger 1s}.t-checkmark{margin-inline-start:auto;inline-size:1.75rem;border-width:.25rem;border-inline-start-width:.5rem}:host-context(tui-data-list[data-size=\\\"s\\\"]) .t-checkmark{margin-inline-end:-.375rem}:host-context(tui-data-list[data-size=\\\"m\\\"]) .t-checkmark{margin-inline-end:-.125rem}.t-dummy{inline-size:1.75rem}\\n\"] }]\n        }] });\nconst TUI_SELECT_OPTION = new PolymorpheusComponent(TuiSelectOptionComponent);\n\nclass TuiSelectOptionModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiSelectOptionModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiSelectOptionModule, declarations: [TuiSelectOptionComponent], imports: [CommonModule, TuiScrollIntoView, TuiIcon], exports: [TuiSelectOptionComponent] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiSelectOptionModule, imports: [CommonModule, TuiIcon] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiSelectOptionModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, TuiScrollIntoView, TuiIcon],\n                    declarations: [TuiSelectOptionComponent],\n                    exports: [TuiSelectOptionComponent],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TUI_SELECT_OPTION, TuiSelectOptionComponent, TuiSelectOptionModule };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}