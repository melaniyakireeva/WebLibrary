{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./register-page.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./register-page.component.scss?ngResource\";\nimport { ChangeDetectorRef, Component } from '@angular/core';\nimport { TuiIcon, TuiTextfield, TuiButton, TuiError } from '@taiga-ui/core';\nimport { TuiTooltip, TuiPassword } from '@taiga-ui/kit';\nimport { Router, RouterLink, RouterLinkActive } from '@angular/router';\nimport _ from 'lodash';\nimport { AuthService } from '../../services/auth/auth-service.service';\nimport { catchError, of, tap } from 'rxjs';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nlet RegisterPageComponent = class RegisterPageComponent {\n  authService;\n  router;\n  cdRef;\n  error = null;\n  isRegisterProcess = false;\n  email;\n  password;\n  repeatPassword;\n  name;\n  surname;\n  login;\n  organization;\n  constructor(authService, router, cdRef) {\n    this.authService = authService;\n    this.router = router;\n    this.cdRef = cdRef;\n  }\n  onRegisterClick() {\n    this.error = null;\n    this.isRegisterProcess = true;\n    if (_.isEmpty(this.email)) {\n      this.error = 'Почта не должна быть пустым значением';\n      this.isRegisterProcess = false;\n      return;\n    }\n    if (_.isEmpty(this.name)) {\n      this.error = 'Имя не должна быть пустым значением';\n      this.isRegisterProcess = false;\n      return;\n    }\n    if (_.isEmpty(this.surname)) {\n      this.error = 'Фамилия не должна быть пустым значением';\n      this.isRegisterProcess = false;\n      return;\n    }\n    if (_.isEmpty(this.password)) {\n      this.error = 'Пароль не может быть пустым значением';\n      this.isRegisterProcess = false;\n      return;\n    }\n    if (this.password !== this.repeatPassword) {\n      this.error = 'Повторенный пароль не совпадает с исходным';\n      this.isRegisterProcess = false;\n      return;\n    }\n    const registerDto = {\n      email: this.email ?? '',\n      password: this.password ?? '',\n      name: this.name ?? '',\n      organization: this.organization,\n      surname: this.surname ?? '',\n      login: this.login ?? ''\n    };\n    const obs$ = this.authService.register(registerDto).pipe(tap(isAuthorized => {\n      this.isRegisterProcess = false;\n      this.router.navigate(['']);\n      this.cdRef.markForCheck();\n    }), catchError(x => {\n      this.isRegisterProcess = false;\n      this.error = x;\n      this.cdRef.markForCheck();\n      return of(undefined);\n    }));\n    obs$.subscribe(() => {});\n  }\n  static ctorParameters = () => [{\n    type: AuthService\n  }, {\n    type: Router\n  }, {\n    type: ChangeDetectorRef\n  }];\n};\nRegisterPageComponent = __decorate([Component({\n  selector: 'app-register-page',\n  standalone: true,\n  imports: [TuiTextfield, TuiIcon, TuiTooltip, TuiPassword, TuiButton, TuiError, RouterLink, RouterLinkActive, FormsModule, CommonModule],\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], RegisterPageComponent);\nexport { RegisterPageComponent };","map":{"version":3,"names":["ChangeDetectorRef","Component","TuiIcon","TuiTextfield","TuiButton","TuiError","TuiTooltip","TuiPassword","Router","RouterLink","RouterLinkActive","_","AuthService","catchError","of","tap","FormsModule","CommonModule","RegisterPageComponent","authService","router","cdRef","error","isRegisterProcess","email","password","repeatPassword","name","surname","login","organization","constructor","onRegisterClick","isEmpty","registerDto","obs$","register","pipe","isAuthorized","navigate","markForCheck","x","undefined","subscribe","__decorate","selector","standalone","imports","template","__NG_CLI_RESOURCE__0"],"sources":["C:\\Users\\Asus-PC\\Downloads\\WebLibraryNew\\WebLibrary\\WebLibraryApp\\Frontend\\src\\app\\components\\register-page\\register-page.component.ts"],"sourcesContent":["import { ChangeDetectorRef, Component } from '@angular/core';\r\nimport { TuiIcon, TuiTextfield, TuiButton, TuiError } from '@taiga-ui/core';\r\nimport { TuiTooltip, TuiPassword } from '@taiga-ui/kit';\r\nimport {\r\n  NavigationEnd,\r\n  Router,\r\n  RouterLink,\r\n  RouterLinkActive,\r\n  RouterOutlet,\r\n} from '@angular/router';\r\nimport _ from 'lodash';\r\nimport {\r\n  AuthService,\r\n  RegisterDto,\r\n} from '../../services/auth/auth-service.service';\r\nimport { catchError, of, tap } from 'rxjs';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-register-page',\r\n  standalone: true,\r\n  imports: [\r\n    TuiTextfield,\r\n    TuiIcon,\r\n    TuiTooltip,\r\n    TuiPassword,\r\n    TuiButton,\r\n    TuiError,\r\n    RouterLink,\r\n    RouterLinkActive,\r\n    FormsModule,\r\n    CommonModule,\r\n  ],\r\n  templateUrl: './register-page.component.html',\r\n  styleUrl: './register-page.component.scss',\r\n})\r\nexport class RegisterPageComponent {\r\n  error: string | null = null;\r\n  isRegisterProcess: boolean = false;\r\n  email?: string;\r\n  password?: string;\r\n  repeatPassword?: string;\r\n  name?: string;\r\n  surname?: string;\r\n  login?: string;\r\n  organization?: string;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private cdRef: ChangeDetectorRef\r\n  ) {}\r\n\r\n  onRegisterClick() {\r\n    this.error = null;\r\n    this.isRegisterProcess = true;\r\n    if (_.isEmpty(this.email)) {\r\n      this.error = 'Почта не должна быть пустым значением';\r\n      this.isRegisterProcess = false;\r\n      return;\r\n    }\r\n    if (_.isEmpty(this.name)) {\r\n      this.error = 'Имя не должна быть пустым значением';\r\n      this.isRegisterProcess = false;\r\n      return;\r\n    }\r\n    if (_.isEmpty(this.surname)) {\r\n      this.error = 'Фамилия не должна быть пустым значением';\r\n      this.isRegisterProcess = false;\r\n      return;\r\n    }\r\n    if (_.isEmpty(this.password)) {\r\n      this.error = 'Пароль не может быть пустым значением';\r\n      this.isRegisterProcess = false;\r\n      return;\r\n    }\r\n    if (this.password !== this.repeatPassword) {\r\n      this.error = 'Повторенный пароль не совпадает с исходным';\r\n      this.isRegisterProcess = false;\r\n      return;\r\n    }\r\n\r\n    const registerDto: RegisterDto = {\r\n      email: this.email ?? '',\r\n      password: this.password ?? '',\r\n      name: this.name ?? '',\r\n      organization: this.organization,\r\n      surname: this.surname ?? '',\r\n      login: this.login ?? ''\r\n    };\r\n\r\n    const obs$ = this.authService.register(registerDto).pipe(\r\n      tap((isAuthorized) => {\r\n        this.isRegisterProcess = false;\r\n        this.router.navigate(['']);\r\n        this.cdRef.markForCheck();\r\n      }),\r\n      catchError((x) => {\r\n        this.isRegisterProcess = false;\r\n        this.error = x;\r\n        this.cdRef.markForCheck();\r\n        return of(undefined);\r\n      })\r\n    );\r\n\r\n    obs$.subscribe(() => {});\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}