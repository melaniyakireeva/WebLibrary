{"ast":null,"code":"import { TuiItem } from '@taiga-ui/cdk/directives/item';\nimport { __decorate } from 'tslib';\nimport { AsyncPipe, NgForOf, NgIf, NgStyle, NgTemplateOutlet } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { inject, Directive, Input, Output, ChangeDetectorRef, EventEmitter, TemplateRef, Component, ChangeDetectionStrategy, ContentChildren } from '@angular/core';\nimport * as i2 from '@ng-web-apis/intersection-observer';\nimport { WaIntersectionObserver } from '@ng-web-apis/intersection-observer';\nimport { TUI_FALSE_HANDLER, TUI_TRUE_HANDLER, EMPTY_QUERY } from '@taiga-ui/cdk/constants';\nimport { TuiPan } from '@taiga-ui/cdk/directives/pan';\nimport { TuiSwipe } from '@taiga-ui/cdk/directives/swipe';\nimport { TUI_IS_MOBILE } from '@taiga-ui/cdk/tokens';\nimport { tuiInjectElement } from '@taiga-ui/cdk/utils/dom';\nimport { tuiClamp } from '@taiga-ui/cdk/utils/math';\nimport { tuiPure } from '@taiga-ui/cdk/utils/miscellaneous';\nimport { WA_PAGE_VISIBILITY } from '@ng-web-apis/common';\nimport { tuiTypedFromEvent, tuiIfMap, tuiZonefreeScheduler } from '@taiga-ui/cdk/observables';\nimport { Observable, BehaviorSubject, merge, map, combineLatest, interval, filter, throttleTime, tap } from 'rxjs';\nimport { tuiButtonOptionsProvider } from '@taiga-ui/core/components/button';\nfunction TuiCarouselComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction TuiCarouselComponent_fieldset_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"fieldset\", 5);\n    i0.ɵɵlistener(\"waIntersectionObservee\", function TuiCarouselComponent_fieldset_5_Template_fieldset_waIntersectionObservee_0_listener($event) {\n      const i_r2 = i0.ɵɵrestoreView(_r1).index;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView($event[0] && ctx_r2.onIntersection($event[0], i_r2));\n    });\n    i0.ɵɵelementContainer(1, 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r4 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", ctx_r2.isDisabled(i_r2))(\"ngStyle\", ctx_r2.getStyle(ctx_r2.itemsCount));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", item_r4);\n  }\n}\nclass TuiCarouselDirective extends Observable {\n  constructor() {\n    super(subscriber => this.output$.subscribe(subscriber));\n    this.el = tuiInjectElement();\n    this.visible$ = inject(WA_PAGE_VISIBILITY);\n    this.duration$ = new BehaviorSubject(0);\n    this.running$ = merge(tuiTypedFromEvent(this.el, 'mouseenter').pipe(map(TUI_FALSE_HANDLER)), tuiTypedFromEvent(this.el, 'touchstart').pipe(map(TUI_FALSE_HANDLER)), tuiTypedFromEvent(this.el, 'touchend').pipe(map(TUI_TRUE_HANDLER)), tuiTypedFromEvent(this.el, 'mouseleave').pipe(map(TUI_TRUE_HANDLER)), this.visible$);\n    this.output$ = combineLatest([this.duration$, this.running$]).pipe(tuiIfMap(([duration]) => interval(duration), values => values.every(Boolean)));\n  }\n  set duration(duration) {\n    this.duration$.next(Number.isNaN(duration) ? this.duration$.value : duration);\n  }\n  static {\n    this.ɵfac = function TuiCarouselDirective_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiCarouselDirective)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: TuiCarouselDirective,\n      inputs: {\n        duration: \"duration\"\n      },\n      standalone: true,\n      features: [i0.ɵɵInheritDefinitionFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiCarouselDirective, [{\n    type: Directive,\n    args: [{\n      standalone: true\n    }]\n  }], function () {\n    return [];\n  }, {\n    duration: [{\n      type: Input\n    }]\n  });\n})();\nclass TuiCarouselAutoscroll {\n  constructor() {\n    this.tuiCarouselAutoscroll = inject(TuiCarouselDirective);\n  }\n  static {\n    this.ɵfac = function TuiCarouselAutoscroll_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiCarouselAutoscroll)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: TuiCarouselAutoscroll,\n      selectors: [[\"\", \"tuiCarouselAutoscroll\", \"\"]],\n      outputs: {\n        tuiCarouselAutoscroll: \"tuiCarouselAutoscroll\"\n      },\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiCarouselAutoscroll, [{\n    type: Directive,\n    args: [{\n      standalone: true,\n      selector: '[tuiCarouselAutoscroll]'\n    }]\n  }], null, {\n    tuiCarouselAutoscroll: [{\n      type: Output\n    }]\n  });\n})();\nclass TuiCarouselScroll {\n  constructor() {\n    this.el = tuiInjectElement();\n    this.tuiCarouselScroll = tuiTypedFromEvent(this.el, 'wheel').pipe(filter(({\n      deltaX\n    }) => Math.abs(deltaX) > 20), throttleTime(500, tuiZonefreeScheduler()), map(({\n      deltaX\n    }) => Math.sign(deltaX)), tap(() => {\n      // So we always have space to scroll and overflow-behavior saves us from back nav\n      this.el.scrollLeft = 10;\n    }));\n  }\n  static {\n    this.ɵfac = function TuiCarouselScroll_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiCarouselScroll)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: TuiCarouselScroll,\n      selectors: [[\"\", \"tuiCarouselScroll\", \"\"]],\n      outputs: {\n        tuiCarouselScroll: \"tuiCarouselScroll\"\n      },\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiCarouselScroll, [{\n    type: Directive,\n    args: [{\n      standalone: true,\n      selector: '[tuiCarouselScroll]'\n    }]\n  }], null, {\n    tuiCarouselScroll: [{\n      type: Output\n    }]\n  });\n})();\nclass TuiCarouselComponent {\n  constructor() {\n    this.el = tuiInjectElement();\n    this.cdr = inject(ChangeDetectorRef);\n    this.isMobile = inject(TUI_IS_MOBILE);\n    this.directive = inject(TuiCarouselDirective);\n    this.translate = 0;\n    this.items = EMPTY_QUERY;\n    this.transitioned = true;\n    this.index = 0;\n    this.draggable = false;\n    this.itemsCount = 1;\n    this.indexChange = new EventEmitter();\n  }\n  set indexSetter(index) {\n    this.index = index;\n    this.directive.duration = NaN;\n  }\n  next() {\n    if (this.items && this.index === this.items.length - this.itemsCount) {\n      return;\n    }\n    this.updateIndex(this.index + 1);\n  }\n  prev() {\n    this.updateIndex(this.index - 1);\n  }\n  get transform() {\n    const x = this.transitioned ? this.computedTranslate : this.translate;\n    return `translateX(${100 * x}%)`;\n  }\n  getStyle(itemsCount) {\n    const percent = `${100 / itemsCount}%`;\n    return {\n      flexBasis: percent,\n      minWidth: percent,\n      maxWidth: percent\n    };\n  }\n  onTransitioned(transitioned) {\n    this.transitioned = transitioned;\n    if (!transitioned) {\n      this.translate = this.computedTranslate;\n    }\n  }\n  isDisabled(index) {\n    return index < this.index || index > this.index + this.itemsCount;\n  }\n  onIntersection({\n    intersectionRatio\n  }, index) {\n    if (intersectionRatio && intersectionRatio !== 1 && !this.transitioned) {\n      this.updateIndex(index - Math.floor(this.itemsCount / 2));\n    }\n  }\n  onScroll(delta) {\n    if (!this.isMobile) {\n      if (delta > 0) {\n        this.next();\n      } else {\n        this.prev();\n      }\n    }\n  }\n  onPan(x) {\n    if (!this.computedDraggable) {\n      return;\n    }\n    const min = 1 - this.items.length / this.itemsCount;\n    this.translate = tuiClamp(x / this.el.clientWidth + this.translate, min, 0);\n  }\n  onSwipe(direction) {\n    if (direction === 'left') {\n      this.next();\n    } else if (direction === 'right') {\n      this.prev();\n    }\n  }\n  onAutoscroll() {\n    this.updateIndex(this.index === this.items.length - 1 ? 0 : this.index + 1);\n  }\n  get computedTranslate() {\n    return -this.index / this.itemsCount;\n  }\n  get computedDraggable() {\n    return this.isMobile || this.draggable;\n  }\n  updateIndex(index) {\n    this.index = tuiClamp(index, 0, this.items.length - 1);\n    this.indexChange.emit(this.index);\n    this.cdr.markForCheck();\n  }\n  static {\n    this.ɵfac = function TuiCarouselComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiCarouselComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: TuiCarouselComponent,\n      selectors: [[\"tui-carousel\"]],\n      contentQueries: function TuiCarouselComponent_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, TuiItem, 4, TemplateRef);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.items = _t);\n        }\n      },\n      hostVars: 4,\n      hostBindings: function TuiCarouselComponent_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"touchstart\", function TuiCarouselComponent_touchstart_HostBindingHandler() {\n            return ctx.onTransitioned(false);\n          })(\"touchend\", function TuiCarouselComponent_touchend_HostBindingHandler() {\n            return ctx.onTransitioned(true);\n          })(\"mousedown\", function TuiCarouselComponent_mousedown_HostBindingHandler() {\n            return ctx.onTransitioned(false);\n          })(\"mouseup.silent\", function TuiCarouselComponent_mouseup_silent_HostBindingHandler() {\n            return ctx.onTransitioned(true);\n          }, false, i0.ɵɵresolveDocument);\n        }\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"_transitioned\", ctx.transitioned)(\"_draggable\", ctx.draggable);\n        }\n      },\n      inputs: {\n        draggable: \"draggable\",\n        itemsCount: \"itemsCount\",\n        indexSetter: [0, \"index\", \"indexSetter\"]\n      },\n      outputs: {\n        indexChange: \"indexChange\"\n      },\n      standalone: true,\n      features: [i0.ɵɵHostDirectivesFeature([{\n        directive: TuiCarouselDirective,\n        inputs: [\"duration\", \"duration\"]\n      }]), i0.ɵɵStandaloneFeature],\n      decls: 6,\n      vars: 6,\n      consts: [[4, \"ngIf\"], [1, \"t-scroller\", 3, \"tuiCarouselScroll\"], [\"waIntersectionObserver\", \"\", \"waIntersectionRoot\", \"\", \"waIntersectionRootMargin\", \"100px 1000000px 100px -51%\", \"waIntersectionThreshold\", \"0,1\", 1, \"t-wrapper\"], [1, \"t-items\", 3, \"tuiCarouselAutoscroll\", \"tuiPan\", \"tuiSwipe\"], [\"class\", \"t-item\", 3, \"disabled\", \"ngStyle\", \"waIntersectionObservee\", 4, \"ngFor\", \"ngForOf\"], [1, \"t-item\", 3, \"waIntersectionObservee\", \"disabled\", \"ngStyle\"], [3, \"ngTemplateOutlet\"]],\n      template: function TuiCarouselComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, TuiCarouselComponent_ng_container_0_Template, 1, 0, \"ng-container\", 0);\n          i0.ɵɵpipe(1, \"async\");\n          i0.ɵɵelementStart(2, \"div\", 1);\n          i0.ɵɵlistener(\"tuiCarouselScroll\", function TuiCarouselComponent_Template_div_tuiCarouselScroll_2_listener($event) {\n            return ctx.onScroll($event);\n          });\n          i0.ɵɵelementStart(3, \"div\", 2)(4, \"div\", 3);\n          i0.ɵɵlistener(\"tuiCarouselAutoscroll\", function TuiCarouselComponent_Template_div_tuiCarouselAutoscroll_4_listener() {\n            return ctx.onAutoscroll();\n          })(\"tuiPan\", function TuiCarouselComponent_Template_div_tuiPan_4_listener($event) {\n            return ctx.onPan($event[0]);\n          })(\"tuiSwipe\", function TuiCarouselComponent_Template_div_tuiSwipe_4_listener($event) {\n            return ctx.onSwipe($event.direction);\n          });\n          i0.ɵɵtemplate(5, TuiCarouselComponent_fieldset_5_Template, 2, 3, \"fieldset\", 4);\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(1, 4, ctx.items.changes));\n          i0.ɵɵadvance(4);\n          i0.ɵɵstyleProp(\"transform\", ctx.transform);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngForOf\", ctx.items);\n        }\n      },\n      dependencies: [AsyncPipe, NgForOf, NgIf, NgStyle, NgTemplateOutlet, TuiCarouselAutoscroll, TuiCarouselScroll, TuiPan, TuiSwipe, i2.WaIntersectionObserverDirective, i2.WaIntersectionObservee, i2.WaIntersectionRoot],\n      styles: [\"[_nghost-%COMP%]{position:relative;display:block;overflow:hidden}._draggable[_nghost-%COMP%]{-webkit-user-select:none;user-select:none}._draggable[_nghost-%COMP%]:hover{cursor:grab}._draggable[_nghost-%COMP%]:active{cursor:grabbing}.t-items[_ngcontent-%COMP%]{display:flex}._transitioned[_nghost-%COMP%]   .t-items[_ngcontent-%COMP%]{transition-property:transform;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out}  [tuiCarouselButtons] [tuiIconButton]{border-radius:100%}.t-item[_ngcontent-%COMP%]{display:flex;flex-direction:column;justify-content:center;padding:var(--tui-carousel-padding, 0 1.25rem);flex:1;min-inline-size:100%;max-inline-size:100%;box-sizing:border-box;border:none;margin:0}.t-wrapper[_ngcontent-%COMP%]{position:sticky;left:0;right:0;min-inline-size:100%;overflow:hidden}.t-scroller[_ngcontent-%COMP%]{scrollbar-width:none;-ms-overflow-style:none;display:flex;overflow:auto;overscroll-behavior-x:none}.t-scroller[_ngcontent-%COMP%]::-webkit-scrollbar, .t-scroller[_ngcontent-%COMP%]::-webkit-scrollbar-thumb{display:none}.t-scroller[_ngcontent-%COMP%]:before, .t-scroller[_ngcontent-%COMP%]:after{content:\\\"\\\";display:block;min-inline-size:1rem}\"],\n      changeDetection: 0\n    });\n  }\n}\n__decorate([tuiPure], TuiCarouselComponent.prototype, \"getStyle\", null);\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiCarouselComponent, [{\n    type: Component,\n    args: [{\n      standalone: true,\n      selector: 'tui-carousel',\n      imports: [AsyncPipe, NgForOf, NgIf, NgStyle, NgTemplateOutlet, TuiCarouselAutoscroll, TuiCarouselScroll, TuiPan, TuiSwipe, WaIntersectionObserver],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      hostDirectives: [{\n        directive: TuiCarouselDirective,\n        inputs: ['duration']\n      }],\n      host: {\n        '[class._transitioned]': 'transitioned',\n        '[class._draggable]': 'draggable',\n        '(touchstart)': 'onTransitioned(false)',\n        '(touchend)': 'onTransitioned(true)',\n        '(mousedown)': 'onTransitioned(false)',\n        '(document:mouseup.silent)': 'onTransitioned(true)'\n      },\n      template: \"<ng-container *ngIf=\\\"items.changes | async\\\" />\\n<div\\n    class=\\\"t-scroller\\\"\\n    (tuiCarouselScroll)=\\\"onScroll($event)\\\"\\n>\\n    <div\\n        waIntersectionObserver\\n        waIntersectionRoot\\n        waIntersectionRootMargin=\\\"100px 1000000px 100px -51%\\\"\\n        waIntersectionThreshold=\\\"0,1\\\"\\n        class=\\\"t-wrapper\\\"\\n    >\\n        <div\\n            class=\\\"t-items\\\"\\n            [style.transform]=\\\"transform\\\"\\n            (tuiCarouselAutoscroll)=\\\"onAutoscroll()\\\"\\n            (tuiPan)=\\\"onPan($event[0])\\\"\\n            (tuiSwipe)=\\\"onSwipe($event.direction)\\\"\\n        >\\n            <fieldset\\n                *ngFor=\\\"let item of items; let i = index\\\"\\n                class=\\\"t-item\\\"\\n                [disabled]=\\\"isDisabled(i)\\\"\\n                [ngStyle]=\\\"getStyle(itemsCount)\\\"\\n                (waIntersectionObservee)=\\\"$event[0] && onIntersection($event[0], i)\\\"\\n            >\\n                <ng-container [ngTemplateOutlet]=\\\"item\\\" />\\n            </fieldset>\\n        </div>\\n    </div>\\n</div>\\n\",\n      styles: [\":host{position:relative;display:block;overflow:hidden}:host._draggable{-webkit-user-select:none;user-select:none}:host._draggable:hover{cursor:grab}:host._draggable:active{cursor:grabbing}.t-items{display:flex}:host._transitioned .t-items{transition-property:transform;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out}::ng-deep [tuiCarouselButtons] [tuiIconButton]{border-radius:100%}.t-item{display:flex;flex-direction:column;justify-content:center;padding:var(--tui-carousel-padding, 0 1.25rem);flex:1;min-inline-size:100%;max-inline-size:100%;box-sizing:border-box;border:none;margin:0}.t-wrapper{position:sticky;left:0;right:0;min-inline-size:100%;overflow:hidden}.t-scroller{scrollbar-width:none;-ms-overflow-style:none;display:flex;overflow:auto;overscroll-behavior-x:none}.t-scroller::-webkit-scrollbar,.t-scroller::-webkit-scrollbar-thumb{display:none}.t-scroller:before,.t-scroller:after{content:\\\"\\\";display:block;min-inline-size:1rem}\\n\"]\n    }]\n  }], null, {\n    items: [{\n      type: ContentChildren,\n      args: [TuiItem, {\n        read: TemplateRef\n      }]\n    }],\n    draggable: [{\n      type: Input\n    }],\n    itemsCount: [{\n      type: Input\n    }],\n    indexChange: [{\n      type: Output\n    }],\n    indexSetter: [{\n      type: Input,\n      args: ['index']\n    }],\n    getStyle: []\n  });\n})();\nclass TuiCarouselButtons {\n  static {\n    this.ɵfac = function TuiCarouselButtons_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiCarouselButtons)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: TuiCarouselButtons,\n      selectors: [[\"\", \"tuiCarouselButtons\", \"\"]],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([tuiButtonOptionsProvider({\n        appearance: 'secondary',\n        size: 'm'\n      })])]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiCarouselButtons, [{\n    type: Directive,\n    args: [{\n      standalone: true,\n      selector: '[tuiCarouselButtons]',\n      providers: [tuiButtonOptionsProvider({\n        appearance: 'secondary',\n        size: 'm'\n      })]\n    }]\n  }], null, null);\n})();\nconst TuiCarousel = [TuiItem, TuiCarouselComponent, TuiCarouselDirective, TuiCarouselAutoscroll, TuiCarouselButtons, TuiCarouselScroll];\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiCarousel, TuiCarouselAutoscroll, TuiCarouselButtons, TuiCarouselComponent, TuiCarouselDirective, TuiCarouselScroll };","map":{"version":3,"names":["TuiItem","__decorate","AsyncPipe","NgForOf","NgIf","NgStyle","NgTemplateOutlet","i0","inject","Directive","Input","Output","ChangeDetectorRef","EventEmitter","TemplateRef","Component","ChangeDetectionStrategy","ContentChildren","i2","WaIntersectionObserver","TUI_FALSE_HANDLER","TUI_TRUE_HANDLER","EMPTY_QUERY","TuiPan","TuiSwipe","TUI_IS_MOBILE","tuiInjectElement","tuiClamp","tuiPure","WA_PAGE_VISIBILITY","tuiTypedFromEvent","tuiIfMap","tuiZonefreeScheduler","Observable","BehaviorSubject","merge","map","combineLatest","interval","filter","throttleTime","tap","tuiButtonOptionsProvider","TuiCarouselComponent_ng_container_0_Template","rf","ctx","ɵɵelementContainer","TuiCarouselComponent_fieldset_5_Template","_r1","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","TuiCarouselComponent_fieldset_5_Template_fieldset_waIntersectionObservee_0_listener","$event","i_r2","ɵɵrestoreView","index","ctx_r2","ɵɵnextContext","ɵɵresetView","onIntersection","ɵɵelementEnd","item_r4","$implicit","ɵɵproperty","isDisabled","getStyle","itemsCount","ɵɵadvance","TuiCarouselDirective","constructor","subscriber","output$","subscribe","el","visible$","duration$","running$","pipe","duration","values","every","Boolean","next","Number","isNaN","value","ɵfac","TuiCarouselDirective_Factory","__ngFactoryType__","ɵdir","ɵɵdefineDirective","type","inputs","standalone","features","ɵɵInheritDefinitionFeature","ngDevMode","ɵsetClassMetadata","args","TuiCarouselAutoscroll","tuiCarouselAutoscroll","TuiCarouselAutoscroll_Factory","selectors","outputs","selector","TuiCarouselScroll","tuiCarouselScroll","deltaX","Math","abs","sign","scrollLeft","TuiCarouselScroll_Factory","TuiCarouselComponent","cdr","isMobile","directive","translate","items","transitioned","draggable","indexChange","indexSetter","NaN","length","updateIndex","prev","transform","x","computedTranslate","percent","flexBasis","minWidth","maxWidth","onTransitioned","intersectionRatio","floor","onScroll","delta","onPan","computedDraggable","min","clientWidth","onSwipe","direction","onAutoscroll","emit","markForCheck","TuiCarouselComponent_Factory","ɵcmp","ɵɵdefineComponent","contentQueries","TuiCarouselComponent_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","hostVars","hostBindings","TuiCarouselComponent_HostBindings","TuiCarouselComponent_touchstart_HostBindingHandler","TuiCarouselComponent_touchend_HostBindingHandler","TuiCarouselComponent_mousedown_HostBindingHandler","TuiCarouselComponent_mouseup_silent_HostBindingHandler","ɵɵresolveDocument","ɵɵclassProp","ɵɵHostDirectivesFeature","ɵɵStandaloneFeature","decls","vars","consts","template","TuiCarouselComponent_Template","ɵɵtemplate","ɵɵpipe","TuiCarouselComponent_Template_div_tuiCarouselScroll_2_listener","TuiCarouselComponent_Template_div_tuiCarouselAutoscroll_4_listener","TuiCarouselComponent_Template_div_tuiPan_4_listener","TuiCarouselComponent_Template_div_tuiSwipe_4_listener","ɵɵpipeBind1","changes","ɵɵstyleProp","dependencies","WaIntersectionObserverDirective","WaIntersectionObservee","WaIntersectionRoot","styles","changeDetection","prototype","imports","OnPush","hostDirectives","host","read","TuiCarouselButtons","TuiCarouselButtons_Factory","ɵɵProvidersFeature","appearance","size","providers","TuiCarousel"],"sources":["C:/Users/Asus-PC/Downloads/WebLibraryNew/WebLibrary/WebLibraryApp/Frontend/node_modules/@taiga-ui/kit/fesm2022/taiga-ui-kit-components-carousel.mjs"],"sourcesContent":["import { TuiItem } from '@taiga-ui/cdk/directives/item';\nimport { __decorate } from 'tslib';\nimport { AsyncPipe, NgForOf, NgIf, NgStyle, NgTemplateOutlet } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { inject, Directive, Input, Output, ChangeDetectorRef, EventEmitter, TemplateRef, Component, ChangeDetectionStrategy, ContentChildren } from '@angular/core';\nimport * as i2 from '@ng-web-apis/intersection-observer';\nimport { WaIntersectionObserver } from '@ng-web-apis/intersection-observer';\nimport { TUI_FALSE_HANDLER, TUI_TRUE_HANDLER, EMPTY_QUERY } from '@taiga-ui/cdk/constants';\nimport { TuiPan } from '@taiga-ui/cdk/directives/pan';\nimport { TuiSwipe } from '@taiga-ui/cdk/directives/swipe';\nimport { TUI_IS_MOBILE } from '@taiga-ui/cdk/tokens';\nimport { tuiInjectElement } from '@taiga-ui/cdk/utils/dom';\nimport { tuiClamp } from '@taiga-ui/cdk/utils/math';\nimport { tuiPure } from '@taiga-ui/cdk/utils/miscellaneous';\nimport { WA_PAGE_VISIBILITY } from '@ng-web-apis/common';\nimport { tuiTypedFromEvent, tuiIfMap, tuiZonefreeScheduler } from '@taiga-ui/cdk/observables';\nimport { Observable, BehaviorSubject, merge, map, combineLatest, interval, filter, throttleTime, tap } from 'rxjs';\nimport { tuiButtonOptionsProvider } from '@taiga-ui/core/components/button';\n\nclass TuiCarouselDirective extends Observable {\n    constructor() {\n        super((subscriber) => this.output$.subscribe(subscriber));\n        this.el = tuiInjectElement();\n        this.visible$ = inject(WA_PAGE_VISIBILITY);\n        this.duration$ = new BehaviorSubject(0);\n        this.running$ = merge(tuiTypedFromEvent(this.el, 'mouseenter').pipe(map(TUI_FALSE_HANDLER)), tuiTypedFromEvent(this.el, 'touchstart').pipe(map(TUI_FALSE_HANDLER)), tuiTypedFromEvent(this.el, 'touchend').pipe(map(TUI_TRUE_HANDLER)), tuiTypedFromEvent(this.el, 'mouseleave').pipe(map(TUI_TRUE_HANDLER)), this.visible$);\n        this.output$ = combineLatest([this.duration$, this.running$]).pipe(tuiIfMap(([duration]) => interval(duration), (values) => values.every(Boolean)));\n    }\n    set duration(duration) {\n        this.duration$.next(Number.isNaN(duration) ? this.duration$.value : duration);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiCarouselDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiCarouselDirective, isStandalone: true, inputs: { duration: \"duration\" }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiCarouselDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    standalone: true,\n                }]\n        }], ctorParameters: function () { return []; }, propDecorators: { duration: [{\n                type: Input\n            }] } });\n\nclass TuiCarouselAutoscroll {\n    constructor() {\n        this.tuiCarouselAutoscroll = inject(TuiCarouselDirective);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiCarouselAutoscroll, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiCarouselAutoscroll, isStandalone: true, selector: \"[tuiCarouselAutoscroll]\", outputs: { tuiCarouselAutoscroll: \"tuiCarouselAutoscroll\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiCarouselAutoscroll, decorators: [{\n            type: Directive,\n            args: [{\n                    standalone: true,\n                    selector: '[tuiCarouselAutoscroll]',\n                }]\n        }], propDecorators: { tuiCarouselAutoscroll: [{\n                type: Output\n            }] } });\n\nclass TuiCarouselScroll {\n    constructor() {\n        this.el = tuiInjectElement();\n        this.tuiCarouselScroll = tuiTypedFromEvent(this.el, 'wheel').pipe(filter(({ deltaX }) => Math.abs(deltaX) > 20), throttleTime(500, tuiZonefreeScheduler()), map(({ deltaX }) => Math.sign(deltaX)), tap(() => {\n            // So we always have space to scroll and overflow-behavior saves us from back nav\n            this.el.scrollLeft = 10;\n        }));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiCarouselScroll, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiCarouselScroll, isStandalone: true, selector: \"[tuiCarouselScroll]\", outputs: { tuiCarouselScroll: \"tuiCarouselScroll\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiCarouselScroll, decorators: [{\n            type: Directive,\n            args: [{\n                    standalone: true,\n                    selector: '[tuiCarouselScroll]',\n                }]\n        }], propDecorators: { tuiCarouselScroll: [{\n                type: Output\n            }] } });\n\nclass TuiCarouselComponent {\n    constructor() {\n        this.el = tuiInjectElement();\n        this.cdr = inject(ChangeDetectorRef);\n        this.isMobile = inject(TUI_IS_MOBILE);\n        this.directive = inject(TuiCarouselDirective);\n        this.translate = 0;\n        this.items = EMPTY_QUERY;\n        this.transitioned = true;\n        this.index = 0;\n        this.draggable = false;\n        this.itemsCount = 1;\n        this.indexChange = new EventEmitter();\n    }\n    set indexSetter(index) {\n        this.index = index;\n        this.directive.duration = NaN;\n    }\n    next() {\n        if (this.items && this.index === this.items.length - this.itemsCount) {\n            return;\n        }\n        this.updateIndex(this.index + 1);\n    }\n    prev() {\n        this.updateIndex(this.index - 1);\n    }\n    get transform() {\n        const x = this.transitioned ? this.computedTranslate : this.translate;\n        return `translateX(${100 * x}%)`;\n    }\n    getStyle(itemsCount) {\n        const percent = `${100 / itemsCount}%`;\n        return {\n            flexBasis: percent,\n            minWidth: percent,\n            maxWidth: percent,\n        };\n    }\n    onTransitioned(transitioned) {\n        this.transitioned = transitioned;\n        if (!transitioned) {\n            this.translate = this.computedTranslate;\n        }\n    }\n    isDisabled(index) {\n        return index < this.index || index > this.index + this.itemsCount;\n    }\n    onIntersection({ intersectionRatio }, index) {\n        if (intersectionRatio && intersectionRatio !== 1 && !this.transitioned) {\n            this.updateIndex(index - Math.floor(this.itemsCount / 2));\n        }\n    }\n    onScroll(delta) {\n        if (!this.isMobile) {\n            if (delta > 0) {\n                this.next();\n            }\n            else {\n                this.prev();\n            }\n        }\n    }\n    onPan(x) {\n        if (!this.computedDraggable) {\n            return;\n        }\n        const min = 1 - this.items.length / this.itemsCount;\n        this.translate = tuiClamp(x / this.el.clientWidth + this.translate, min, 0);\n    }\n    onSwipe(direction) {\n        if (direction === 'left') {\n            this.next();\n        }\n        else if (direction === 'right') {\n            this.prev();\n        }\n    }\n    onAutoscroll() {\n        this.updateIndex(this.index === this.items.length - 1 ? 0 : this.index + 1);\n    }\n    get computedTranslate() {\n        return -this.index / this.itemsCount;\n    }\n    get computedDraggable() {\n        return this.isMobile || this.draggable;\n    }\n    updateIndex(index) {\n        this.index = tuiClamp(index, 0, this.items.length - 1);\n        this.indexChange.emit(this.index);\n        this.cdr.markForCheck();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiCarouselComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiCarouselComponent, isStandalone: true, selector: \"tui-carousel\", inputs: { draggable: \"draggable\", itemsCount: \"itemsCount\", indexSetter: [\"index\", \"indexSetter\"] }, outputs: { indexChange: \"indexChange\" }, host: { listeners: { \"touchstart\": \"onTransitioned(false)\", \"touchend\": \"onTransitioned(true)\", \"mousedown\": \"onTransitioned(false)\", \"document:mouseup.silent\": \"onTransitioned(true)\" }, properties: { \"class._transitioned\": \"transitioned\", \"class._draggable\": \"draggable\" } }, queries: [{ propertyName: \"items\", predicate: TuiItem, read: TemplateRef }], hostDirectives: [{ directive: TuiCarouselDirective, inputs: [\"duration\", \"duration\"] }], ngImport: i0, template: \"<ng-container *ngIf=\\\"items.changes | async\\\" />\\n<div\\n    class=\\\"t-scroller\\\"\\n    (tuiCarouselScroll)=\\\"onScroll($event)\\\"\\n>\\n    <div\\n        waIntersectionObserver\\n        waIntersectionRoot\\n        waIntersectionRootMargin=\\\"100px 1000000px 100px -51%\\\"\\n        waIntersectionThreshold=\\\"0,1\\\"\\n        class=\\\"t-wrapper\\\"\\n    >\\n        <div\\n            class=\\\"t-items\\\"\\n            [style.transform]=\\\"transform\\\"\\n            (tuiCarouselAutoscroll)=\\\"onAutoscroll()\\\"\\n            (tuiPan)=\\\"onPan($event[0])\\\"\\n            (tuiSwipe)=\\\"onSwipe($event.direction)\\\"\\n        >\\n            <fieldset\\n                *ngFor=\\\"let item of items; let i = index\\\"\\n                class=\\\"t-item\\\"\\n                [disabled]=\\\"isDisabled(i)\\\"\\n                [ngStyle]=\\\"getStyle(itemsCount)\\\"\\n                (waIntersectionObservee)=\\\"$event[0] && onIntersection($event[0], i)\\\"\\n            >\\n                <ng-container [ngTemplateOutlet]=\\\"item\\\" />\\n            </fieldset>\\n        </div>\\n    </div>\\n</div>\\n\", styles: [\":host{position:relative;display:block;overflow:hidden}:host._draggable{-webkit-user-select:none;user-select:none}:host._draggable:hover{cursor:grab}:host._draggable:active{cursor:grabbing}.t-items{display:flex}:host._transitioned .t-items{transition-property:transform;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out}::ng-deep [tuiCarouselButtons] [tuiIconButton]{border-radius:100%}.t-item{display:flex;flex-direction:column;justify-content:center;padding:var(--tui-carousel-padding, 0 1.25rem);flex:1;min-inline-size:100%;max-inline-size:100%;box-sizing:border-box;border:none;margin:0}.t-wrapper{position:sticky;left:0;right:0;min-inline-size:100%;overflow:hidden}.t-scroller{scrollbar-width:none;-ms-overflow-style:none;display:flex;overflow:auto;overscroll-behavior-x:none}.t-scroller::-webkit-scrollbar,.t-scroller::-webkit-scrollbar-thumb{display:none}.t-scroller:before,.t-scroller:after{content:\\\"\\\";display:block;min-inline-size:1rem}\\n\"], dependencies: [{ kind: \"pipe\", type: AsyncPipe, name: \"async\" }, { kind: \"directive\", type: NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"directive\", type: NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: TuiCarouselAutoscroll, selector: \"[tuiCarouselAutoscroll]\", outputs: [\"tuiCarouselAutoscroll\"] }, { kind: \"directive\", type: TuiCarouselScroll, selector: \"[tuiCarouselScroll]\", outputs: [\"tuiCarouselScroll\"] }, { kind: \"directive\", type: TuiPan, selector: \"[tuiPan]\", outputs: [\"tuiPan\"] }, { kind: \"directive\", type: TuiSwipe, selector: \"[tuiSwipe]\", outputs: [\"tuiSwipe\"] }, { kind: \"directive\", type: i2.WaIntersectionObserverDirective, selector: \"[waIntersectionObserver]\", inputs: [\"waIntersectionRootMargin\", \"waIntersectionThreshold\"], exportAs: [\"IntersectionObserver\"] }, { kind: \"directive\", type: i2.WaIntersectionObservee, selector: \"[waIntersectionObservee]\", outputs: [\"waIntersectionObservee\"] }, { kind: \"directive\", type: i2.WaIntersectionRoot, selector: \"[waIntersectionRoot]\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\n__decorate([\n    tuiPure\n], TuiCarouselComponent.prototype, \"getStyle\", null);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiCarouselComponent, decorators: [{\n            type: Component,\n            args: [{ standalone: true, selector: 'tui-carousel', imports: [\n                        AsyncPipe,\n                        NgForOf,\n                        NgIf,\n                        NgStyle,\n                        NgTemplateOutlet,\n                        TuiCarouselAutoscroll,\n                        TuiCarouselScroll,\n                        TuiPan,\n                        TuiSwipe,\n                        WaIntersectionObserver,\n                    ], changeDetection: ChangeDetectionStrategy.OnPush, hostDirectives: [\n                        {\n                            directive: TuiCarouselDirective,\n                            inputs: ['duration'],\n                        },\n                    ], host: {\n                        '[class._transitioned]': 'transitioned',\n                        '[class._draggable]': 'draggable',\n                        '(touchstart)': 'onTransitioned(false)',\n                        '(touchend)': 'onTransitioned(true)',\n                        '(mousedown)': 'onTransitioned(false)',\n                        '(document:mouseup.silent)': 'onTransitioned(true)',\n                    }, template: \"<ng-container *ngIf=\\\"items.changes | async\\\" />\\n<div\\n    class=\\\"t-scroller\\\"\\n    (tuiCarouselScroll)=\\\"onScroll($event)\\\"\\n>\\n    <div\\n        waIntersectionObserver\\n        waIntersectionRoot\\n        waIntersectionRootMargin=\\\"100px 1000000px 100px -51%\\\"\\n        waIntersectionThreshold=\\\"0,1\\\"\\n        class=\\\"t-wrapper\\\"\\n    >\\n        <div\\n            class=\\\"t-items\\\"\\n            [style.transform]=\\\"transform\\\"\\n            (tuiCarouselAutoscroll)=\\\"onAutoscroll()\\\"\\n            (tuiPan)=\\\"onPan($event[0])\\\"\\n            (tuiSwipe)=\\\"onSwipe($event.direction)\\\"\\n        >\\n            <fieldset\\n                *ngFor=\\\"let item of items; let i = index\\\"\\n                class=\\\"t-item\\\"\\n                [disabled]=\\\"isDisabled(i)\\\"\\n                [ngStyle]=\\\"getStyle(itemsCount)\\\"\\n                (waIntersectionObservee)=\\\"$event[0] && onIntersection($event[0], i)\\\"\\n            >\\n                <ng-container [ngTemplateOutlet]=\\\"item\\\" />\\n            </fieldset>\\n        </div>\\n    </div>\\n</div>\\n\", styles: [\":host{position:relative;display:block;overflow:hidden}:host._draggable{-webkit-user-select:none;user-select:none}:host._draggable:hover{cursor:grab}:host._draggable:active{cursor:grabbing}.t-items{display:flex}:host._transitioned .t-items{transition-property:transform;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out}::ng-deep [tuiCarouselButtons] [tuiIconButton]{border-radius:100%}.t-item{display:flex;flex-direction:column;justify-content:center;padding:var(--tui-carousel-padding, 0 1.25rem);flex:1;min-inline-size:100%;max-inline-size:100%;box-sizing:border-box;border:none;margin:0}.t-wrapper{position:sticky;left:0;right:0;min-inline-size:100%;overflow:hidden}.t-scroller{scrollbar-width:none;-ms-overflow-style:none;display:flex;overflow:auto;overscroll-behavior-x:none}.t-scroller::-webkit-scrollbar,.t-scroller::-webkit-scrollbar-thumb{display:none}.t-scroller:before,.t-scroller:after{content:\\\"\\\";display:block;min-inline-size:1rem}\\n\"] }]\n        }], propDecorators: { items: [{\n                type: ContentChildren,\n                args: [TuiItem, { read: TemplateRef }]\n            }], draggable: [{\n                type: Input\n            }], itemsCount: [{\n                type: Input\n            }], indexChange: [{\n                type: Output\n            }], indexSetter: [{\n                type: Input,\n                args: ['index']\n            }], getStyle: [] } });\n\nclass TuiCarouselButtons {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiCarouselButtons, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.2.12\", type: TuiCarouselButtons, isStandalone: true, selector: \"[tuiCarouselButtons]\", providers: [\n            tuiButtonOptionsProvider({\n                appearance: 'secondary',\n                size: 'm',\n            }),\n        ], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.12\", ngImport: i0, type: TuiCarouselButtons, decorators: [{\n            type: Directive,\n            args: [{\n                    standalone: true,\n                    selector: '[tuiCarouselButtons]',\n                    providers: [\n                        tuiButtonOptionsProvider({\n                            appearance: 'secondary',\n                            size: 'm',\n                        }),\n                    ],\n                }]\n        }] });\n\nconst TuiCarousel = [\n    TuiItem,\n    TuiCarouselComponent,\n    TuiCarouselDirective,\n    TuiCarouselAutoscroll,\n    TuiCarouselButtons,\n    TuiCarouselScroll,\n];\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiCarousel, TuiCarouselAutoscroll, TuiCarouselButtons, TuiCarouselComponent, TuiCarouselDirective, TuiCarouselScroll };\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,+BAA+B;AACvD,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,SAAS,EAAEC,OAAO,EAAEC,IAAI,EAAEC,OAAO,EAAEC,gBAAgB,QAAQ,iBAAiB;AACrF,OAAO,KAAKC,EAAE,MAAM,eAAe;AACnC,SAASC,MAAM,EAAEC,SAAS,EAAEC,KAAK,EAAEC,MAAM,EAAEC,iBAAiB,EAAEC,YAAY,EAAEC,WAAW,EAAEC,SAAS,EAAEC,uBAAuB,EAAEC,eAAe,QAAQ,eAAe;AACnK,OAAO,KAAKC,EAAE,MAAM,oCAAoC;AACxD,SAASC,sBAAsB,QAAQ,oCAAoC;AAC3E,SAASC,iBAAiB,EAAEC,gBAAgB,EAAEC,WAAW,QAAQ,yBAAyB;AAC1F,SAASC,MAAM,QAAQ,8BAA8B;AACrD,SAASC,QAAQ,QAAQ,gCAAgC;AACzD,SAASC,aAAa,QAAQ,sBAAsB;AACpD,SAASC,gBAAgB,QAAQ,yBAAyB;AAC1D,SAASC,QAAQ,QAAQ,0BAA0B;AACnD,SAASC,OAAO,QAAQ,mCAAmC;AAC3D,SAASC,kBAAkB,QAAQ,qBAAqB;AACxD,SAASC,iBAAiB,EAAEC,QAAQ,EAAEC,oBAAoB,QAAQ,2BAA2B;AAC7F,SAASC,UAAU,EAAEC,eAAe,EAAEC,KAAK,EAAEC,GAAG,EAAEC,aAAa,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,YAAY,EAAEC,GAAG,QAAQ,MAAM;AAClH,SAASC,wBAAwB,QAAQ,kCAAkC;AAAC,SAAAC,6CAAAC,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAcyBrC,EAAE,CAAAuC,kBAAA,EA+IitB,CAAC;EAAA;AAAA;AAAA,SAAAC,yCAAAH,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAI,GAAA,GA/IptBzC,EAAE,CAAA0C,gBAAA;IAAF1C,EAAE,CAAA2C,cAAA,iBA+ImjD,CAAC;IA/ItjD3C,EAAE,CAAA4C,UAAA,oCAAAC,oFAAAC,MAAA;MAAA,MAAAC,IAAA,GAAF/C,EAAE,CAAAgD,aAAA,CAAAP,GAAA,EAAAQ,KAAA;MAAA,MAAAC,MAAA,GAAFlD,EAAE,CAAAmD,aAAA;MAAA,OAAFnD,EAAE,CAAAoD,WAAA,CAAAN,MAAA,CA+IigD,CAAC,KAAKI,MAAA,CAAAG,cAAA,CAAAP,MAAA,CAAsB,CAAC,GAAAC,IAAI,CAAC;IAAA,CAAC,CAAC;IA/IviD/C,EAAE,CAAAuC,kBAAA,KA+IinD,CAAC;IA/IpnDvC,EAAE,CAAAsD,YAAA,CA+I0oD,CAAC;EAAA;EAAA,IAAAjB,EAAA;IAAA,MAAAkB,OAAA,GAAAjB,GAAA,CAAAkB,SAAA;IAAA,MAAAT,IAAA,GAAAT,GAAA,CAAAW,KAAA;IAAA,MAAAC,MAAA,GA/I7oDlD,EAAE,CAAAmD,aAAA;IAAFnD,EAAE,CAAAyD,UAAA,aAAAP,MAAA,CAAAQ,UAAA,CAAAX,IAAA,CA+Iw5C,CAAC,YAAAG,MAAA,CAAAS,QAAA,CAAAT,MAAA,CAAAU,UAAA,CAAmD,CAAC;IA/I/8C5D,EAAE,CAAA6D,SAAA,CA+I8mD,CAAC;IA/IjnD7D,EAAE,CAAAyD,UAAA,qBAAAF,OA+I8mD,CAAC;EAAA;AAAA;AA3JttD,MAAMO,oBAAoB,SAASpC,UAAU,CAAC;EAC1CqC,WAAWA,CAAA,EAAG;IACV,KAAK,CAAEC,UAAU,IAAK,IAAI,CAACC,OAAO,CAACC,SAAS,CAACF,UAAU,CAAC,CAAC;IACzD,IAAI,CAACG,EAAE,GAAGhD,gBAAgB,CAAC,CAAC;IAC5B,IAAI,CAACiD,QAAQ,GAAGnE,MAAM,CAACqB,kBAAkB,CAAC;IAC1C,IAAI,CAAC+C,SAAS,GAAG,IAAI1C,eAAe,CAAC,CAAC,CAAC;IACvC,IAAI,CAAC2C,QAAQ,GAAG1C,KAAK,CAACL,iBAAiB,CAAC,IAAI,CAAC4C,EAAE,EAAE,YAAY,CAAC,CAACI,IAAI,CAAC1C,GAAG,CAAChB,iBAAiB,CAAC,CAAC,EAAEU,iBAAiB,CAAC,IAAI,CAAC4C,EAAE,EAAE,YAAY,CAAC,CAACI,IAAI,CAAC1C,GAAG,CAAChB,iBAAiB,CAAC,CAAC,EAAEU,iBAAiB,CAAC,IAAI,CAAC4C,EAAE,EAAE,UAAU,CAAC,CAACI,IAAI,CAAC1C,GAAG,CAACf,gBAAgB,CAAC,CAAC,EAAES,iBAAiB,CAAC,IAAI,CAAC4C,EAAE,EAAE,YAAY,CAAC,CAACI,IAAI,CAAC1C,GAAG,CAACf,gBAAgB,CAAC,CAAC,EAAE,IAAI,CAACsD,QAAQ,CAAC;IAC5T,IAAI,CAACH,OAAO,GAAGnC,aAAa,CAAC,CAAC,IAAI,CAACuC,SAAS,EAAE,IAAI,CAACC,QAAQ,CAAC,CAAC,CAACC,IAAI,CAAC/C,QAAQ,CAAC,CAAC,CAACgD,QAAQ,CAAC,KAAKzC,QAAQ,CAACyC,QAAQ,CAAC,EAAGC,MAAM,IAAKA,MAAM,CAACC,KAAK,CAACC,OAAO,CAAC,CAAC,CAAC;EACvJ;EACA,IAAIH,QAAQA,CAACA,QAAQ,EAAE;IACnB,IAAI,CAACH,SAAS,CAACO,IAAI,CAACC,MAAM,CAACC,KAAK,CAACN,QAAQ,CAAC,GAAG,IAAI,CAACH,SAAS,CAACU,KAAK,GAAGP,QAAQ,CAAC;EACjF;EACA;IAAS,IAAI,CAACQ,IAAI,YAAAC,6BAAAC,iBAAA;MAAA,YAAAA,iBAAA,IAAyFpB,oBAAoB;IAAA,CAAmD;EAAE;EACpL;IAAS,IAAI,CAACqB,IAAI,kBAD+EnF,EAAE,CAAAoF,iBAAA;MAAAC,IAAA,EACJvB,oBAAoB;MAAAwB,MAAA;QAAAd,QAAA;MAAA;MAAAe,UAAA;MAAAC,QAAA,GADlBxF,EAAE,CAAAyF,0BAAA;IAAA,EAC8G;EAAE;AACvN;AACA;EAAA,QAAAC,SAAA,oBAAAA,SAAA,KAHqG1F,EAAE,CAAA2F,iBAAA,CAGX7B,oBAAoB,EAAc,CAAC;IACnHuB,IAAI,EAAEnF,SAAS;IACf0F,IAAI,EAAE,CAAC;MACCL,UAAU,EAAE;IAChB,CAAC;EACT,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,EAAE;EAAE,CAAC,EAAkB;IAAEf,QAAQ,EAAE,CAAC;MACrEa,IAAI,EAAElF;IACV,CAAC;EAAE,CAAC;AAAA;AAEhB,MAAM0F,qBAAqB,CAAC;EACxB9B,WAAWA,CAAA,EAAG;IACV,IAAI,CAAC+B,qBAAqB,GAAG7F,MAAM,CAAC6D,oBAAoB,CAAC;EAC7D;EACA;IAAS,IAAI,CAACkB,IAAI,YAAAe,8BAAAb,iBAAA;MAAA,YAAAA,iBAAA,IAAyFW,qBAAqB;IAAA,CAAmD;EAAE;EACrL;IAAS,IAAI,CAACV,IAAI,kBAjB+EnF,EAAE,CAAAoF,iBAAA;MAAAC,IAAA,EAiBJQ,qBAAqB;MAAAG,SAAA;MAAAC,OAAA;QAAAH,qBAAA;MAAA;MAAAP,UAAA;IAAA,EAAuI;EAAE;AACjQ;AACA;EAAA,QAAAG,SAAA,oBAAAA,SAAA,KAnBqG1F,EAAE,CAAA2F,iBAAA,CAmBXE,qBAAqB,EAAc,CAAC;IACpHR,IAAI,EAAEnF,SAAS;IACf0F,IAAI,EAAE,CAAC;MACCL,UAAU,EAAE,IAAI;MAChBW,QAAQ,EAAE;IACd,CAAC;EACT,CAAC,CAAC,QAAkB;IAAEJ,qBAAqB,EAAE,CAAC;MACtCT,IAAI,EAAEjF;IACV,CAAC;EAAE,CAAC;AAAA;AAEhB,MAAM+F,iBAAiB,CAAC;EACpBpC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACI,EAAE,GAAGhD,gBAAgB,CAAC,CAAC;IAC5B,IAAI,CAACiF,iBAAiB,GAAG7E,iBAAiB,CAAC,IAAI,CAAC4C,EAAE,EAAE,OAAO,CAAC,CAACI,IAAI,CAACvC,MAAM,CAAC,CAAC;MAAEqE;IAAO,CAAC,KAAKC,IAAI,CAACC,GAAG,CAACF,MAAM,CAAC,GAAG,EAAE,CAAC,EAAEpE,YAAY,CAAC,GAAG,EAAER,oBAAoB,CAAC,CAAC,CAAC,EAAEI,GAAG,CAAC,CAAC;MAAEwE;IAAO,CAAC,KAAKC,IAAI,CAACE,IAAI,CAACH,MAAM,CAAC,CAAC,EAAEnE,GAAG,CAAC,MAAM;MAC1M;MACA,IAAI,CAACiC,EAAE,CAACsC,UAAU,GAAG,EAAE;IAC3B,CAAC,CAAC,CAAC;EACP;EACA;IAAS,IAAI,CAACzB,IAAI,YAAA0B,0BAAAxB,iBAAA;MAAA,YAAAA,iBAAA,IAAyFiB,iBAAiB;IAAA,CAAmD;EAAE;EACjL;IAAS,IAAI,CAAChB,IAAI,kBAtC+EnF,EAAE,CAAAoF,iBAAA;MAAAC,IAAA,EAsCJc,iBAAiB;MAAAH,SAAA;MAAAC,OAAA;QAAAG,iBAAA;MAAA;MAAAb,UAAA;IAAA,EAA2H;EAAE;AACjP;AACA;EAAA,QAAAG,SAAA,oBAAAA,SAAA,KAxCqG1F,EAAE,CAAA2F,iBAAA,CAwCXQ,iBAAiB,EAAc,CAAC;IAChHd,IAAI,EAAEnF,SAAS;IACf0F,IAAI,EAAE,CAAC;MACCL,UAAU,EAAE,IAAI;MAChBW,QAAQ,EAAE;IACd,CAAC;EACT,CAAC,CAAC,QAAkB;IAAEE,iBAAiB,EAAE,CAAC;MAClCf,IAAI,EAAEjF;IACV,CAAC;EAAE,CAAC;AAAA;AAEhB,MAAMuG,oBAAoB,CAAC;EACvB5C,WAAWA,CAAA,EAAG;IACV,IAAI,CAACI,EAAE,GAAGhD,gBAAgB,CAAC,CAAC;IAC5B,IAAI,CAACyF,GAAG,GAAG3G,MAAM,CAACI,iBAAiB,CAAC;IACpC,IAAI,CAACwG,QAAQ,GAAG5G,MAAM,CAACiB,aAAa,CAAC;IACrC,IAAI,CAAC4F,SAAS,GAAG7G,MAAM,CAAC6D,oBAAoB,CAAC;IAC7C,IAAI,CAACiD,SAAS,GAAG,CAAC;IAClB,IAAI,CAACC,KAAK,GAAGjG,WAAW;IACxB,IAAI,CAACkG,YAAY,GAAG,IAAI;IACxB,IAAI,CAAChE,KAAK,GAAG,CAAC;IACd,IAAI,CAACiE,SAAS,GAAG,KAAK;IACtB,IAAI,CAACtD,UAAU,GAAG,CAAC;IACnB,IAAI,CAACuD,WAAW,GAAG,IAAI7G,YAAY,CAAC,CAAC;EACzC;EACA,IAAI8G,WAAWA,CAACnE,KAAK,EAAE;IACnB,IAAI,CAACA,KAAK,GAAGA,KAAK;IAClB,IAAI,CAAC6D,SAAS,CAACtC,QAAQ,GAAG6C,GAAG;EACjC;EACAzC,IAAIA,CAAA,EAAG;IACH,IAAI,IAAI,CAACoC,KAAK,IAAI,IAAI,CAAC/D,KAAK,KAAK,IAAI,CAAC+D,KAAK,CAACM,MAAM,GAAG,IAAI,CAAC1D,UAAU,EAAE;MAClE;IACJ;IACA,IAAI,CAAC2D,WAAW,CAAC,IAAI,CAACtE,KAAK,GAAG,CAAC,CAAC;EACpC;EACAuE,IAAIA,CAAA,EAAG;IACH,IAAI,CAACD,WAAW,CAAC,IAAI,CAACtE,KAAK,GAAG,CAAC,CAAC;EACpC;EACA,IAAIwE,SAASA,CAAA,EAAG;IACZ,MAAMC,CAAC,GAAG,IAAI,CAACT,YAAY,GAAG,IAAI,CAACU,iBAAiB,GAAG,IAAI,CAACZ,SAAS;IACrE,OAAO,cAAc,GAAG,GAAGW,CAAC,IAAI;EACpC;EACA/D,QAAQA,CAACC,UAAU,EAAE;IACjB,MAAMgE,OAAO,GAAG,GAAG,GAAG,GAAGhE,UAAU,GAAG;IACtC,OAAO;MACHiE,SAAS,EAAED,OAAO;MAClBE,QAAQ,EAAEF,OAAO;MACjBG,QAAQ,EAAEH;IACd,CAAC;EACL;EACAI,cAAcA,CAACf,YAAY,EAAE;IACzB,IAAI,CAACA,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACA,YAAY,EAAE;MACf,IAAI,CAACF,SAAS,GAAG,IAAI,CAACY,iBAAiB;IAC3C;EACJ;EACAjE,UAAUA,CAACT,KAAK,EAAE;IACd,OAAOA,KAAK,GAAG,IAAI,CAACA,KAAK,IAAIA,KAAK,GAAG,IAAI,CAACA,KAAK,GAAG,IAAI,CAACW,UAAU;EACrE;EACAP,cAAcA,CAAC;IAAE4E;EAAkB,CAAC,EAAEhF,KAAK,EAAE;IACzC,IAAIgF,iBAAiB,IAAIA,iBAAiB,KAAK,CAAC,IAAI,CAAC,IAAI,CAAChB,YAAY,EAAE;MACpE,IAAI,CAACM,WAAW,CAACtE,KAAK,GAAGqD,IAAI,CAAC4B,KAAK,CAAC,IAAI,CAACtE,UAAU,GAAG,CAAC,CAAC,CAAC;IAC7D;EACJ;EACAuE,QAAQA,CAACC,KAAK,EAAE;IACZ,IAAI,CAAC,IAAI,CAACvB,QAAQ,EAAE;MAChB,IAAIuB,KAAK,GAAG,CAAC,EAAE;QACX,IAAI,CAACxD,IAAI,CAAC,CAAC;MACf,CAAC,MACI;QACD,IAAI,CAAC4C,IAAI,CAAC,CAAC;MACf;IACJ;EACJ;EACAa,KAAKA,CAACX,CAAC,EAAE;IACL,IAAI,CAAC,IAAI,CAACY,iBAAiB,EAAE;MACzB;IACJ;IACA,MAAMC,GAAG,GAAG,CAAC,GAAG,IAAI,CAACvB,KAAK,CAACM,MAAM,GAAG,IAAI,CAAC1D,UAAU;IACnD,IAAI,CAACmD,SAAS,GAAG3F,QAAQ,CAACsG,CAAC,GAAG,IAAI,CAACvD,EAAE,CAACqE,WAAW,GAAG,IAAI,CAACzB,SAAS,EAAEwB,GAAG,EAAE,CAAC,CAAC;EAC/E;EACAE,OAAOA,CAACC,SAAS,EAAE;IACf,IAAIA,SAAS,KAAK,MAAM,EAAE;MACtB,IAAI,CAAC9D,IAAI,CAAC,CAAC;IACf,CAAC,MACI,IAAI8D,SAAS,KAAK,OAAO,EAAE;MAC5B,IAAI,CAAClB,IAAI,CAAC,CAAC;IACf;EACJ;EACAmB,YAAYA,CAAA,EAAG;IACX,IAAI,CAACpB,WAAW,CAAC,IAAI,CAACtE,KAAK,KAAK,IAAI,CAAC+D,KAAK,CAACM,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAACrE,KAAK,GAAG,CAAC,CAAC;EAC/E;EACA,IAAI0E,iBAAiBA,CAAA,EAAG;IACpB,OAAO,CAAC,IAAI,CAAC1E,KAAK,GAAG,IAAI,CAACW,UAAU;EACxC;EACA,IAAI0E,iBAAiBA,CAAA,EAAG;IACpB,OAAO,IAAI,CAACzB,QAAQ,IAAI,IAAI,CAACK,SAAS;EAC1C;EACAK,WAAWA,CAACtE,KAAK,EAAE;IACf,IAAI,CAACA,KAAK,GAAG7B,QAAQ,CAAC6B,KAAK,EAAE,CAAC,EAAE,IAAI,CAAC+D,KAAK,CAACM,MAAM,GAAG,CAAC,CAAC;IACtD,IAAI,CAACH,WAAW,CAACyB,IAAI,CAAC,IAAI,CAAC3F,KAAK,CAAC;IACjC,IAAI,CAAC2D,GAAG,CAACiC,YAAY,CAAC,CAAC;EAC3B;EACA;IAAS,IAAI,CAAC7D,IAAI,YAAA8D,6BAAA5D,iBAAA;MAAA,YAAAA,iBAAA,IAAyFyB,oBAAoB;IAAA,CAAmD;EAAE;EACpL;IAAS,IAAI,CAACoC,IAAI,kBA/I+E/I,EAAE,CAAAgJ,iBAAA;MAAA3D,IAAA,EA+IJsB,oBAAoB;MAAAX,SAAA;MAAAiD,cAAA,WAAAC,oCAAA7G,EAAA,EAAAC,GAAA,EAAA6G,QAAA;QAAA,IAAA9G,EAAA;UA/IlBrC,EAAE,CAAAoJ,cAAA,CAAAD,QAAA,EA+IihB1J,OAAO,KAAQc,WAAW;QAAA;QAAA,IAAA8B,EAAA;UAAA,IAAAgH,EAAA;UA/I7iBrJ,EAAE,CAAAsJ,cAAA,CAAAD,EAAA,GAAFrJ,EAAE,CAAAuJ,WAAA,QAAAjH,GAAA,CAAA0E,KAAA,GAAAqC,EAAA;QAAA;MAAA;MAAAG,QAAA;MAAAC,YAAA,WAAAC,kCAAArH,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UAAFrC,EAAE,CAAA4C,UAAA,wBAAA+G,mDAAA;YAAA,OA+IJrH,GAAA,CAAA0F,cAAA,CAAe,KAAK,CAAC;UAAA,CAAF,CAAC,sBAAA4B,iDAAA;YAAA,OAApBtH,GAAA,CAAA0F,cAAA,CAAe,IAAI,CAAC;UAAA,CAAD,CAAC,uBAAA6B,kDAAA;YAAA,OAApBvH,GAAA,CAAA0F,cAAA,CAAe,KAAK,CAAC;UAAA,CAAF,CAAC,4BAAA8B,uDAAA;YAAA,OAApBxH,GAAA,CAAA0F,cAAA,CAAe,IAAI,CAAC;UAAA,UA/IlBhI,EAAE,CAAA+J,iBA+Ie,CAAC;QAAA;QAAA,IAAA1H,EAAA;UA/IlBrC,EAAE,CAAAgK,WAAA,kBAAA1H,GAAA,CAAA2E,YA+Ie,CAAC,eAAA3E,GAAA,CAAA4E,SAAD,CAAC;QAAA;MAAA;MAAA5B,MAAA;QAAA4B,SAAA;QAAAtD,UAAA;QAAAwD,WAAA;MAAA;MAAAnB,OAAA;QAAAkB,WAAA;MAAA;MAAA5B,UAAA;MAAAC,QAAA,GA/IlBxF,EAAE,CAAAiK,uBAAA;QAAAnD,SAAA,EA+I8kBhD,oBAAoB;QAAAwB,MAAA;MAAA,KA/IpmBtF,EAAE,CAAAkK,mBAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,8BAAAlI,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UAAFrC,EAAE,CAAAwK,UAAA,IAAApI,4CAAA,yBA+IitB,CAAC;UA/IptBpC,EAAE,CAAAyK,MAAA;UAAFzK,EAAE,CAAA2C,cAAA,YA+IkyB,CAAC;UA/IryB3C,EAAE,CAAA4C,UAAA,+BAAA8H,+DAAA5H,MAAA;YAAA,OA+I8wBR,GAAA,CAAA6F,QAAA,CAAArF,MAAe,CAAC;UAAA,CAAC,CAAC;UA/IlyB9C,EAAE,CAAA2C,cAAA,YA+Is/B,CAAC,YAA6P,CAAC;UA/IvvC3C,EAAE,CAAA4C,UAAA,mCAAA+H,mEAAA;YAAA,OA+IynCrI,GAAA,CAAAqG,YAAA,CAAa,CAAC;UAAA,CAAC,CAAC,oBAAAiC,oDAAA9H,MAAA;YAAA,OAAyBR,GAAA,CAAA+F,KAAA,CAAAvF,MAAA,CAAa,CAAC,CAAC,CAAC;UAAA,CAAC,CAAC,sBAAA+H,sDAAA/H,MAAA;YAAA,OAA2BR,GAAA,CAAAmG,OAAA,CAAA3F,MAAA,CAAA4F,SAAwB,CAAC;UAAA,CAAC,CAAC;UA/I5uC1I,EAAE,CAAAwK,UAAA,IAAAhI,wCAAA,qBA+ImjD,CAAC;UA/ItjDxC,EAAE,CAAAsD,YAAA,CA+I0pD,CAAC,CAAW,CAAC,CAAO,CAAC;QAAA;QAAA,IAAAjB,EAAA;UA/IjrDrC,EAAE,CAAAyD,UAAA,SAAFzD,EAAE,CAAA8K,WAAA,OAAAxI,GAAA,CAAA0E,KAAA,CAAA+D,OAAA,CA+I4sB,CAAC;UA/I/sB/K,EAAE,CAAA6D,SAAA,EA+IglC,CAAC;UA/InlC7D,EAAE,CAAAgL,WAAA,cAAA1I,GAAA,CAAAmF,SA+IglC,CAAC;UA/InlCzH,EAAE,CAAA6D,SAAA,CA+IyzC,CAAC;UA/I5zC7D,EAAE,CAAAyD,UAAA,YAAAnB,GAAA,CAAA0E,KA+IyzC,CAAC;QAAA;MAAA;MAAAiE,YAAA,GAAm4CtL,SAAS,EAA8CC,OAAO,EAAmHC,IAAI,EAA6FC,OAAO,EAA2EC,gBAAgB,EAAoJ8F,qBAAqB,EAAwGM,iBAAiB,EAAgGnF,MAAM,EAA0EC,QAAQ,EAA8EN,EAAE,CAACuK,+BAA+B,EAA0KvK,EAAE,CAACwK,sBAAsB,EAA0GxK,EAAE,CAACyK,kBAAkB;MAAAC,MAAA;MAAAC,eAAA;IAAA,EAA4F;EAAE;AACloI;AACA5L,UAAU,CAAC,CACP2B,OAAO,CACV,EAAEsF,oBAAoB,CAAC4E,SAAS,EAAE,UAAU,EAAE,IAAI,CAAC;AACpD;EAAA,QAAA7F,SAAA,oBAAAA,SAAA,KApJqG1F,EAAE,CAAA2F,iBAAA,CAoJXgB,oBAAoB,EAAc,CAAC;IACnHtB,IAAI,EAAE7E,SAAS;IACfoF,IAAI,EAAE,CAAC;MAAEL,UAAU,EAAE,IAAI;MAAEW,QAAQ,EAAE,cAAc;MAAEsF,OAAO,EAAE,CAClD7L,SAAS,EACTC,OAAO,EACPC,IAAI,EACJC,OAAO,EACPC,gBAAgB,EAChB8F,qBAAqB,EACrBM,iBAAiB,EACjBnF,MAAM,EACNC,QAAQ,EACRL,sBAAsB,CACzB;MAAE0K,eAAe,EAAE7K,uBAAuB,CAACgL,MAAM;MAAEC,cAAc,EAAE,CAChE;QACI5E,SAAS,EAAEhD,oBAAoB;QAC/BwB,MAAM,EAAE,CAAC,UAAU;MACvB,CAAC,CACJ;MAAEqG,IAAI,EAAE;QACL,uBAAuB,EAAE,cAAc;QACvC,oBAAoB,EAAE,WAAW;QACjC,cAAc,EAAE,uBAAuB;QACvC,YAAY,EAAE,sBAAsB;QACpC,aAAa,EAAE,uBAAuB;QACtC,2BAA2B,EAAE;MACjC,CAAC;MAAErB,QAAQ,EAAE,ihCAAihC;MAAEe,MAAM,EAAE,CAAC,w9BAAw9B;IAAE,CAAC;EAChhE,CAAC,CAAC,QAAkB;IAAErE,KAAK,EAAE,CAAC;MACtB3B,IAAI,EAAE3E,eAAe;MACrBkF,IAAI,EAAE,CAACnG,OAAO,EAAE;QAAEmM,IAAI,EAAErL;MAAY,CAAC;IACzC,CAAC,CAAC;IAAE2G,SAAS,EAAE,CAAC;MACZ7B,IAAI,EAAElF;IACV,CAAC,CAAC;IAAEyD,UAAU,EAAE,CAAC;MACbyB,IAAI,EAAElF;IACV,CAAC,CAAC;IAAEgH,WAAW,EAAE,CAAC;MACd9B,IAAI,EAAEjF;IACV,CAAC,CAAC;IAAEgH,WAAW,EAAE,CAAC;MACd/B,IAAI,EAAElF,KAAK;MACXyF,IAAI,EAAE,CAAC,OAAO;IAClB,CAAC,CAAC;IAAEjC,QAAQ,EAAE;EAAG,CAAC;AAAA;AAE9B,MAAMkI,kBAAkB,CAAC;EACrB;IAAS,IAAI,CAAC7G,IAAI,YAAA8G,2BAAA5G,iBAAA;MAAA,YAAAA,iBAAA,IAAyF2G,kBAAkB;IAAA,CAAmD;EAAE;EAClL;IAAS,IAAI,CAAC1G,IAAI,kBA9L+EnF,EAAE,CAAAoF,iBAAA;MAAAC,IAAA,EA8LJwG,kBAAkB;MAAA7F,SAAA;MAAAT,UAAA;MAAAC,QAAA,GA9LhBxF,EAAE,CAAA+L,kBAAA,CA8LiF,CAC5K5J,wBAAwB,CAAC;QACrB6J,UAAU,EAAE,WAAW;QACvBC,IAAI,EAAE;MACV,CAAC,CAAC,CACL;IAAA,EAAiB;EAAE;AAC5B;AACA;EAAA,QAAAvG,SAAA,oBAAAA,SAAA,KArMqG1F,EAAE,CAAA2F,iBAAA,CAqMXkG,kBAAkB,EAAc,CAAC;IACjHxG,IAAI,EAAEnF,SAAS;IACf0F,IAAI,EAAE,CAAC;MACCL,UAAU,EAAE,IAAI;MAChBW,QAAQ,EAAE,sBAAsB;MAChCgG,SAAS,EAAE,CACP/J,wBAAwB,CAAC;QACrB6J,UAAU,EAAE,WAAW;QACvBC,IAAI,EAAE;MACV,CAAC,CAAC;IAEV,CAAC;EACT,CAAC,CAAC;AAAA;AAEV,MAAME,WAAW,GAAG,CAChB1M,OAAO,EACPkH,oBAAoB,EACpB7C,oBAAoB,EACpB+B,qBAAqB,EACrBgG,kBAAkB,EAClB1F,iBAAiB,CACpB;;AAED;AACA;AACA;;AAEA,SAASgG,WAAW,EAAEtG,qBAAqB,EAAEgG,kBAAkB,EAAElF,oBAAoB,EAAE7C,oBAAoB,EAAEqC,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}