{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport mime from 'mime';\nlet FileWorkerService = class FileWorkerService {\n  constructor() {}\n  getFileExt(fileName) {\n    return fileName.split('.').slice(-1)[0];\n  }\n  getFileMimeType(fileName) {\n    const fileExt = this.getFileExt(fileName);\n    const mimeType = mime.getType(fileExt);\n    return mimeType;\n  }\n  static ctorParameters = () => [];\n};\nFileWorkerService = __decorate([Injectable({\n  providedIn: 'root'\n})], FileWorkerService);\nexport { FileWorkerService };","map":{"version":3,"names":["Injectable","mime","FileWorkerService","constructor","getFileExt","fileName","split","slice","getFileMimeType","fileExt","mimeType","getType","__decorate","providedIn"],"sources":["C:\\Users\\Asus-PC\\Downloads\\WebLibraryNew\\WebLibrary\\WebLibraryApp\\Frontend\\src\\app\\services\\fileworker\\file-worker.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport mime from 'mime';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FileWorkerService {\r\n  constructor() { }\r\n\r\n  getFileExt(fileName: string): string{\r\n    return fileName.split('.').slice(-1)[0];\r\n  }\r\n\r\n  getFileMimeType(fileName: string): string | null{\r\n    const fileExt: string = this.getFileExt(fileName);\r\n    const mimeType = mime.getType(fileExt);\r\n    return mimeType;\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAC1C,OAAOC,IAAI,MAAM,MAAM;AAKhB,IAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAC5BC,YAAA,GAAgB;EAEhBC,UAAUA,CAACC,QAAgB;IACzB,OAAOA,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACzC;EAEAC,eAAeA,CAACH,QAAgB;IAC9B,MAAMI,OAAO,GAAW,IAAI,CAACL,UAAU,CAACC,QAAQ,CAAC;IACjD,MAAMK,QAAQ,GAAGT,IAAI,CAACU,OAAO,CAACF,OAAO,CAAC;IACtC,OAAOC,QAAQ;EACjB;;;AAXWR,iBAAiB,GAAAU,UAAA,EAH7BZ,UAAU,CAAC;EACVa,UAAU,EAAE;CACb,CAAC,C,EACWX,iBAAiB,CAY7B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}