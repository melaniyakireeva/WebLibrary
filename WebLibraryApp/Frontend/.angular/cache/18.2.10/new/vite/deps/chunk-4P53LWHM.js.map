{
  "version": 3,
  "sources": ["../../../../../../node_modules/@ng-web-apis/common/fesm2022/ng-web-apis-common.mjs"],
  "sourcesContent": ["import { InjectionToken, inject } from '@angular/core';\nimport { Observable, share, fromEvent, startWith, map, distinctUntilChanged, shareReplay } from 'rxjs';\nimport { DOCUMENT } from '@angular/common';\nconst WA_WINDOW = new InjectionToken('[WA_WINDOW]', {\n  factory: () => {\n    const {\n      defaultView\n    } = inject(DOCUMENT);\n    if (!defaultView) {\n      throw new Error('Window is not available');\n    }\n    return defaultView;\n  }\n});\n/**\n * @deprecated: drop in v5.0, use {@link WA_WINDOW}\n */\nconst WINDOW = WA_WINDOW;\nconst WA_ANIMATION_FRAME = new InjectionToken('[WA_ANIMATION_FRAME]', {\n  factory: () => {\n    const {\n      requestAnimationFrame,\n      cancelAnimationFrame\n    } = inject(WINDOW);\n    const animationFrame$ = new Observable(subscriber => {\n      let id = NaN;\n      const callback = timestamp => {\n        subscriber.next(timestamp);\n        id = requestAnimationFrame(callback);\n      };\n      id = requestAnimationFrame(callback);\n      return () => {\n        cancelAnimationFrame(id);\n      };\n    });\n    return animationFrame$.pipe(share());\n  }\n});\n/**\n * @deprecated: drop in v5.0, use {@link WA_ANIMATION_FRAME}\n */\nconst ANIMATION_FRAME = WA_ANIMATION_FRAME;\nconst WA_CACHES = new InjectionToken('[WA_CACHES]', {\n  factory: () => inject(WINDOW).caches\n});\n/**\n * @deprecated: drop in v5.0, use {@link WA_CACHES}\n */\nconst CACHES = WA_CACHES;\nconst WA_CRYPTO = new InjectionToken('[WA_CRYPTO]', {\n  factory: () => inject(WINDOW).crypto\n});\n/**\n * @deprecated: drop in v5.0, use {@link WA_CRYPTO}\n */\nconst CRYPTO = WA_CRYPTO;\nconst WA_CSS = new InjectionToken('[WA_CSS]', {\n  factory: () => inject(WINDOW).CSS ?? {\n    escape: v => v,\n    // eslint-disable-next-line no-restricted-syntax\n    supports: () => false\n  }\n});\n/**\n * @deprecated: drop in v5.0, use {@link WA_CSS}\n */\nconst TOKEN_CSS = WA_CSS;\nconst WA_HISTORY = new InjectionToken('[WA_HISTORY]', {\n  factory: () => inject(WINDOW).history\n});\n/**\n * @deprecated: drop in v5.0, use {@link WA_HISTORY}\n */\nconst HISTORY = WA_HISTORY;\nconst WA_LOCAL_STORAGE = new InjectionToken('[WA_LOCAL_STORAGE]', {\n  factory: () => inject(WINDOW).localStorage\n});\n/**\n * @deprecated: drop in v5.0, use {@link WA_LOCAL_STORAGE}\n */\nconst LOCAL_STORAGE = WA_LOCAL_STORAGE;\nconst WA_LOCATION = new InjectionToken('[WA_LOCATION]', {\n  factory: () => inject(WINDOW).location\n});\n/**\n * @deprecated: drop in v5.0, use {@link WA_LOCATION}\n */\nconst LOCATION = WA_LOCATION;\nconst WA_NAVIGATOR = new InjectionToken('[WA_NAVIGATOR]', {\n  factory: () => inject(WINDOW).navigator\n});\n/**\n * @deprecated: drop in v5.0, use {@link WA_NAVIGATOR}\n */\nconst NAVIGATOR = WA_NAVIGATOR;\nconst WA_MEDIA_DEVICES = new InjectionToken('[WA_MEDIA_DEVICES]', {\n  factory: () => inject(NAVIGATOR).mediaDevices\n});\n/**\n * @deprecated: drop in v5.0, use {@link WA_MEDIA_DEVICES}\n */\nconst MEDIA_DEVICES = WA_MEDIA_DEVICES;\nconst WA_NETWORK_INFORMATION = new InjectionToken('[WA_NETWORK_INFORMATION]', {\n  // @ts-ignore\n  factory: () => inject(WA_NAVIGATOR).connection || null\n});\n/**\n * @deprecated: drop in v5.0, use {@link WA_NETWORK_INFORMATION}\n */\nconst NETWORK_INFORMATION = WA_NETWORK_INFORMATION;\nconst WA_PAGE_VISIBILITY = new InjectionToken('[WA_PAGE_VISIBILITY]', {\n  factory: () => {\n    const documentRef = inject(DOCUMENT);\n    return fromEvent(documentRef, 'visibilitychange').pipe(startWith(0), map(() => documentRef.visibilityState !== 'hidden'), distinctUntilChanged(), shareReplay({\n      refCount: false,\n      bufferSize: 1\n    }));\n  }\n});\n/**\n * @deprecated: drop in v5.0, use {@link WA_PAGE_VISIBILITY}\n */\nconst PAGE_VISIBILITY = WA_PAGE_VISIBILITY;\nconst WA_PERFORMANCE = new InjectionToken('[WA_PERFORMANCE]', {\n  factory: () => inject(WINDOW).performance\n});\n/**\n * @deprecated: drop in v5.0, use {@link WA_PERFORMANCE}\n */\nconst PERFORMANCE = WA_PERFORMANCE;\nconst WA_SCREEN = new InjectionToken('[WA_SCREEN]', {\n  factory: () => inject(WINDOW).screen\n});\n/**\n * @deprecated: drop in v5.0, use {@link WA_SCREEN}\n */\nconst SCREEN = WA_SCREEN;\nconst WA_SESSION_STORAGE = new InjectionToken('[WA_SESSION_STORAGE]', {\n  factory: () => inject(WINDOW).sessionStorage\n});\n/**\n * @deprecated: drop in v5.0, use {@link WA_SESSION_STORAGE}\n */\nconst SESSION_STORAGE = WA_SESSION_STORAGE;\nconst WA_SPEECH_RECOGNITION = new InjectionToken('[WA_SPEECH_RECOGNITION]: [SPEECH_RECOGNITION]', {\n  factory: () => {\n    const windowRef = inject(WINDOW);\n    return windowRef.speechRecognition || windowRef.webkitSpeechRecognition || null;\n  }\n});\n/**\n * @deprecated: drop in v5.0, use {@link WA_SPEECH_RECOGNITION}\n */\nconst SPEECH_RECOGNITION = WA_SPEECH_RECOGNITION;\nconst WA_SPEECH_SYNTHESIS = new InjectionToken('[WA_SPEECH_SYNTHESIS]', {\n  factory: () => inject(WINDOW).speechSynthesis\n});\n/**\n * @deprecated: drop in v5.0, use {@link WA_SPEECH_SYNTHESIS}\n */\nconst SPEECH_SYNTHESIS = WA_SPEECH_SYNTHESIS;\nconst WA_USER_AGENT = new InjectionToken('[WA_USER_AGENT]', {\n  factory: () => inject(NAVIGATOR).userAgent\n});\n/**\n * @deprecated: drop in v5.0, use {@link WA_USER_AGENT}\n */\nconst USER_AGENT = WA_USER_AGENT;\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ANIMATION_FRAME, CACHES, CRYPTO, TOKEN_CSS as CSS, HISTORY, LOCAL_STORAGE, LOCATION, MEDIA_DEVICES, NAVIGATOR, NETWORK_INFORMATION, PAGE_VISIBILITY, PERFORMANCE, SCREEN, SESSION_STORAGE, SPEECH_RECOGNITION, SPEECH_SYNTHESIS, TOKEN_CSS, USER_AGENT, WA_ANIMATION_FRAME, WA_CACHES, WA_CRYPTO, WA_CSS, WA_HISTORY, WA_LOCAL_STORAGE, WA_LOCATION, WA_MEDIA_DEVICES, WA_NAVIGATOR, WA_NETWORK_INFORMATION, WA_PAGE_VISIBILITY, WA_PERFORMANCE, WA_SCREEN, WA_SESSION_STORAGE, WA_SPEECH_RECOGNITION, WA_SPEECH_SYNTHESIS, WA_USER_AGENT, WA_WINDOW, WINDOW };\n"],
  "mappings": "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",
  "names": []
}
