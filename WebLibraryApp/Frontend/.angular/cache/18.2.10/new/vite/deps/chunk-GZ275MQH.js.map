{
  "version": 3,
  "sources": ["../../../../../../node_modules/@taiga-ui/cdk/fesm2022/taiga-ui-cdk-directives-native-validator.mjs", "../../../../../../node_modules/@taiga-ui/cdk/fesm2022/taiga-ui-cdk-services.mjs"],
  "sourcesContent": ["import * as i0 from '@angular/core';\nimport { inject, DestroyRef, NgZone, Directive, Input } from '@angular/core';\nimport { NG_VALIDATORS } from '@angular/forms';\nimport { tuiZonefree, tuiTakeUntilDestroyed } from '@taiga-ui/cdk/observables';\nimport { tuiInjectElement, tuiProvide } from '@taiga-ui/cdk/utils';\nimport { timer } from 'rxjs';\nclass TuiNativeValidator {\n  constructor() {\n    this.destroyRef = inject(DestroyRef);\n    this.zone = inject(NgZone);\n    this.el = tuiInjectElement();\n    this.tuiNativeValidator = 'Invalid';\n  }\n  validate(control) {\n    this.control = control;\n    timer(0).pipe(tuiZonefree(this.zone), tuiTakeUntilDestroyed(this.destroyRef)).subscribe(() => this.handleValidation());\n    return null;\n  }\n  handleValidation() {\n    this.el.setCustomValidity?.(this.control?.touched && this.control?.invalid ? this.tuiNativeValidator : '');\n  }\n  static {\n    this.ɵfac = function TuiNativeValidator_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiNativeValidator)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: TuiNativeValidator,\n      selectors: [[\"\", \"tuiNativeValidator\", \"\"]],\n      hostBindings: function TuiNativeValidator_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"focusout\", function TuiNativeValidator_focusout_HostBindingHandler() {\n            return ctx.handleValidation();\n          });\n        }\n      },\n      inputs: {\n        tuiNativeValidator: \"tuiNativeValidator\"\n      },\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([tuiProvide(NG_VALIDATORS, TuiNativeValidator, true)])]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiNativeValidator, [{\n    type: Directive,\n    args: [{\n      standalone: true,\n      selector: '[tuiNativeValidator]',\n      providers: [tuiProvide(NG_VALIDATORS, TuiNativeValidator, true)],\n      host: {\n        '(focusout)': 'handleValidation()'\n      }\n    }]\n  }], null, {\n    tuiNativeValidator: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TuiNativeValidator };\n", "import * as i0 from '@angular/core';\nimport { Injectable, inject, NgZone } from '@angular/core';\nimport { tuiProvide, tuiCreateTokenFromFactory } from '@taiga-ui/cdk/utils';\nimport { PolymorpheusComponent } from '@taiga-ui/polymorpheus';\nimport { Observable, of, defer, switchMap, map, takeUntil, timer, endWith, tap } from 'rxjs';\nimport { WA_PERFORMANCE, WA_ANIMATION_FRAME } from '@ng-web-apis/common';\nimport { tuiZonefreeScheduler } from '@taiga-ui/cdk/observables';\nimport { tuiClamp } from '@taiga-ui/cdk/utils/math';\nimport { tuiEaseInOutQuad } from '@taiga-ui/cdk/utils/miscellaneous';\nimport { DOCUMENT } from '@angular/common';\nimport { Meta } from '@angular/platform-browser';\nclass TuiIdService {\n  static {\n    this.autoId = 0;\n  }\n  generate() {\n    return `tui_${TuiIdService.autoId++}${Date.now()}`;\n  }\n  static {\n    this.ɵfac = function TuiIdService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiIdService)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: TuiIdService,\n      factory: TuiIdService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiIdService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nfunction tuiInjectId() {\n  return inject(TuiIdService).generate();\n}\nclass TuiPopoverService {\n  constructor(items, component, options = {}) {\n    this.options = options;\n    this.id = inject(TuiIdService);\n    this.component = new PolymorpheusComponent(component);\n    this.items$ = inject(items);\n  }\n  open(content, options = {}) {\n    return new Observable(observer => {\n      const item = {\n        ...this.options,\n        ...options,\n        content,\n        $implicit: observer,\n        component: this.component,\n        createdAt: Date.now(),\n        id: this.id.generate(),\n        completeWith: result => {\n          observer.next(result);\n          observer.complete();\n        }\n      };\n      this.items$.next([...this.items$.value, item]);\n      return () => {\n        this.items$.next(this.items$.value.filter(value => value !== item));\n      };\n    });\n  }\n  static {\n    this.ɵfac = function TuiPopoverService_Factory(__ngFactoryType__) {\n      i0.ɵɵinvalidFactory();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: TuiPopoverService,\n      factory: TuiPopoverService.ɵfac\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiPopoverService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined\n    }, {\n      type: undefined\n    }, {\n      type: undefined\n    }];\n  }, null);\n})();\nfunction tuiAsPopover(popover) {\n  return tuiProvide(TuiPopoverService, popover);\n}\n\n/// <reference types=\"@taiga-ui/tsconfig/ng-dev-mode\" />\n/// <reference types=\"@taiga-ui/tsconfig/ng-dev-mode\" />\nconst SCROLL_TIME = 300;\nfunction getX(elementOrWindow) {\n  return 'scrollX' in elementOrWindow ? elementOrWindow.scrollX : elementOrWindow.scrollLeft;\n}\nfunction getY(elementOrWindow) {\n  return 'scrollY' in elementOrWindow ? elementOrWindow.scrollY : elementOrWindow.scrollTop;\n}\nclass TuiScrollService {\n  constructor() {\n    this.performanceRef = inject(WA_PERFORMANCE);\n    this.animationFrame$ = inject(WA_ANIMATION_FRAME);\n    this.zone = inject(NgZone);\n  }\n  scroll$(elementOrWindow, scrollTop, scrollLeft = getX(elementOrWindow), duration = SCROLL_TIME) {\n    ngDevMode && console.assert(duration >= 0, 'duration cannot be negative');\n    ngDevMode && console.assert(scrollTop >= 0, 'scrollTop cannot be negative');\n    ngDevMode && console.assert(scrollLeft >= 0, 'scrollLeft cannot be negative');\n    const initialTop = getY(elementOrWindow);\n    const initialLeft = getX(elementOrWindow);\n    const deltaTop = scrollTop - initialTop;\n    const deltaLeft = scrollLeft - initialLeft;\n    const observable = !duration ? of([scrollTop, scrollLeft]) : defer(() => of(this.performanceRef.now())).pipe(switchMap(start => this.animationFrame$.pipe(map(now => now - start))), map(elapsed => tuiEaseInOutQuad(tuiClamp(elapsed / duration, 0, 1))), map(percent => [initialTop + deltaTop * percent, initialLeft + deltaLeft * percent]), takeUntil(timer(duration, tuiZonefreeScheduler(this.zone))), endWith([scrollTop, scrollLeft]));\n    return observable.pipe(tap(([scrollTop, scrollLeft]) => {\n      elementOrWindow.scrollTo?.(scrollLeft, scrollTop);\n    }));\n  }\n  static {\n    this.ɵfac = function TuiScrollService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiScrollService)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: TuiScrollService,\n      factory: TuiScrollService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiScrollService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nconst TUI_THEME_COLOR = tuiCreateTokenFromFactory(() => inject(Meta).getTag('name=\"theme-color\"')?.content ?? '');\nclass TuiThemeColorService {\n  constructor() {\n    this.current = inject(TUI_THEME_COLOR);\n    this.doc = inject(DOCUMENT);\n    this.meta = inject(Meta);\n    this.color = this.current;\n  }\n  get color() {\n    return this.current;\n  }\n  set color(content) {\n    this.current = content;\n    this.meta.updateTag({\n      name: 'theme-color',\n      content\n    });\n    this.doc.documentElement.style.setProperty('--tui-theme-color', content);\n  }\n  static {\n    this.ɵfac = function TuiThemeColorService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TuiThemeColorService)();\n    };\n  }\n  static {\n    this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: TuiThemeColorService,\n      factory: TuiThemeColorService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TuiThemeColorService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TUI_THEME_COLOR, TuiIdService, TuiPopoverService, TuiScrollService, TuiThemeColorService, tuiAsPopover, tuiInjectId };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMA,IAAM,qBAAN,MAAM,oBAAmB;AAAA,EACvB,cAAc;AACZ,SAAK,aAAa,OAAO,UAAU;AACnC,SAAK,OAAO,OAAO,MAAM;AACzB,SAAK,KAAK,iBAAiB;AAC3B,SAAK,qBAAqB;AAAA,EAC5B;AAAA,EACA,SAAS,SAAS;AAChB,SAAK,UAAU;AACf,UAAM,CAAC,EAAE,KAAK,YAAY,KAAK,IAAI,GAAG,sBAAsB,KAAK,UAAU,CAAC,EAAE,UAAU,MAAM,KAAK,iBAAiB,CAAC;AACrH,WAAO;AAAA,EACT;AAAA,EACA,mBAAmB;AACjB,SAAK,GAAG,oBAAoB,KAAK,SAAS,WAAW,KAAK,SAAS,UAAU,KAAK,qBAAqB,EAAE;AAAA,EAC3G;AAAA,EACA,OAAO;AACL,SAAK,OAAO,SAAS,2BAA2B,mBAAmB;AACjE,aAAO,KAAK,qBAAqB,qBAAoB;AAAA,IACvD;AAAA,EACF;AAAA,EACA,OAAO;AACL,SAAK,OAAyB,kBAAkB;AAAA,MAC9C,MAAM;AAAA,MACN,WAAW,CAAC,CAAC,IAAI,sBAAsB,EAAE,CAAC;AAAA,MAC1C,cAAc,SAAS,gCAAgC,IAAI,KAAK;AAC9D,YAAI,KAAK,GAAG;AACV,UAAG,WAAW,YAAY,SAAS,iDAAiD;AAClF,mBAAO,IAAI,iBAAiB;AAAA,UAC9B,CAAC;AAAA,QACH;AAAA,MACF;AAAA,MACA,QAAQ;AAAA,QACN,oBAAoB;AAAA,MACtB;AAAA,MACA,YAAY;AAAA,MACZ,UAAU,CAAI,mBAAmB,CAAC,WAAW,eAAe,qBAAoB,IAAI,CAAC,CAAC,CAAC;AAAA,IACzF,CAAC;AAAA,EACH;AACF;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,oBAAoB,CAAC;AAAA,IAC3F,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,YAAY;AAAA,MACZ,UAAU;AAAA,MACV,WAAW,CAAC,WAAW,eAAe,oBAAoB,IAAI,CAAC;AAAA,MAC/D,MAAM;AAAA,QACJ,cAAc;AAAA,MAChB;AAAA,IACF,CAAC;AAAA,EACH,CAAC,GAAG,MAAM;AAAA,IACR,oBAAoB,CAAC;AAAA,MACnB,MAAM;AAAA,IACR,CAAC;AAAA,EACH,CAAC;AACH,GAAG;;;AClDH,IAAM,eAAN,MAAM,cAAa;AAAA,EACjB,OAAO;AACL,SAAK,SAAS;AAAA,EAChB;AAAA,EACA,WAAW;AACT,WAAO,OAAO,cAAa,QAAQ,GAAG,KAAK,IAAI,CAAC;AAAA,EAClD;AAAA,EACA,OAAO;AACL,SAAK,OAAO,SAAS,qBAAqB,mBAAmB;AAC3D,aAAO,KAAK,qBAAqB,eAAc;AAAA,IACjD;AAAA,EACF;AAAA,EACA,OAAO;AACL,SAAK,QAA0B,mBAAmB;AAAA,MAChD,OAAO;AAAA,MACP,SAAS,cAAa;AAAA,MACtB,YAAY;AAAA,IACd,CAAC;AAAA,EACH;AACF;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,cAAc,CAAC;AAAA,IACrF,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,YAAY;AAAA,IACd,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AACH,SAAS,cAAc;AACrB,SAAO,OAAO,YAAY,EAAE,SAAS;AACvC;AACA,IAAM,oBAAN,MAAM,mBAAkB;AAAA,EACtB,YAAY,OAAO,WAAW,UAAU,CAAC,GAAG;AAC1C,SAAK,UAAU;AACf,SAAK,KAAK,OAAO,YAAY;AAC7B,SAAK,YAAY,IAAI,sBAAsB,SAAS;AACpD,SAAK,SAAS,OAAO,KAAK;AAAA,EAC5B;AAAA,EACA,KAAK,SAAS,UAAU,CAAC,GAAG;AAC1B,WAAO,IAAI,WAAW,cAAY;AAChC,YAAM,OAAO,gDACR,KAAK,UACL,UAFQ;AAAA,QAGX;AAAA,QACA,WAAW;AAAA,QACX,WAAW,KAAK;AAAA,QAChB,WAAW,KAAK,IAAI;AAAA,QACpB,IAAI,KAAK,GAAG,SAAS;AAAA,QACrB,cAAc,YAAU;AACtB,mBAAS,KAAK,MAAM;AACpB,mBAAS,SAAS;AAAA,QACpB;AAAA,MACF;AACA,WAAK,OAAO,KAAK,CAAC,GAAG,KAAK,OAAO,OAAO,IAAI,CAAC;AAC7C,aAAO,MAAM;AACX,aAAK,OAAO,KAAK,KAAK,OAAO,MAAM,OAAO,WAAS,UAAU,IAAI,CAAC;AAAA,MACpE;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EACA,OAAO;AACL,SAAK,OAAO,SAAS,0BAA0B,mBAAmB;AAChE,MAAG,iBAAiB;AAAA,IACtB;AAAA,EACF;AAAA,EACA,OAAO;AACL,SAAK,QAA0B,mBAAmB;AAAA,MAChD,OAAO;AAAA,MACP,SAAS,mBAAkB;AAAA,IAC7B,CAAC;AAAA,EACH;AACF;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,mBAAmB,CAAC;AAAA,IAC1F,MAAM;AAAA,EACR,CAAC,GAAG,WAAY;AACd,WAAO,CAAC;AAAA,MACN,MAAM;AAAA,IACR,GAAG;AAAA,MACD,MAAM;AAAA,IACR,GAAG;AAAA,MACD,MAAM;AAAA,IACR,CAAC;AAAA,EACH,GAAG,IAAI;AACT,GAAG;AACH,SAAS,aAAa,SAAS;AAC7B,SAAO,WAAW,mBAAmB,OAAO;AAC9C;AAIA,IAAM,cAAc;AACpB,SAAS,KAAK,iBAAiB;AAC7B,SAAO,aAAa,kBAAkB,gBAAgB,UAAU,gBAAgB;AAClF;AACA,SAAS,KAAK,iBAAiB;AAC7B,SAAO,aAAa,kBAAkB,gBAAgB,UAAU,gBAAgB;AAClF;AACA,IAAM,mBAAN,MAAM,kBAAiB;AAAA,EACrB,cAAc;AACZ,SAAK,iBAAiB,OAAO,cAAc;AAC3C,SAAK,kBAAkB,OAAO,kBAAkB;AAChD,SAAK,OAAO,OAAO,MAAM;AAAA,EAC3B;AAAA,EACA,QAAQ,iBAAiB,WAAW,aAAa,KAAK,eAAe,GAAG,WAAW,aAAa;AAC9F,iBAAa,QAAQ,OAAO,YAAY,GAAG,6BAA6B;AACxE,iBAAa,QAAQ,OAAO,aAAa,GAAG,8BAA8B;AAC1E,iBAAa,QAAQ,OAAO,cAAc,GAAG,+BAA+B;AAC5E,UAAM,aAAa,KAAK,eAAe;AACvC,UAAM,cAAc,KAAK,eAAe;AACxC,UAAM,WAAW,YAAY;AAC7B,UAAM,YAAY,aAAa;AAC/B,UAAM,aAAa,CAAC,WAAW,GAAG,CAAC,WAAW,UAAU,CAAC,IAAI,MAAM,MAAM,GAAG,KAAK,eAAe,IAAI,CAAC,CAAC,EAAE,KAAK,UAAU,WAAS,KAAK,gBAAgB,KAAK,IAAI,SAAO,MAAM,KAAK,CAAC,CAAC,GAAG,IAAI,aAAW,iBAAiB,SAAS,UAAU,UAAU,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,aAAW,CAAC,aAAa,WAAW,SAAS,cAAc,YAAY,OAAO,CAAC,GAAG,UAAU,MAAM,UAAU,qBAAqB,KAAK,IAAI,CAAC,CAAC,GAAG,QAAQ,CAAC,WAAW,UAAU,CAAC,CAAC;AAC9a,WAAO,WAAW,KAAK,IAAI,CAAC,CAACA,YAAWC,WAAU,MAAM;AACtD,sBAAgB,WAAWA,aAAYD,UAAS;AAAA,IAClD,CAAC,CAAC;AAAA,EACJ;AAAA,EACA,OAAO;AACL,SAAK,OAAO,SAAS,yBAAyB,mBAAmB;AAC/D,aAAO,KAAK,qBAAqB,mBAAkB;AAAA,IACrD;AAAA,EACF;AAAA,EACA,OAAO;AACL,SAAK,QAA0B,mBAAmB;AAAA,MAChD,OAAO;AAAA,MACP,SAAS,kBAAiB;AAAA,MAC1B,YAAY;AAAA,IACd,CAAC;AAAA,EACH;AACF;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,kBAAkB,CAAC;AAAA,IACzF,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,YAAY;AAAA,IACd,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AACH,IAAM,kBAAkB,0BAA0B,MAAM,OAAO,IAAI,EAAE,OAAO,oBAAoB,GAAG,WAAW,EAAE;AAChH,IAAM,uBAAN,MAAM,sBAAqB;AAAA,EACzB,cAAc;AACZ,SAAK,UAAU,OAAO,eAAe;AACrC,SAAK,MAAM,OAAO,QAAQ;AAC1B,SAAK,OAAO,OAAO,IAAI;AACvB,SAAK,QAAQ,KAAK;AAAA,EACpB;AAAA,EACA,IAAI,QAAQ;AACV,WAAO,KAAK;AAAA,EACd;AAAA,EACA,IAAI,MAAM,SAAS;AACjB,SAAK,UAAU;AACf,SAAK,KAAK,UAAU;AAAA,MAClB,MAAM;AAAA,MACN;AAAA,IACF,CAAC;AACD,SAAK,IAAI,gBAAgB,MAAM,YAAY,qBAAqB,OAAO;AAAA,EACzE;AAAA,EACA,OAAO;AACL,SAAK,OAAO,SAAS,6BAA6B,mBAAmB;AACnE,aAAO,KAAK,qBAAqB,uBAAsB;AAAA,IACzD;AAAA,EACF;AAAA,EACA,OAAO;AACL,SAAK,QAA0B,mBAAmB;AAAA,MAChD,OAAO;AAAA,MACP,SAAS,sBAAqB;AAAA,MAC9B,YAAY;AAAA,IACd,CAAC;AAAA,EACH;AACF;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,sBAAsB,CAAC;AAAA,IAC7F,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,YAAY;AAAA,IACd,CAAC;AAAA,EACH,CAAC,GAAG,WAAY;AACd,WAAO,CAAC;AAAA,EACV,GAAG,IAAI;AACT,GAAG;",
  "names": ["scrollTop", "scrollLeft"]
}
