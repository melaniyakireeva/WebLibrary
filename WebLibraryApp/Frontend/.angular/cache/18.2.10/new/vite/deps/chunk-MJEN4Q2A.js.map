{
  "version": 3,
  "sources": ["../../../../../../node_modules/@taiga-ui/kit/fesm2022/taiga-ui-kit-tokens.mjs"],
  "sourcesContent": ["import { Optional, Self, inject } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { tuiControlValue } from '@taiga-ui/cdk/observables';\nimport { tuiCreateToken, tuiCreateTokenFromFactory, tuiProvideOptions } from '@taiga-ui/cdk/utils/miscellaneous';\nimport { map, of } from 'rxjs';\nimport { tuiExtractI18n } from '@taiga-ui/i18n/utils';\nimport { TUI_FIRST_DAY, TUI_LAST_DAY } from '@taiga-ui/cdk/date-time';\nimport { TUI_DEFAULT_IDENTITY_MATCHER, TUI_FALSE_HANDLER } from '@taiga-ui/cdk/constants';\nimport { TUI_IS_MOBILE } from '@taiga-ui/cdk/tokens';\nimport { TUI_DROPDOWN_COMPONENT } from '@taiga-ui/core/directives/dropdown';\n\n/**\n * Stream that emits calendar data change\n */\nconst TUI_CALENDAR_DATE_STREAM = tuiCreateToken();\nfunction tuiDateStreamWithTransformer(transformer) {\n  return {\n    provide: TUI_CALENDAR_DATE_STREAM,\n    deps: [[new Optional(), new Self(), NgControl], [new Optional(), transformer]],\n    useFactory: tuiControlValueFactory\n  };\n}\nfunction tuiControlValueFactory(control, transformer) {\n  return control ? tuiControlValue(control).pipe(map(value => transformer ? transformer?.fromControlValue(value) : value)) : of(null);\n}\n\n// TODO: Refactor to use `TuiValueTransformer` and add ability to provide it for all controls\n/**\n * Control value transformer of TuiDay to custom value format for InputDate* components\n */\nconst TUI_DATE_VALUE_TRANSFORMER = tuiCreateToken();\n/**\n * Control value transformer for InputDateRange component\n */\nconst TUI_DATE_RANGE_VALUE_TRANSFORMER = tuiCreateToken();\n/**\n * Control value transformer for InputDateTime component\n */\nconst TUI_DATE_TIME_VALUE_TRANSFORMER = tuiCreateToken();\n/**\n * Control value transformer for InputTime component\n */\nconst TUI_TIME_VALUE_TRANSFORMER = tuiCreateToken();\nconst TUI_CONFIRM_WORDS = tuiCreateTokenFromFactory(tuiExtractI18n('confirm'));\nconst TUI_CANCEL_WORD = tuiCreateTokenFromFactory(tuiExtractI18n('cancel'));\nconst TUI_DONE_WORD = tuiCreateTokenFromFactory(tuiExtractI18n('done'));\nconst TUI_MORE_WORD = tuiCreateTokenFromFactory(tuiExtractI18n('more'));\nconst TUI_HIDE_TEXT = tuiCreateTokenFromFactory(tuiExtractI18n('hide'));\nconst TUI_SHOW_ALL_TEXT = tuiCreateTokenFromFactory(tuiExtractI18n('showAll'));\nconst TUI_OTHER_DATE_TEXT = tuiCreateTokenFromFactory(tuiExtractI18n('otherDate'));\nconst TUI_CHOOSE_DAY_OR_RANGE_TEXTS = tuiCreateTokenFromFactory(tuiExtractI18n('mobileCalendarTexts'));\nconst TUI_FROM_TO_TEXTS = tuiCreateTokenFromFactory(tuiExtractI18n('range'));\nconst TUI_PLUS_MINUS_TEXTS = tuiCreateTokenFromFactory(tuiExtractI18n('countTexts'));\nconst TUI_TIME_TEXTS = tuiCreateTokenFromFactory(tuiExtractI18n('time'));\nconst TUI_DATE_TEXTS = tuiCreateTokenFromFactory(tuiExtractI18n('dateTexts'));\nconst TUI_DIGITAL_INFORMATION_UNITS = tuiCreateTokenFromFactory(tuiExtractI18n('digitalInformationUnits'));\nconst TUI_COPY_TEXTS = tuiCreateTokenFromFactory(tuiExtractI18n('copyTexts'));\nconst TUI_PASSWORD_TEXTS = tuiCreateTokenFromFactory(tuiExtractI18n('passwordTexts'));\nconst TUI_CALENDAR_MONTHS = tuiCreateTokenFromFactory(tuiExtractI18n('shortCalendarMonths'));\nconst TUI_FILE_TEXTS = tuiCreateTokenFromFactory(tuiExtractI18n('fileTexts'));\nconst TUI_PAGINATION_TEXTS = tuiCreateTokenFromFactory(tuiExtractI18n('pagination'));\nconst TUI_INPUT_FILE_TEXTS = tuiCreateTokenFromFactory(tuiExtractI18n('inputFileTexts'));\nconst TUI_MULTI_SELECT_TEXTS = tuiCreateTokenFromFactory(tuiExtractI18n('multiSelectTexts'));\nconst TUI_COUNTRIES = tuiCreateTokenFromFactory(tuiExtractI18n('countries'));\nconst TUI_PREVIEW_TEXTS = tuiCreateTokenFromFactory(tuiExtractI18n('previewTexts'));\nconst TUI_PREVIEW_ZOOM_TEXTS = tuiCreateTokenFromFactory(tuiExtractI18n('zoomTexts'));\nconst TUI_INTERNATIONAL_SEARCH = tuiCreateTokenFromFactory(tuiExtractI18n('phoneSearch'));\nconst TUI_INPUT_DATE_DEFAULT_OPTIONS = {\n  icon: () => '@tui.calendar',\n  min: TUI_FIRST_DAY,\n  max: TUI_LAST_DAY,\n  nativePicker: false\n};\n/**\n * Default parameters for InputDate component\n */\nconst TUI_INPUT_DATE_OPTIONS = tuiCreateToken(TUI_INPUT_DATE_DEFAULT_OPTIONS);\nfunction tuiInputDateOptionsProvider(options) {\n  return tuiProvideOptions(TUI_INPUT_DATE_OPTIONS, options, TUI_INPUT_DATE_DEFAULT_OPTIONS);\n}\nconst TUI_DEFAULT_ITEMS_HANDLERS = {\n  stringify: String,\n  identityMatcher: TUI_DEFAULT_IDENTITY_MATCHER,\n  disabledItemHandler: TUI_FALSE_HANDLER\n};\n/**\n * Default items handlers for components\n */\nconst TUI_ITEMS_HANDLERS = tuiCreateToken(TUI_DEFAULT_ITEMS_HANDLERS);\nfunction tuiItemsHandlersProvider(options) {\n  return tuiProvideOptions(TUI_ITEMS_HANDLERS, options, TUI_DEFAULT_ITEMS_HANDLERS);\n}\n\n/**\n * A component for mobile data picker\n */\nconst TUI_MOBILE_CALENDAR = tuiCreateToken();\nconst TUI_MOBILE_CALENDAR_PROVIDER = {\n  provide: TUI_DROPDOWN_COMPONENT,\n  useFactory: () => inject(TUI_IS_MOBILE) && inject(TUI_MOBILE_CALENDAR, {\n    optional: true\n  }) || inject(TUI_DROPDOWN_COMPONENT, {\n    skipSelf: true\n  })\n};\nconst TUI_PREVIEW_ICONS_DEFAULT = {\n  rotate: '@tui.rotate-ccw-square',\n  prev: '@tui.arrow-left',\n  next: '@tui.arrow-right',\n  zoomIn: '@tui.plus',\n  zoomOut: '@tui.minus',\n  zoomReset: '@tui.minimize'\n};\nconst TUI_PREVIEW_ICONS = tuiCreateToken(TUI_PREVIEW_ICONS_DEFAULT);\nfunction tuiPreviewIconsProvider(icons) {\n  return tuiProvideOptions(TUI_PREVIEW_ICONS, icons, TUI_PREVIEW_ICONS_DEFAULT);\n}\nconst TUI_VALIDATION_ERRORS = tuiCreateToken({});\nconst tuiValidationErrorsProvider = useValue => ({\n  provide: TUI_VALIDATION_ERRORS,\n  useValue\n});\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TUI_CALENDAR_DATE_STREAM, TUI_CALENDAR_MONTHS, TUI_CANCEL_WORD, TUI_CHOOSE_DAY_OR_RANGE_TEXTS, TUI_CONFIRM_WORDS, TUI_COPY_TEXTS, TUI_COUNTRIES, TUI_DATE_RANGE_VALUE_TRANSFORMER, TUI_DATE_TEXTS, TUI_DATE_TIME_VALUE_TRANSFORMER, TUI_DATE_VALUE_TRANSFORMER, TUI_DEFAULT_ITEMS_HANDLERS, TUI_DIGITAL_INFORMATION_UNITS, TUI_DONE_WORD, TUI_FILE_TEXTS, TUI_FROM_TO_TEXTS, TUI_HIDE_TEXT, TUI_INPUT_DATE_DEFAULT_OPTIONS, TUI_INPUT_DATE_OPTIONS, TUI_INPUT_FILE_TEXTS, TUI_INTERNATIONAL_SEARCH, TUI_ITEMS_HANDLERS, TUI_MOBILE_CALENDAR, TUI_MOBILE_CALENDAR_PROVIDER, TUI_MORE_WORD, TUI_MULTI_SELECT_TEXTS, TUI_OTHER_DATE_TEXT, TUI_PAGINATION_TEXTS, TUI_PASSWORD_TEXTS, TUI_PLUS_MINUS_TEXTS, TUI_PREVIEW_ICONS, TUI_PREVIEW_ICONS_DEFAULT, TUI_PREVIEW_TEXTS, TUI_PREVIEW_ZOOM_TEXTS, TUI_SHOW_ALL_TEXT, TUI_TIME_TEXTS, TUI_TIME_VALUE_TRANSFORMER, TUI_VALIDATION_ERRORS, tuiDateStreamWithTransformer, tuiInputDateOptionsProvider, tuiItemsHandlersProvider, tuiPreviewIconsProvider, tuiValidationErrorsProvider };\n"],
  "mappings": "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",
  "names": []
}
