{
  "version": 3,
  "sources": ["../../../../../../node_modules/@taiga-ui/polymorpheus/fesm2022/taiga-ui-polymorpheus.mjs"],
  "sourcesContent": ["import * as i0 from '@angular/core';\nimport { InjectionToken, inject, Injector, TemplateRef, ChangeDetectorRef, Directive, ViewContainerRef, INJECTOR, Input } from '@angular/core';\n\n/**\n * Use this token to access context within your components when\n * instantiating them through {@link PolymorpheusOutlet}\n */\nconst POLYMORPHEUS_CONTEXT = new InjectionToken('');\nfunction injectContext(options = {}) {\n  return inject(POLYMORPHEUS_CONTEXT, options);\n}\n\n/**\n * Wrapper class for a component that will be used as content for {@link PolymorpheusOutlet}\n *\n * @param component — an Angular component to be dynamically created\n * @param injector — optional {@link Injector} for lazy loaded module case\n */\nclass PolymorpheusComponent {\n  constructor(component, i) {\n    this.component = component;\n    this.i = i;\n  }\n  createInjector(injector, useValue) {\n    return Injector.create({\n      parent: this.i || injector,\n      providers: [{\n        provide: POLYMORPHEUS_CONTEXT,\n        useValue\n      }]\n    });\n  }\n}\nclass PolymorpheusContext {\n  constructor($implicit) {\n    this.$implicit = $implicit;\n  }\n  get polymorpheusOutlet() {\n    return this.$implicit;\n  }\n}\n/**\n * @deprecated: use {@link PolymorpheusContext} instead\n * Primitive types used as content by {@link PolymorpheusOutlet}\n */\nclass PrimitiveContext extends PolymorpheusContext {}\n\n/**\n * ng-template wrapper directive also stores {@link ChangeDetectorRef} to properly handle change detection.\n */\nclass PolymorpheusTemplate {\n  constructor(template = inject(TemplateRef, {\n    self: true\n  }), cdr = inject(ChangeDetectorRef)) {\n    this.template = template;\n    this.cdr = cdr;\n    this.polymorpheus = '';\n  }\n  static ngTemplateContextGuard(_dir, _ctx) {\n    return true;\n  }\n  check() {\n    this.cdr.markForCheck();\n  }\n  /** @nocollapse */\n  static {\n    this.ɵfac = function PolymorpheusTemplate_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || PolymorpheusTemplate)(i0.ɵɵdirectiveInject(i0.TemplateRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: PolymorpheusTemplate,\n      selectors: [[\"ng-template\", \"polymorpheus\", \"\"]],\n      inputs: {\n        polymorpheus: \"polymorpheus\"\n      },\n      exportAs: [\"polymorpheus\"],\n      standalone: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PolymorpheusTemplate, [{\n    type: Directive,\n    args: [{\n      standalone: true,\n      selector: 'ng-template[polymorpheus]',\n      inputs: ['polymorpheus'],\n      exportAs: 'polymorpheus'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, null);\n})();\nclass PolymorpheusOutlet {\n  constructor() {\n    this.vcr = inject(ViewContainerRef);\n    this.i = inject(INJECTOR);\n    this.t = inject(TemplateRef);\n    this.content = '';\n  }\n  static ngTemplateContextGuard(_dir, _ctx) {\n    return true;\n  }\n  ngOnChanges({\n    content\n  }) {\n    const context = this.getContext();\n    this.c?.injector.get(ChangeDetectorRef).markForCheck();\n    if (!content) {\n      return;\n    }\n    this.vcr.clear();\n    const proxy = context && new Proxy(context, {\n      get: (_, key) => this.getContext()?.[key]\n    });\n    if (isComponent(this.content)) {\n      this.process(this.content, proxy);\n    } else if ((context instanceof PolymorpheusContext && context.$implicit) != null) {\n      this.vcr.createEmbeddedView(this.template, proxy, {\n        injector: this.i\n      });\n    }\n  }\n  ngDoCheck() {\n    if (isDirective(this.content)) {\n      this.content.check();\n    }\n  }\n  get template() {\n    if (isDirective(this.content)) {\n      return this.content.template;\n    }\n    return this.content instanceof TemplateRef ? this.content : this.t;\n  }\n  getContext() {\n    if (isTemplate(this.content) || isComponent(this.content)) {\n      return this.context;\n    }\n    return new PolymorpheusContext(this.context && typeof this.content === 'function' ? this.content(this.context) : this.content);\n  }\n  process(content, proxy) {\n    const injector = content.createInjector(this.i, proxy);\n    this.c = this.vcr.createComponent(content.component, {\n      injector\n    });\n  }\n  /** @nocollapse */\n  static {\n    this.ɵfac = function PolymorpheusOutlet_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || PolymorpheusOutlet)();\n    };\n  }\n  /** @nocollapse */\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: PolymorpheusOutlet,\n      selectors: [[\"\", \"polymorpheusOutlet\", \"\"]],\n      inputs: {\n        content: [0, \"polymorpheusOutlet\", \"content\"],\n        context: [0, \"polymorpheusOutletContext\", \"context\"]\n      },\n      standalone: true,\n      features: [i0.ɵɵNgOnChangesFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PolymorpheusOutlet, [{\n    type: Directive,\n    args: [{\n      standalone: true,\n      selector: '[polymorpheusOutlet]'\n    }]\n  }], null, {\n    content: [{\n      type: Input,\n      args: ['polymorpheusOutlet']\n    }],\n    context: [{\n      type: Input,\n      args: ['polymorpheusOutletContext']\n    }]\n  });\n})();\nfunction isDirective(content) {\n  return content instanceof PolymorpheusTemplate;\n}\nfunction isComponent(content) {\n  return content instanceof PolymorpheusComponent;\n}\nfunction isTemplate(content) {\n  return isDirective(content) || content instanceof TemplateRef;\n}\n\n/**\n * Public API Surface of ng-polymorpheus\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { POLYMORPHEUS_CONTEXT, PolymorpheusComponent, PolymorpheusOutlet, PolymorpheusTemplate, injectContext };\n"],
  "mappings": "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",
  "names": []
}
