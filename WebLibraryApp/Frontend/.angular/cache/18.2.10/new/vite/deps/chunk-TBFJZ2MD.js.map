{
  "version": 3,
  "sources": ["../../../../../../node_modules/@taiga-ui/cdk/fesm2022/taiga-ui-cdk-utils-dom.mjs"],
  "sourcesContent": ["import { tuiClamp } from '@taiga-ui/cdk/utils/math';\nimport { tuiIsPresent } from '@taiga-ui/cdk/utils/miscellaneous';\nimport { inject, ElementRef } from '@angular/core';\nfunction tuiContainsOrAfter(current, node) {\n  try {\n    return current.contains(node) || !!(node.compareDocumentPosition(current) & Node.DOCUMENT_POSITION_PRECEDING);\n  } catch {\n    return false;\n  }\n}\nfunction tuiIsInput(element) {\n  return element.matches('input');\n}\nfunction tuiIsTextarea(element) {\n  return element.matches('textarea');\n}\nfunction tuiIsTextfield(element) {\n  return tuiIsInput(element) || tuiIsTextarea(element);\n}\nfunction tuiIsElement(node) {\n  return !!node && 'nodeType' in node && node.nodeType === Node.ELEMENT_NODE;\n}\nfunction tuiIsHTMLElement(node) {\n  const defaultView = node?.ownerDocument.defaultView;\n  return !!node && !!defaultView && node instanceof defaultView.HTMLElement;\n}\nfunction tuiIsTextNode(node) {\n  return node.nodeType === Node.TEXT_NODE;\n}\nfunction tuiIsInputEvent(event) {\n  return 'data' in event && 'inputType' in event;\n}\n\n/**\n * Gets actual target from open Shadow DOM if event happened within it\n */\nfunction tuiGetActualTarget(event) {\n  return event.composedPath()[0];\n}\nconst DEFAULT_FORMAT = 'text/plain';\n/**\n * Gets text from data of clipboardEvent, it also works in IE and Edge browsers\n */\nfunction tuiGetClipboardDataText(event, format = DEFAULT_FORMAT) {\n  return 'clipboardData' in event && event.clipboardData !== null ? event.clipboardData.getData(format) || event.clipboardData.getData(DEFAULT_FORMAT) : event.target.ownerDocument.defaultView.clipboardData.getData('text');\n}\nfunction tuiGetDocumentOrShadowRoot(node) {\n  return 'getRootNode' in node && node.isConnected ? node.getRootNode() : node.ownerDocument;\n}\n\n/**\n * Returns array of Elements covering edges of given element or null if at least one edge middle point is visible\n *\n * CAUTION: Empty array means element if offscreen i.e. covered by no elements, rather than not covered\n * ```ts\n * function tuiGetElementObscures(element: Element): readonly [Element, Element, Element, Element] | [] | null\n * ```\n */\nfunction tuiGetElementObscures(element) {\n  const {\n    ownerDocument\n  } = element;\n  if (!ownerDocument?.defaultView || !element.getBoundingClientRect) {\n    return null;\n  }\n  const {\n    innerWidth,\n    innerHeight\n  } = ownerDocument.defaultView;\n  const doc = tuiGetDocumentOrShadowRoot(element);\n  const rect = element.getBoundingClientRect();\n  if (rect.width === 0 && rect.height === 0) {\n    return null;\n  }\n  const left = tuiClamp(Math.round(rect.left) + 2, 0, innerWidth);\n  const top = tuiClamp(Math.round(rect.top) + 2, 0, innerHeight);\n  const right = tuiClamp(Math.round(rect.right) - 2, 0, innerWidth);\n  const bottom = tuiClamp(Math.round(rect.bottom) - 2, 0, innerHeight);\n  const horizontalMiddle = tuiClamp(Math.round(rect.left + rect.width / 2), 0, innerWidth);\n  const verticalMiddle = tuiClamp(Math.round(rect.top + rect.height / 2), 0, innerHeight);\n  const elements = [doc.elementFromPoint(horizontalMiddle, top), doc.elementFromPoint(horizontalMiddle, bottom), doc.elementFromPoint(left, verticalMiddle), doc.elementFromPoint(right, verticalMiddle)];\n  const nonNull = elements.filter(tuiIsPresent);\n  if (!nonNull.length) {\n    return [];\n  }\n  const filtered = nonNull.filter(el => !element.contains(el) && !el.contains(element));\n  return filtered.length === 4 ? filtered : null;\n}\n\n/// <reference types=\"@taiga-ui/tsconfig/ng-dev-mode\" />\n/**\n * Calculates offset for an element relative to it's parent several levels above\n *\n * @param host parent element\n * @param element\n * @return object with offsetTop and offsetLeft number properties\n */\nfunction tuiGetElementOffset(host, element) {\n  ngDevMode && console.assert(host.contains(element), 'Host must contain element');\n  let {\n    offsetTop,\n    offsetLeft,\n    offsetParent\n  } = element;\n  while (tuiIsHTMLElement(offsetParent) && offsetParent !== host) {\n    offsetTop += offsetParent.offsetTop;\n    offsetLeft += offsetParent.offsetLeft;\n    offsetParent = offsetParent.offsetParent;\n  }\n  return {\n    offsetTop,\n    offsetLeft\n  };\n}\nfunction tuiGetElementPoint(x, y, element) {\n  const {\n    left,\n    top,\n    width,\n    height\n  } = element.getBoundingClientRect();\n  return [tuiClamp(x - left, 0, width) / width, tuiClamp(y - top, 0, height) / height];\n}\n\n/**\n * @description:\n * cross browser way to get selected text\n *\n * History:\n * BUG - window.getSelection() fails when text selected in a form field\n * https://bugzilla.mozilla.org/show_bug.cgi?id=85686\n */\nfunction tuiGetSelectedText({\n  getSelection,\n  document\n}) {\n  return document.activeElement && tuiIsTextfield(document.activeElement) ? document.activeElement.value.slice(document.activeElement.selectionStart || 0, document.activeElement.selectionEnd || 0) : getSelection()?.toString() || null;\n}\nfunction tuiInjectElement() {\n  return inject(ElementRef).nativeElement;\n}\nfunction tuiIsCurrentTarget({\n  target,\n  currentTarget\n}) {\n  return target === currentTarget;\n}\nfunction tuiIsElementEditable(element) {\n  return tuiIsTextfield(element) && !element.readOnly || !!element.isContentEditable;\n}\n\n/**\n * Checks if an app is running inside <iframe /> tag\n */\nfunction tuiIsInsideIframe(win) {\n  return win.parent !== win;\n}\n\n/**\n * Checks if node is inside a specific selector\n *\n * @param node\n * @param selector\n * @return true if node is inside a particular selector\n */\nfunction tuiIsNodeIn(node, selector) {\n  return tuiIsTextNode(node) ? !!node.parentElement?.closest(selector) : tuiIsElement(node) && !!node.closest(selector);\n}\nfunction tuiPointToClientRect(x = 0, y = 0) {\n  const rect = {\n    x,\n    y,\n    left: x,\n    right: x,\n    top: y,\n    bottom: y,\n    width: 0,\n    height: 0\n  };\n  return {\n    ...rect,\n    toJSON: () => rect\n  };\n}\nfunction tuiRetargetedBoundaryCrossing(event) {\n  // firefox\n  if ('explicitOriginalTarget' in event) {\n    return event?.explicitOriginalTarget !== event.target;\n  }\n  // chrome\n  if ('pointerId' in event) {\n    return event.pointerId === -1;\n  }\n  // safari\n  if ('detail' in event && 'webkitForce' in event) {\n    return event?.detail === 0;\n  }\n  return false;\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { tuiContainsOrAfter, tuiGetActualTarget, tuiGetClipboardDataText, tuiGetDocumentOrShadowRoot, tuiGetElementObscures, tuiGetElementOffset, tuiGetElementPoint, tuiGetSelectedText, tuiInjectElement, tuiIsCurrentTarget, tuiIsElement, tuiIsElementEditable, tuiIsHTMLElement, tuiIsInput, tuiIsInputEvent, tuiIsInsideIframe, tuiIsNodeIn, tuiIsTextNode, tuiIsTextarea, tuiIsTextfield, tuiPointToClientRect, tuiRetargetedBoundaryCrossing };\n"],
  "mappings": "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",
  "names": []
}
