{"version":3,"file":"taiga-ui-core-pipes-flag.mjs","sources":["../../../projects/core/pipes/flag/flag.pipe.ts","../../../projects/core/pipes/flag/taiga-ui-core-pipes-flag.ts"],"sourcesContent":["import type {PipeTransform} from '@angular/core';\nimport {inject, Pipe} from '@angular/core';\nimport type {TuiLooseUnion} from '@taiga-ui/cdk/types';\nimport {TUI_ASSETS_PATH} from '@taiga-ui/core/tokens';\nimport type {TuiCountryIsoCode} from '@taiga-ui/i18n/types';\n\ntype IsoCode = TuiLooseUnion<TuiCountryIsoCode>;\n\n// TODO: Move to kit in v5\n@Pipe({\n    standalone: true,\n    name: 'tuiFlag',\n})\nexport class TuiFlagPipe implements PipeTransform {\n    private readonly staticPath = inject(TUI_ASSETS_PATH);\n\n    public transform(countryIsoCode: IsoCode): string;\n    public transform(countryIsoCode: IsoCode | undefined): string | null;\n    public transform(countryIsoCode?: IsoCode | null): string | null;\n    public transform(countryIsoCode?: IsoCode | null): string | null {\n        if (!countryIsoCode) {\n            return null;\n        }\n\n        return `${this.staticPath}/flags/${countryIsoCode.toLowerCase()}.svg`;\n    }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":";;;;AAQA;AACA,MAIa,WAAW,CAAA;AAJxB,IAAA,WAAA,GAAA;AAKqB,QAAA,IAAA,CAAA,UAAU,GAAG,MAAM,CAAC,eAAe,CAAC,CAAC;AAYzD,KAAA;AAPU,IAAA,SAAS,CAAC,cAA+B,EAAA;QAC5C,IAAI,CAAC,cAAc,EAAE;AACjB,YAAA,OAAO,IAAI,CAAC;AACf,SAAA;QAED,OAAO,CAAA,EAAG,IAAI,CAAC,UAAU,CAAA,OAAA,EAAU,cAAc,CAAC,WAAW,EAAE,CAAA,IAAA,CAAM,CAAC;KACzE;+GAZQ,WAAW,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,IAAA,EAAA,CAAA,CAAA,EAAA;6GAAX,WAAW,EAAA,YAAA,EAAA,IAAA,EAAA,IAAA,EAAA,SAAA,EAAA,CAAA,CAAA,EAAA;;4FAAX,WAAW,EAAA,UAAA,EAAA,CAAA;kBAJvB,IAAI;AAAC,YAAA,IAAA,EAAA,CAAA;AACF,oBAAA,UAAU,EAAE,IAAI;AAChB,oBAAA,IAAI,EAAE,SAAS;AAClB,iBAAA,CAAA;;;ACZD;;AAEG;;;;"}