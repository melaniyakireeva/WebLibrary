import { AsyncPipe, NgIf } from '@angular/common';
import { ChangeDetectionStrategy, Component, computed, inject } from '@angular/core';
import { takeUntilDestroyed, toSignal } from '@angular/core/rxjs-interop';
import { TUI_TRUE_HANDLER } from '@taiga-ui/cdk/constants';
import { TuiAutoFocus } from '@taiga-ui/cdk/directives/auto-focus';
import { tuiFadeIn, tuiSlideInTop } from '@taiga-ui/core/animations';
import { TuiButton } from '@taiga-ui/core/components/button';
import { TuiBreakpointService } from '@taiga-ui/core/services';
import { TUI_ANIMATIONS_SPEED, TUI_CLOSE_WORD, TUI_COMMON_ICONS, } from '@taiga-ui/core/tokens';
import { tuiGetDuration } from '@taiga-ui/core/utils';
import { injectContext, PolymorpheusOutlet } from '@taiga-ui/polymorpheus';
import { filter, isObservable, map, merge, of, Subject, switchMap } from 'rxjs';
import { TUI_DIALOGS_CLOSE } from './dialog.tokens';
import { TuiDialogCloseService } from './dialog-close.service';
import * as i0 from "@angular/core";
const REQUIRED_ERROR = new Error('Required dialog was dismissed');
function toObservable(valueOrStream) {
    return isObservable(valueOrStream) ? valueOrStream : of(valueOrStream);
}
class TuiDialogComponent {
    constructor() {
        this.speed = inject(TUI_ANIMATIONS_SPEED);
        this.animation = {
            value: '',
            params: {
                start: '40px',
                duration: tuiGetDuration(this.speed),
            },
        };
        this.fullscreenAnimation = {
            value: '',
            params: {
                start: '100vh',
                duration: tuiGetDuration(this.speed),
            },
        };
        this.close$ = new Subject();
        this.context = injectContext();
        this.closeWord$ = inject(TUI_CLOSE_WORD);
        this.icons = inject(TUI_COMMON_ICONS);
        this.slideInTop = computed(() => this.size === 'fullscreen' || this.size === 'page' || this.isMobile()
            ? this.fullscreenAnimation
            : this.animation);
        this.isMobile = toSignal(inject(TuiBreakpointService).pipe(map((breakpoint) => breakpoint === 'mobile')));
        merge(this.close$.pipe(switchMap(() => toObservable(this.context.closeable))), inject(TuiDialogCloseService).pipe(switchMap(() => toObservable(this.context.dismissible))), inject(TUI_DIALOGS_CLOSE).pipe(map(TUI_TRUE_HANDLER)))
            .pipe(filter(Boolean), takeUntilDestroyed())
            .subscribe(() => {
            this.close();
        });
    }
    get size() {
        return this.context.size;
    }
    get header() {
        return this.context.header;
    }
    close() {
        if (this.context.required) {
            this.context.$implicit.error(REQUIRED_ERROR);
        }
        else {
            this.context.$implicit.complete();
        }
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiDialogComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: TuiDialogComponent, isStandalone: true, selector: "tui-dialog", host: { properties: { "@tuiSlideInTop": "slideInTop()", "@tuiFadeIn": "slideInTop()", "attr.data-appearance": "context.appearance", "attr.data-size": "size", "class._centered": "header" } }, providers: [TuiDialogCloseService], ngImport: i0, template: "<header\n    *ngIf=\"header\"\n    class=\"t-header\"\n>\n    <ng-container *polymorpheusOutlet=\"header as text; context: context\">\n        {{ text }}\n    </ng-container>\n</header>\n<div class=\"t-content\">\n    <h2\n        class=\"t-heading\"\n        [id]=\"context.id\"\n        [textContent]=\"context.label\"\n    ></h2>\n    <section>\n        <ng-container *polymorpheusOutlet=\"context.content as text; context: context\">\n            <div [innerHTML]=\"text\"></div>\n            <div class=\"t-buttons\">\n                <button\n                    size=\"m\"\n                    tuiAutoFocus\n                    tuiButton\n                    type=\"button\"\n                    (click)=\"context.$implicit.complete()\"\n                >\n                    {{ context.data?.button || 'OK' }}\n                </button>\n            </div>\n        </ng-container>\n    </section>\n</div>\n<div class=\"t-filler\"></div>\n\n<!-- Close button is insensitive to `context.closeable === Observable<false>` by design -->\n<div\n    *ngIf=\"context.closeable\"\n    class=\"t-wrapper\"\n>\n    <button\n        automation-id=\"tui-dialog__close\"\n        tuiIconButton\n        type=\"button\"\n        class=\"t-close\"\n        [appearance]=\"isMobile() ? 'icon' : 'neutral'\"\n        [iconStart]=\"icons.close\"\n        [size]=\"isMobile() ? 'xs' : 's'\"\n        [style.border-radius.%]=\"100\"\n        (click)=\"close$.next()\"\n        (mousedown.prevent.silent)=\"(0)\"\n    >\n        {{ closeWord$ | async }}\n    </button>\n</div>\n", styles: [":host{position:relative;display:flex;font:var(--tui-font-text-m);flex-direction:column;box-sizing:border-box;margin:auto;border-radius:1.5rem;border:2.5rem solid transparent}:host:after{position:absolute;top:0;left:0;inline-size:100%;block-size:100%;content:\"\";border-radius:inherit;pointer-events:none;box-shadow:var(--tui-shadow-popup)}:host[data-size=auto]{inline-size:auto}:host[data-size=s]{inline-size:30rem}:host[data-size=s] .t-content{padding:1.5rem}:host[data-size=s] .t-heading{font:var(--tui-font-heading-5)}:host[data-size=m]{inline-size:42.5rem}:host[data-size=l]{inline-size:55rem}:host[data-size=fullscreen],:host[data-size=page]{min-inline-size:100vw;min-block-size:100%;border-radius:0;border:none;background:var(--tui-background-elevation-1);box-shadow:0 4rem var(--tui-background-elevation-1)}:host[data-size=fullscreen] .t-content,:host[data-size=page] .t-content{padding:3rem calc(50vw - 22.5rem)}:host[data-size=fullscreen] .t-heading,:host[data-size=page] .t-heading{font:var(--tui-font-heading-3)}:host._centered{text-align:center}:host :host-context(tui-root._mobile)[data-size]{min-inline-size:100%;inline-size:100%;max-inline-size:100%;border-radius:0;border:none;margin:auto 0 0}:host :host-context(tui-root._mobile)[data-size] .t-content{padding:1rem}:host :host-context(tui-root._mobile)[data-size] .t-heading{font:var(--tui-font-heading-5)}:host[data-size=page] .t-content,:host-context(tui-root._mobile) :host[data-size=page] .t-content{padding:0}.t-heading{margin:0 0 .5rem;padding-inline-end:2rem;overflow-wrap:break-word;font:var(--tui-font-heading-4)}.t-heading:empty{display:none}.t-header{display:flex;border-top-left-radius:inherit;border-top-right-radius:inherit;overflow:hidden}:host[data-size=fullscreen] :host-context(tui-root._mobile) .t-header{flex:1}.t-content{border-radius:inherit;padding:1.75rem;background:var(--tui-background-elevation-1)}.t-content:not(:first-child){border-top-left-radius:0;border-top-right-radius:0}.t-wrapper{position:sticky;top:0;z-index:1;order:-1}.t-filler{flex-grow:1}.t-close{transition-property:background;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;position:absolute;top:1rem;right:1rem}.t-buttons{margin-top:1.25rem;text-align:end}\n"], dependencies: [{ kind: "pipe", type: AsyncPipe, name: "async" }, { kind: "directive", type: NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: PolymorpheusOutlet, selector: "[polymorpheusOutlet]", inputs: ["polymorpheusOutlet", "polymorpheusOutletContext"] }, { kind: "directive", type: TuiAutoFocus, selector: "[tuiAutoFocus]", inputs: ["tuiAutoFocus"] }, { kind: "directive", type: TuiButton, selector: "a[tuiButton],button[tuiButton],a[tuiIconButton],button[tuiIconButton]", inputs: ["size"] }], animations: [tuiSlideInTop, tuiFadeIn], changeDetection: i0.ChangeDetectionStrategy.Default }); }
}
export { TuiDialogComponent };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiDialogComponent, decorators: [{
            type: Component,
            args: [{ standalone: true, selector: 'tui-dialog', imports: [AsyncPipe, NgIf, PolymorpheusOutlet, TuiAutoFocus, TuiButton], changeDetection: ChangeDetectionStrategy.Default, providers: [TuiDialogCloseService], animations: [tuiSlideInTop, tuiFadeIn], host: {
                        '[@tuiSlideInTop]': 'slideInTop()',
                        '[@tuiFadeIn]': 'slideInTop()',
                        '[attr.data-appearance]': 'context.appearance',
                        '[attr.data-size]': 'size',
                        '[class._centered]': 'header',
                    }, template: "<header\n    *ngIf=\"header\"\n    class=\"t-header\"\n>\n    <ng-container *polymorpheusOutlet=\"header as text; context: context\">\n        {{ text }}\n    </ng-container>\n</header>\n<div class=\"t-content\">\n    <h2\n        class=\"t-heading\"\n        [id]=\"context.id\"\n        [textContent]=\"context.label\"\n    ></h2>\n    <section>\n        <ng-container *polymorpheusOutlet=\"context.content as text; context: context\">\n            <div [innerHTML]=\"text\"></div>\n            <div class=\"t-buttons\">\n                <button\n                    size=\"m\"\n                    tuiAutoFocus\n                    tuiButton\n                    type=\"button\"\n                    (click)=\"context.$implicit.complete()\"\n                >\n                    {{ context.data?.button || 'OK' }}\n                </button>\n            </div>\n        </ng-container>\n    </section>\n</div>\n<div class=\"t-filler\"></div>\n\n<!-- Close button is insensitive to `context.closeable === Observable<false>` by design -->\n<div\n    *ngIf=\"context.closeable\"\n    class=\"t-wrapper\"\n>\n    <button\n        automation-id=\"tui-dialog__close\"\n        tuiIconButton\n        type=\"button\"\n        class=\"t-close\"\n        [appearance]=\"isMobile() ? 'icon' : 'neutral'\"\n        [iconStart]=\"icons.close\"\n        [size]=\"isMobile() ? 'xs' : 's'\"\n        [style.border-radius.%]=\"100\"\n        (click)=\"close$.next()\"\n        (mousedown.prevent.silent)=\"(0)\"\n    >\n        {{ closeWord$ | async }}\n    </button>\n</div>\n", styles: [":host{position:relative;display:flex;font:var(--tui-font-text-m);flex-direction:column;box-sizing:border-box;margin:auto;border-radius:1.5rem;border:2.5rem solid transparent}:host:after{position:absolute;top:0;left:0;inline-size:100%;block-size:100%;content:\"\";border-radius:inherit;pointer-events:none;box-shadow:var(--tui-shadow-popup)}:host[data-size=auto]{inline-size:auto}:host[data-size=s]{inline-size:30rem}:host[data-size=s] .t-content{padding:1.5rem}:host[data-size=s] .t-heading{font:var(--tui-font-heading-5)}:host[data-size=m]{inline-size:42.5rem}:host[data-size=l]{inline-size:55rem}:host[data-size=fullscreen],:host[data-size=page]{min-inline-size:100vw;min-block-size:100%;border-radius:0;border:none;background:var(--tui-background-elevation-1);box-shadow:0 4rem var(--tui-background-elevation-1)}:host[data-size=fullscreen] .t-content,:host[data-size=page] .t-content{padding:3rem calc(50vw - 22.5rem)}:host[data-size=fullscreen] .t-heading,:host[data-size=page] .t-heading{font:var(--tui-font-heading-3)}:host._centered{text-align:center}:host :host-context(tui-root._mobile)[data-size]{min-inline-size:100%;inline-size:100%;max-inline-size:100%;border-radius:0;border:none;margin:auto 0 0}:host :host-context(tui-root._mobile)[data-size] .t-content{padding:1rem}:host :host-context(tui-root._mobile)[data-size] .t-heading{font:var(--tui-font-heading-5)}:host[data-size=page] .t-content,:host-context(tui-root._mobile) :host[data-size=page] .t-content{padding:0}.t-heading{margin:0 0 .5rem;padding-inline-end:2rem;overflow-wrap:break-word;font:var(--tui-font-heading-4)}.t-heading:empty{display:none}.t-header{display:flex;border-top-left-radius:inherit;border-top-right-radius:inherit;overflow:hidden}:host[data-size=fullscreen] :host-context(tui-root._mobile) .t-header{flex:1}.t-content{border-radius:inherit;padding:1.75rem;background:var(--tui-background-elevation-1)}.t-content:not(:first-child){border-top-left-radius:0;border-top-right-radius:0}.t-wrapper{position:sticky;top:0;z-index:1;order:-1}.t-filler{flex-grow:1}.t-close{transition-property:background;transition-duration:var(--tui-duration, .3s);transition-timing-function:ease-in-out;position:absolute;top:1rem;right:1rem}.t-buttons{margin-top:1.25rem;text-align:end}\n"] }]
        }], ctorParameters: function () { return []; } });
//# sourceMappingURL=data:application/json;base64,