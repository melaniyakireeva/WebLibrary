export const TUI_KAZAKH_LANGUAGE_KIT = {
    cancel: 'Болдырмау',
    done: 'Дайын',
    more: 'Көбірек',
    otherDate: 'Басқа күн...',
    showAll: 'Барлығын көрсету',
    hide: 'Жасыру',
    mobileCalendarTexts: ['Күнді таңдаңыз', 'Аралықты таңдаңыз', 'Күндерді таңдаңыз'],
    range: ['бастап', 'дейін'],
    countTexts: ['Плюс', 'Минус'],
    time: {
        'HH:MM': 'HH:MM',
        'HH:MM:SS': 'HH:MM:SS',
        'HH:MM:SS.MSS': 'HH:MM:SS.MSS',
    },
    dateTexts: {
        DMY: 'dd.mm.yyyy',
        MDY: 'mm.dd.yyyy',
        YMD: 'yyyy.mm.dd',
    },
    digitalInformationUnits: ['B', 'KiB', 'MiB'],
    passwordTexts: ['Құпия сөзді көрсету', 'Құпия сөзді жасыру'],
    copyTexts: ['Көшіру', 'Көшірілген'],
    shortCalendarMonths: [
        'Қаң',
        'Ақп',
        'Нау',
        'Сәу',
        'Мам',
        'Мау',
        'Шіл',
        'Там',
        'Қыр',
        'Қаз',
        'Қар',
        'Жел',
    ],
    pagination: ['Алдыңғы бет', 'Келесі бет'],
    fileTexts: {
        loadingError: 'Жүктеп салу сәтсіз аяқталды',
        preview: 'Алдын ала қарау',
        remove: 'Жою',
    },
    inputFileTexts: {
        defaultLabelSingle: 'немесе тастаңыз\u00A0ол\u00A0мұнда',
        defaultLabelMultiple: 'немесе тастаңыз\u00A0олар\u00A0мұнда',
        defaultLinkSingle: 'Файлды таңдаңыз',
        defaultLinkMultiple: 'Файлдарды таңдаңыз',
        maxSizeRejectionReason: 'Файл тым үлкен',
        formatRejectionReason: 'Қате файл түрі',
        drop: 'Файлды осы жерге тастаңыз',
        dropMultiple: 'Файлдарды осы жерге тастаңыз',
    },
    multiSelectTexts: {
        all: 'Барлығын таңдаңыз',
        none: 'Ешбіреуін таңдау',
    },
    confirm: {
        yes: 'Иә',
        no: 'Жоқ',
    },
    previewTexts: {
        rotate: 'Айналдыру',
    },
    zoomTexts: {
        zoomOut: 'Кішірейту',
        zoomIn: 'Үлкейту',
        reset: 'Қалпына келтіру',
    },
    phoneSearch: 'Елді немесе кодты теріңіз',
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoia2l0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvaTE4bi9sYW5ndWFnZXMva2F6YWtoL2tpdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxNQUFNLENBQUMsTUFBTSx1QkFBdUIsR0FBbUI7SUFDbkQsTUFBTSxFQUFFLFdBQVc7SUFDbkIsSUFBSSxFQUFFLE9BQU87SUFDYixJQUFJLEVBQUUsU0FBUztJQUNmLFNBQVMsRUFBRSxjQUFjO0lBQ3pCLE9BQU8sRUFBRSxrQkFBa0I7SUFDM0IsSUFBSSxFQUFFLFFBQVE7SUFDZCxtQkFBbUIsRUFBRSxDQUFDLGdCQUFnQixFQUFFLG1CQUFtQixFQUFFLG1CQUFtQixDQUFDO0lBQ2pGLEtBQUssRUFBRSxDQUFDLFFBQVEsRUFBRSxPQUFPLENBQUM7SUFDMUIsVUFBVSxFQUFFLENBQUMsTUFBTSxFQUFFLE9BQU8sQ0FBQztJQUM3QixJQUFJLEVBQUU7UUFDRixPQUFPLEVBQUUsT0FBTztRQUNoQixVQUFVLEVBQUUsVUFBVTtRQUN0QixjQUFjLEVBQUUsY0FBYztLQUNqQztJQUNELFNBQVMsRUFBRTtRQUNQLEdBQUcsRUFBRSxZQUFZO1FBQ2pCLEdBQUcsRUFBRSxZQUFZO1FBQ2pCLEdBQUcsRUFBRSxZQUFZO0tBQ3BCO0lBQ0QsdUJBQXVCLEVBQUUsQ0FBQyxHQUFHLEVBQUUsS0FBSyxFQUFFLEtBQUssQ0FBQztJQUM1QyxhQUFhLEVBQUUsQ0FBQyxxQkFBcUIsRUFBRSxvQkFBb0IsQ0FBQztJQUM1RCxTQUFTLEVBQUUsQ0FBQyxRQUFRLEVBQUUsWUFBWSxDQUFDO0lBQ25DLG1CQUFtQixFQUFFO1FBQ2pCLEtBQUs7UUFDTCxLQUFLO1FBQ0wsS0FBSztRQUNMLEtBQUs7UUFDTCxLQUFLO1FBQ0wsS0FBSztRQUNMLEtBQUs7UUFDTCxLQUFLO1FBQ0wsS0FBSztRQUNMLEtBQUs7UUFDTCxLQUFLO1FBQ0wsS0FBSztLQUNSO0lBQ0QsVUFBVSxFQUFFLENBQUMsYUFBYSxFQUFFLFlBQVksQ0FBQztJQUN6QyxTQUFTLEVBQUU7UUFDUCxZQUFZLEVBQUUsNkJBQTZCO1FBQzNDLE9BQU8sRUFBRSxpQkFBaUI7UUFDMUIsTUFBTSxFQUFFLEtBQUs7S0FDaEI7SUFDRCxjQUFjLEVBQUU7UUFDWixrQkFBa0IsRUFBRSxvQ0FBb0M7UUFDeEQsb0JBQW9CLEVBQUUsc0NBQXNDO1FBQzVELGlCQUFpQixFQUFFLGlCQUFpQjtRQUNwQyxtQkFBbUIsRUFBRSxvQkFBb0I7UUFDekMsc0JBQXNCLEVBQUUsZ0JBQWdCO1FBQ3hDLHFCQUFxQixFQUFFLGdCQUFnQjtRQUN2QyxJQUFJLEVBQUUsMkJBQTJCO1FBQ2pDLFlBQVksRUFBRSw4QkFBOEI7S0FDL0M7SUFDRCxnQkFBZ0IsRUFBRTtRQUNkLEdBQUcsRUFBRSxtQkFBbUI7UUFDeEIsSUFBSSxFQUFFLGtCQUFrQjtLQUMzQjtJQUNELE9BQU8sRUFBRTtRQUNMLEdBQUcsRUFBRSxJQUFJO1FBQ1QsRUFBRSxFQUFFLEtBQUs7S0FDWjtJQUNELFlBQVksRUFBRTtRQUNWLE1BQU0sRUFBRSxXQUFXO0tBQ3RCO0lBQ0QsU0FBUyxFQUFFO1FBQ1AsT0FBTyxFQUFFLFdBQVc7UUFDcEIsTUFBTSxFQUFFLFNBQVM7UUFDakIsS0FBSyxFQUFFLGlCQUFpQjtLQUMzQjtJQUNELFdBQVcsRUFBRSwyQkFBMkI7Q0FDM0MsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHtUdWlMYW5ndWFnZUtpdH0gZnJvbSAnQHRhaWdhLXVpL2kxOG4vdHlwZXMnO1xuXG5leHBvcnQgY29uc3QgVFVJX0tBWkFLSF9MQU5HVUFHRV9LSVQ6IFR1aUxhbmd1YWdlS2l0ID0ge1xuICAgIGNhbmNlbDogJ9CR0L7Qu9C00YvRgNC80LDRgycsXG4gICAgZG9uZTogJ9CU0LDQudGL0L0nLFxuICAgIG1vcmU6ICfQmtOp0LHRltGA0LXQuicsXG4gICAgb3RoZXJEYXRlOiAn0JHQsNGB0pvQsCDQutKv0L0uLi4nLFxuICAgIHNob3dBbGw6ICfQkdCw0YDQu9GL0pPRi9C9INC606nRgNGB0LXRgtGDJyxcbiAgICBoaWRlOiAn0JbQsNGB0YvRgNGDJyxcbiAgICBtb2JpbGVDYWxlbmRhclRleHRzOiBbJ9Ca0q/QvdC00ZYg0YLQsNKj0LTQsNKj0YvQtycsICfQkNGA0LDQu9GL0pvRgtGLINGC0LDSo9C00LDSo9GL0LcnLCAn0JrSr9C90LTQtdGA0LTRliDRgtCw0qPQtNCw0qPRi9C3J10sXG4gICAgcmFuZ2U6IFsn0LHQsNGB0YLQsNC/JywgJ9C00LXQudGW0L0nXSxcbiAgICBjb3VudFRleHRzOiBbJ9Cf0LvRjtGBJywgJ9Cc0LjQvdGD0YEnXSxcbiAgICB0aW1lOiB7XG4gICAgICAgICdISDpNTSc6ICdISDpNTScsXG4gICAgICAgICdISDpNTTpTUyc6ICdISDpNTTpTUycsXG4gICAgICAgICdISDpNTTpTUy5NU1MnOiAnSEg6TU06U1MuTVNTJyxcbiAgICB9LFxuICAgIGRhdGVUZXh0czoge1xuICAgICAgICBETVk6ICdkZC5tbS55eXl5JyxcbiAgICAgICAgTURZOiAnbW0uZGQueXl5eScsXG4gICAgICAgIFlNRDogJ3l5eXkubW0uZGQnLFxuICAgIH0sXG4gICAgZGlnaXRhbEluZm9ybWF0aW9uVW5pdHM6IFsnQicsICdLaUInLCAnTWlCJ10sXG4gICAgcGFzc3dvcmRUZXh0czogWyfSmtKx0L/QuNGPINGB06nQt9C00ZYg0LrTqdGA0YHQtdGC0YMnLCAn0prSsdC/0LjRjyDRgdOp0LfQtNGWINC20LDRgdGL0YDRgyddLFxuICAgIGNvcHlUZXh0czogWyfQmtOp0YjRltGA0YMnLCAn0JrTqdGI0ZbRgNGW0LvQs9C10L0nXSxcbiAgICBzaG9ydENhbGVuZGFyTW9udGhzOiBbXG4gICAgICAgICfSmtCw0qMnLFxuICAgICAgICAn0JDSm9C/JyxcbiAgICAgICAgJ9Cd0LDRgycsXG4gICAgICAgICfQodOZ0YMnLFxuICAgICAgICAn0JzQsNC8JyxcbiAgICAgICAgJ9Cc0LDRgycsXG4gICAgICAgICfQqNGW0LsnLFxuICAgICAgICAn0KLQsNC8JyxcbiAgICAgICAgJ9Ka0YvRgCcsXG4gICAgICAgICfSmtCw0LcnLFxuICAgICAgICAn0prQsNGAJyxcbiAgICAgICAgJ9CW0LXQuycsXG4gICAgXSxcbiAgICBwYWdpbmF0aW9uOiBbJ9CQ0LvQtNGL0qPSk9GLINCx0LXRgicsICfQmtC10LvQtdGB0ZYg0LHQtdGCJ10sXG4gICAgZmlsZVRleHRzOiB7XG4gICAgICAgIGxvYWRpbmdFcnJvcjogJ9CW0q/QutGC0LXQvyDRgdCw0LvRgyDRgdOZ0YLRgdGW0Lcg0LDRj9Kb0YLQsNC70LTRiycsXG4gICAgICAgIHByZXZpZXc6ICfQkNC70LTRi9C9INCw0LvQsCDSm9Cw0YDQsNGDJyxcbiAgICAgICAgcmVtb3ZlOiAn0JbQvtGOJyxcbiAgICB9LFxuICAgIGlucHV0RmlsZVRleHRzOiB7XG4gICAgICAgIGRlZmF1bHRMYWJlbFNpbmdsZTogJ9C90LXQvNC10YHQtSDRgtCw0YHRgtCw0qPRi9C3XFx1MDBBMNC+0LtcXHUwMEEw0LzSsdC90LTQsCcsXG4gICAgICAgIGRlZmF1bHRMYWJlbE11bHRpcGxlOiAn0L3QtdC80LXRgdC1INGC0LDRgdGC0LDSo9GL0LdcXHUwMEEw0L7Qu9Cw0YBcXHUwMEEw0LzSsdC90LTQsCcsXG4gICAgICAgIGRlZmF1bHRMaW5rU2luZ2xlOiAn0KTQsNC50LvQtNGLINGC0LDSo9C00LDSo9GL0LcnLFxuICAgICAgICBkZWZhdWx0TGlua011bHRpcGxlOiAn0KTQsNC50LvQtNCw0YDQtNGLINGC0LDSo9C00LDSo9GL0LcnLFxuICAgICAgICBtYXhTaXplUmVqZWN0aW9uUmVhc29uOiAn0KTQsNC50Lsg0YLRi9C8INKv0LvQutC10L0nLFxuICAgICAgICBmb3JtYXRSZWplY3Rpb25SZWFzb246ICfSmtCw0YLQtSDRhNCw0LnQuyDRgtKv0YDRlicsXG4gICAgICAgIGRyb3A6ICfQpNCw0LnQu9C00Ysg0L7RgdGLINC20LXRgNCz0LUg0YLQsNGB0YLQsNKj0YvQtycsXG4gICAgICAgIGRyb3BNdWx0aXBsZTogJ9Ck0LDQudC70LTQsNGA0LTRiyDQvtGB0Ysg0LbQtdGA0LPQtSDRgtCw0YHRgtCw0qPRi9C3JyxcbiAgICB9LFxuICAgIG11bHRpU2VsZWN0VGV4dHM6IHtcbiAgICAgICAgYWxsOiAn0JHQsNGA0LvRi9KT0YvQvSDRgtCw0qPQtNCw0qPRi9C3JyxcbiAgICAgICAgbm9uZTogJ9CV0YjQsdGW0YDQtdGD0ZbQvSDRgtCw0qPQtNCw0YMnLFxuICAgIH0sXG4gICAgY29uZmlybToge1xuICAgICAgICB5ZXM6ICfQmNOZJyxcbiAgICAgICAgbm86ICfQltC+0psnLFxuICAgIH0sXG4gICAgcHJldmlld1RleHRzOiB7XG4gICAgICAgIHJvdGF0ZTogJ9CQ0LnQvdCw0LvQtNGL0YDRgycsXG4gICAgfSxcbiAgICB6b29tVGV4dHM6IHtcbiAgICAgICAgem9vbU91dDogJ9Ca0ZbRiNGW0YDQtdC50YLRgycsXG4gICAgICAgIHpvb21JbjogJ9Ku0LvQutC10LnRgtGDJyxcbiAgICAgICAgcmVzZXQ6ICfSmtCw0LvQv9GL0L3QsCDQutC10LvRgtGW0YDRgycsXG4gICAgfSxcbiAgICBwaG9uZVNlYXJjaDogJ9CV0LvQtNGWINC90LXQvNC10YHQtSDQutC+0LTRgtGLINGC0LXRgNGW0qPRltC3Jyxcbn07XG4iXX0=