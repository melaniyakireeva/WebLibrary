import { __decorate } from "tslib";
import { NgForOf, NgIf, NgTemplateOutlet } from '@angular/common';
import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import { TuiBar } from '@taiga-ui/addon-charts/components/bar';
import { tuiPure } from '@taiga-ui/cdk/utils/miscellaneous';
import * as i0 from "@angular/core";
const PERCENT = 100;
const EMPTY_ARRAY = [];
const FILLER_ARRAY = [1];
class TuiBarSet {
    constructor() {
        this.value = [];
        this.size = 'm';
        this.collapsed = false;
    }
    get computedValue() {
        return this.collapsed ? FILLER_ARRAY : this.value;
    }
    get computedSegments() {
        return this.collapsed ? this.value : EMPTY_ARRAY;
    }
    get computedSize() {
        return this.size || 'm';
    }
    getHeight(value) {
        return Math.abs((PERCENT * value) / this.getLargest(this.computedValue));
    }
    getLargest(value) {
        return value.some((a) => a > 0)
            ? value.reduce((a, b) => (a > b ? a : b), 0)
            : Math.abs(value.reduce((a, b) => (a < b ? a : b), 0));
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiBarSet, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: TuiBarSet, isStandalone: true, selector: "tui-bar-set", inputs: { value: "value", size: "size", collapsed: "collapsed" }, ngImport: i0, template: "<ng-container *ngIf=\"size; else flexible\">\n    <ng-container\n        *ngFor=\"let item of computedValue; let index = index\"\n        [ngTemplateOutlet]=\"bar\"\n        [ngTemplateOutletContext]=\"{$implicit: item, index: index, flexible: false}\"\n    />\n</ng-container>\n<ng-template #flexible>\n    <div\n        *ngFor=\"let item of computedValue; let index = index\"\n        class=\"t-wrapper\"\n    >\n        <ng-container\n            [ngTemplateOutlet]=\"bar\"\n            [ngTemplateOutletContext]=\"{$implicit: item, index: index, flexible: true}\"\n        />\n    </div>\n</ng-template>\n<ng-template\n    #bar\n    let-flexible=\"flexible\"\n    let-index=\"index\"\n    let-item\n>\n    <tui-bar\n        automation-id=\"tui-bar-set__bar\"\n        class=\"t-bar\"\n        [class.t-bar_flexible]=\"flexible\"\n        [class.t-bar_negative]=\"item < 0\"\n        [size]=\"computedSize\"\n        [style.background]=\"'var(--tui-chart-categorical-0' + index + ')'\"\n        [style.height.%]=\"getHeight(item)\"\n        [value]=\"computedSegments\"\n    />\n</ng-template>\n<span class=\"t-label\">\n    <ng-content />\n</span>\n", styles: [":host{position:relative;display:flex;block-size:100%;align-items:flex-end;justify-content:center}.t-wrapper{display:flex;flex:1;block-size:100%;align-items:flex-end}.t-wrapper:first-of-type{margin-left:25%}.t-wrapper:last-of-type{margin-right:25%}.t-bar{transform-origin:bottom center}.t-bar_negative{transform:rotate(180deg);opacity:var(--tui-disabled-opacity)}.t-bar.t-bar_flexible{max-inline-size:none;inline-size:75%;margin:0 auto}.t-label{position:absolute;top:-1.5rem;font:var(--tui-font-text-xs);color:var(--tui-text-secondary)}\n"], dependencies: [{ kind: "directive", type: NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "component", type: TuiBar, selector: "tui-bar", inputs: ["value", "size"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
__decorate([
    tuiPure
], TuiBarSet.prototype, "getLargest", null);
export { TuiBarSet };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiBarSet, decorators: [{
            type: Component,
            args: [{ standalone: true, selector: 'tui-bar-set', imports: [NgForOf, NgIf, NgTemplateOutlet, TuiBar], changeDetection: ChangeDetectionStrategy.OnPush, template: "<ng-container *ngIf=\"size; else flexible\">\n    <ng-container\n        *ngFor=\"let item of computedValue; let index = index\"\n        [ngTemplateOutlet]=\"bar\"\n        [ngTemplateOutletContext]=\"{$implicit: item, index: index, flexible: false}\"\n    />\n</ng-container>\n<ng-template #flexible>\n    <div\n        *ngFor=\"let item of computedValue; let index = index\"\n        class=\"t-wrapper\"\n    >\n        <ng-container\n            [ngTemplateOutlet]=\"bar\"\n            [ngTemplateOutletContext]=\"{$implicit: item, index: index, flexible: true}\"\n        />\n    </div>\n</ng-template>\n<ng-template\n    #bar\n    let-flexible=\"flexible\"\n    let-index=\"index\"\n    let-item\n>\n    <tui-bar\n        automation-id=\"tui-bar-set__bar\"\n        class=\"t-bar\"\n        [class.t-bar_flexible]=\"flexible\"\n        [class.t-bar_negative]=\"item < 0\"\n        [size]=\"computedSize\"\n        [style.background]=\"'var(--tui-chart-categorical-0' + index + ')'\"\n        [style.height.%]=\"getHeight(item)\"\n        [value]=\"computedSegments\"\n    />\n</ng-template>\n<span class=\"t-label\">\n    <ng-content />\n</span>\n", styles: [":host{position:relative;display:flex;block-size:100%;align-items:flex-end;justify-content:center}.t-wrapper{display:flex;flex:1;block-size:100%;align-items:flex-end}.t-wrapper:first-of-type{margin-left:25%}.t-wrapper:last-of-type{margin-right:25%}.t-bar{transform-origin:bottom center}.t-bar_negative{transform:rotate(180deg);opacity:var(--tui-disabled-opacity)}.t-bar.t-bar_flexible{max-inline-size:none;inline-size:75%;margin:0 auto}.t-label{position:absolute;top:-1.5rem;font:var(--tui-font-text-xs);color:var(--tui-text-secondary)}\n"] }]
        }], propDecorators: { value: [{
                type: Input
            }], size: [{
                type: Input
            }], collapsed: [{
                type: Input
            }], getLargest: [] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFyLXNldC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9hZGRvbi1jaGFydHMvY29tcG9uZW50cy9iYXItc2V0L2Jhci1zZXQuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvYWRkb24tY2hhcnRzL2NvbXBvbmVudHMvYmFyLXNldC9iYXItc2V0LnRlbXBsYXRlLmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBQyxPQUFPLEVBQUUsSUFBSSxFQUFFLGdCQUFnQixFQUFDLE1BQU0saUJBQWlCLENBQUM7QUFDaEUsT0FBTyxFQUFDLHVCQUF1QixFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDeEUsT0FBTyxFQUFDLE1BQU0sRUFBQyxNQUFNLHVDQUF1QyxDQUFDO0FBQzdELE9BQU8sRUFBQyxPQUFPLEVBQUMsTUFBTSxtQ0FBbUMsQ0FBQzs7QUFHMUQsTUFBTSxPQUFPLEdBQUcsR0FBRyxDQUFDO0FBQ3BCLE1BQU0sV0FBVyxHQUFzQixFQUFFLENBQUM7QUFDMUMsTUFBTSxZQUFZLEdBQXNCLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFFNUMsTUFRYSxTQUFTO0lBUnRCO1FBVVcsVUFBSyxHQUFzQixFQUFFLENBQUM7UUFHOUIsU0FBSSxHQUErQixHQUFHLENBQUM7UUFHdkMsY0FBUyxHQUFHLEtBQUssQ0FBQztLQXdCNUI7SUF0QkcsSUFBYyxhQUFhO1FBQ3ZCLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDO0lBQ3RELENBQUM7SUFFRCxJQUFjLGdCQUFnQjtRQUMxQixPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLFdBQVcsQ0FBQztJQUNyRCxDQUFDO0lBRUQsSUFBYyxZQUFZO1FBQ3RCLE9BQU8sSUFBSSxDQUFDLElBQUksSUFBSSxHQUFHLENBQUM7SUFDNUIsQ0FBQztJQUVTLFNBQVMsQ0FBQyxLQUFhO1FBQzdCLE9BQU8sSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLE9BQU8sR0FBRyxLQUFLLENBQUMsR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDO0lBQzdFLENBQUM7SUFHTyxVQUFVLENBQUMsS0FBd0I7UUFDdkMsT0FBTyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQzNCLENBQUMsQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQztZQUM1QyxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDL0QsQ0FBQzsrR0EvQlEsU0FBUzttR0FBVCxTQUFTLHlJQ2xCdEIsbW9DQXNDQSxtbEJEekJjLE9BQU8sbUhBQUUsSUFBSSw2RkFBRSxnQkFBZ0Isb0pBQUUsTUFBTTs7QUFnQ3pDO0lBRFAsT0FBTzsyQ0FLUDtTQS9CUSxTQUFTOzRGQUFULFNBQVM7a0JBUnJCLFNBQVM7aUNBQ00sSUFBSSxZQUNOLGFBQWEsV0FDZCxDQUFDLE9BQU8sRUFBRSxJQUFJLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxDQUFDLG1CQUdqQyx1QkFBdUIsQ0FBQyxNQUFNOzhCQUl4QyxLQUFLO3NCQURYLEtBQUs7Z0JBSUMsSUFBSTtzQkFEVixLQUFLO2dCQUlDLFNBQVM7c0JBRGYsS0FBSztnQkFvQkUsVUFBVSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7TmdGb3JPZiwgTmdJZiwgTmdUZW1wbGF0ZU91dGxldH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7Q2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgSW5wdXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtUdWlCYXJ9IGZyb20gJ0B0YWlnYS11aS9hZGRvbi1jaGFydHMvY29tcG9uZW50cy9iYXInO1xuaW1wb3J0IHt0dWlQdXJlfSBmcm9tICdAdGFpZ2EtdWkvY2RrL3V0aWxzL21pc2NlbGxhbmVvdXMnO1xuaW1wb3J0IHR5cGUge1R1aVNpemVMLCBUdWlTaXplU30gZnJvbSAnQHRhaWdhLXVpL2NvcmUvdHlwZXMnO1xuXG5jb25zdCBQRVJDRU5UID0gMTAwO1xuY29uc3QgRU1QVFlfQVJSQVk6IHJlYWRvbmx5IG51bWJlcltdID0gW107XG5jb25zdCBGSUxMRVJfQVJSQVk6IHJlYWRvbmx5IG51bWJlcltdID0gWzFdO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzdGFuZGFsb25lOiB0cnVlLFxuICAgIHNlbGVjdG9yOiAndHVpLWJhci1zZXQnLFxuICAgIGltcG9ydHM6IFtOZ0Zvck9mLCBOZ0lmLCBOZ1RlbXBsYXRlT3V0bGV0LCBUdWlCYXJdLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9iYXItc2V0LnRlbXBsYXRlLmh0bWwnLFxuICAgIHN0eWxlVXJsczogWycuL2Jhci1zZXQuc3R5bGUubGVzcyddLFxuICAgIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxufSlcbmV4cG9ydCBjbGFzcyBUdWlCYXJTZXQge1xuICAgIEBJbnB1dCgpXG4gICAgcHVibGljIHZhbHVlOiByZWFkb25seSBudW1iZXJbXSA9IFtdO1xuXG4gICAgQElucHV0KClcbiAgICBwdWJsaWMgc2l6ZTogVHVpU2l6ZUwgfCBUdWlTaXplUyB8IG51bGwgPSAnbSc7XG5cbiAgICBASW5wdXQoKVxuICAgIHB1YmxpYyBjb2xsYXBzZWQgPSBmYWxzZTtcblxuICAgIHByb3RlY3RlZCBnZXQgY29tcHV0ZWRWYWx1ZSgpOiByZWFkb25seSBudW1iZXJbXSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbGxhcHNlZCA/IEZJTExFUl9BUlJBWSA6IHRoaXMudmFsdWU7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIGdldCBjb21wdXRlZFNlZ21lbnRzKCk6IHJlYWRvbmx5IG51bWJlcltdIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29sbGFwc2VkID8gdGhpcy52YWx1ZSA6IEVNUFRZX0FSUkFZO1xuICAgIH1cblxuICAgIHByb3RlY3RlZCBnZXQgY29tcHV0ZWRTaXplKCk6IFR1aVNpemVMIHwgVHVpU2l6ZVMge1xuICAgICAgICByZXR1cm4gdGhpcy5zaXplIHx8ICdtJztcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgZ2V0SGVpZ2h0KHZhbHVlOiBudW1iZXIpOiBudW1iZXIge1xuICAgICAgICByZXR1cm4gTWF0aC5hYnMoKFBFUkNFTlQgKiB2YWx1ZSkgLyB0aGlzLmdldExhcmdlc3QodGhpcy5jb21wdXRlZFZhbHVlKSk7XG4gICAgfVxuXG4gICAgQHR1aVB1cmVcbiAgICBwcml2YXRlIGdldExhcmdlc3QodmFsdWU6IHJlYWRvbmx5IG51bWJlcltdKTogbnVtYmVyIHtcbiAgICAgICAgcmV0dXJuIHZhbHVlLnNvbWUoKGEpID0+IGEgPiAwKVxuICAgICAgICAgICAgPyB2YWx1ZS5yZWR1Y2UoKGEsIGIpID0+IChhID4gYiA/IGEgOiBiKSwgMClcbiAgICAgICAgICAgIDogTWF0aC5hYnModmFsdWUucmVkdWNlKChhLCBiKSA9PiAoYSA8IGIgPyBhIDogYiksIDApKTtcbiAgICB9XG59XG4iLCI8bmctY29udGFpbmVyICpuZ0lmPVwic2l6ZTsgZWxzZSBmbGV4aWJsZVwiPlxuICAgIDxuZy1jb250YWluZXJcbiAgICAgICAgKm5nRm9yPVwibGV0IGl0ZW0gb2YgY29tcHV0ZWRWYWx1ZTsgbGV0IGluZGV4ID0gaW5kZXhcIlxuICAgICAgICBbbmdUZW1wbGF0ZU91dGxldF09XCJiYXJcIlxuICAgICAgICBbbmdUZW1wbGF0ZU91dGxldENvbnRleHRdPVwieyRpbXBsaWNpdDogaXRlbSwgaW5kZXg6IGluZGV4LCBmbGV4aWJsZTogZmFsc2V9XCJcbiAgICAvPlxuPC9uZy1jb250YWluZXI+XG48bmctdGVtcGxhdGUgI2ZsZXhpYmxlPlxuICAgIDxkaXZcbiAgICAgICAgKm5nRm9yPVwibGV0IGl0ZW0gb2YgY29tcHV0ZWRWYWx1ZTsgbGV0IGluZGV4ID0gaW5kZXhcIlxuICAgICAgICBjbGFzcz1cInQtd3JhcHBlclwiXG4gICAgPlxuICAgICAgICA8bmctY29udGFpbmVyXG4gICAgICAgICAgICBbbmdUZW1wbGF0ZU91dGxldF09XCJiYXJcIlxuICAgICAgICAgICAgW25nVGVtcGxhdGVPdXRsZXRDb250ZXh0XT1cInskaW1wbGljaXQ6IGl0ZW0sIGluZGV4OiBpbmRleCwgZmxleGlibGU6IHRydWV9XCJcbiAgICAgICAgLz5cbiAgICA8L2Rpdj5cbjwvbmctdGVtcGxhdGU+XG48bmctdGVtcGxhdGVcbiAgICAjYmFyXG4gICAgbGV0LWZsZXhpYmxlPVwiZmxleGlibGVcIlxuICAgIGxldC1pbmRleD1cImluZGV4XCJcbiAgICBsZXQtaXRlbVxuPlxuICAgIDx0dWktYmFyXG4gICAgICAgIGF1dG9tYXRpb24taWQ9XCJ0dWktYmFyLXNldF9fYmFyXCJcbiAgICAgICAgY2xhc3M9XCJ0LWJhclwiXG4gICAgICAgIFtjbGFzcy50LWJhcl9mbGV4aWJsZV09XCJmbGV4aWJsZVwiXG4gICAgICAgIFtjbGFzcy50LWJhcl9uZWdhdGl2ZV09XCJpdGVtIDwgMFwiXG4gICAgICAgIFtzaXplXT1cImNvbXB1dGVkU2l6ZVwiXG4gICAgICAgIFtzdHlsZS5iYWNrZ3JvdW5kXT1cIid2YXIoLS10dWktY2hhcnQtY2F0ZWdvcmljYWwtMCcgKyBpbmRleCArICcpJ1wiXG4gICAgICAgIFtzdHlsZS5oZWlnaHQuJV09XCJnZXRIZWlnaHQoaXRlbSlcIlxuICAgICAgICBbdmFsdWVdPVwiY29tcHV0ZWRTZWdtZW50c1wiXG4gICAgLz5cbjwvbmctdGVtcGxhdGU+XG48c3BhbiBjbGFzcz1cInQtbGFiZWxcIj5cbiAgICA8bmctY29udGVudCAvPlxuPC9zcGFuPlxuIl19