{"version":3,"file":"taiga-ui-kit-components-input-phone-international.mjs","sources":["../../../projects/kit/components/input-phone-international/input-phone-international.options.ts","../../../projects/kit/components/input-phone-international/input-phone-international.component.ts","../../../projects/kit/components/input-phone-international/input-phone-international.template.html","../../../projects/kit/components/input-phone-international/taiga-ui-kit-components-input-phone-international.ts"],"sourcesContent":["import type {Provider} from '@angular/core';\nimport {tuiCreateToken, tuiProvideOptions} from '@taiga-ui/cdk/utils/miscellaneous';\nimport type {TuiCountryIsoCode} from '@taiga-ui/i18n/types';\nimport type {MetadataJson} from 'libphonenumber-js/core';\nimport type {Observable} from 'rxjs';\nimport {of} from 'rxjs';\n\nexport interface TuiInputPhoneInternationalOptions {\n    readonly countries: readonly TuiCountryIsoCode[];\n    readonly countryIsoCode: TuiCountryIsoCode;\n    readonly metadata: Observable<MetadataJson> | Promise<MetadataJson>;\n}\n\nexport const TUI_INPUT_PHONE_INTERNATIONAL_DEFAULT_OPTIONS: TuiInputPhoneInternationalOptions =\n    {\n        countries: [],\n        countryIsoCode: 'RU',\n        metadata: of({countries: {}, country_calling_codes: {}}),\n    };\n\n/**\n * Default parameters for input phone international component\n */\nexport const TUI_INPUT_PHONE_INTERNATIONAL_OPTIONS = tuiCreateToken(\n    TUI_INPUT_PHONE_INTERNATIONAL_DEFAULT_OPTIONS,\n);\n\nexport function tuiInputPhoneInternationalOptionsProvider(\n    options: Partial<TuiInputPhoneInternationalOptions>,\n): Provider {\n    return tuiProvideOptions(\n        TUI_INPUT_PHONE_INTERNATIONAL_OPTIONS,\n        options,\n        TUI_INPUT_PHONE_INTERNATIONAL_DEFAULT_OPTIONS,\n    );\n}\n","import {AsyncPipe, CommonModule} from '@angular/common';\nimport type {QueryList} from '@angular/core';\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    computed,\n    ElementRef,\n    forwardRef,\n    inject,\n    Input,\n    Output,\n    signal,\n    TemplateRef,\n    ViewChild,\n    ViewChildren,\n} from '@angular/core';\nimport {toObservable, toSignal} from '@angular/core/rxjs-interop';\nimport {FormsModule} from '@angular/forms';\nimport {MaskitoDirective} from '@maskito/angular';\nimport type {MaskitoOptions} from '@maskito/core';\nimport {maskitoInitialCalibrationPlugin, maskitoTransform} from '@maskito/core';\nimport {maskitoRemoveOnBlurPlugin} from '@maskito/kit';\nimport {maskitoGetCountryFromNumber, maskitoPhoneOptionsGenerator} from '@maskito/phone';\nimport {tuiAsControl, TuiControl} from '@taiga-ui/cdk/classes';\nimport {CHAR_PLUS, TUI_DEFAULT_MATCHER} from '@taiga-ui/cdk/constants';\nimport {TuiAutoFocus} from '@taiga-ui/cdk/directives/auto-focus';\nimport {tuiFallbackValueProvider} from '@taiga-ui/cdk/tokens';\nimport {tuiIsInputEvent} from '@taiga-ui/cdk/utils/dom';\nimport {tuiDirectiveBinding} from '@taiga-ui/cdk/utils/miscellaneous';\nimport {TuiDataList, TuiOption} from '@taiga-ui/core/components/data-list';\nimport {\n    TUI_TEXTFIELD_OPTIONS,\n    TuiTextfield,\n    TuiTextfieldDropdownDirective,\n    tuiTextfieldOptionsProvider,\n} from '@taiga-ui/core/components/textfield';\nimport {\n    tuiDropdown,\n    TuiDropdownDirective,\n    TuiDropdownOpen,\n    tuiDropdownOpen,\n    tuiDropdownOptionsProvider,\n    TuiWithDropdownOpen,\n} from '@taiga-ui/core/directives/dropdown';\nimport {TuiGroup} from '@taiga-ui/core/directives/group';\nimport {TuiFlagPipe} from '@taiga-ui/core/pipes/flag';\nimport {TUI_COMMON_ICONS} from '@taiga-ui/core/tokens';\nimport type {TuiCountryIsoCode} from '@taiga-ui/i18n/types';\nimport {TuiChevron} from '@taiga-ui/kit/directives';\nimport {TUI_COUNTRIES, TUI_INTERNATIONAL_SEARCH} from '@taiga-ui/kit/tokens';\nimport {tuiGetCallingCode} from '@taiga-ui/kit/utils';\nimport type {PolymorpheusContent} from '@taiga-ui/polymorpheus';\nimport {validatePhoneNumberLength} from 'libphonenumber-js';\nimport type {MetadataJson} from 'libphonenumber-js/core';\nimport {getCountryCallingCode} from 'libphonenumber-js/core';\nimport {from, skip} from 'rxjs';\n\nimport {TUI_INPUT_PHONE_INTERNATIONAL_OPTIONS} from './input-phone-international.options';\n\nconst NOT_FORM_CONTROL_SYMBOLS = /[^+\\d]/g;\n\n@Component({\n    standalone: true,\n    selector: 'tui-input-phone-international',\n    imports: [\n        AsyncPipe,\n        CommonModule,\n        FormsModule,\n        MaskitoDirective,\n        TuiAutoFocus,\n        TuiChevron,\n        TuiDataList,\n        TuiFlagPipe,\n        TuiTextfield,\n    ],\n    templateUrl: './input-phone-international.template.html',\n    styleUrls: ['./input-phone-international.style.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        tuiAsControl(TuiInputPhoneInternational),\n        tuiFallbackValueProvider(''),\n        tuiTextfieldOptionsProvider({cleaner: signal(false)}),\n        tuiDropdownOptionsProvider({\n            limitWidth: 'fixed',\n            align: 'right',\n        }),\n    ],\n    hostDirectives: [TuiGroup, TuiDropdownDirective, TuiWithDropdownOpen],\n    host: {\n        '[attr.data-size]': 'size()',\n    },\n})\nexport class TuiInputPhoneInternational extends TuiControl<string> {\n    @ViewChild(MaskitoDirective, {read: ElementRef})\n    private readonly input?: ElementRef<HTMLInputElement>;\n\n    @ViewChildren(TuiOption, {read: ElementRef})\n    private readonly listOptions?: QueryList<ElementRef<HTMLButtonElement>>;\n\n    protected readonly dropdown = tuiDropdown(null);\n    protected readonly options = inject(TUI_INPUT_PHONE_INTERNATIONAL_OPTIONS);\n    protected readonly size = inject(TUI_TEXTFIELD_OPTIONS).size;\n    protected readonly open = tuiDropdownOpen();\n    protected readonly names = toSignal(inject(TUI_COUNTRIES));\n    protected readonly metadata = toSignal(from(this.options.metadata));\n    protected readonly countries = signal(this.options.countries);\n    protected readonly countryIsoCode = signal(this.options.countryIsoCode);\n    protected readonly icons = inject(TUI_COMMON_ICONS);\n    protected readonly internationalSearchLabel$ = inject(TUI_INTERNATIONAL_SEARCH);\n    protected readonly search = signal<string>('');\n\n    protected readonly filtered = computed(() =>\n        this.countries()\n            .map((iso) => ({\n                iso,\n                name: this.names()?.[iso] || '',\n                code: tuiGetCallingCode(iso, this.metadata()),\n            }))\n            .filter(({name, code}) => TUI_DEFAULT_MATCHER(name + code, this.search())),\n    );\n\n    protected readonly mask = computed(() =>\n        this.computeMask(this.countryIsoCode(), this.metadata()),\n    );\n\n    protected readonly $ = tuiDirectiveBinding(\n        TuiDropdownOpen,\n        'tuiDropdownEnabled',\n        this.interactive,\n    );\n\n    protected textfieldValue = '';\n\n    @Input()\n    public countrySearch = false;\n\n    @Output()\n    public readonly countryIsoCodeChange = toObservable(this.countryIsoCode).pipe(\n        skip(1),\n    );\n\n    @Input('countries')\n    public set countriesValue(value: readonly TuiCountryIsoCode[]) {\n        this.countries.set(value);\n    }\n\n    @Input('countryIsoCode')\n    public set isoCode(code: TuiCountryIsoCode) {\n        this.countryIsoCode.set(code);\n    }\n\n    public focusFirstItem(): void {\n        this.listOptions?.get(0)?.nativeElement.focus();\n    }\n\n    public onPaste(event: Event): void {\n        const phonesMetadata = this.metadata();\n\n        if (\n            !tuiIsInputEvent(event) ||\n            !phonesMetadata ||\n            (!event.inputType.includes('Drop') && !event.inputType.includes('Paste'))\n        ) {\n            return;\n        }\n\n        const newValue = event.data || '';\n        const prefixedValue = newValue.startsWith(CHAR_PLUS)\n            ? newValue\n            : CHAR_PLUS + newValue;\n\n        if (validatePhoneNumberLength(prefixedValue) === 'TOO_SHORT') {\n            return;\n        }\n\n        const countryIsoCode = maskitoGetCountryFromNumber(prefixedValue, phonesMetadata);\n\n        if (countryIsoCode) {\n            this.countryIsoCode.set(countryIsoCode);\n        }\n    }\n\n    public onItemClick(isoCode: TuiCountryIsoCode): void {\n        this.open.set(false);\n        this.countryIsoCode.set(isoCode);\n        this.input?.nativeElement.focus();\n    }\n\n    public override writeValue(unmaskedValue: string): void {\n        super.writeValue(unmaskedValue);\n\n        const maskOptions = this.mask();\n\n        this.textfieldValue = maskOptions\n            ? maskitoTransform(unmaskedValue, maskOptions)\n            : unmaskedValue; // it will be calibrated later when mask is ready (by maskitoInitialCalibrationPlugin)\n        this.cdr.detectChanges();\n    }\n\n    @ViewChild(forwardRef(() => TuiTextfieldDropdownDirective), {read: TemplateRef})\n    protected set template(template: PolymorpheusContent) {\n        this.dropdown.set(template);\n    }\n\n    protected onFocus(): void {\n        const phoneMetadata = this.metadata();\n\n        if (!this.textfieldValue && phoneMetadata) {\n            this.textfieldValue = `${CHAR_PLUS + getCountryCallingCode(this.countryIsoCode(), phoneMetadata)} `;\n        }\n    }\n\n    protected onValueChange(maskedValue: string): void {\n        const unmaskedValue = maskedValue.replaceAll(NOT_FORM_CONTROL_SYMBOLS, '');\n        const phonesMetadata = this.metadata();\n        const countryCallingCode = phonesMetadata\n            ? CHAR_PLUS + getCountryCallingCode(this.countryIsoCode(), phonesMetadata)\n            : '';\n\n        this.onChange(unmaskedValue === countryCallingCode ? '' : unmaskedValue);\n    }\n\n    private computeMask(\n        countryIsoCode: TuiCountryIsoCode,\n        metadata?: MetadataJson,\n    ): MaskitoOptions | null {\n        if (!metadata) {\n            return null;\n        }\n\n        const {plugins, ...restOptions} = maskitoPhoneOptionsGenerator({\n            countryIsoCode,\n            metadata,\n        });\n\n        return {\n            ...restOptions,\n            plugins: [\n                ...plugins,\n                maskitoRemoveOnBlurPlugin(\n                    `${CHAR_PLUS}${getCountryCallingCode(countryIsoCode, metadata)} `,\n                ),\n                maskitoInitialCalibrationPlugin(),\n            ],\n        };\n    }\n}\n","<tui-textfield\n    class=\"t-select\"\n    [content]=\"flag\"\n    [tuiChevron]=\"open()\"\n>\n    <select\n        ngModel=\"\"\n        tuiTextfield\n        [attr.data-mode]=\"mode()\"\n        [disabled]=\"disabled()\"\n        [focused]=\"open()\"\n        [ngModelOptions]=\"{standalone: true}\"\n    ></select>\n\n    <ng-template #flag>\n        <img\n            class=\"t-flag\"\n            [alt]=\"names()?.[countryIsoCode()]\"\n            [src]=\"countryIsoCode() | tuiFlag\"\n        />\n    </ng-template>\n</tui-textfield>\n\n<tui-textfield>\n    <!--TODO: Replace attribute bindings with inputs after Angular updated and signal bindings properly update-->\n    <input\n        autocomplete=\"new-password\"\n        tuiTextfield\n        [attr.data-mode]=\"mode()\"\n        [attr.readonly]=\"readOnly() || null\"\n        [disabled]=\"disabled()\"\n        [maskito]=\"mask()\"\n        [ngModelOptions]=\"{standalone: true}\"\n        [(ngModel)]=\"textfieldValue\"\n        (beforeinput.capture)=\"onPaste($event)\"\n        (blur)=\"onTouched()\"\n        (focus)=\"!readOnly() && onFocus()\"\n        (ngModelChange)=\"onValueChange($event)\"\n    />\n\n    <!--\n    TODO: get rid of built-in input and label and just externalize everything in 5.0\n    <tui-input-phone-international>\n      <label tuiLabel>My label</label>\n      <input tuiTextfield placeholder=\"My placeholder\" [(ngModel)]=\"value\" />\n      <tui-icon icon=\"@tui.phone\" />\n    </tui-input-phone-international>\n    -->\n    <ng-content select=\"tui-icon, img\" />\n\n    <label tuiLabel>\n        <ng-content />\n    </label>\n</tui-textfield>\n\n<ng-container *tuiTextfieldDropdown>\n    <tui-textfield\n        *ngIf=\"countrySearch\"\n        class=\"t-search\"\n        [iconStart]=\"icons.search\"\n    >\n        <label tuiLabel>{{ internationalSearchLabel$ | async }}</label>\n        <input\n            tuiAutoFocus\n            tuiTextfield\n            [ngModel]=\"search()\"\n            (keydown.arrowDown)=\"focusFirstItem()\"\n            (ngModelChange)=\"search.set($event)\"\n        />\n    </tui-textfield>\n\n    <tui-data-list>\n        <button\n            *ngFor=\"let item of filtered()\"\n            tuiOption\n            type=\"button\"\n            (click)=\"onItemClick(item.iso)\"\n        >\n            <img\n                alt=\"\"\n                class=\"t-flag\"\n                [src]=\"item.iso | tuiFlag\"\n            />\n            <span class=\"t-name\">{{ item.name }}</span>\n            <span class=\"t-code\">{{ item.code }}</span>\n        </button>\n    </tui-data-list>\n</ng-container>\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}