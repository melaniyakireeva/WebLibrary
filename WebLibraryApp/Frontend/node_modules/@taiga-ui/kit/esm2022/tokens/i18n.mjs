import { tuiCreateTokenFromFactory } from '@taiga-ui/cdk/utils/miscellaneous';
import { tuiExtractI18n } from '@taiga-ui/i18n/utils';
export const TUI_CONFIRM_WORDS = tuiCreateTokenFromFactory(tuiExtractI18n('confirm'));
export const TUI_CANCEL_WORD = tuiCreateTokenFromFactory(tuiExtractI18n('cancel'));
export const TUI_DONE_WORD = tuiCreateTokenFromFactory(tuiExtractI18n('done'));
export const TUI_MORE_WORD = tuiCreateTokenFromFactory(tuiExtractI18n('more'));
export const TUI_HIDE_TEXT = tuiCreateTokenFromFactory(tuiExtractI18n('hide'));
export const TUI_SHOW_ALL_TEXT = tuiCreateTokenFromFactory(tuiExtractI18n('showAll'));
export const TUI_OTHER_DATE_TEXT = tuiCreateTokenFromFactory(tuiExtractI18n('otherDate'));
export const TUI_CHOOSE_DAY_OR_RANGE_TEXTS = tuiCreateTokenFromFactory(tuiExtractI18n('mobileCalendarTexts'));
export const TUI_FROM_TO_TEXTS = tuiCreateTokenFromFactory(tuiExtractI18n('range'));
export const TUI_PLUS_MINUS_TEXTS = tuiCreateTokenFromFactory(tuiExtractI18n('countTexts'));
export const TUI_TIME_TEXTS = tuiCreateTokenFromFactory(tuiExtractI18n('time'));
export const TUI_DATE_TEXTS = tuiCreateTokenFromFactory(tuiExtractI18n('dateTexts'));
export const TUI_DIGITAL_INFORMATION_UNITS = tuiCreateTokenFromFactory(tuiExtractI18n('digitalInformationUnits'));
export const TUI_COPY_TEXTS = tuiCreateTokenFromFactory(tuiExtractI18n('copyTexts'));
export const TUI_PASSWORD_TEXTS = tuiCreateTokenFromFactory(tuiExtractI18n('passwordTexts'));
export const TUI_CALENDAR_MONTHS = tuiCreateTokenFromFactory(tuiExtractI18n('shortCalendarMonths'));
export const TUI_FILE_TEXTS = tuiCreateTokenFromFactory(tuiExtractI18n('fileTexts'));
export const TUI_PAGINATION_TEXTS = tuiCreateTokenFromFactory(tuiExtractI18n('pagination'));
export const TUI_INPUT_FILE_TEXTS = tuiCreateTokenFromFactory(tuiExtractI18n('inputFileTexts'));
export const TUI_MULTI_SELECT_TEXTS = tuiCreateTokenFromFactory(tuiExtractI18n('multiSelectTexts'));
export const TUI_COUNTRIES = tuiCreateTokenFromFactory(tuiExtractI18n('countries'));
export const TUI_PREVIEW_TEXTS = tuiCreateTokenFromFactory(tuiExtractI18n('previewTexts'));
export const TUI_PREVIEW_ZOOM_TEXTS = tuiCreateTokenFromFactory(tuiExtractI18n('zoomTexts'));
export const TUI_INTERNATIONAL_SEARCH = tuiCreateTokenFromFactory(tuiExtractI18n('phoneSearch'));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaTE4bi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL2tpdC90b2tlbnMvaTE4bi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUMseUJBQXlCLEVBQUMsTUFBTSxtQ0FBbUMsQ0FBQztBQUU1RSxPQUFPLEVBQUMsY0FBYyxFQUFDLE1BQU0sc0JBQXNCLENBQUM7QUFHcEQsTUFBTSxDQUFDLE1BQU0saUJBQWlCLEdBQUcseUJBQXlCLENBQUMsY0FBYyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUM7QUFFdEYsTUFBTSxDQUFDLE1BQU0sZUFBZSxHQUFHLHlCQUF5QixDQUFDLGNBQWMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO0FBRW5GLE1BQU0sQ0FBQyxNQUFNLGFBQWEsR0FBRyx5QkFBeUIsQ0FBQyxjQUFjLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztBQUUvRSxNQUFNLENBQUMsTUFBTSxhQUFhLEdBQUcseUJBQXlCLENBQUMsY0FBYyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7QUFFL0UsTUFBTSxDQUFDLE1BQU0sYUFBYSxHQUFHLHlCQUF5QixDQUFDLGNBQWMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO0FBRS9FLE1BQU0sQ0FBQyxNQUFNLGlCQUFpQixHQUFHLHlCQUF5QixDQUFDLGNBQWMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDO0FBRXRGLE1BQU0sQ0FBQyxNQUFNLG1CQUFtQixHQUFHLHlCQUF5QixDQUFDLGNBQWMsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDO0FBRTFGLE1BQU0sQ0FBQyxNQUFNLDZCQUE2QixHQUFHLHlCQUF5QixDQUNsRSxjQUFjLENBQUMscUJBQXFCLENBQUMsQ0FDeEMsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLGlCQUFpQixHQUFHLHlCQUF5QixDQUFDLGNBQWMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO0FBRXBGLE1BQU0sQ0FBQyxNQUFNLG9CQUFvQixHQUFHLHlCQUF5QixDQUN6RCxjQUFjLENBQUMsWUFBWSxDQUFDLENBQy9CLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxjQUFjLEdBQUcseUJBQXlCLENBQUMsY0FBYyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7QUFFaEYsTUFBTSxDQUFDLE1BQU0sY0FBYyxHQUFHLHlCQUF5QixDQUVyRCxjQUFjLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQztBQUUvQixNQUFNLENBQUMsTUFBTSw2QkFBNkIsR0FBRyx5QkFBeUIsQ0FDbEUsY0FBYyxDQUFDLHlCQUF5QixDQUFDLENBQzVDLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxjQUFjLEdBQUcseUJBQXlCLENBQUMsY0FBYyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUM7QUFFckYsTUFBTSxDQUFDLE1BQU0sa0JBQWtCLEdBQUcseUJBQXlCLENBQ3ZELGNBQWMsQ0FBQyxlQUFlLENBQUMsQ0FDbEMsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLG1CQUFtQixHQUFHLHlCQUF5QixDQUN4RCxjQUFjLENBQUMscUJBQXFCLENBQUMsQ0FDeEMsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLGNBQWMsR0FBRyx5QkFBeUIsQ0FBQyxjQUFjLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQztBQUVyRixNQUFNLENBQUMsTUFBTSxvQkFBb0IsR0FBRyx5QkFBeUIsQ0FDekQsY0FBYyxDQUFDLFlBQVksQ0FBQyxDQUMvQixDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sb0JBQW9CLEdBQUcseUJBQXlCLENBQ3pELGNBQWMsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUNuQyxDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sc0JBQXNCLEdBQUcseUJBQXlCLENBQzNELGNBQWMsQ0FBQyxrQkFBa0IsQ0FBQyxDQUNyQyxDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sYUFBYSxHQUFHLHlCQUF5QixDQUVwRCxjQUFjLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQztBQUUvQixNQUFNLENBQUMsTUFBTSxpQkFBaUIsR0FBRyx5QkFBeUIsQ0FDdEQsY0FBYyxDQUFDLGNBQWMsQ0FBQyxDQUNqQyxDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sc0JBQXNCLEdBQUcseUJBQXlCLENBQzNELGNBQWMsQ0FBQyxXQUFXLENBQUMsQ0FDOUIsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLHdCQUF3QixHQUFHLHlCQUF5QixDQUM3RCxjQUFjLENBQUMsYUFBYSxDQUFDLENBQ2hDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7VHVpRGF0ZU1vZGV9IGZyb20gJ0B0YWlnYS11aS9jZGsvZGF0ZS10aW1lJztcbmltcG9ydCB7dHVpQ3JlYXRlVG9rZW5Gcm9tRmFjdG9yeX0gZnJvbSAnQHRhaWdhLXVpL2Nkay91dGlscy9taXNjZWxsYW5lb3VzJztcbmltcG9ydCB0eXBlIHtUdWlDb3VudHJ5SXNvQ29kZX0gZnJvbSAnQHRhaWdhLXVpL2kxOG4vdHlwZXMnO1xuaW1wb3J0IHt0dWlFeHRyYWN0STE4bn0gZnJvbSAnQHRhaWdhLXVpL2kxOG4vdXRpbHMnO1xuaW1wb3J0IHR5cGUge09ic2VydmFibGV9IGZyb20gJ3J4anMnO1xuXG5leHBvcnQgY29uc3QgVFVJX0NPTkZJUk1fV09SRFMgPSB0dWlDcmVhdGVUb2tlbkZyb21GYWN0b3J5KHR1aUV4dHJhY3RJMThuKCdjb25maXJtJykpO1xuXG5leHBvcnQgY29uc3QgVFVJX0NBTkNFTF9XT1JEID0gdHVpQ3JlYXRlVG9rZW5Gcm9tRmFjdG9yeSh0dWlFeHRyYWN0STE4bignY2FuY2VsJykpO1xuXG5leHBvcnQgY29uc3QgVFVJX0RPTkVfV09SRCA9IHR1aUNyZWF0ZVRva2VuRnJvbUZhY3RvcnkodHVpRXh0cmFjdEkxOG4oJ2RvbmUnKSk7XG5cbmV4cG9ydCBjb25zdCBUVUlfTU9SRV9XT1JEID0gdHVpQ3JlYXRlVG9rZW5Gcm9tRmFjdG9yeSh0dWlFeHRyYWN0STE4bignbW9yZScpKTtcblxuZXhwb3J0IGNvbnN0IFRVSV9ISURFX1RFWFQgPSB0dWlDcmVhdGVUb2tlbkZyb21GYWN0b3J5KHR1aUV4dHJhY3RJMThuKCdoaWRlJykpO1xuXG5leHBvcnQgY29uc3QgVFVJX1NIT1dfQUxMX1RFWFQgPSB0dWlDcmVhdGVUb2tlbkZyb21GYWN0b3J5KHR1aUV4dHJhY3RJMThuKCdzaG93QWxsJykpO1xuXG5leHBvcnQgY29uc3QgVFVJX09USEVSX0RBVEVfVEVYVCA9IHR1aUNyZWF0ZVRva2VuRnJvbUZhY3RvcnkodHVpRXh0cmFjdEkxOG4oJ290aGVyRGF0ZScpKTtcblxuZXhwb3J0IGNvbnN0IFRVSV9DSE9PU0VfREFZX09SX1JBTkdFX1RFWFRTID0gdHVpQ3JlYXRlVG9rZW5Gcm9tRmFjdG9yeShcbiAgICB0dWlFeHRyYWN0STE4bignbW9iaWxlQ2FsZW5kYXJUZXh0cycpLFxuKTtcblxuZXhwb3J0IGNvbnN0IFRVSV9GUk9NX1RPX1RFWFRTID0gdHVpQ3JlYXRlVG9rZW5Gcm9tRmFjdG9yeSh0dWlFeHRyYWN0STE4bigncmFuZ2UnKSk7XG5cbmV4cG9ydCBjb25zdCBUVUlfUExVU19NSU5VU19URVhUUyA9IHR1aUNyZWF0ZVRva2VuRnJvbUZhY3RvcnkoXG4gICAgdHVpRXh0cmFjdEkxOG4oJ2NvdW50VGV4dHMnKSxcbik7XG5cbmV4cG9ydCBjb25zdCBUVUlfVElNRV9URVhUUyA9IHR1aUNyZWF0ZVRva2VuRnJvbUZhY3RvcnkodHVpRXh0cmFjdEkxOG4oJ3RpbWUnKSk7XG5cbmV4cG9ydCBjb25zdCBUVUlfREFURV9URVhUUyA9IHR1aUNyZWF0ZVRva2VuRnJvbUZhY3Rvcnk8XG4gICAgT2JzZXJ2YWJsZTxSZWNvcmQ8VHVpRGF0ZU1vZGUsIHN0cmluZz4+XG4+KHR1aUV4dHJhY3RJMThuKCdkYXRlVGV4dHMnKSk7XG5cbmV4cG9ydCBjb25zdCBUVUlfRElHSVRBTF9JTkZPUk1BVElPTl9VTklUUyA9IHR1aUNyZWF0ZVRva2VuRnJvbUZhY3RvcnkoXG4gICAgdHVpRXh0cmFjdEkxOG4oJ2RpZ2l0YWxJbmZvcm1hdGlvblVuaXRzJyksXG4pO1xuXG5leHBvcnQgY29uc3QgVFVJX0NPUFlfVEVYVFMgPSB0dWlDcmVhdGVUb2tlbkZyb21GYWN0b3J5KHR1aUV4dHJhY3RJMThuKCdjb3B5VGV4dHMnKSk7XG5cbmV4cG9ydCBjb25zdCBUVUlfUEFTU1dPUkRfVEVYVFMgPSB0dWlDcmVhdGVUb2tlbkZyb21GYWN0b3J5KFxuICAgIHR1aUV4dHJhY3RJMThuKCdwYXNzd29yZFRleHRzJyksXG4pO1xuXG5leHBvcnQgY29uc3QgVFVJX0NBTEVOREFSX01PTlRIUyA9IHR1aUNyZWF0ZVRva2VuRnJvbUZhY3RvcnkoXG4gICAgdHVpRXh0cmFjdEkxOG4oJ3Nob3J0Q2FsZW5kYXJNb250aHMnKSxcbik7XG5cbmV4cG9ydCBjb25zdCBUVUlfRklMRV9URVhUUyA9IHR1aUNyZWF0ZVRva2VuRnJvbUZhY3RvcnkodHVpRXh0cmFjdEkxOG4oJ2ZpbGVUZXh0cycpKTtcblxuZXhwb3J0IGNvbnN0IFRVSV9QQUdJTkFUSU9OX1RFWFRTID0gdHVpQ3JlYXRlVG9rZW5Gcm9tRmFjdG9yeShcbiAgICB0dWlFeHRyYWN0STE4bigncGFnaW5hdGlvbicpLFxuKTtcblxuZXhwb3J0IGNvbnN0IFRVSV9JTlBVVF9GSUxFX1RFWFRTID0gdHVpQ3JlYXRlVG9rZW5Gcm9tRmFjdG9yeShcbiAgICB0dWlFeHRyYWN0STE4bignaW5wdXRGaWxlVGV4dHMnKSxcbik7XG5cbmV4cG9ydCBjb25zdCBUVUlfTVVMVElfU0VMRUNUX1RFWFRTID0gdHVpQ3JlYXRlVG9rZW5Gcm9tRmFjdG9yeShcbiAgICB0dWlFeHRyYWN0STE4bignbXVsdGlTZWxlY3RUZXh0cycpLFxuKTtcblxuZXhwb3J0IGNvbnN0IFRVSV9DT1VOVFJJRVMgPSB0dWlDcmVhdGVUb2tlbkZyb21GYWN0b3J5PFxuICAgIE9ic2VydmFibGU8UmVjb3JkPFR1aUNvdW50cnlJc29Db2RlLCBzdHJpbmc+PlxuPih0dWlFeHRyYWN0STE4bignY291bnRyaWVzJykpO1xuXG5leHBvcnQgY29uc3QgVFVJX1BSRVZJRVdfVEVYVFMgPSB0dWlDcmVhdGVUb2tlbkZyb21GYWN0b3J5KFxuICAgIHR1aUV4dHJhY3RJMThuKCdwcmV2aWV3VGV4dHMnKSxcbik7XG5cbmV4cG9ydCBjb25zdCBUVUlfUFJFVklFV19aT09NX1RFWFRTID0gdHVpQ3JlYXRlVG9rZW5Gcm9tRmFjdG9yeShcbiAgICB0dWlFeHRyYWN0STE4bignem9vbVRleHRzJyksXG4pO1xuXG5leHBvcnQgY29uc3QgVFVJX0lOVEVSTkFUSU9OQUxfU0VBUkNIID0gdHVpQ3JlYXRlVG9rZW5Gcm9tRmFjdG9yeShcbiAgICB0dWlFeHRyYWN0STE4bigncGhvbmVTZWFyY2gnKSxcbik7XG4iXX0=