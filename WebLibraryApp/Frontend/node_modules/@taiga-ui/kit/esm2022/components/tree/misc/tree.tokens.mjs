import { tuiCreateToken } from '@taiga-ui/cdk/utils/miscellaneous';
import { TUI_DEFAULT_TREE_CONTROLLER, TUI_TREE_ITEM_CONTENT } from './tree.constants';
/**
 * Controller for tracking value - TuiTreeItemComponent pairs
 */
export const TUI_TREE_ACCESSOR = tuiCreateToken();
/**
 * Controller for expanding the tree
 */
export const TUI_TREE_CONTROLLER = tuiCreateToken(TUI_DEFAULT_TREE_CONTROLLER);
/**
 * A node of a tree view
 */
export const TUI_TREE_NODE = tuiCreateToken();
/**
 * A tree node placeholder for loading
 */
export const TUI_TREE_LOADING = tuiCreateToken({});
/**
 * A tree node starting point
 */
export const TUI_TREE_START = tuiCreateToken();
/**
 * A service to load tree progressively
 */
export const TUI_TREE_LOADER = tuiCreateToken();
/**
 * Content for a tree item
 */
export const TUI_TREE_CONTENT = tuiCreateToken(TUI_TREE_ITEM_CONTENT);
/**
 * Nesting level of current TreeView node
 */
export const TUI_TREE_LEVEL = tuiCreateToken(-1);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJlZS50b2tlbnMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9raXQvY29tcG9uZW50cy90cmVlL21pc2MvdHJlZS50b2tlbnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLGNBQWMsRUFBQyxNQUFNLG1DQUFtQyxDQUFDO0FBR2pFLE9BQU8sRUFBQywyQkFBMkIsRUFBRSxxQkFBcUIsRUFBQyxNQUFNLGtCQUFrQixDQUFDO0FBR3BGOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0saUJBQWlCLEdBQUcsY0FBYyxFQUE0QixDQUFDO0FBRTVFOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sbUJBQW1CLEdBQUcsY0FBYyxDQUFDLDJCQUEyQixDQUFDLENBQUM7QUFFL0U7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxhQUFhLEdBQUcsY0FBYyxFQUFFLENBQUM7QUFFOUM7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxnQkFBZ0IsR0FBRyxjQUFjLENBQUMsRUFBRSxDQUFDLENBQUM7QUFFbkQ7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxjQUFjLEdBQUcsY0FBYyxFQUFFLENBQUM7QUFFL0M7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxlQUFlLEdBQUcsY0FBYyxFQUEwQixDQUFDO0FBRXhFOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sZ0JBQWdCLEdBQ3pCLGNBQWMsQ0FBMEMscUJBQXFCLENBQUMsQ0FBQztBQUVuRjs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLGNBQWMsR0FBRyxjQUFjLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7dHVpQ3JlYXRlVG9rZW59IGZyb20gJ0B0YWlnYS11aS9jZGsvdXRpbHMvbWlzY2VsbGFuZW91cyc7XG5pbXBvcnQgdHlwZSB7UG9seW1vcnBoZXVzQ29udGVudH0gZnJvbSAnQHRhaWdhLXVpL3BvbHltb3JwaGV1cyc7XG5cbmltcG9ydCB7VFVJX0RFRkFVTFRfVFJFRV9DT05UUk9MTEVSLCBUVUlfVFJFRV9JVEVNX0NPTlRFTlR9IGZyb20gJy4vdHJlZS5jb25zdGFudHMnO1xuaW1wb3J0IHR5cGUge1R1aVRyZWVBY2Nlc3NvciwgVHVpVHJlZUl0ZW1Db250ZXh0LCBUdWlUcmVlTG9hZGVyfSBmcm9tICcuL3RyZWUuaW50ZXJmYWNlcyc7XG5cbi8qKlxuICogQ29udHJvbGxlciBmb3IgdHJhY2tpbmcgdmFsdWUgLSBUdWlUcmVlSXRlbUNvbXBvbmVudCBwYWlyc1xuICovXG5leHBvcnQgY29uc3QgVFVJX1RSRUVfQUNDRVNTT1IgPSB0dWlDcmVhdGVUb2tlbjxUdWlUcmVlQWNjZXNzb3I8dW5rbm93bj4+KCk7XG5cbi8qKlxuICogQ29udHJvbGxlciBmb3IgZXhwYW5kaW5nIHRoZSB0cmVlXG4gKi9cbmV4cG9ydCBjb25zdCBUVUlfVFJFRV9DT05UUk9MTEVSID0gdHVpQ3JlYXRlVG9rZW4oVFVJX0RFRkFVTFRfVFJFRV9DT05UUk9MTEVSKTtcblxuLyoqXG4gKiBBIG5vZGUgb2YgYSB0cmVlIHZpZXdcbiAqL1xuZXhwb3J0IGNvbnN0IFRVSV9UUkVFX05PREUgPSB0dWlDcmVhdGVUb2tlbigpO1xuXG4vKipcbiAqIEEgdHJlZSBub2RlIHBsYWNlaG9sZGVyIGZvciBsb2FkaW5nXG4gKi9cbmV4cG9ydCBjb25zdCBUVUlfVFJFRV9MT0FESU5HID0gdHVpQ3JlYXRlVG9rZW4oe30pO1xuXG4vKipcbiAqIEEgdHJlZSBub2RlIHN0YXJ0aW5nIHBvaW50XG4gKi9cbmV4cG9ydCBjb25zdCBUVUlfVFJFRV9TVEFSVCA9IHR1aUNyZWF0ZVRva2VuKCk7XG5cbi8qKlxuICogQSBzZXJ2aWNlIHRvIGxvYWQgdHJlZSBwcm9ncmVzc2l2ZWx5XG4gKi9cbmV4cG9ydCBjb25zdCBUVUlfVFJFRV9MT0FERVIgPSB0dWlDcmVhdGVUb2tlbjxUdWlUcmVlTG9hZGVyPHVua25vd24+PigpO1xuXG4vKipcbiAqIENvbnRlbnQgZm9yIGEgdHJlZSBpdGVtXG4gKi9cbmV4cG9ydCBjb25zdCBUVUlfVFJFRV9DT05URU5UID1cbiAgICB0dWlDcmVhdGVUb2tlbjxQb2x5bW9ycGhldXNDb250ZW50PFR1aVRyZWVJdGVtQ29udGV4dD4+KFRVSV9UUkVFX0lURU1fQ09OVEVOVCk7XG5cbi8qKlxuICogTmVzdGluZyBsZXZlbCBvZiBjdXJyZW50IFRyZWVWaWV3IG5vZGVcbiAqL1xuZXhwb3J0IGNvbnN0IFRVSV9UUkVFX0xFVkVMID0gdHVpQ3JlYXRlVG9rZW4oLTEpO1xuIl19