import { tuiCreateToken } from '@taiga-ui/cdk/utils/miscellaneous';
import { TuiMonthPipe } from '@taiga-ui/core/pipes/month';
import { map, of } from 'rxjs';
/**
 * @deprecated: drop in v5.0
 * A function to get localized formatted month
 */
export const TUI_MONTH_FORMATTER = tuiCreateToken();
export const TUI_MONTH_FORMATTER_PROVIDER = {
    provide: TUI_MONTH_FORMATTER,
    deps: [TuiMonthPipe],
    useFactory: (pipe) => (month) => month
        ? pipe
            .transform(month)
            .pipe(map((formatted) => `${formatted} ${month.formattedYear}`))
        : of(''),
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9udGgtZm9ybWF0dGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvbGVnYWN5L3Rva2Vucy9tb250aC1mb3JtYXR0ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBR0EsT0FBTyxFQUFDLGNBQWMsRUFBQyxNQUFNLG1DQUFtQyxDQUFDO0FBQ2pFLE9BQU8sRUFBQyxZQUFZLEVBQUMsTUFBTSw0QkFBNEIsQ0FBQztBQUV4RCxPQUFPLEVBQUMsR0FBRyxFQUFFLEVBQUUsRUFBQyxNQUFNLE1BQU0sQ0FBQztBQUU3Qjs7O0dBR0c7QUFDSCxNQUFNLENBQUMsTUFBTSxtQkFBbUIsR0FDNUIsY0FBYyxFQUFtRCxDQUFDO0FBRXRFLE1BQU0sQ0FBQyxNQUFNLDRCQUE0QixHQUFvQjtJQUN6RCxPQUFPLEVBQUUsbUJBQW1CO0lBQzVCLElBQUksRUFBRSxDQUFDLFlBQVksQ0FBQztJQUNwQixVQUFVLEVBQ04sQ0FBQyxJQUFrQixFQUFtRCxFQUFFLENBQ3hFLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FDTixLQUFLO1FBQ0QsQ0FBQyxDQUFDLElBQUk7YUFDQyxTQUFTLENBQUMsS0FBSyxDQUFDO2FBQ2hCLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxTQUFTLEVBQUUsRUFBRSxDQUFDLEdBQUcsU0FBUyxJQUFJLEtBQUssQ0FBQyxhQUFhLEVBQUUsQ0FBQyxDQUFDO1FBQ3RFLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDO0NBQ3ZCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7RmFjdG9yeVByb3ZpZGVyfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB0eXBlIHtUdWlNb250aH0gZnJvbSAnQHRhaWdhLXVpL2Nkay9kYXRlLXRpbWUnO1xuaW1wb3J0IHR5cGUge1R1aUhhbmRsZXJ9IGZyb20gJ0B0YWlnYS11aS9jZGsvdHlwZXMnO1xuaW1wb3J0IHt0dWlDcmVhdGVUb2tlbn0gZnJvbSAnQHRhaWdhLXVpL2Nkay91dGlscy9taXNjZWxsYW5lb3VzJztcbmltcG9ydCB7VHVpTW9udGhQaXBlfSBmcm9tICdAdGFpZ2EtdWkvY29yZS9waXBlcy9tb250aCc7XG5pbXBvcnQgdHlwZSB7T2JzZXJ2YWJsZX0gZnJvbSAncnhqcyc7XG5pbXBvcnQge21hcCwgb2Z9IGZyb20gJ3J4anMnO1xuXG4vKipcbiAqIEBkZXByZWNhdGVkOiBkcm9wIGluIHY1LjBcbiAqIEEgZnVuY3Rpb24gdG8gZ2V0IGxvY2FsaXplZCBmb3JtYXR0ZWQgbW9udGhcbiAqL1xuZXhwb3J0IGNvbnN0IFRVSV9NT05USF9GT1JNQVRURVIgPVxuICAgIHR1aUNyZWF0ZVRva2VuPFR1aUhhbmRsZXI8VHVpTW9udGggfCBudWxsLCBPYnNlcnZhYmxlPHN0cmluZz4+PigpO1xuXG5leHBvcnQgY29uc3QgVFVJX01PTlRIX0ZPUk1BVFRFUl9QUk9WSURFUjogRmFjdG9yeVByb3ZpZGVyID0ge1xuICAgIHByb3ZpZGU6IFRVSV9NT05USF9GT1JNQVRURVIsXG4gICAgZGVwczogW1R1aU1vbnRoUGlwZV0sXG4gICAgdXNlRmFjdG9yeTpcbiAgICAgICAgKHBpcGU6IFR1aU1vbnRoUGlwZSk6IFR1aUhhbmRsZXI8VHVpTW9udGggfCBudWxsLCBPYnNlcnZhYmxlPHN0cmluZz4+ID0+XG4gICAgICAgIChtb250aCkgPT5cbiAgICAgICAgICAgIG1vbnRoXG4gICAgICAgICAgICAgICAgPyBwaXBlXG4gICAgICAgICAgICAgICAgICAgICAgLnRyYW5zZm9ybShtb250aClcbiAgICAgICAgICAgICAgICAgICAgICAucGlwZShtYXAoKGZvcm1hdHRlZCkgPT4gYCR7Zm9ybWF0dGVkfSAke21vbnRoLmZvcm1hdHRlZFllYXJ9YCkpXG4gICAgICAgICAgICAgICAgOiBvZignJyksXG59O1xuIl19