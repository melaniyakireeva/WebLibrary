import { Directive, inject } from '@angular/core';
import { DATE_FILLER_LENGTH, TuiDay } from '@taiga-ui/cdk/date-time';
import { tuiAsTextfieldHost } from '@taiga-ui/legacy/tokens';
import { TuiInputDateDirective } from '../input-date.directive';
import * as i0 from "@angular/core";
class TuiNativeDateDirective {
    constructor() {
        this.host = inject(TuiInputDateDirective);
    }
    get value() {
        return this.host.value.length === DATE_FILLER_LENGTH
            ? TuiDay.normalizeParse(this.host.value, this.host.format.mode).toString('YMD', '-')
            : '';
    }
    get max() {
        return this.host.max.toJSON();
    }
    get min() {
        return this.host.min.toJSON();
    }
    onChange(value) {
        this.host.onValueChange(value
            ? TuiDay.normalizeParse(value, 'YMD').toString(this.host.format.mode)
            : '');
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiNativeDateDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "16.2.12", type: TuiNativeDateDirective, selector: "input[tuiDate]", host: { attributes: { "type": "date" }, listeners: { "change": "onChange($event.target.value)", "click.stop.silent": "0", "input.stop.silent": "0", "mousedown.stop.silent": "0" }, properties: { "tabIndex": "-1", "value": "value", "max": "max", "min": "min" } }, providers: [tuiAsTextfieldHost(TuiInputDateDirective)], ngImport: i0 }); }
}
export { TuiNativeDateDirective };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiNativeDateDirective, decorators: [{
            type: Directive,
            args: [{
                    standalone: false,
                    selector: 'input[tuiDate]',
                    providers: [tuiAsTextfieldHost(TuiInputDateDirective)],
                    host: {
                        type: 'date',
                        '[tabIndex]': '-1',
                        '[value]': 'value',
                        '(change)': 'onChange($event.target.value)',
                        '[max]': 'max',
                        '[min]': 'min',
                        '(click.stop.silent)': '0',
                        '(input.stop.silent)': '0',
                        '(mousedown.stop.silent)': '0',
                    },
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmF0aXZlLWRhdGUuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbGVnYWN5L2NvbXBvbmVudHMvaW5wdXQtZGF0ZS9uYXRpdmUtZGF0ZS9uYXRpdmUtZGF0ZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxNQUFNLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDaEQsT0FBTyxFQUFDLGtCQUFrQixFQUFFLE1BQU0sRUFBQyxNQUFNLHlCQUF5QixDQUFDO0FBQ25FLE9BQU8sRUFBQyxrQkFBa0IsRUFBQyxNQUFNLHlCQUF5QixDQUFDO0FBRTNELE9BQU8sRUFBQyxxQkFBcUIsRUFBQyxNQUFNLHlCQUF5QixDQUFDOztBQUU5RCxNQWdCYSxzQkFBc0I7SUFoQm5DO1FBaUJ1QixTQUFJLEdBQUcsTUFBTSxDQUFDLHFCQUFxQixDQUFDLENBQUM7S0EwQjNEO0lBeEJHLElBQWMsS0FBSztRQUNmLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxLQUFLLGtCQUFrQjtZQUNoRCxDQUFDLENBQUMsTUFBTSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxRQUFRLENBQ2xFLEtBQUssRUFDTCxHQUFHLENBQ047WUFDSCxDQUFDLENBQUMsRUFBRSxDQUFDO0lBQ2IsQ0FBQztJQUVELElBQWMsR0FBRztRQUNiLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsTUFBTSxFQUFFLENBQUM7SUFDbEMsQ0FBQztJQUVELElBQWMsR0FBRztRQUNiLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsTUFBTSxFQUFFLENBQUM7SUFDbEMsQ0FBQztJQUVTLFFBQVEsQ0FBQyxLQUFhO1FBQzVCLElBQUksQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUNuQixLQUFLO1lBQ0QsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxjQUFjLENBQUMsS0FBSyxFQUFFLEtBQUssQ0FBQyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUM7WUFDckUsQ0FBQyxDQUFDLEVBQUUsQ0FDWCxDQUFDO0lBQ04sQ0FBQzsrR0ExQlEsc0JBQXNCO21HQUF0QixzQkFBc0IsK1NBYnBCLENBQUMsa0JBQWtCLENBQUMscUJBQXFCLENBQUMsQ0FBQzs7U0FhN0Msc0JBQXNCOzRGQUF0QixzQkFBc0I7a0JBaEJsQyxTQUFTO21CQUFDO29CQUNQLFVBQVUsRUFBRSxLQUFLO29CQUNqQixRQUFRLEVBQUUsZ0JBQWdCO29CQUMxQixTQUFTLEVBQUUsQ0FBQyxrQkFBa0IsQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDO29CQUN0RCxJQUFJLEVBQUU7d0JBQ0YsSUFBSSxFQUFFLE1BQU07d0JBQ1osWUFBWSxFQUFFLElBQUk7d0JBQ2xCLFNBQVMsRUFBRSxPQUFPO3dCQUNsQixVQUFVLEVBQUUsK0JBQStCO3dCQUMzQyxPQUFPLEVBQUUsS0FBSzt3QkFDZCxPQUFPLEVBQUUsS0FBSzt3QkFDZCxxQkFBcUIsRUFBRSxHQUFHO3dCQUMxQixxQkFBcUIsRUFBRSxHQUFHO3dCQUMxQix5QkFBeUIsRUFBRSxHQUFHO3FCQUNqQztpQkFDSiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7RGlyZWN0aXZlLCBpbmplY3R9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtEQVRFX0ZJTExFUl9MRU5HVEgsIFR1aURheX0gZnJvbSAnQHRhaWdhLXVpL2Nkay9kYXRlLXRpbWUnO1xuaW1wb3J0IHt0dWlBc1RleHRmaWVsZEhvc3R9IGZyb20gJ0B0YWlnYS11aS9sZWdhY3kvdG9rZW5zJztcblxuaW1wb3J0IHtUdWlJbnB1dERhdGVEaXJlY3RpdmV9IGZyb20gJy4uL2lucHV0LWRhdGUuZGlyZWN0aXZlJztcblxuQERpcmVjdGl2ZSh7XG4gICAgc3RhbmRhbG9uZTogZmFsc2UsXG4gICAgc2VsZWN0b3I6ICdpbnB1dFt0dWlEYXRlXScsXG4gICAgcHJvdmlkZXJzOiBbdHVpQXNUZXh0ZmllbGRIb3N0KFR1aUlucHV0RGF0ZURpcmVjdGl2ZSldLFxuICAgIGhvc3Q6IHtcbiAgICAgICAgdHlwZTogJ2RhdGUnLFxuICAgICAgICAnW3RhYkluZGV4XSc6ICctMScsXG4gICAgICAgICdbdmFsdWVdJzogJ3ZhbHVlJyxcbiAgICAgICAgJyhjaGFuZ2UpJzogJ29uQ2hhbmdlKCRldmVudC50YXJnZXQudmFsdWUpJyxcbiAgICAgICAgJ1ttYXhdJzogJ21heCcsXG4gICAgICAgICdbbWluXSc6ICdtaW4nLFxuICAgICAgICAnKGNsaWNrLnN0b3Auc2lsZW50KSc6ICcwJyxcbiAgICAgICAgJyhpbnB1dC5zdG9wLnNpbGVudCknOiAnMCcsXG4gICAgICAgICcobW91c2Vkb3duLnN0b3Auc2lsZW50KSc6ICcwJyxcbiAgICB9LFxufSlcbmV4cG9ydCBjbGFzcyBUdWlOYXRpdmVEYXRlRGlyZWN0aXZlIHtcbiAgICBwcm90ZWN0ZWQgcmVhZG9ubHkgaG9zdCA9IGluamVjdChUdWlJbnB1dERhdGVEaXJlY3RpdmUpO1xuXG4gICAgcHJvdGVjdGVkIGdldCB2YWx1ZSgpOiBzdHJpbmcge1xuICAgICAgICByZXR1cm4gdGhpcy5ob3N0LnZhbHVlLmxlbmd0aCA9PT0gREFURV9GSUxMRVJfTEVOR1RIXG4gICAgICAgICAgICA/IFR1aURheS5ub3JtYWxpemVQYXJzZSh0aGlzLmhvc3QudmFsdWUsIHRoaXMuaG9zdC5mb3JtYXQubW9kZSkudG9TdHJpbmcoXG4gICAgICAgICAgICAgICAgICAnWU1EJyxcbiAgICAgICAgICAgICAgICAgICctJyxcbiAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgOiAnJztcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgZ2V0IG1heCgpOiBzdHJpbmcge1xuICAgICAgICByZXR1cm4gdGhpcy5ob3N0Lm1heC50b0pTT04oKTtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgZ2V0IG1pbigpOiBzdHJpbmcge1xuICAgICAgICByZXR1cm4gdGhpcy5ob3N0Lm1pbi50b0pTT04oKTtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgb25DaGFuZ2UodmFsdWU6IHN0cmluZyk6IHZvaWQge1xuICAgICAgICB0aGlzLmhvc3Qub25WYWx1ZUNoYW5nZShcbiAgICAgICAgICAgIHZhbHVlXG4gICAgICAgICAgICAgICAgPyBUdWlEYXkubm9ybWFsaXplUGFyc2UodmFsdWUsICdZTUQnKS50b1N0cmluZyh0aGlzLmhvc3QuZm9ybWF0Lm1vZGUpXG4gICAgICAgICAgICAgICAgOiAnJyxcbiAgICAgICAgKTtcbiAgICB9XG59XG4iXX0=