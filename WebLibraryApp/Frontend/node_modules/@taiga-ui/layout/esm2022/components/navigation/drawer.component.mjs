import { ChangeDetectionStrategy, Component, inject, TemplateRef, ViewChild, } from '@angular/core';
import { TuiActiveZone } from '@taiga-ui/cdk/directives/active-zone';
import { tuiSlideInLeft } from '@taiga-ui/core/animations';
import { tuiButtonOptionsProvider } from '@taiga-ui/core/components/button';
import { TuiScrollbar } from '@taiga-ui/core/components/scrollbar';
import { TUI_DROPDOWN_COMPONENT, tuiDropdown, TuiDropdownDirective, TuiDropdownOpen, TuiWithDropdownOpen, } from '@taiga-ui/core/directives/dropdown';
import { TuiIcons } from '@taiga-ui/core/directives/icons';
import { TUI_ANIMATIONS_SPEED, TUI_COMMON_ICONS, TUI_ICON_END, } from '@taiga-ui/core/tokens';
import { tuiToAnimationOptions } from '@taiga-ui/core/utils/miscellaneous';
import { TUI_LAYOUT_ICONS } from '@taiga-ui/layout/tokens';
import { PolymorpheusOutlet } from '@taiga-ui/polymorpheus';
import * as i0 from "@angular/core";
import * as i1 from "@taiga-ui/cdk/directives/active-zone";
import * as i2 from "@taiga-ui/core/directives/dropdown";
class TuiDrawerComponent {
    constructor() {
        this.directive = inject(TuiDropdownDirective);
        this.animation = tuiToAnimationOptions(inject(TUI_ANIMATIONS_SPEED));
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiDrawerComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: TuiDrawerComponent, isStandalone: true, selector: "ng-component", host: { attributes: { "tuiTheme": "dark" }, properties: { "@tuiSlideInLeft": "animation", "style.top.px": "directive.el.offsetParent?.offsetTop + directive.el.offsetParent?.offsetHeight" } }, hostDirectives: [{ directive: i1.TuiActiveZone }], ngImport: i0, template: `
        <tui-scrollbar [style.height.%]="100">
            <ng-container *polymorpheusOutlet="directive.content" />
        </tui-scrollbar>
    `, isInline: true, styles: [":host{position:fixed;left:0;right:0;background:var(--tui-theme-color, #000);inline-size:15rem;color:var(--tui-text-primary);pointer-events:auto}:host ::ng-deep tui-data-list [tuiOption]{justify-content:flex-start;gap:.75rem;margin:0;font:var(--tui-font-text-ui-s);font-weight:700}:host ::ng-deep tui-data-list tui-opt-group:before{font:var(--tui-font-text-xs);text-transform:uppercase;color:var(--tui-text-tertiary)}\n"], dependencies: [{ kind: "directive", type: PolymorpheusOutlet, selector: "[polymorpheusOutlet]", inputs: ["polymorpheusOutlet", "polymorpheusOutletContext"] }, { kind: "component", type: TuiScrollbar, selector: "tui-scrollbar", inputs: ["hidden"] }], animations: [tuiSlideInLeft], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiDrawerComponent, decorators: [{
            type: Component,
            args: [{ standalone: true, imports: [PolymorpheusOutlet, TuiScrollbar], template: `
        <tui-scrollbar [style.height.%]="100">
            <ng-container *polymorpheusOutlet="directive.content" />
        </tui-scrollbar>
    `, changeDetection: ChangeDetectionStrategy.OnPush, animations: [tuiSlideInLeft], hostDirectives: [TuiActiveZone], host: {
                        tuiTheme: 'dark',
                        '[@tuiSlideInLeft]': 'animation',
                        '[style.top.px]': 'directive.el.offsetParent?.offsetTop + directive.el.offsetParent?.offsetHeight',
                    }, styles: [":host{position:fixed;left:0;right:0;background:var(--tui-theme-color, #000);inline-size:15rem;color:var(--tui-text-primary);pointer-events:auto}:host ::ng-deep tui-data-list [tuiOption]{justify-content:flex-start;gap:.75rem;margin:0;font:var(--tui-font-text-ui-s);font-weight:700}:host ::ng-deep tui-data-list tui-opt-group:before{font:var(--tui-font-text-xs);text-transform:uppercase;color:var(--tui-text-tertiary)}\n"] }]
        }] });
class TuiDrawerDirective {
    constructor() {
        this.x = inject(TUI_COMMON_ICONS).close;
        this.icons = inject(TuiIcons);
        this.dropdown = tuiDropdown(null);
        this.open = inject(TuiDropdownOpen);
    }
    ngDoCheck() {
        this.icons.iconStart = this.open.tuiDropdownOpen ? this.x : '';
    }
    set template(template) {
        this.dropdown.set(template);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiDrawerDirective, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: TuiDrawerDirective, isStandalone: true, selector: "[tuiIconButton][tuiNavigationDrawer]", providers: [
            tuiButtonOptionsProvider({ appearance: 'secondary-grayscale' }),
            {
                provide: TUI_ICON_END,
                useFactory: () => inject(TUI_LAYOUT_ICONS).grid,
            },
            {
                provide: TUI_DROPDOWN_COMPONENT,
                useValue: TuiDrawerComponent,
            },
        ], viewQueries: [{ propertyName: "template", first: true, predicate: TemplateRef, descendants: true }], hostDirectives: [{ directive: i2.TuiDropdownDirective }, { directive: i2.TuiWithDropdownOpen }], ngImport: i0, template: '<ng-template><ng-content /></ng-template>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
export { TuiDrawerDirective };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiDrawerDirective, decorators: [{
            type: Component,
            args: [{
                    standalone: true,
                    selector: '[tuiIconButton][tuiNavigationDrawer]',
                    template: '<ng-template><ng-content /></ng-template>',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    providers: [
                        tuiButtonOptionsProvider({ appearance: 'secondary-grayscale' }),
                        {
                            provide: TUI_ICON_END,
                            useFactory: () => inject(TUI_LAYOUT_ICONS).grid,
                        },
                        {
                            provide: TUI_DROPDOWN_COMPONENT,
                            useValue: TuiDrawerComponent,
                        },
                    ],
                    hostDirectives: [TuiDropdownDirective, TuiWithDropdownOpen],
                }]
        }], propDecorators: { template: [{
                type: ViewChild,
                args: [TemplateRef]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJhd2VyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2xheW91dC9jb21wb25lbnRzL25hdmlnYXRpb24vZHJhd2VyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQ0gsdUJBQXVCLEVBQ3ZCLFNBQVMsRUFDVCxNQUFNLEVBQ04sV0FBVyxFQUNYLFNBQVMsR0FDWixNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQUMsYUFBYSxFQUFDLE1BQU0sc0NBQXNDLENBQUM7QUFDbkUsT0FBTyxFQUFDLGNBQWMsRUFBQyxNQUFNLDJCQUEyQixDQUFDO0FBQ3pELE9BQU8sRUFBQyx3QkFBd0IsRUFBQyxNQUFNLGtDQUFrQyxDQUFDO0FBQzFFLE9BQU8sRUFBQyxZQUFZLEVBQUMsTUFBTSxxQ0FBcUMsQ0FBQztBQUNqRSxPQUFPLEVBQ0gsc0JBQXNCLEVBQ3RCLFdBQVcsRUFDWCxvQkFBb0IsRUFDcEIsZUFBZSxFQUNmLG1CQUFtQixHQUN0QixNQUFNLG9DQUFvQyxDQUFDO0FBQzVDLE9BQU8sRUFBQyxRQUFRLEVBQUMsTUFBTSxpQ0FBaUMsQ0FBQztBQUN6RCxPQUFPLEVBQ0gsb0JBQW9CLEVBQ3BCLGdCQUFnQixFQUNoQixZQUFZLEdBQ2YsTUFBTSx1QkFBdUIsQ0FBQztBQUMvQixPQUFPLEVBQUMscUJBQXFCLEVBQUMsTUFBTSxvQ0FBb0MsQ0FBQztBQUN6RSxPQUFPLEVBQUMsZ0JBQWdCLEVBQUMsTUFBTSx5QkFBeUIsQ0FBQztBQUV6RCxPQUFPLEVBQUMsa0JBQWtCLEVBQUMsTUFBTSx3QkFBd0IsQ0FBQzs7OztBQUUxRCxNQW1CTSxrQkFBa0I7SUFuQnhCO1FBb0J1QixjQUFTLEdBQUcsTUFBTSxDQUFDLG9CQUFvQixDQUFDLENBQUM7UUFDekMsY0FBUyxHQUFHLHFCQUFxQixDQUFDLE1BQU0sQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDLENBQUM7S0FDdEY7K0dBSEssa0JBQWtCO21HQUFsQixrQkFBa0IsMlRBaEJWOzs7O0tBSVQsNGVBTFMsa0JBQWtCLDhIQUFFLFlBQVksZ0VBUTlCLENBQUMsY0FBYyxDQUFDOzs0RkFTMUIsa0JBQWtCO2tCQW5CdkIsU0FBUztpQ0FDTSxJQUFJLFdBQ1AsQ0FBQyxrQkFBa0IsRUFBRSxZQUFZLENBQUMsWUFDakM7Ozs7S0FJVCxtQkFFZ0IsdUJBQXVCLENBQUMsTUFBTSxjQUNuQyxDQUFDLGNBQWMsQ0FBQyxrQkFDWixDQUFDLGFBQWEsQ0FBQyxRQUN6Qjt3QkFDRixRQUFRLEVBQUUsTUFBTTt3QkFDaEIsbUJBQW1CLEVBQUUsV0FBVzt3QkFDaEMsZ0JBQWdCLEVBQ1osZ0ZBQWdGO3FCQUN2Rjs7QUFPTCxNQWtCYSxrQkFBa0I7SUFsQi9CO1FBbUJxQixNQUFDLEdBQUcsTUFBTSxDQUFDLGdCQUFnQixDQUFDLENBQUMsS0FBSyxDQUFDO1FBQ25DLFVBQUssR0FBRyxNQUFNLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDekIsYUFBUSxHQUFHLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUM3QixTQUFJLEdBQUcsTUFBTSxDQUFDLGVBQWUsQ0FBQyxDQUFDO0tBVW5EO0lBUlUsU0FBUztRQUNaLElBQUksQ0FBQyxLQUFLLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsZUFBZSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7SUFDbkUsQ0FBQztJQUVELElBQ2MsUUFBUSxDQUFDLFFBQTZCO1FBQ2hELElBQUksQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ2hDLENBQUM7K0dBYlEsa0JBQWtCO21HQUFsQixrQkFBa0IsbUZBYmhCO1lBQ1Asd0JBQXdCLENBQUMsRUFBQyxVQUFVLEVBQUUscUJBQXFCLEVBQUMsQ0FBQztZQUM3RDtnQkFDSSxPQUFPLEVBQUUsWUFBWTtnQkFDckIsVUFBVSxFQUFFLEdBQUcsRUFBRSxDQUFDLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLElBQUk7YUFDbEQ7WUFDRDtnQkFDSSxPQUFPLEVBQUUsc0JBQXNCO2dCQUMvQixRQUFRLEVBQUUsa0JBQWtCO2FBQy9CO1NBQ0osb0VBYVUsV0FBVyxpSkF6QlosMkNBQTJDOztTQWU1QyxrQkFBa0I7NEZBQWxCLGtCQUFrQjtrQkFsQjlCLFNBQVM7bUJBQUM7b0JBQ1AsVUFBVSxFQUFFLElBQUk7b0JBQ2hCLFFBQVEsRUFBRSxzQ0FBc0M7b0JBQ2hELFFBQVEsRUFBRSwyQ0FBMkM7b0JBQ3JELGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO29CQUMvQyxTQUFTLEVBQUU7d0JBQ1Asd0JBQXdCLENBQUMsRUFBQyxVQUFVLEVBQUUscUJBQXFCLEVBQUMsQ0FBQzt3QkFDN0Q7NEJBQ0ksT0FBTyxFQUFFLFlBQVk7NEJBQ3JCLFVBQVUsRUFBRSxHQUFHLEVBQUUsQ0FBQyxNQUFNLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxJQUFJO3lCQUNsRDt3QkFDRDs0QkFDSSxPQUFPLEVBQUUsc0JBQXNCOzRCQUMvQixRQUFRLEVBQUUsa0JBQWtCO3lCQUMvQjtxQkFDSjtvQkFDRCxjQUFjLEVBQUUsQ0FBQyxvQkFBb0IsRUFBRSxtQkFBbUIsQ0FBQztpQkFDOUQ7OEJBWWlCLFFBQVE7c0JBRHJCLFNBQVM7dUJBQUMsV0FBVyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHtEb0NoZWNrfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7XG4gICAgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksXG4gICAgQ29tcG9uZW50LFxuICAgIGluamVjdCxcbiAgICBUZW1wbGF0ZVJlZixcbiAgICBWaWV3Q2hpbGQsXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtUdWlBY3RpdmVab25lfSBmcm9tICdAdGFpZ2EtdWkvY2RrL2RpcmVjdGl2ZXMvYWN0aXZlLXpvbmUnO1xuaW1wb3J0IHt0dWlTbGlkZUluTGVmdH0gZnJvbSAnQHRhaWdhLXVpL2NvcmUvYW5pbWF0aW9ucyc7XG5pbXBvcnQge3R1aUJ1dHRvbk9wdGlvbnNQcm92aWRlcn0gZnJvbSAnQHRhaWdhLXVpL2NvcmUvY29tcG9uZW50cy9idXR0b24nO1xuaW1wb3J0IHtUdWlTY3JvbGxiYXJ9IGZyb20gJ0B0YWlnYS11aS9jb3JlL2NvbXBvbmVudHMvc2Nyb2xsYmFyJztcbmltcG9ydCB7XG4gICAgVFVJX0RST1BET1dOX0NPTVBPTkVOVCxcbiAgICB0dWlEcm9wZG93bixcbiAgICBUdWlEcm9wZG93bkRpcmVjdGl2ZSxcbiAgICBUdWlEcm9wZG93bk9wZW4sXG4gICAgVHVpV2l0aERyb3Bkb3duT3Blbixcbn0gZnJvbSAnQHRhaWdhLXVpL2NvcmUvZGlyZWN0aXZlcy9kcm9wZG93bic7XG5pbXBvcnQge1R1aUljb25zfSBmcm9tICdAdGFpZ2EtdWkvY29yZS9kaXJlY3RpdmVzL2ljb25zJztcbmltcG9ydCB7XG4gICAgVFVJX0FOSU1BVElPTlNfU1BFRUQsXG4gICAgVFVJX0NPTU1PTl9JQ09OUyxcbiAgICBUVUlfSUNPTl9FTkQsXG59IGZyb20gJ0B0YWlnYS11aS9jb3JlL3Rva2Vucyc7XG5pbXBvcnQge3R1aVRvQW5pbWF0aW9uT3B0aW9uc30gZnJvbSAnQHRhaWdhLXVpL2NvcmUvdXRpbHMvbWlzY2VsbGFuZW91cyc7XG5pbXBvcnQge1RVSV9MQVlPVVRfSUNPTlN9IGZyb20gJ0B0YWlnYS11aS9sYXlvdXQvdG9rZW5zJztcbmltcG9ydCB0eXBlIHtQb2x5bW9ycGhldXNDb250ZW50fSBmcm9tICdAdGFpZ2EtdWkvcG9seW1vcnBoZXVzJztcbmltcG9ydCB7UG9seW1vcnBoZXVzT3V0bGV0fSBmcm9tICdAdGFpZ2EtdWkvcG9seW1vcnBoZXVzJztcblxuQENvbXBvbmVudCh7XG4gICAgc3RhbmRhbG9uZTogdHJ1ZSxcbiAgICBpbXBvcnRzOiBbUG9seW1vcnBoZXVzT3V0bGV0LCBUdWlTY3JvbGxiYXJdLFxuICAgIHRlbXBsYXRlOiBgXG4gICAgICAgIDx0dWktc2Nyb2xsYmFyIFtzdHlsZS5oZWlnaHQuJV09XCIxMDBcIj5cbiAgICAgICAgICAgIDxuZy1jb250YWluZXIgKnBvbHltb3JwaGV1c091dGxldD1cImRpcmVjdGl2ZS5jb250ZW50XCIgLz5cbiAgICAgICAgPC90dWktc2Nyb2xsYmFyPlxuICAgIGAsXG4gICAgc3R5bGVVcmxzOiBbJy4vZHJhd2VyLnN0eWxlLmxlc3MnXSxcbiAgICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgICBhbmltYXRpb25zOiBbdHVpU2xpZGVJbkxlZnRdLFxuICAgIGhvc3REaXJlY3RpdmVzOiBbVHVpQWN0aXZlWm9uZV0sXG4gICAgaG9zdDoge1xuICAgICAgICB0dWlUaGVtZTogJ2RhcmsnLFxuICAgICAgICAnW0B0dWlTbGlkZUluTGVmdF0nOiAnYW5pbWF0aW9uJyxcbiAgICAgICAgJ1tzdHlsZS50b3AucHhdJzpcbiAgICAgICAgICAgICdkaXJlY3RpdmUuZWwub2Zmc2V0UGFyZW50Py5vZmZzZXRUb3AgKyBkaXJlY3RpdmUuZWwub2Zmc2V0UGFyZW50Py5vZmZzZXRIZWlnaHQnLFxuICAgIH0sXG59KVxuY2xhc3MgVHVpRHJhd2VyQ29tcG9uZW50IHtcbiAgICBwcm90ZWN0ZWQgcmVhZG9ubHkgZGlyZWN0aXZlID0gaW5qZWN0KFR1aURyb3Bkb3duRGlyZWN0aXZlKTtcbiAgICBwcm90ZWN0ZWQgcmVhZG9ubHkgYW5pbWF0aW9uID0gdHVpVG9BbmltYXRpb25PcHRpb25zKGluamVjdChUVUlfQU5JTUFUSU9OU19TUEVFRCkpO1xufVxuXG5AQ29tcG9uZW50KHtcbiAgICBzdGFuZGFsb25lOiB0cnVlLFxuICAgIHNlbGVjdG9yOiAnW3R1aUljb25CdXR0b25dW3R1aU5hdmlnYXRpb25EcmF3ZXJdJyxcbiAgICB0ZW1wbGF0ZTogJzxuZy10ZW1wbGF0ZT48bmctY29udGVudCAvPjwvbmctdGVtcGxhdGU+JyxcbiAgICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgICBwcm92aWRlcnM6IFtcbiAgICAgICAgdHVpQnV0dG9uT3B0aW9uc1Byb3ZpZGVyKHthcHBlYXJhbmNlOiAnc2Vjb25kYXJ5LWdyYXlzY2FsZSd9KSxcbiAgICAgICAge1xuICAgICAgICAgICAgcHJvdmlkZTogVFVJX0lDT05fRU5ELFxuICAgICAgICAgICAgdXNlRmFjdG9yeTogKCkgPT4gaW5qZWN0KFRVSV9MQVlPVVRfSUNPTlMpLmdyaWQsXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIHByb3ZpZGU6IFRVSV9EUk9QRE9XTl9DT01QT05FTlQsXG4gICAgICAgICAgICB1c2VWYWx1ZTogVHVpRHJhd2VyQ29tcG9uZW50LFxuICAgICAgICB9LFxuICAgIF0sXG4gICAgaG9zdERpcmVjdGl2ZXM6IFtUdWlEcm9wZG93bkRpcmVjdGl2ZSwgVHVpV2l0aERyb3Bkb3duT3Blbl0sXG59KVxuZXhwb3J0IGNsYXNzIFR1aURyYXdlckRpcmVjdGl2ZSBpbXBsZW1lbnRzIERvQ2hlY2sge1xuICAgIHByaXZhdGUgcmVhZG9ubHkgeCA9IGluamVjdChUVUlfQ09NTU9OX0lDT05TKS5jbG9zZTtcbiAgICBwcml2YXRlIHJlYWRvbmx5IGljb25zID0gaW5qZWN0KFR1aUljb25zKTtcbiAgICBwcml2YXRlIHJlYWRvbmx5IGRyb3Bkb3duID0gdHVpRHJvcGRvd24obnVsbCk7XG4gICAgcHJpdmF0ZSByZWFkb25seSBvcGVuID0gaW5qZWN0KFR1aURyb3Bkb3duT3Blbik7XG5cbiAgICBwdWJsaWMgbmdEb0NoZWNrKCk6IHZvaWQge1xuICAgICAgICB0aGlzLmljb25zLmljb25TdGFydCA9IHRoaXMub3Blbi50dWlEcm9wZG93bk9wZW4gPyB0aGlzLnggOiAnJztcbiAgICB9XG5cbiAgICBAVmlld0NoaWxkKFRlbXBsYXRlUmVmKVxuICAgIHByb3RlY3RlZCBzZXQgdGVtcGxhdGUodGVtcGxhdGU6IFBvbHltb3JwaGV1c0NvbnRlbnQpIHtcbiAgICAgICAgdGhpcy5kcm9wZG93bi5zZXQodGVtcGxhdGUpO1xuICAgIH1cbn1cbiJdfQ==