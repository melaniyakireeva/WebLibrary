import { ChangeDetectionStrategy, Component, computed, ContentChild, inject, Input, Output, signal, TemplateRef, ViewChild, ViewEncapsulation, } from '@angular/core';
import { toObservable } from '@angular/core/rxjs-interop';
import { tuiDirectiveBinding, tuiProvide } from '@taiga-ui/cdk/utils/miscellaneous';
import { TUI_DATA_LIST_HOST, TuiDataList } from '@taiga-ui/core/components/data-list';
import { TuiExpand } from '@taiga-ui/core/components/expand';
import { TuiDropdownDirective, TuiDropdownHover, TuiDropdownOpen, TuiDropdownPositionSided, } from '@taiga-ui/core/directives/dropdown';
import { TuiChevron } from '@taiga-ui/kit/directives/chevron';
import { PolymorpheusOutlet } from '@taiga-ui/polymorpheus';
import { skip } from 'rxjs';
import { TuiAsideComponent } from './aside.component';
import * as i0 from "@angular/core";
import * as i1 from "@taiga-ui/core/directives/dropdown";
import * as i2 from "@taiga-ui/core/components/data-list";
import * as i3 from "@taiga-ui/core/components/expand";
class TuiAsideGroupComponent {
    constructor() {
        this.aside = inject(TuiAsideComponent);
        this.open = signal(false);
        this.template = null;
        this.expanded = computed(() => this.aside.expanded() && this.open());
        this.binding = tuiDirectiveBinding(TuiDropdownDirective, 'tuiDropdown', computed(() => (this.aside.expanded() ? null : this.datalist)));
        this.openChange = toObservable(this.open).pipe(skip(1));
        this.size = 's';
    }
    set openSetter(open) {
        this.toggle(open);
    }
    toggle(open = !this.open()) {
        this.open.set(open && this.aside.expanded());
        this.chevron?.chevron.set(this.open());
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiAsideGroupComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: TuiAsideGroupComponent, isStandalone: true, selector: "tui-aside-group", inputs: { openSetter: ["open", "openSetter"] }, outputs: { openChange: "openChange" }, providers: [tuiProvide(TUI_DATA_LIST_HOST, TuiAsideGroupComponent)], queries: [{ propertyName: "chevron", first: true, predicate: TuiChevron, descendants: true, static: true }, { propertyName: "template", first: true, predicate: TemplateRef, descendants: true }], viewQueries: [{ propertyName: "datalist", first: true, predicate: ["datalist"], descendants: true, static: true }], hostDirectives: [{ directive: i1.TuiDropdownDirective }, { directive: i1.TuiDropdownHover }, { directive: i1.TuiDropdownPositionSided }, { directive: i1.TuiDropdownOpen }], ngImport: i0, template: "<div\n    #host\n    (click)=\"toggle()\"\n>\n    <ng-content />\n</div>\n<tui-expand [expanded]=\"expanded()\">\n    <ng-container *polymorpheusOutlet=\"template\" />\n</tui-expand>\n<ng-template #datalist>\n    <tui-data-list>\n        <tui-opt-group [label]=\"host.textContent\">\n            <ng-container *polymorpheusOutlet=\"template\" />\n        </tui-opt-group>\n    </tui-data-list>\n</ng-template>\n", dependencies: [{ kind: "directive", type: PolymorpheusOutlet, selector: "[polymorpheusOutlet]", inputs: ["polymorpheusOutlet", "polymorpheusOutletContext"] }, { kind: "component", type: i2.TuiDataListComponent, selector: "tui-data-list", inputs: ["emptyContent", "size"] }, { kind: "directive", type: i2.TuiOptGroup, selector: "tui-opt-group", inputs: ["label"] }, { kind: "component", type: i3.TuiExpandComponent, selector: "tui-expand", inputs: ["async", "expanded"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }
}
export { TuiAsideGroupComponent };
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TuiAsideGroupComponent, decorators: [{
            type: Component,
            args: [{ standalone: true, selector: 'tui-aside-group', imports: [PolymorpheusOutlet, TuiDataList, TuiExpand], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [tuiProvide(TUI_DATA_LIST_HOST, TuiAsideGroupComponent)], hostDirectives: [
                        TuiDropdownDirective,
                        TuiDropdownHover,
                        TuiDropdownPositionSided,
                        TuiDropdownOpen,
                    ], template: "<div\n    #host\n    (click)=\"toggle()\"\n>\n    <ng-content />\n</div>\n<tui-expand [expanded]=\"expanded()\">\n    <ng-container *polymorpheusOutlet=\"template\" />\n</tui-expand>\n<ng-template #datalist>\n    <tui-data-list>\n        <tui-opt-group [label]=\"host.textContent\">\n            <ng-container *polymorpheusOutlet=\"template\" />\n        </tui-opt-group>\n    </tui-data-list>\n</ng-template>\n" }]
        }], propDecorators: { datalist: [{
                type: ViewChild,
                args: ['datalist', { static: true }]
            }], chevron: [{
                type: ContentChild,
                args: [TuiChevron, { static: true }]
            }], template: [{
                type: ContentChild,
                args: [TemplateRef]
            }], openChange: [{
                type: Output
            }], openSetter: [{
                type: Input,
                args: ['open']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXNpZGUtZ3JvdXAuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbGF5b3V0L2NvbXBvbmVudHMvbmF2aWdhdGlvbi9hc2lkZS1ncm91cC5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9sYXlvdXQvY29tcG9uZW50cy9uYXZpZ2F0aW9uL2FzaWRlLWdyb3VwLnRlbXBsYXRlLmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNILHVCQUF1QixFQUN2QixTQUFTLEVBQ1QsUUFBUSxFQUNSLFlBQVksRUFDWixNQUFNLEVBQ04sS0FBSyxFQUNMLE1BQU0sRUFDTixNQUFNLEVBQ04sV0FBVyxFQUNYLFNBQVMsRUFDVCxpQkFBaUIsR0FDcEIsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLDRCQUE0QixDQUFDO0FBQ3hELE9BQU8sRUFBQyxtQkFBbUIsRUFBRSxVQUFVLEVBQUMsTUFBTSxtQ0FBbUMsQ0FBQztBQUVsRixPQUFPLEVBQUMsa0JBQWtCLEVBQUUsV0FBVyxFQUFDLE1BQU0scUNBQXFDLENBQUM7QUFDcEYsT0FBTyxFQUFDLFNBQVMsRUFBQyxNQUFNLGtDQUFrQyxDQUFDO0FBQzNELE9BQU8sRUFDSCxvQkFBb0IsRUFDcEIsZ0JBQWdCLEVBQ2hCLGVBQWUsRUFDZix3QkFBd0IsR0FDM0IsTUFBTSxvQ0FBb0MsQ0FBQztBQUM1QyxPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0sa0NBQWtDLENBQUM7QUFFNUQsT0FBTyxFQUFDLGtCQUFrQixFQUFDLE1BQU0sd0JBQXdCLENBQUM7QUFDMUQsT0FBTyxFQUFDLElBQUksRUFBQyxNQUFNLE1BQU0sQ0FBQztBQUUxQixPQUFPLEVBQUMsaUJBQWlCLEVBQUMsTUFBTSxtQkFBbUIsQ0FBQzs7Ozs7QUFFcEQsTUFlYSxzQkFBc0I7SUFmbkM7UUFzQnFCLFVBQUssR0FBRyxNQUFNLENBQUMsaUJBQWlCLENBQUMsQ0FBQztRQUNsQyxTQUFJLEdBQUcsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBR25CLGFBQVEsR0FBNEIsSUFBSSxDQUFDO1FBRXpDLGFBQVEsR0FBRyxRQUFRLENBQUMsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLEVBQUUsSUFBSSxJQUFJLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQztRQUNoRSxZQUFPLEdBQUcsbUJBQW1CLENBQzVDLG9CQUFvQixFQUNwQixhQUFhLEVBQ2IsUUFBUSxDQUFDLEdBQUcsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FDakUsQ0FBQztRQUdjLGVBQVUsR0FBRyxZQUFZLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUVuRCxTQUFJLEdBQUcsR0FBRyxDQUFDO0tBVzlCO0lBVEcsSUFDVyxVQUFVLENBQUMsSUFBYTtRQUMvQixJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3RCLENBQUM7SUFFUyxNQUFNLENBQUMsSUFBSSxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRTtRQUNoQyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLEVBQUUsQ0FBQyxDQUFDO1FBQzdDLElBQUksQ0FBQyxPQUFPLEVBQUUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQztJQUMzQyxDQUFDOytHQWpDUSxzQkFBc0I7bUdBQXRCLHNCQUFzQixxSkFScEIsQ0FBQyxVQUFVLENBQUMsa0JBQWtCLEVBQUUsc0JBQXNCLENBQUMsQ0FBQywrREFZckQsVUFBVSx5RkFNVixXQUFXLGlWQ3hEN0IsNlpBZ0JBLDRDRGtCYyxrQkFBa0I7O1NBWW5CLHNCQUFzQjs0RkFBdEIsc0JBQXNCO2tCQWZsQyxTQUFTO2lDQUNNLElBQUksWUFDTixpQkFBaUIsV0FDbEIsQ0FBQyxrQkFBa0IsRUFBRSxXQUFXLEVBQUUsU0FBUyxDQUFDLGlCQUV0QyxpQkFBaUIsQ0FBQyxJQUFJLG1CQUNwQix1QkFBdUIsQ0FBQyxNQUFNLGFBQ3BDLENBQUMsVUFBVSxDQUFDLGtCQUFrQix5QkFBeUIsQ0FBQyxrQkFDbkQ7d0JBQ1osb0JBQW9CO3dCQUNwQixnQkFBZ0I7d0JBQ2hCLHdCQUF3Qjt3QkFDeEIsZUFBZTtxQkFDbEI7OEJBSWdCLFFBQVE7c0JBRHhCLFNBQVM7dUJBQUMsVUFBVSxFQUFFLEVBQUMsTUFBTSxFQUFFLElBQUksRUFBQztnQkFJcEIsT0FBTztzQkFEdkIsWUFBWTt1QkFBQyxVQUFVLEVBQUUsRUFBQyxNQUFNLEVBQUUsSUFBSSxFQUFDO2dCQU9yQixRQUFRO3NCQUQxQixZQUFZO3VCQUFDLFdBQVc7Z0JBV1QsVUFBVTtzQkFEekIsTUFBTTtnQkFNSSxVQUFVO3NCQURwQixLQUFLO3VCQUFDLE1BQU0iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICAgIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LFxuICAgIENvbXBvbmVudCxcbiAgICBjb21wdXRlZCxcbiAgICBDb250ZW50Q2hpbGQsXG4gICAgaW5qZWN0LFxuICAgIElucHV0LFxuICAgIE91dHB1dCxcbiAgICBzaWduYWwsXG4gICAgVGVtcGxhdGVSZWYsXG4gICAgVmlld0NoaWxkLFxuICAgIFZpZXdFbmNhcHN1bGF0aW9uLFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7dG9PYnNlcnZhYmxlfSBmcm9tICdAYW5ndWxhci9jb3JlL3J4anMtaW50ZXJvcCc7XG5pbXBvcnQge3R1aURpcmVjdGl2ZUJpbmRpbmcsIHR1aVByb3ZpZGV9IGZyb20gJ0B0YWlnYS11aS9jZGsvdXRpbHMvbWlzY2VsbGFuZW91cyc7XG5pbXBvcnQgdHlwZSB7VHVpRGF0YUxpc3RIb3N0fSBmcm9tICdAdGFpZ2EtdWkvY29yZS9jb21wb25lbnRzL2RhdGEtbGlzdCc7XG5pbXBvcnQge1RVSV9EQVRBX0xJU1RfSE9TVCwgVHVpRGF0YUxpc3R9IGZyb20gJ0B0YWlnYS11aS9jb3JlL2NvbXBvbmVudHMvZGF0YS1saXN0JztcbmltcG9ydCB7VHVpRXhwYW5kfSBmcm9tICdAdGFpZ2EtdWkvY29yZS9jb21wb25lbnRzL2V4cGFuZCc7XG5pbXBvcnQge1xuICAgIFR1aURyb3Bkb3duRGlyZWN0aXZlLFxuICAgIFR1aURyb3Bkb3duSG92ZXIsXG4gICAgVHVpRHJvcGRvd25PcGVuLFxuICAgIFR1aURyb3Bkb3duUG9zaXRpb25TaWRlZCxcbn0gZnJvbSAnQHRhaWdhLXVpL2NvcmUvZGlyZWN0aXZlcy9kcm9wZG93bic7XG5pbXBvcnQge1R1aUNoZXZyb259IGZyb20gJ0B0YWlnYS11aS9raXQvZGlyZWN0aXZlcy9jaGV2cm9uJztcbmltcG9ydCB0eXBlIHtQb2x5bW9ycGhldXNDb250ZW50fSBmcm9tICdAdGFpZ2EtdWkvcG9seW1vcnBoZXVzJztcbmltcG9ydCB7UG9seW1vcnBoZXVzT3V0bGV0fSBmcm9tICdAdGFpZ2EtdWkvcG9seW1vcnBoZXVzJztcbmltcG9ydCB7c2tpcH0gZnJvbSAncnhqcyc7XG5cbmltcG9ydCB7VHVpQXNpZGVDb21wb25lbnR9IGZyb20gJy4vYXNpZGUuY29tcG9uZW50JztcblxuQENvbXBvbmVudCh7XG4gICAgc3RhbmRhbG9uZTogdHJ1ZSxcbiAgICBzZWxlY3RvcjogJ3R1aS1hc2lkZS1ncm91cCcsXG4gICAgaW1wb3J0czogW1BvbHltb3JwaGV1c091dGxldCwgVHVpRGF0YUxpc3QsIFR1aUV4cGFuZF0sXG4gICAgdGVtcGxhdGVVcmw6ICcuL2FzaWRlLWdyb3VwLnRlbXBsYXRlLmh0bWwnLFxuICAgIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmUsXG4gICAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gICAgcHJvdmlkZXJzOiBbdHVpUHJvdmlkZShUVUlfREFUQV9MSVNUX0hPU1QsIFR1aUFzaWRlR3JvdXBDb21wb25lbnQpXSxcbiAgICBob3N0RGlyZWN0aXZlczogW1xuICAgICAgICBUdWlEcm9wZG93bkRpcmVjdGl2ZSxcbiAgICAgICAgVHVpRHJvcGRvd25Ib3ZlcixcbiAgICAgICAgVHVpRHJvcGRvd25Qb3NpdGlvblNpZGVkLFxuICAgICAgICBUdWlEcm9wZG93bk9wZW4sXG4gICAgXSxcbn0pXG5leHBvcnQgY2xhc3MgVHVpQXNpZGVHcm91cENvbXBvbmVudCBpbXBsZW1lbnRzIFR1aURhdGFMaXN0SG9zdDx1bmtub3duPiB7XG4gICAgQFZpZXdDaGlsZCgnZGF0YWxpc3QnLCB7c3RhdGljOiB0cnVlfSlcbiAgICBwcml2YXRlIHJlYWRvbmx5IGRhdGFsaXN0OiBQb2x5bW9ycGhldXNDb250ZW50O1xuXG4gICAgQENvbnRlbnRDaGlsZChUdWlDaGV2cm9uLCB7c3RhdGljOiB0cnVlfSlcbiAgICBwcml2YXRlIHJlYWRvbmx5IGNoZXZyb24/OiBUdWlDaGV2cm9uO1xuXG4gICAgcHJpdmF0ZSByZWFkb25seSBhc2lkZSA9IGluamVjdChUdWlBc2lkZUNvbXBvbmVudCk7XG4gICAgcHJpdmF0ZSByZWFkb25seSBvcGVuID0gc2lnbmFsKGZhbHNlKTtcblxuICAgIEBDb250ZW50Q2hpbGQoVGVtcGxhdGVSZWYpXG4gICAgcHJvdGVjdGVkIHJlYWRvbmx5IHRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+IHwgbnVsbCA9IG51bGw7XG5cbiAgICBwcm90ZWN0ZWQgcmVhZG9ubHkgZXhwYW5kZWQgPSBjb21wdXRlZCgoKSA9PiB0aGlzLmFzaWRlLmV4cGFuZGVkKCkgJiYgdGhpcy5vcGVuKCkpO1xuICAgIHByb3RlY3RlZCByZWFkb25seSBiaW5kaW5nID0gdHVpRGlyZWN0aXZlQmluZGluZyhcbiAgICAgICAgVHVpRHJvcGRvd25EaXJlY3RpdmUsXG4gICAgICAgICd0dWlEcm9wZG93bicsXG4gICAgICAgIGNvbXB1dGVkKCgpID0+ICh0aGlzLmFzaWRlLmV4cGFuZGVkKCkgPyBudWxsIDogdGhpcy5kYXRhbGlzdCkpLFxuICAgICk7XG5cbiAgICBAT3V0cHV0KClcbiAgICBwdWJsaWMgcmVhZG9ubHkgb3BlbkNoYW5nZSA9IHRvT2JzZXJ2YWJsZSh0aGlzLm9wZW4pLnBpcGUoc2tpcCgxKSk7XG5cbiAgICBwdWJsaWMgcmVhZG9ubHkgc2l6ZSA9ICdzJztcblxuICAgIEBJbnB1dCgnb3BlbicpXG4gICAgcHVibGljIHNldCBvcGVuU2V0dGVyKG9wZW46IGJvb2xlYW4pIHtcbiAgICAgICAgdGhpcy50b2dnbGUob3Blbik7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIHRvZ2dsZShvcGVuID0gIXRoaXMub3BlbigpKTogdm9pZCB7XG4gICAgICAgIHRoaXMub3Blbi5zZXQob3BlbiAmJiB0aGlzLmFzaWRlLmV4cGFuZGVkKCkpO1xuICAgICAgICB0aGlzLmNoZXZyb24/LmNoZXZyb24uc2V0KHRoaXMub3BlbigpKTtcbiAgICB9XG59XG4iLCI8ZGl2XG4gICAgI2hvc3RcbiAgICAoY2xpY2spPVwidG9nZ2xlKClcIlxuPlxuICAgIDxuZy1jb250ZW50IC8+XG48L2Rpdj5cbjx0dWktZXhwYW5kIFtleHBhbmRlZF09XCJleHBhbmRlZCgpXCI+XG4gICAgPG5nLWNvbnRhaW5lciAqcG9seW1vcnBoZXVzT3V0bGV0PVwidGVtcGxhdGVcIiAvPlxuPC90dWktZXhwYW5kPlxuPG5nLXRlbXBsYXRlICNkYXRhbGlzdD5cbiAgICA8dHVpLWRhdGEtbGlzdD5cbiAgICAgICAgPHR1aS1vcHQtZ3JvdXAgW2xhYmVsXT1cImhvc3QudGV4dENvbnRlbnRcIj5cbiAgICAgICAgICAgIDxuZy1jb250YWluZXIgKnBvbHltb3JwaGV1c091dGxldD1cInRlbXBsYXRlXCIgLz5cbiAgICAgICAgPC90dWktb3B0LWdyb3VwPlxuICAgIDwvdHVpLWRhdGEtbGlzdD5cbjwvbmctdGVtcGxhdGU+XG4iXX0=